zoom9
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1322_ZOOM0009_transcript.txt

==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:10] SPEAKER_00: it starts recording it looks like it's counting yeah and it's going up oh it's only got one bar on battery now I think we're probably okay
[00:10-00:14] SPEAKER_01: and
[00:14-00:25] SPEAKER_00: it's my I already wanted to start doing rechargeable batteries even for that one in there so maybe we just like it we're gonna be using this a lot
[00:25-00:25] SPEAKER_01: yeah
[00:25-00:30] SPEAKER_00: either plug it in or just get rechargeable batteries and that's good enough
[00:30-00:45] SPEAKER_01: yeah in general having a pack of rechargeable batteries and charger available is a good move um all right I think this will be good for like radical we should have this running when we get together assuming we don't like go out or whatever yeah
[00:45-00:48] SPEAKER_00: 100 % even if we do go out it's
[00:48-00:48] UNKNOWN: pretty
[00:48-01:08] SPEAKER_00: easy on the table right and I mean I literally I literally feel like the answer to to all like when I if I'm in a conversation where I don't have enough authority to say hey we need to record this I do this sneaky side window recording yeah like I present that window in another window and record it
[01:08-01:35] SPEAKER_01: yeah it makes sense because like the thing that's so appealing is visually cool looking but the map on obsidian yeah the reason that touches a part of your brain is like man this thing could make all the connections that I there's all this bullshit just floating around in here and this thing could go oh look at these two things that work together
[01:35-02:18] SPEAKER_00: and you didn't even know oh I didn't tell you this but how I got to the original idea of the is I went back and look at my obsidian notes and I started thinking about something and I loaded a couple different notes into Gemini and started jamming and I got to this place from my thoughts from six months ago yeah that's what so yeah that thing this is the end like just in general record yeah because or take notes whatever but I think this was the workflow that I came up with before to like every time you have a thought just start thinking about it and tinkering and then turn that and give that to Gemini and then
[02:18-02:33] SPEAKER_01: there is magic is right here it's the human brain these stupid motherfuckers that are trying to replicate it aren't gonna be able to it's just the tool just it's a tool for us capture the output right capture the output of the most magical thing in the universe right and
[02:33-02:43] SPEAKER_00: use it to solve problems or whatever this is a right I think so you want to try to describe the workflow that what we're trying to do
[02:43-03:04] SPEAKER_01: right so develop AI agents to ultimately make a deep dive podcast but the way we get there is we will give it a topic and then it will have a team picker or something of that nature that it goes and develops the team or picks a
[03:04-03:04] UNKNOWN: team
[03:04-04:01] SPEAKER_01: of agents to do a deep dive on that topic and give us a 10 page so a fairly deep dive but not a book right on the topic we will discuss it or we'll read it take notes discuss it record it give it back our thoughts it will then do a second draft we'll take that back and we'll do that however many times it right discussing and recording every time and then ultimately it will put out a podcast audio initially video maybe in the future all gonna be AI no like human voice or face right and ideally we can crank those out really high quality content with very deep dives into everything that we want to any topic we want to do and get this one to two hour podcast out of the end of it once it's up and running
[04:01-06:08] SPEAKER_00: right and so I would the things I would add of course my thinking is high level is one is some sort of problem solving engine so complex problems so some sort of engine to solve complex problems using AI and so I think I agree with you the initial step is to describe the problem ourselves and so maybe even started with a audio yeah that hey describing the problem and its constraints from our perspective without even doing the research or whatever now do you describe the problem and that's the initial input and then the system first produces a you know a deep dive description or deep dive of all of the issues and you know what are the factors that make this a difficult things like that and then research paper right and then we consume that research paper and the value of that I think is that we become more knowledgeable because we're not experts on this problem right but we use the first step of AI and the agent to help us become more knowledgeable and so rather than consuming two thousand hours worth of content we can consume 20 or 20 to 200 hours worth of content and it's this this still deep dive now at the end of that we and the system theoretically are very knowledgeable in the topic right then we use a team of agents to try to postulate a solution or potential solutions to this problem to this complex problem and I would even add that the concept of the agents rather that you you talk about an agent picker but so that means that we have a set of agents sitting in the wings so a thousand agents that are different personas and in general produce or approach problems differently so things like hey a conservative Christian compared to a liberal whatever teenager piece of shit stop but whatever and everything in between Gandhi Jesus whatever we can create a team of agents that get subbed in
[06:08-06:08] UNKNOWN: or
[06:08-06:12] SPEAKER_00: out or picked for a given problem and in fact you
[06:12-06:12] UNKNOWN: know
[06:12-07:06] SPEAKER_00: I you can probably run this multiple times given a different team of agents on the council but effectively create a council and you know so then that step takes the input both from our perspective yes so as you mentioned it we skipped a step you consume the research paper right all right then have another conversation that almost where we are debating right that hey now giving all of these things hey the solution maybe needs to consume that consider this maybe needs to consider that blah blah blah we record all that and then that is the input they need initial research plus our conversation about it after having consumed the topic that's the initial input to the council of agents yep then the first in any notes yeah and then the first person the first agent is the team picker and we don't it doesn't have to do that but that's kind of what we're thinking about that so and a team captain or the council lead or whatever you want to
[07:06-07:06] UNKNOWN: call
[07:06-08:29] SPEAKER_00: them picks their council you know anywhere from three to seven or whatever you pick the council and then that council then of agents then starts to debate and to with the goal being to produce practical actionable solutions to a real -world problem then we take that provide review it provide feedback maybe send it back into hey given new here is your solution let's do another set based on hey these are actually not practical actionable blah blah blah feedback do that until we have okay here's a reasonable output of a practical actionable set of steps are planned for this complex real -world problem right then take that and turn it into a podcast with technique with theoretically our personas right so that as we're going through part of the data gathering steps are recording all of our discussions with with our personas with our actual us isolated right right so that becomes input to so not only the output the actionable output of the the plan right but then all of our notes and our point our perspectives as we were going through and so this podcast should be a summary of the plan and how we got there from our perspectives and what we as a combination of the
[08:29-08:53] SPEAKER_01: deep research that the AI does the agents do and the foreknowledge that we already had and our reactions to the deep research basically like the super crispy fucking research by an AI that's as good as it gets and then just like some human reaction to it and some human feeling to it
[08:53-08:53] UNKNOWN: and
[08:53-08:59] SPEAKER_01: then give it back it incorporates all that into one little like delicious meal and
[08:59-09:22] SPEAKER_00: it's good right and then the will get a transcript or initial podcast and then our what we talked about was watching that podcast or listening to that podcast and doing it like we're in recording it another one and doing a live reaction to it like wild like to the to the I say raw but to the
[09:22-09:22] UNKNOWN: agent
[09:22-09:27] SPEAKER_00: produce the developed podcast and we do a live
[09:27-09:27] UNKNOWN: you
[09:27-10:21] SPEAKER_00: know reaction video or live reaction recording to that right and then feed that back so the second draft of or maybe even third or whatever of that podcast will incorporate our like hey that art that's not a real argument like or whatever like hey or right in this place I would add these things are here that makes me they pause that makes me think of this blah blah blah and so it starts to add more human thoughts you know at given points right and then assuming that the agent can do that like then now cut in these new thoughts at this place right you know that kind of stuff like that so the final draft is truly a compilation of the agent developed podcast and our commentary about the podcast and then that is the end and then so we obviously can do audio only but by another step in the process is okay we'll add these two video personas and now you can turn that into a fully video generated podcast right
[10:21-10:47] SPEAKER_01: yeah I think another we hadn't talked about this but like basically that first discussion pass that can be almost anybody and it can be kind of like a pitch like hey I want to do an episode on this here's what I know about it here's all like and it could be Melanie right like I want an episode on whatever show she's watching she just wants to get into that game or whatever right and here's the things I know about
[10:47-10:47] UNKNOWN: it
[10:47-10:53] SPEAKER_01: give that audio we do it does its own research thing and we can start cranking them out on an individual basis for people
[10:53-11:10] SPEAKER_00: right oh I agree with you that's a great I'm loving that this is report but yeah I mean I think we when we were doing podcasting before we were talking about having guest appearances and stuff like that but this allows you to bring anybody in any topic and it tunes like you will include that there's a third person
[11:10-11:21] SPEAKER_01: like nervous on the mic or no like learn how to do that stuff because there's a whole like I literally sat here and was like this is me talking into a microphone trying to not feel like I'm a retarded person right exactly but
[11:21-12:11] SPEAKER_00: I mean because all of our actual inputs are raw conversations right right because it is going to get turned into a professional or polished script by this agent and a voice actor is gonna do it all these like right so your persona that shows up in the podcast is never you it is the part that is the AI version of representation of you based on your thoughts when you're just in your living room or whatever having a natural conversation right so theoretically it doesn't have to be two personas it can be any we can add a third or fourth at any moment right on any topic because the in the objective of this in my mind and I'm glad we're coming back to this is a general problem -solving or research yeah framework based on agents yeah
[12:11-12:59] SPEAKER_01: and not for nothing this could pretty comfortably be asked to solve the bullshit problem yeah 100 % I agree with you completely moved away from that but this is more generalized and it's like well as long as local roles and restrictions or whatever the local code agent is in the room you're able to give it dimensions of like the space inside like that that's not even that hard problem which you have the framework in place 100 % right um so where do you think are the business perspectives the output in theory isn't always a podcast no I could have an output of like a PDF for a slides presentation that is like this is how to solve your problem Mr. Business I
[12:59-13:04] SPEAKER_00: agree completely so I do think that that the first output even before the podcast is some sort of you
[13:04-13:04] UNKNOWN: know
[13:04-13:32] SPEAKER_00: PDF some sort of like description of hey given all of these inputs here's what we think we council think the answer is right and it is in a practical way you know a summary maybe even it's a research paper a detailed description of hey here's what the way forward is for this podcast or not podcast way for for this problem right and then that becomes the input to the podcast but you're right that it doesn't have to be a podcast it could be that could be the answer that could be the end right that hey here's the solution it's in the document
[13:32-13:36] SPEAKER_01: presentation as to how we would fix it let us know if you want to
[13:36-13:48] SPEAKER_00: be a slide or whatever right yeah so you can take that output and produce lots of different things with it but what do you okay what do
[13:48-13:48] UNKNOWN: you
[13:48-14:08] SPEAKER_00: think the steps are what do you think the things that we for instance I know and we need to develop this framework of agents and tools and like deploy like the tools in the different places things like that we need to develop a set of agents right it may be a minimal set from the first maybe we're only gonna develop three in the beginning
[14:08-14:11] SPEAKER_01: do some research because there's a ton of agents out
[14:11-14:19] SPEAKER_00: there that we could probably just just pour yeah exactly we probably need to we know that we want to go through podcasts in in this
[14:19-14:19] UNKNOWN: case
[14:19-14:30] SPEAKER_00: so eventually like so the define the tools that are gonna be used to turn this into a podcast yeah all the
[14:30-14:32] SPEAKER_01: Gallim is the famous one yeah but
[14:32-14:42] SPEAKER_00: yeah yeah so just like fully define the workflow all the way through what are the tools that need to be used where how are we how do we do those where are
[14:42-14:42] UNKNOWN: they
[14:42-14:47] SPEAKER_00: gonna be deployed what's the you know input to them yeah we need
[14:47-14:52] SPEAKER_01: like a full I don't know what you call it but the document that you produce at the beginning of a project
[14:52-15:07] SPEAKER_00: yeah yeah yeah the detail project plan with steps and checklists and all of those things like that to carry us through the project of designing the system and deploying the system first and then a test run through and
[15:07-15:21] SPEAKER_01: once you I mean that's like the old adage on machine learning is like 95 % of job is data gathering and cleaning and like like 90 % of this job is putting that plan on paper and then saying okay
[15:21-15:27] SPEAKER_00: go right because you know the the act of even building it is gonna be augmented by AI as well
[15:27-15:30] SPEAKER_01: that agent right there in that chat window
[15:30-15:54] SPEAKER_00: right yeah so we're using agents to solve a problem but also to help us develop the tools to solve the problems right and so speaking of completely side note not related to this discussion we could definitely build a ball sorting machine by the way right so that's part of our conversation we can definitely build the sorting machine
[15:54-16:01] SPEAKER_01: yeah I think the problem there is the hardware side and the cost of the hard you know like it's not a problem it's a is it worth it problem no
[16:01-16:25] SPEAKER_00: I agree but before we were looking at you know but we can like if like I'm sure we can get an AI tool to design the whole even the physical part the actuators and the things that they're just gonna punch the ball so that is back in the realm of possibility I don't know that we need to take on that problem but we could for sure do it um anything else for this problem
[16:25-16:38] SPEAKER_01: I don't think so I mean it really is like all the questions that pop into my mind start to become like what are we using like what tech is where is this hosted all that stuff and that's part of the build the plane step so
[16:38-16:45] SPEAKER_00: okay yeah so I think we're getting ready to test the workflow of that can we get this audio out of there

==================================================
Generated on: 2025-07-23 13:27:20
Total words: 2914
Total speakers: 3
==================================================



Summary:
creation_date: 2025-08-26 source_file: [https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1322_ZOOM0009_transcript.txt](https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1322_ZOOM0009_transcript.txt) participants: [SPEAKER_00, SPEAKER_01]

## Executive Summary

The conversation outlines the design for a sophisticated [[Problem-Solving Engine]] powered by a multi-step [[Workflow Automation]] process involving both humans and [[AI Agents]]. The core idea is to tackle complex problems by first using AI to generate a deep-dive research paper, which the human participants then review and discuss `[04:01-06:08]`. This feedback, combined with the initial research, is fed to a "[[Council of Agents]]" composed of diverse [[AI Personas]] that debate and formulate practical solutions `[06:08-08:29]`. The ultimate output of this collaborative process is a highly polished, AI-generated podcast that synthesizes the research, the proposed solution, and the human participants' unique perspectives and reactions, with the potential for other outputs like business proposals or presentations `[08:29-09:22]`.

---

## Key Topics Discussed

- **Core Concept: A [[Problem-Solving Engine]]**
    
    - The primary goal is to create a general framework using [[AI Agents]] to solve complex, real-world problems `[04:01-06:08]`.
        
    - The system is designed to augment human intellect by combining deep AI research with human intuition and feedback `[08:29-08:53]`.
        
    - The final output is flexible, capable of producing not just podcasts, but also PDFs, slide presentations, or detailed written plans `[12:59-13:32]`.
        
- **Detailed Workflow**
    
    1. **Human Input**: The process begins with a recorded conversation where humans describe a problem and its constraints `[04:01-06:08]`.
        
    2. **AI Research**: The system generates an in-depth research paper on the topic to educate the human participants `[04:01-06:08]`.
        
    3. **Human Review & Discussion**: Participants consume the research, then record a debate/discussion session to provide feedback and their perspectives `[06:12-07:06]`.
        
    4. **[[Council of Agents]] Deliberation**: The initial research and the human discussion are fed to a "council" of specialized [[AI Agents]] with different [[AI Personas]] (e.g., "conservative Christian," "liberal teenager") `[06:08-08:29]`. This council debates the problem and produces actionable solutions.
        
    5. **Podcast Generation**: The system synthesizes the entire process—the research, the solution, and the human commentary—into a polished podcast script using AI-generated voices representing the participants `[08:29-09:22]`.
        
    6. **Final Human Reaction**: A final step involves recording a "live reaction" to the AI-generated podcast, which is then incorporated into the final version to add another layer of human commentary `[09:22-10:21]`.
        
- **Business & Technical Planning**
    
    - The group acknowledged the need to create a detailed [[Project Plan]] to define the architecture, tools (like text-to-video services), and deployment strategy `[14:47-15:07]`.
        
    - The system is extensible, allowing guest contributors to easily participate by simply providing an initial audio recording on a topic they're passionate about `[10:21-11:10]`.
        
    - The discussion touched on the importance of [[Knowledge Management]], referencing how the idea originated from reviewing past notes in Obsidian and processing them with [[Gemini]] `[01:08-02:18]`.
        

---

## Action Items & Decisions

- **Decision**: The high-level, multi-step workflow for the [[Problem-Solving Engine]] has been defined and agreed upon `[04:01-10:21]`.
    
- **Action**: The next step is to create a detailed [[Project Plan]] that outlines the specific technologies, agents, tools, and implementation steps required to build the system `[14:47-15:07]`.
    

---

## Suggested New Links/Tags

- [[Council of Agents]]
    
- [[Problem-Solving Engine]]
    
- [[Project Plan]]
    

---

## Linked Concepts

- [[AI Agents]]
    
- [[AI Personas]]
    
- [[Council of Agents]]
    
- [[Gemini]]
    
- [[Knowledge Management]]
    
- [[Problem-Solving Engine]]
    
- [[Project Plan]]
    
- [[Workflow Automation]]
    

---

## #Tags

- #AI
    
- #Automation
    
- #BusinessDevelopment
    
- #SoftwareDevelopment
    
- #Startups


zoom10
Transcript:

https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1150_ZOOM0010_transcript.txt

==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:02-00:02] SPEAKER_02: We
[00:02-00:05] SPEAKER_01: are recording. Do you
[00:05-00:05] UNKNOWN: think
[00:05-00:19] SPEAKER_01: we should try to take this to research? Or is that too loud? No, I think we should try to take it to research. I think we literally take it everywhere we go. And there's 250 hours worth of time.
[00:20-00:20] UNKNOWN: And
[00:20-00:22] SPEAKER_01: then you just delete it. Right, and maybe you go and you're like,
[00:23-00:31] SPEAKER_02: well, nothing came of that. We talked about thunder the whole time. Don't even need it, so straight up delete it. Or just leave it on transcription and
[00:31-00:31] UNKNOWN: it
[00:31-00:38] SPEAKER_02: becomes text. Then it's literally like nothing. You can have all the fucking books in the world on
[00:38-00:38] SPEAKER_01: a
[00:38-00:38] UNKNOWN: book. Right,
[00:38-00:39] SPEAKER_01: once it's text it's
[00:39-00:39] UNKNOWN: easy.
[00:40-00:48] SPEAKER_01: So having a simple transcription service is very valuable. We just get in the habit of doing this. And in fact,
[00:48-00:48] UNKNOWN: I
[00:48-00:54] SPEAKER_01: think that a... some sort of pathway that we are... Sorry,
[00:54-00:54] UNKNOWN: I
[00:54-01:17] SPEAKER_01: just keep looking. Some sort of pathway where it's automatic. Right. We don't have to take that card out of there. Put it in... You don't have to do it. It is just on a phone. Or some sort of digital device. Yeah, we have a device for that purpose. Right. That makes it easier to... Basically a digital version of this that connects to a computer and you just connect to it.
[01:17-01:17] UNKNOWN: Either a
[01:17-01:18] SPEAKER_01: USB -C
[01:18-01:55] SPEAKER_02: or just like Bluetooth or whatever. I had Grock do a quick pricing analysis on GCP's speech to text. And I just said, hey, what would 10 hours a month cost me? And it said first hour is free per month basically. And then it's got 0 .006 seconds or cents per 15 seconds for the standard model of like phone calling video. And so that ends up being $13 a month for 10 hours.
[01:55-01:56] SPEAKER_01: That's not terrible.
[01:56-01:56] UNKNOWN: I
[01:56-02:19] SPEAKER_01: mean, I think the comparison would be, again, running in a... running an open source model. Right. Which I think they're really good. I'm not 100 % sure, but running an open source model on Cloud Run. Right. And then... Because I'm fairly confident Cloud Run only charges when you hit it. Right. Right. So... And it's like a penny. Yeah, so...
[02:19-02:19] UNKNOWN: And
[02:19-02:20] SPEAKER_01: surely it's got to
[02:20-02:20] UNKNOWN: count
[02:20-02:21] SPEAKER_01: computational costs
[02:21-02:22] SPEAKER_02: as well. I
[02:22-02:22] UNKNOWN: mean,
[02:22-02:38] SPEAKER_02: it's gotta be something. Yeah. But I think that is definitely worth looking into because yeah, 10 hours for 13 bucks is not that close to zero. No. And we might do 100 hours and you're talking 130 bucks. Right. I
[02:38-02:41] SPEAKER_01: would like it to be that number to have been like $2.
[02:41-02:42] SPEAKER_02: Right. Exactly.
[02:42-02:44] SPEAKER_01: Like a tenth of that cost.
[02:44-02:50] SPEAKER_02: Yeah, we can 10x our time and still be like at or under $100.
[02:50-03:06] SPEAKER_01: Yeah. Okay. Yeah, so I think that it might be worth to have asking that question because I think we're at that place of okay, well, what's the answer? Like what are we gonna build?
[03:39-04:40] UNKNOWN: Okay. Okay, I want to use up down here. Okay.
[04:57-05:02] SPEAKER_02: Okay. So we go through I'm gonna
[05:02-05:02] UNKNOWN: have
[05:02-05:39] SPEAKER_02: to get a fucking emergency. It's freaking me out. Oh. I'm gonna get one here. Yeah, I just got my guard up. It's not even like... But yeah. So using Whisper, it says you should use either large, V2 or medium and you can guess what those are. But large V2 is more accurate, but slower, more cost, requires more resources. Using 10 hours because that's what we had already used. Cloud Run serverless, but Whisper's GPU requirements means you'll need Cloud Run with GPU support, which is available in specific regions and incurs additional costs. So it's
[05:39-05:39] UNKNOWN: I'm
[05:39-05:55] SPEAKER_02: gonna use Nvidia T4 GPUs, which is a common choice for cost effective Cloud deployments. Google Cloud Run charges based on all of that is great, but let's just get to the final, roughly $1 .15 for 10 hours of audio.
[05:57-05:59] SPEAKER_01: So about a tenth of the cost. Less than
[05:59-05:59] UNKNOWN: a
[05:59-06:00] SPEAKER_01: tenth. More than a
[06:00-06:00] UNKNOWN: tenth.
[06:00-06:08] SPEAKER_01: Yeah, just under a tenth. Yeah. So I imagine operating your own hardware, like you're doing... Because you're paying for that model too. And then do an open source.
[06:08-06:09] SPEAKER_02: Oh yeah, you're paying for their model.
[06:11-06:11] UNKNOWN: Yeah.
[06:11-06:17] SPEAKER_02: And so using the open source model, it's for 10 hours again, so that's just kind of random.
[06:17-06:17] UNKNOWN: But
[06:17-06:18] SPEAKER_02: for the GPU,
[06:19-06:19] UNKNOWN: $0
[06:19-06:25] SPEAKER_02: .45 rounding up. For the virtual CPU, $0 .44 rounding up. Memory, $0
[06:25-06:27] UNKNOWN: .28. So
[06:27-06:28] SPEAKER_02: yeah.
[06:29-06:35] SPEAKER_01: That's what I expect. Right, that's what I expected. Like, many services are great. Right, so we could do...
[06:35-06:35] UNKNOWN: They're
[06:35-06:35] SPEAKER_01: just
[06:35-07:02] SPEAKER_02: expensive. A hundred hours, which I think we could get to pretty easily, especially if we start this regular. Like, us, we're hitting 7 to 10 a month, or a week. But if we do the whole group and we're being regular. Even if once a week you add another three hours, that's another 12, so we're flirting with 50 already. And then if we get into any kind of group level grind, like, then it's a whole different situation. 100%. And I think it's worth
[07:02-07:04] SPEAKER_01: recording all of that stuff.
[07:04-07:04] UNKNOWN: I
[07:04-07:04] SPEAKER_01: really do.
[07:05-07:05] UNKNOWN: We're
[07:05-07:43] SPEAKER_01: at $12 for 100 hours a month. Easy. Easy. So I think that... So I think you turn that into a... Read me. Yep. And we're gonna move forward with that. I'm gonna grab a caffeine, not caffeine, nicotine. Oh, yeah. I think there's... I have some. I have some in there. I think there's one little, like, your size piece in there. And I'm gonna get an emergency. Okay, I'm gonna do that too, but I'm
[07:43-07:45] SPEAKER_02: gonna start this prompt up first.
[08:08-10:34] UNKNOWN: Okay. Okay. Okay. Okay. I
[10:34-10:38] SPEAKER_02: told it to... leave some stuff as,
[10:39-10:39] UNKNOWN: like,
[10:39-10:39] SPEAKER_02: optional.
[10:40-10:40] UNKNOWN: So
[10:40-10:50] SPEAKER_02: it picked the GPU, and it picked the medium model. And we have that that we can decide on. Like, maybe it's $15 for the biggest, best, everything you could possibly get.
[10:50-10:50] UNKNOWN: And
[10:50-10:54] SPEAKER_02: it's like, okay, well, let's do that one. Or not, like, $1 .50 instead of $1 .10.
[10:55-10:56] SPEAKER_01: If it's accurate,
[10:57-11:01] SPEAKER_02: then... Right, yeah, if the medium one is, then pare down costs. Especially if you're
[11:01-11:01] UNKNOWN: thinking
[11:01-11:14] SPEAKER_02: about potentially exposing the service as a service, truly, not just like a tool that we're using. Right, I agree. Transcription service... or I'm gonna put this in here.
[11:15-11:35] SPEAKER_01: Yep. Yeah, it may be worth replacing that section. Phase zero is that. I just made a new tab. Oh, okay. So what about repository,
[11:36-11:36] UNKNOWN: GitHub?
[11:36-11:38] SPEAKER_01: Where do you want to put this?
[11:38-11:38] UNKNOWN: I
[11:38-11:49] SPEAKER_02: think either there or whatever that is on, or the version of it is on GCP. Like, you have like a little mini Git repository service, right?
[11:49-11:49] UNKNOWN: Yeah,
[11:50-11:52] SPEAKER_02: I'd rather use GitHub. I'm more
[11:52-11:55] SPEAKER_01: familiar with GitHub. And in general,
[11:55-11:55] UNKNOWN: the
[11:55-11:56] SPEAKER_01: customer...
[11:56-11:56] UNKNOWN: Nobody
[11:56-11:58] SPEAKER_01: uses our service.
[11:58-11:58] UNKNOWN: I
[11:58-12:03] SPEAKER_01: mean, some people do, but in general. Yeah,
[12:03-12:03] UNKNOWN: but
[12:03-12:06] SPEAKER_01: GitHub or GitLab, and GitHub Actions... That's what I
[12:06-12:06] UNKNOWN: was
[12:06-12:09] SPEAKER_01: gonna say. Do you want to set up GitHub Actions and set up
[12:09-12:10] SPEAKER_02: the whole workflow? Yeah, that's what I
[12:10-12:26] SPEAKER_01: think. And so we... I don't know... I think we just make it a separate repository. And not necessarily tied to the rest of this project. Because they're kind of separate. We may use transition service independently of this.
[12:26-12:26] UNKNOWN: We
[12:26-12:26] SPEAKER_01: can
[12:26-13:00] SPEAKER_02: do it kind of like... I don't have even the picture in my head, but basically the way Argo has a repository that everything else has a GitHub action that kicks to the Argo repository. And that just has a little watcher that does stuff when stuff updates inside of it. So we could have an overall the higher level, whatever the agent project is called, that is like an Argo level repository that's the agent's repository or something. Makes sense. But
[13:00-13:05] SPEAKER_01: each one has its own repo. I agree. So I think in this case just start a new one.
[13:06-13:09] UNKNOWN: Yeah. Alright.
[13:20-13:30] SPEAKER_01: Sorry. Transcription service? Yeah, I think so. That makes sense to me. I didn't know you can tune your cloud running environment, but it makes sense.
[13:36-13:38] SPEAKER_02: Is the transcription service public or private?
[13:40-13:41] SPEAKER_01: I say private.
[13:45-13:45] UNKNOWN: What?
[13:49-13:55] SPEAKER_01: I'm always just nervous in general. Yeah. Especially when it talks... When you're
[13:55-13:55] UNKNOWN: truly
[13:55-14:10] SPEAKER_01: exposed... Because cloud run is exposed to the internet. There's a public endpoint. Right. And if the repository is some sort of way compromised, then you can go find the key or do whatever. That's everything.
[14:15-14:17] SPEAKER_02: D Jones?
[14:20-14:27] SPEAKER_01: D Jones 2085. No space is.
[14:28-14:35] SPEAKER_02: Be smarter. The person that I remember is that one.
[14:35-14:39] SPEAKER_01: And it's like blue? Yeah. I need to put my face on there.
[14:41-14:48] SPEAKER_02: I'm just saying their recommendation engine should be like, hey, this one person who is a part of every project in your entire shit.
[14:53-15:16] UNKNOWN: Alright. Do
[15:16-15:20] SPEAKER_02: you want to set up the GCP stuff?
[15:21-15:23] SPEAKER_01: I can. Yep.
[15:24-15:30] SPEAKER_00: I don't even...
[15:30-15:36] UNKNOWN: Let's see. I don't even...
[15:38-15:40] SPEAKER_00: I'm going to open Chrome for that.
[16:07-17:07] UNKNOWN: Alright. Alright. Alright. Okay.
[17:16-17:19] SPEAKER_00: Let me see.
[18:14-19:56] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. It's roles.
[20:04-20:07] SPEAKER_00: Cloud run, artifact registry, and cloud storage.
[20:15-20:22] SPEAKER_01: I think, yeah, these are enabled by default. Maybe the artifact registry.
[20:43-20:44] UNKNOWN: I think.
[20:46-20:49] SPEAKER_00: The artifact registry wasn't.
[21:39-21:41] UNKNOWN: I think.
[22:06-22:07] SPEAKER_01: So,
[22:09-22:09] UNKNOWN: I
[22:09-22:23] SPEAKER_01: take it that this plan is wanting me to create a service account. So, and do a specific, a unique service account instead of the cloud run service account.
[22:23-22:23] UNKNOWN: I
[22:23-22:29] SPEAKER_01: assume as soon as you start using cloud run, it gives you a service account.
[22:30-22:32] SPEAKER_02: I imagine so.
[22:32-22:45] SPEAKER_01: But I think the general best practice is to not use the Google created service accounts because they're overpowered. They're overpermissioned, I believe. And so, I just want to make sure that that makes sense.
[22:52-22:59] SPEAKER_00: Okay, I'm going to create a new one. And call it transcription service -essay.
[23:16-23:46] UNKNOWN: Okay. Transcription service.
[23:50-23:51] SPEAKER_00: Where's the text?
[23:53-24:02] UNKNOWN: Transcription service. I'll go back and have a look at this.
[24:03-24:04] SPEAKER_00: What?
[24:04-24:05] UNKNOWN: Cloud run service.
[24:13-24:15] SPEAKER_03: Run .admin.
[24:20-24:43] SPEAKER_00: So cloud run admin. I assume that's what run .admin is. Compute viewer.
[25:12-25:14] UNKNOWN: All right.
[25:16-25:17] SPEAKER_00: That works though?
[25:17-25:18] SPEAKER_01: No,
[25:22-25:28] UNKNOWN: no. Still doesn't work.
[25:59-26:09] SPEAKER_00: Okay. Start the project up and get the service account created.
[26:39-27:15] SPEAKER_01: I'm going to add you as an owner. Okay. So then your personal credentials will allow you to deploy that. Just like signing with Google, so? Yeah.
[27:19-27:19] UNKNOWN: I think
[27:19-27:20] SPEAKER_00: you have to accept
[27:20-27:55] UNKNOWN: it. Okay.
[27:57-27:59] SPEAKER_01: We finally are forced to
[27:59-28:06] SPEAKER_02: do security. Yeah, I mean it's probably, ultimately nothing ends up being as scary as it seems.
[28:28-28:29] SPEAKER_01: I'm going to throw that out there.
[29:18-29:24] SPEAKER_02: All right. I'm going to walk in and see what it's all about.
[29:39-29:39] UNKNOWN: I
[29:39-29:46] SPEAKER_01: mean, we probably can deprecate the whole Sulaco network, period, because it was just for, I
[29:46-29:46] UNKNOWN: think
[29:46-29:46] SPEAKER_01: it's because
[29:46-29:46] UNKNOWN: we
[29:46-29:47] SPEAKER_01: keep the cluster up, but.
[29:47-29:51] SPEAKER_02: Yeah, I think we can still, I don't, it's not showing up.
[29:51-29:52] UNKNOWN: I don't
[29:52-29:53] SPEAKER_02: know what's going
[29:53-29:54] UNKNOWN: on.
[29:55-29:57] SPEAKER_02: I'm getting living room only on
[29:57-30:03] SPEAKER_01: both networks. Yeah, I can see it.
[30:05-30:07] UNKNOWN: What the heck?
[30:10-30:12] SPEAKER_00: I don't know. Don't worry about
[30:12-30:13] UNKNOWN: it.
[30:17-30:28] SPEAKER_02: It's just doing like the structure of the overall project right now, which took a little more asking than I feel like it should have, but it's fine.
[30:41-30:55] UNKNOWN: Oh, it
[30:55-31:01] SPEAKER_02: just had them collapse for no fucking reason. And just showing one. I've
[31:01-31:01] SPEAKER_01: never seen that. I
[31:01-31:01] UNKNOWN: didn't
[31:01-31:03] SPEAKER_01: even know you could do that.
[31:03-31:03] UNKNOWN: Stupid
[31:03-31:06] SPEAKER_01: fucking thing. I didn't even know that that was possible.
[31:09-31:09] UNKNOWN: Oh, you
[31:09-31:30] SPEAKER_01: don't have to break it apart for me. Just fine. Just you put it back how you normally have it. It doesn't matter. It's fine. Just do what you're doing.
[31:34-31:35] UNKNOWN: No,
[31:37-31:41] SPEAKER_01: it really is fine. Like if I want to see it, I'll stand up there. I'm fine. Okay,
[31:41-32:18] SPEAKER_02: so we've got requirements TXT, which is our overall guide, a Docker file, pretty simple, getting more and be with placeholders right now. Yeah.
[32:26-32:31] SPEAKER_01: I mean, I don't completely understand it because I don't know how that package works. But yeah,
[32:32-32:41] SPEAKER_02: but I mean, I understand like it's making an API, but calling it from fast API, we understand that and then transcribing.
[32:41-32:41] UNKNOWN: So
[32:41-32:49] SPEAKER_02: this is, I assume we're going to see the word whispering here at some point uses all these formats.
[32:53-32:53] UNKNOWN: Right.
[32:54-33:06] SPEAKER_02: Converts to wave. So that's what we're operating on is wave files. I guess so. In this current iteration.
[33:10-33:13] SPEAKER_01: Yeah, I mean, it looks good to me. I mean,
[33:13-33:13] UNKNOWN: I
[33:13-33:21] SPEAKER_01: don't know how as much as I know about those different file types and things. It looks good to me. So you may
[33:21-33:39] SPEAKER_02: recognize some of this potentially, because it's interacting with GCS, but it's really just getting stuff like it's assuming we're storing all the audio in buckets, which I think we probably will be. That makes sense to me. Whisper, there it is.
[33:41-33:45] SPEAKER_01: This is going to be how we get our model. Yeah. So how does it work in general?
[33:46-33:46] UNKNOWN: I
[33:46-33:50] SPEAKER_01: guess I can look at this. Set up
[33:50-33:50] UNKNOWN: a
[33:50-34:01] SPEAKER_01: stop for uploads and transcription outputs. Yeah. So two buckets, we upload one, one bucket for audio for output.
[34:02-34:03] UNKNOWN: Yeah.
[34:04-34:22] SPEAKER_02: And you just give it a path and a model. And that is the in effect going, here's my file, please transcribe it. And then the transcription service just takes over. I mean,
[34:22-34:29] SPEAKER_01: that makes sense to me. It makes sense to me. So do I need to, I assume I need to pre -create the buckets?
[34:29-34:46] SPEAKER_02: I'm not sure. I'm just going to give it these. It probably just needs some installs. That might be required in the next D.
[34:51-34:53] UNKNOWN: Yeah.
[34:55-35:34] SPEAKER_02: Probably missed out on virtual environment. So requirements are opening out whisper fast API, Uvicorn,
[35:34-35:34] UNKNOWN: which
[35:34-35:40] SPEAKER_02: is an API thing. Yeah. Tithon .env, which we've seen for running command line,
[35:40-35:40] UNKNOWN: I
[35:40-35:43] SPEAKER_02: think. Google Cloud Storage, Google Auth.
[35:43-35:47] SPEAKER_01: Makes sense. Those make sense to me.
[35:50-35:56] SPEAKER_02: We are going to start a virtual environment.
[35:56-35:56] UNKNOWN: I
[35:56-35:58] SPEAKER_02: guess I'll achieve it.
[36:00-36:01] UNKNOWN: Good
[36:01-36:02] SPEAKER_02: job.
[36:07-36:09] UNKNOWN: Need to use it.
[36:27-36:27] SPEAKER_01: Yeah.
[36:28-36:28] UNKNOWN: I'm
[36:28-36:49] SPEAKER_01: just thinking through, like, do we, I think we almost need three buckets. So it's like with input bucket audio that has the audio file in it. Obviously the output bucket where the text file is going to go or the JSON. And then I would imagine you want to move that audio file to the transcribed.
[36:50-36:50] UNKNOWN: So
[36:50-36:58] SPEAKER_01: that, because then you go next time, then there's two, is it going to do both? Right. That kind of like, so, but I don't want to delete it. So it's like,
[36:58-36:58] UNKNOWN: I
[36:58-37:00] SPEAKER_01: want to move those files to the.
[37:00-37:05] SPEAKER_02: And don't necessarily want like the parentheses one. Right. You have multiples.
[37:06-37:15] SPEAKER_01: Exactly. So you just want to move it over. When it's successfully completed a transcription, move it to the archive or completed file. And we just maybe even let those go into cold stores.
[37:15-37:15] UNKNOWN: But
[37:15-37:25] SPEAKER_01: that then, then it's this repository. So then we can kill things off of this file or this drive or card. Right. And then it's safe for.
[37:25-37:35] SPEAKER_02: Yeah. And I think to some extent, I think everything can live in cold line. Given my understanding of what slow means in this environment,
[37:37-37:37] UNKNOWN: it
[37:37-37:38] SPEAKER_02: might take a,
[37:38-37:38] UNKNOWN: I
[37:38-37:40] SPEAKER_02: mean, in cold line might take a couple of minutes, probably.
[37:41-37:51] SPEAKER_01: Right. But I can't imagine, well, maybe there might be some case where we need to actually hear the audio, but once the transcription is done. I'm saying even the
[37:51-37:53] SPEAKER_02: transcription can live in cold line. How quick do you need it? No,
[37:54-37:54] UNKNOWN: I
[37:54-38:05] SPEAKER_02: agree. Yeah. But also there's a range of them. If text, like it's going to be such a small thing and we could have it at like the most available and it would cost
[38:05-38:14] SPEAKER_01: almost nothing. Oh, I agree. I think keep those hot. Yeah. But then, but the actual audio files behind them. Just put them away. Just in case we need them for something else.
[38:14-38:14] UNKNOWN: But
[38:14-38:32] SPEAKER_02: yeah. And even the ones that are not transcribed yet don't necessarily need to. Do you need a bucket for the yet to be transcribed? I assume like there's no other way to hold objects. Yeah. That's how it has to go.
[38:33-38:35] SPEAKER_01: Yeah. Oh, I mean, there is file storage.
[38:35-38:35] SPEAKER_02: Right.
[38:36-38:52] SPEAKER_01: So that bucket will only ever have one thing in it. One or zero. Or I assume this has the ability to do like, say we've just either gotten behind or we're going to different places. Hey, we're going to now record at the coffee shop. Now we're going to record whatever.
[38:52-38:52] SPEAKER_02: And
[38:52-38:52] UNKNOWN: then we
[38:52-38:53] SPEAKER_02: release it as
[38:53-39:01] SPEAKER_01: a service and you've got users and all of that. Exactly. So you upload a bunch of them and then it will eventually work through them one after another. That makes sense.
[39:02-39:03] UNKNOWN: So,
[39:04-39:18] SPEAKER_02: and then I don't know what the storage look on that. Storage is super cheap. Yeah. But like what the strategy is on that because you're kind of not even really storing it. Like you just kind of, hey, run this almost like.
[39:19-39:21] SPEAKER_01: For the input one? Yeah. Yeah.
[39:21-39:21] UNKNOWN: I
[39:21-39:42] SPEAKER_01: think it's just standard. Like, yeah, I don't think that we need to reduce the storage is super cheap. Even when it's fully hot. And even if you, I mean, I think the cheapest thing you can do is make it a what's not a regional, like a zonal, zonal bucket. Right. And then it does. But making it a regional bucket makes it more expensive.
[39:43-39:43] UNKNOWN: But
[39:43-39:46] SPEAKER_01: even that. Like nominally more expensive and quite a bit more
[39:46-39:51] SPEAKER_02: robust. Right. And I
[39:51-39:51] UNKNOWN: think that's a good point.
[39:51-39:53] SPEAKER_02: Yeah. Yeah.
[39:53-39:57] SPEAKER_01: It's possible, but I don't know that we've ever had a regional outage.
[39:57-39:57] SPEAKER_02: Right.
[39:58-40:11] SPEAKER_01: I've not, or not one for very long, at least. It would have to be like an earthquake or something like that. Yeah. That destroyed a whole area where a data center was.
[40:11-40:21] SPEAKER_02: Right. And specifically like all of the electric grid and all that stuff. Because ultimately, as long as that fiber optic cable is running, we're still a go, baby.
[40:22-40:37] SPEAKER_01: Yeah. So not even where the data center was, it's like where there's more than one. Like a region is effectively, it's separated by two, it's two data centers. Yeah. And they have to be separated by at least like, I think it's 75 kilometers. Yeah. To consider a separate region.
[40:38-41:01] SPEAKER_02: Yeah. It's funny, I was thinking this morning, I don't know what got me arguing with European people in my mind this morning, but I think smart countries use Imperial and Fahrenheit because if you need a more easy to understand system, you're stupid. There you go. Why do
[41:01-41:01] UNKNOWN: you
[41:01-41:04] SPEAKER_02: need a smarter system to allow for stupider users?
[41:05-41:14] SPEAKER_01: I think the only value of the metrics, not only, the primary value is engineering, right? And because all the numbers work and you don't have to do unit conversion.
[41:14-41:14] UNKNOWN: For
[41:14-41:17] SPEAKER_01: all the dumb people. But day to day stuff, it doesn't matter.
[41:18-41:19] SPEAKER_02: And
[41:19-41:20] SPEAKER_01: I guess.
[41:20-41:27] SPEAKER_02: I get it, you can only do math in base 10. I understand. Americans, we don't have that issue. It's fine. We're able to just
[41:27-41:34] SPEAKER_01: understand things. I agree. It doesn't matter to me that much. But I don't feel the way that you do about it like,
[41:35-41:35] UNKNOWN: hey,
[41:35-41:40] SPEAKER_01: I'm using it no matter what. It doesn't matter to me. And nor do I feel like, hey,
[41:40-41:40] UNKNOWN: I
[41:40-41:43] SPEAKER_01: want to. Well, I want to be like the rest of the world and we
[41:43-41:43] UNKNOWN: need
[41:43-41:45] SPEAKER_01: to switch. I don't feel like that either.
[41:45-41:55] SPEAKER_02: No, I don't actually feel strongly about it at all. But I now have an argument in my bag because I'm just down with arguing both sides of an argument. If you're bothering me, I'm going to argue against you. I'm going to use this
[41:55-42:05] SPEAKER_01: set of points right here. Exactly. Just because I know they're going to. I've already thought about them. And you have not. I assume you have not. Exactly.
[42:07-42:09] SPEAKER_02: Okay. I don't know.
[42:12-42:13] UNKNOWN: Let's see.
[42:19-42:33] SPEAKER_01: I assume I'm going to need to create these buckets. I mean, the only other way that I can imagine is if that's also writing Terraform, which it is not. We could do that, but I don't know that we want to do that right
[42:33-42:34] SPEAKER_00: now. I
[42:34-42:34] UNKNOWN: agree.
[42:36-43:01] SPEAKER_01: So I'm going to make three. I assume that service also is not designed to have three buckets. You may need to talk about it. But it may have a way to mark which ones have already been transcribed. So I don't know. It may handle that already.
[43:01-43:02] SPEAKER_02: Yeah.
[43:03-43:05] SPEAKER_01: It's
[43:05-45:03] UNKNOWN: dash R. Okay. Okay. Okay. Okay. Okay.
[45:35-45:37] SPEAKER_00: Let's see. That's one lower.
[45:58-45:59] SPEAKER_01: Let me see.
[46:01-46:01] UNKNOWN: I
[46:01-46:09] SPEAKER_01: don't know what permissions you need to write to the artifact
[46:09-46:53] UNKNOWN: registry. Okay.
[47:10-47:15] SPEAKER_01: I'm going to give you repo admin.
[47:16-47:22] SPEAKER_00: Or no, just artifact registry admin. I assume you're going to need that.
[48:02-48:06] SPEAKER_01: Maybe not. Maybe just the service account needs to be running.
[48:08-48:15] SPEAKER_02: Yeah, I mean, that seems generally safer is to abstract out to only service accounts actually touching stuff.
[48:15-48:38] SPEAKER_01: Right. You will need artifact registry because you are going to use your credentials to push to the artifact registry with the container. Right. But then running the container. I don't know. I don't know which one. I don't know how that's. I've never done this. Actually, I've never. I guess we pushed some stuff to cloud run the other day.
[48:38-48:40] SPEAKER_02: Yeah. Not like really.
[48:40-48:40] SPEAKER_01: Okay.
[48:54-49:18] UNKNOWN: Okay. You
[49:18-49:19] SPEAKER_03: bitch ass
[49:19-49:22] UNKNOWN: motherfucker. Okay.
[49:24-49:31] SPEAKER_02: Okay. We're at least set up with no errors on dumb shit that we haven't even started actually writing yet.
[49:31-49:31] UNKNOWN: So
[49:31-49:38] SPEAKER_01: I think the next thing is just to make the link it to that.
[49:38-49:40] SPEAKER_02: So now
[49:40-49:51] SPEAKER_01: what needs artifact registry is GitHub actions. Oh, you want to do. Oh, I understand what you're saying now. I was assuming you were going to just push from here, but we can do get.
[49:51-49:51] UNKNOWN: I
[49:51-49:52] SPEAKER_01: mean, if we're going to
[49:52-49:53] SPEAKER_02: set up GitHub actions.
[49:57-50:07] SPEAKER_01: I understand. I understand the question you were asking me before, and I don't think we should do that. Okay. For this project. Okay. But I'm not sure we can do it for just learning.
[50:07-50:10] SPEAKER_02: No, like we understand you have actions. I
[50:10-50:24] SPEAKER_01: think the value of doing GitHub actions would be continuous. Like if we were doing updates a lot. But my guess is we're going to deploy this service and as long as it keeps working, we're not going to touch it again.
[50:25-50:25] SPEAKER_02: Right.
[50:25-50:25] UNKNOWN: I
[50:25-50:30] SPEAKER_02: mean, nothing's actually like written written in here. Like we are.
[50:30-50:30] UNKNOWN: We
[50:30-50:34] SPEAKER_02: have a dot E and V file with blank spaces.
[50:35-50:39] SPEAKER_01: Right. But I think all you're going to do is whatever make the container.
[50:40-50:46] SPEAKER_02: Yeah. I mean, we need to write and test the code. It's not super complex, but still like.
[50:47-50:47] UNKNOWN: Test
[50:47-50:58] SPEAKER_01: it locally. Yeah. Yeah. So I think that that's one of the things that I went around and around with customers about. Like for my mind, in my mind, I think you do testing up here.
[50:58-50:58] UNKNOWN: I
[50:58-51:09] SPEAKER_01: just go through the whole process of deploying it and create the buckets and see if it works. And if it doesn't, then you do the whole thing again instead of doing local testing.
[51:11-51:28] SPEAKER_02: Yeah, that is great. If it works on like the first three swings of the bat, otherwise you're going, OK, push it. See what happened. Oh, it didn't work. Bring it back down. See why. Like get a few of the errors, change the code, not push it again.
[51:28-51:29] SPEAKER_01: I agree. I don't disagree.
[51:31-51:31] UNKNOWN: The
[51:31-51:38] SPEAKER_01: alternative to that is we'll get it working locally. It does not guarantee that it's going to work for sure. But you know, like your functions are
[51:38-51:39] SPEAKER_02: talking to each other,
[51:39-51:46] SPEAKER_01: correct and all that stuff. I'm good. So you're going to like put it in Docker?
[51:47-51:55] SPEAKER_02: I mean, it's got a Docker file. So there's a few things in here that say that for local testing, I haven't actually read through.
[52:19-63:21] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[63:21-63:37] SPEAKER_02: So we could still, this is not ready for that, but still record an MP3 and all that stuff, and it's going to convert it to WAV and use the richest one available, but you don't have to upload that file in WAV.
[63:37-63:37] UNKNOWN: Like
[63:37-63:51] SPEAKER_02: I assume the model's just going to kind of do that. Like that's part of the whisper model and then ultimately we can maybe add a functionality at the end of like convert back to Smallest possible and push the cold line storage.
[63:51-64:39] SPEAKER_01: Yeah, I I assume it's converting as a part of the The transcription process but it doesn't touch the original file actually Right, and so having the compressed file is smaller, right? And it doesn't have as much quality But as long as it's good enough for the transcription service to work I want it to be as small as possible. In fact, maybe even compress it further for storage Yeah, and compress it further for storage because it's really just most likely one day It might be literally I know this is the the whole Kanye thing but one day It's like hey somebody may we may want to go back and say hey These are all like here's all the all the all of our discussions and all the audio from You know 10 years ago. Yeah for sure
[64:39-64:44] SPEAKER_02: I think we're not too far away
[65:33-66:03] UNKNOWN: So So
[66:14-66:14] SPEAKER_01: So
[66:14-66:14] UNKNOWN: I
[66:14-66:21] SPEAKER_01: have a much better idea of deploying the cloud like what the steps make more actual my head
[66:50-70:03] UNKNOWN: So So So So So So So
[70:33-70:37] SPEAKER_02: So Is still going
[71:33-71:56] UNKNOWN: So So
[72:17-72:18] SPEAKER_02: So
[72:18-72:18] UNKNOWN: Okay, I
[72:18-73:02] SPEAKER_02: read through the changes it made It's updating the reading. They're not actually tested yet and there's still some to do stuff, but um we're getting close enough and I think We can probably like there's going to be some amount of testing like local testing won't include a gpu Uh, yeah, of course and so We may I may agree with you It's being slower than Completely
[73:02-73:04] UNKNOWN: normal
[73:05-73:07] SPEAKER_00: Who knows
[73:37-73:47] SPEAKER_02: I'm about to push it to github So it's there and you should have gotten an email about that repository.
[73:47-73:47] UNKNOWN: I
[73:47-73:48] SPEAKER_02: did
[73:48-73:53] SPEAKER_01: Okay. Yeah, you should have gotten an email about the gcp account
[74:12-74:13] SPEAKER_03: Okay
[74:59-75:43] UNKNOWN: So So So Nice
[76:30-76:31] SPEAKER_00: So
[77:00-79:31] UNKNOWN: I might have a So So So So
[79:50-80:11] SPEAKER_01: So So much better i'm gonna make coffee too, but I have a much better idea Of how to do how to do things. Okay, it makes sense. I don't I'm gonna know if you want to talk through it now or wait So Yeah, this
[80:11-80:12] SPEAKER_02: is
[80:12-80:12] UNKNOWN: the
[80:12-80:20] SPEAKER_02: conversation we want capture I understand it. Let's go off mic
[80:22-80:30] UNKNOWN: So we'll Turn it into a Image created image
[80:30-81:14] SPEAKER_01: from Push that to the artifact registry and that's all part of docker locally so you under your credentials Will have permission to access the artifact registry from your computer. It will push it to there and then there is a gcloud Run command so there's our gcloud deploy command whatever so No, like locally on yours either one of us but locally you'll say gcloud deploy and it basically Says where you want to deploy like what you want to deploy so that that artifact registry file and where you want to deploy it To cloud run, right? And so and there's a bunch of flags that says hey, I want a gpu I want this type of machine.
[81:14-81:14] UNKNOWN: I
[81:14-81:16] SPEAKER_01: want whatever and so and it will deploy
[81:16-81:21] SPEAKER_02: well, that's all inside our docker Like all those flags or no like so it's part
[81:21-81:25] SPEAKER_01: of the scripting command, right? So so putting the um
[81:28-81:29] SPEAKER_02: You can
[81:29-81:59] SPEAKER_01: do it you could do it in the click ops you could click ops version it too, right? You can just basically say hey go you can go into cloud run and say deploy this um you know image to cloud run And you can do it but either way, but once it's in artifact registry deploying it to cloud run is a separate step It's a cloud run deployment step, right? um and then it will have this endpoint just sitting there like and the way it's like the um
[81:59-81:59] UNKNOWN: The
[81:59-83:23] SPEAKER_01: plan says is to require authentication so You can require like you have to have the way it's the native for cloud run is you have to have a google supplied Token and that will automatically be there if you try to hit it From like as a gcp click it you try to hit it right or any service hits it, right? And so I think the answer is we Upload to the bucket and then have a cloud function that triggers on bucket upload that You can set up that cloud function to use any service service account Use the service account that we created and that service account has the right permissions has permissions on that Function, yep, or that function on the cloud run endpoint, right? Yeah, so when you upload to the bucket it sees it triggers this function that says hit the endpoint And then once it hits the endpoint it will transcribe it and put the output in a different bucket and it just happens automatically So what we would do is Locally we have gsutil So basically upload the file will be locally on our computer by taking it from this sd card be local and gsutil Upload it to this bucket. Yep And from that point forward it will just automatically pick it up and then we go look at the output bucket And gsutil bring it back down. Yeah Yeah,
[83:23-83:23] SPEAKER_02: and
[83:23-83:25] SPEAKER_01: then we can make it pretty easy
[83:25-83:25] SPEAKER_02: to
[83:25-84:27] SPEAKER_01: use front end that just runs those gsutil Right or do that, right? Yeah And so then so the interaction for any um external or front end stuff is buckets Yeah, right, but the service itself none of us have the ability to act on that endpoint It can make it start by doing the action of uploading or doing things but yet right That makes sense to me and so then it just runs automatically just you drop a file in there. It runs through the process. It's basically Csd but post like non -architectural Right. Yeah, that's exactly what I what makes sense to me at least especially with it's just being us No, I um decided to just leave it because it wasn't terrible and
[84:27-84:27] UNKNOWN: As
[84:27-84:30] SPEAKER_01: it heats up and stops raining. Yeah,
[84:30-84:30] UNKNOWN: it
[84:30-84:40] SPEAKER_01: should just Come back down Yeah Yeah,
[84:40-84:49] SPEAKER_02: it's like doing the vacuum every like wednesday is the day then like throwing tests run the vacuum run the like skin the
[84:49-85:03] SPEAKER_01: top, yeah, and I think that the Chlorine is probably going to be low. My guess is because there's a ton of water in there It's extra water and you don't what not me you but the there's a bunch of leaves in there. There's junk in there.
[85:04-85:04] UNKNOWN: Yeah
[85:04-85:05] SPEAKER_01: Yeah, so there
[85:05-85:09] SPEAKER_02: may be me this might be time for a shot lower parts per million or yeah,
[85:09-85:09] UNKNOWN: I
[85:09-85:14] SPEAKER_02: guess some combined Chlorine like spit chlorine right? Yeah all that dirt.
[85:14-85:15] SPEAKER_01: It might be time for
[85:15-85:17] SPEAKER_02: a shot. Yeah shock is how you deal with this.
[85:17-85:18] UNKNOWN: Yep
[85:18-85:31] SPEAKER_02: I still don't completely understand because It also spikes the chlorine like the free chlorine and then it's like well now my chlorine time, right? But they say you should shock it every week also
[85:31-85:39] SPEAKER_01: like right and so I think like this Actually might be a time to just throw a bag of shock in there and see and then test it afterwards Yeah,
[85:40-85:50] SPEAKER_02: like test before like test with sticks. Maybe so or maybe the sticks are more I don't know. I think we're running not super low but low ish on a couple of the
[86:01-86:04] UNKNOWN: Chemicals in the test kit
[86:14-86:15] SPEAKER_01: So what are
[86:15-86:16] UNKNOWN: you working on?
[86:17-86:49] SPEAKER_02: So really just like still structure Like getting rid of all the errors and stuff, but we've got a pretty good I think for the most part not including a bunch of placeholder shit Set up code now Okay, I haven't read this output yet but I basically I start every new chat with like check the read me and all the project files and Determine what we need to do until an action which right now is deploying to GCP and so then i've got a output
[87:18-87:18] SPEAKER_01: So
[87:18-87:18] UNKNOWN: Yeah,
[87:18-87:46] SPEAKER_01: and then another thing that that um cloud function could also move it to another bucket too, yeah for sure right and so that's Implement the three buckets that makes sense because that's what functions do they just do do little events like that So
[87:46-87:46] UNKNOWN: Yeah,
[87:46-87:59] SPEAKER_01: and I have a cloud run I mean a cloud function right here for calling Calling the endpoint upon an upload to the bucket, but i'm sure that's pretty simple pretty straight
[88:40-89:42] UNKNOWN: So So So
[90:08-90:16] SPEAKER_01: So Individually we should not be able to Do cloud run
[90:16-90:16] SPEAKER_02: right
[90:16-90:27] SPEAKER_01: only the service account Yes, I mean we are only allowed to upload to the bucket individually that makes sense
[90:59-91:00] UNKNOWN: So
[91:11-91:12] SPEAKER_00: So
[91:37-91:38] SPEAKER_02: So
[91:38-91:38] UNKNOWN: You
[91:38-91:41] SPEAKER_02: send me that audio file
[91:43-92:04] SPEAKER_01: Yeah I'm just gonna see you want me to air air draw. Uh, yeah
[92:19-92:21] SPEAKER_00: Sure
[92:24-92:26] UNKNOWN: Do
[92:39-92:41] SPEAKER_02: I need like
[92:41-92:41] SPEAKER_01: the audio.
[92:43-92:43] UNKNOWN: I thought
[92:43-93:24] SPEAKER_01: I was sending you the audio. I agree with you. I knew what you were asking for. So that's the return. I don't even know where I. Oh I took it directly off the SD card. I have an MP3 version because I was playing with it. Oh no this is different. This is me making a video of. Hold on let me make sure what this is. I think this is me when I was talking through.
[93:26-93:26] UNKNOWN: The
[93:26-93:31] SPEAKER_01: electrical stuff with. Oh this is an MP3 file.
[93:34-93:42] UNKNOWN: The sprinklers. Right. So I think the sprinklers are like right in here
[93:42-93:45] SPEAKER_01: somewhere. It's not. It is. Right.
[93:45-93:45] UNKNOWN: I think
[93:45-94:14] SPEAKER_01: they're both. It'll be fine. I know what file it is and you can use this one. This is talking through what we're going to do with the yard. I'm going to send it to you and I have no idea where this is from. This is an MP3 file. I
[94:14-94:14] UNKNOWN: think
[94:14-94:26] SPEAKER_01: it's
[94:26-94:31] UNKNOWN: a water right. There's more less water over
[94:31-94:32] SPEAKER_01: here. I
[94:32-94:32] UNKNOWN: literally
[94:32-94:34] SPEAKER_01: don't know where this is
[94:34-94:34] UNKNOWN: coming from.
[94:35-94:39] SPEAKER_01: So it is the water unless there's something we can do about the water.
[94:39-94:39] UNKNOWN: But
[94:39-94:41] SPEAKER_01: I don't think there is. Make the house higher.
[94:41-94:42] UNKNOWN: Yeah. So I think it's a water. So I think it's a water.
[94:42-94:45] SPEAKER_03: So I want to bring that out. I want to take out
[94:45-94:46] UNKNOWN: the.
[94:48-94:52] SPEAKER_01: Okay. Take out the evergreen on the right hand side.
[94:52-94:52] UNKNOWN: And
[94:52-94:53] SPEAKER_03: that's
[94:53-94:53] UNKNOWN: going
[94:53-94:53] SPEAKER_03: to
[94:53-94:54] SPEAKER_01: be this bed.
[95:07-95:12] SPEAKER_02: I'm doing the doctor build. I haven't actually gone through. And
[95:12-95:12] UNKNOWN: I have the paper.
[95:12-95:21] SPEAKER_02: looked at all the code but we're gonna see what if I code yeah exactly
[95:30-95:35] SPEAKER_01: my guess is it's gonna get us pretty close that's just the pair of we're in
[98:46-98:47] UNKNOWN: all right
[98:47-98:56] SPEAKER_02: it's gonna take a while because apparently the CUDA image is fucking jagging okay 5 .25 gigabytes
[98:56-99:01] SPEAKER_01: Wow but that's what you need to run GPUs
[99:08-99:18] SPEAKER_02: yeah I just asked to make sure it was not insane like that's correct and Kershaw said yeah
[99:18-99:31] SPEAKER_01: so you're getting ready to deploy this service locally yeah and to a local endpoint slash transcribe or whatever yeah and then invoke it with
[99:31-100:02] SPEAKER_02: that audio file see what happens yeah and it may not be it may get there and just like spin because I don't have a GPU or whatever but and we're using the tiny model so I assume it's not gonna be especially accurate but if we just get an output then it's like okay push it to DCP and let's really like make it work work right makes sense but this is just a first pass to avoid deploying 11 times the artifact registry street to get rid of all the double quotes or some shit no I agree
[100:02-100:21] SPEAKER_01: but for an hour and a half two hours pretty fucking good yeah I would have done this a month ago yeah if I'd have known it would be this easy and granted it's not done yet yeah we haven't even pressed go once yeah but I imagine it's probably pretty good yeah
[100:21-100:36] SPEAKER_02: and that's where like really the reason we didn't do this a month ago is we didn't have the plan where like 90 to 95 percent of it is the plan and the idea the execution
[100:36-100:49] SPEAKER_01: is pretty simple it's but I mean just specifically thinking about the trend transcription service I've used page service all right several times and it's been annoyed the whole time yeah but I never had the thought we'll just make your own it's been
[100:49-100:50] SPEAKER_02: one up it'll take
[100:50-101:00] SPEAKER_01: four or five hours but then because I've already spent we just spent $12 $9 something like that and you know that at least once before I've
[101:00-101:00] UNKNOWN: done
[101:00-101:09] SPEAKER_01: twice before yes with 27 bucks yeah and so how many hours of transcription could we've gotten for that on GCP I mean it would have cost
[101:10-101:36] SPEAKER_02: about 60 cents maybe not even that exactly because yeah you could get five hours worth for 60 cent but it's also like how much is an hour of your time technically worth right I agree which the counter to that is like well this is making you better at your job also so it's arguably making your hours worth more but didn't just
[101:36-101:40] SPEAKER_01: having this it is yeah well I'll use it for everything yeah anytime I'm
[101:40-101:40] UNKNOWN: gonna
[101:40-101:53] SPEAKER_01: record every conversation that's even remotely important not like personal conversations anything like hey well we're talking about what we want to do next year for vacation even what we
[101:53-102:07] SPEAKER_02: want to do in two weeks on the days of vacation right and it's like okay well give me a you know tentative plan for the week based on this conversation that I recorded in the car ride to the place easy
[102:07-102:14] SPEAKER_01: right because then once you have the text transcription of it then you can get into LLMS and then it then it
[102:15-102:39] SPEAKER_02: like this ultimately I don't know cloud functions you were talking about like they just do little dumb things they're agents without AI right that's what or an agent is just a cloud function with AI yeah that's the that's the gap so we're almost halfway so we this might be the rest of our time is literally waiting on this image to build I
[102:39-102:42] SPEAKER_01: am literally ready to go straight to work yeah
[102:43-102:44] SPEAKER_02: this wasn't even really
[102:44-103:22] SPEAKER_01: no hard no like I said that's why I wanted to do it at this time because like that's when I get up anyways yeah and instead of working out and so I'm gonna go down to that's the sacrifice from my perspective and that's kind of why I don't want to do it every day every day I'll go down three days a week and I'm thinking I'm gonna add Saturday or Sunday and one of those days and so I can get to four yeah four seven I think is a reasonable I think the issue with it for me is it made me I feel like it made me sleep worse oh what does my body temperature was high I'd like so in the cold one no I did so I
[103:22-103:22] UNKNOWN: think
[103:22-103:34] SPEAKER_01: I would have to do some other stuff or back it off from my sleeping yeah my bedtime far enough where I can completely cool down and get back and I was not working out routinely right so I was so worried things like that
[103:34-103:34] UNKNOWN: you
[103:34-103:55] SPEAKER_01: gotta get just get to get used to it so that might be the answer is putting it in the evenings but in general I don't know I don't I only tried it once it's tough yeah the terrible time I can't I shouldn't judge off of that but right as it right now I'm gonna try to do four days a week or if anything if the the three days that I do in the evening it or do four in
[103:55-103:55] UNKNOWN: the
[103:55-104:00] SPEAKER_01: morning three in the evening then do like yoga or just like that type of stuff in the evening I think even
[104:00-104:21] SPEAKER_02: like if you wanted to stay in the morning and still get something and it be like basically go walk walk to the front of the neighborhood on the mornings we work right or on the evenings of the days that we work in the morning just like literally walk to the front of the neighborhood and back it's gonna get some sun on your skin and I agree so something like that so if
[104:21-105:00] SPEAKER_01: I'm gonna do like the days that we work and I don't work on the morning do something in the evening something that's relatively like yeah because I'm gonna take a shower right exactly so do something that's relatively like so yoga walking and whatever and so even so that's one of the things about the evening is that is my time with Mel and so I don't want to take a chunk substitute the time to two hours or an hour and a half in the evening for time that I would have done in the morning and so but a walk or something like that with her with you guys could be that couple right a couple in the neighborhood that has the walk every single day and that would be suitable so something like that I think that would be
[105:00-105:12] SPEAKER_02: good all around yeah like it gets you disconnected for some amount of minutes gets you locked in just hanging out with Mel getting sun on your skin yeah I think
[105:12-105:18] SPEAKER_01: all of the above yeah so something like that would be good and then you know based on it
[105:18-105:18] UNKNOWN: would
[105:18-105:24] SPEAKER_01: be Tuesday Thursday and then Monday was the Friday just standard get up at 6 and
[105:24-105:25] SPEAKER_02: work out like you so
[105:25-105:25] SPEAKER_01: it
[105:25-105:25] UNKNOWN: would
[105:25-105:41] SPEAKER_01: just be Tuesday Thursday evenings and then I would so I would do sub in probably Saturday morning sometimes yeah I don't know I don't know that I'm motivated enough to say I'm gonna get up and work out on Saturday morning I don't
[105:41-105:41] UNKNOWN: know
[105:41-105:46] SPEAKER_01: what you know work also really so it really is either yeah this Saturday morning is the if
[105:46-105:56] SPEAKER_02: we're working at 7 you could theoretically somewhat rushed but get up at 6 like roll out get gear up and get I would
[105:56-106:23] SPEAKER_01: like to do this because this is a priority right you know and your health is too slow but I would like to start this at 6 on Sunday's like so I don't know what time we had been doing it but but it's basically the same time basically I'm gonna set my alarm at 530 every day yeah and you know do something at 6 whether it be working out or coming in and then so I'd like to do that on Sunday too you know so that Saturday the thing is it
[106:23-106:24] SPEAKER_02: literally will make
[106:24-106:24] UNKNOWN: it
[106:24-106:32] SPEAKER_02: easier if you don't have this one random day where you sleep past the I agree I don't know that my body will anyway but
[106:32-106:43] SPEAKER_01: get up at 530 on Saturday and might as well be a workout too just because it's Saturday I mean today has to suck and work out and then at the end of that then I can you know have at least early morning and all of that stuff and it's still early
[106:43-106:44] SPEAKER_02: enough that
[106:45-106:45] UNKNOWN: like
[106:45-107:03] SPEAKER_02: you have no conflicts the rest of the world is not even up and it's not crazy early right it's just getting up and getting after it and you will feel better literally all it's true right I say that and I also don't get up off my ass on Saturdays and work out like I should
[107:03-107:14] SPEAKER_01: but I'm imagining doing something relatively light like you know yoga or walking or something yeah probably
[107:14-107:25] SPEAKER_02: yoga yeah the bike is perfect for that if you can make yourself not do the fucking I can't get on the bike and just chill I'm gonna take it easy right so what
[107:25-107:46] SPEAKER_01: I would probably do is cardio on Monday yeah probably pretty intense one of the either the tread or the bike probably the bike yeah Wednesday probably back to yoga strength Friday yeah and then yoga again so two yoga's a strength of them
[107:46-107:46] UNKNOWN: and
[107:46-107:49] SPEAKER_01: some just filler walk
[107:49-107:52] SPEAKER_02: or whatever you can do to the other side I
[107:52-107:52] UNKNOWN: mean
[107:52-107:57] SPEAKER_02: even in you guys hanging out at the pool and like lapping back and forth yes even
[107:57-108:06] SPEAKER_01: doing that would be good yeah I have no idea what the difference between it blinking and being solid
[108:06-108:09] SPEAKER_02: is that like when it's oh
[108:09-108:11] SPEAKER_01: I think it means it's clipping
[108:11-108:12] SPEAKER_02: like
[108:12-108:14] SPEAKER_01: like the
[108:14-108:15] SPEAKER_02: it actually makes clips like no
[108:15-108:18] SPEAKER_01: it's peeking above that like it's too sensitive
[108:18-108:20] SPEAKER_02: oh yeah
[108:20-108:35] SPEAKER_01: exactly yep so and that that is a sensitivity will so meaning it should come down so yeah it's yeah it's too sensitive
[108:35-108:41] SPEAKER_02: test test test test test test test yeah I mean that's reasonable it should do that when you play
[109:59-110:03] SPEAKER_01: I'm not hurt and my first meeting section not until not okay so I don't have
[110:03-110:03] UNKNOWN: to
[110:03-110:18] SPEAKER_01: like rush in there but I generally like to start on time just because that's just how I am and secondly I assume they are some software is watching yeah yeah we
[110:18-110:22] SPEAKER_02: need
[110:22-110:40] SPEAKER_01: a fire 30 ,000 on a whim I would do that like hey I have these this group of people who are they're effectively grandfather there are no new there's a few new remote roles but there's very very like this is my person yeah because it doesn't make
[110:40-110:48] SPEAKER_02: sense it was this nonsense thing that we decided to try while we were being fascist for a few years and so
[110:48-110:58] SPEAKER_01: there I'm grandfather than this and so I would monitor them like hey if at any point we need to just be like hey you're all coming back yeah because we've you're not being productive
[110:58-111:11] SPEAKER_02: at the very least it's like you can start to trials against the two groups so like well these people are 10 % more productive so you can take a 10 % pay cut or we
[111:11-111:11] SPEAKER_01: can
[111:11-111:12] SPEAKER_02: you can come to
[111:12-111:12] SPEAKER_01: the
[111:12-111:12] SPEAKER_02: office
[111:12-111:17] SPEAKER_01: right so I think I would take a 10 % yeah that's what I would do
[111:17-111:21] SPEAKER_02: that probably wouldn't be an option I was thinking about I actually know you can't
[111:21-111:49] SPEAKER_01: you're coming to the which is fine but the people that I taught to that prefer to from home that are hybrid I was like do you ever go to the office I guess this like this lady like when I was in Denver last week and she was like I'm never gonna like I go to the office when I need to like what if there's something that's like hey there's something in there or somebody need to talk to I need to go to the office otherwise like I don't go for weeks and nobody says anything
[111:49-112:25] SPEAKER_02: my guess is that level and that makes sense to me because a lot of jobs or a significant percentage of a lot of jobs can be done remotely as long as you have a good employee but that I'm so unimpressed with the population oh yeah people hey um but I think it basically is their Google's ability to go like hey with zero notice we might tell you you have to go into the office so like yeah you can't be doing this bullshit getting paid in California living in Iowa right like that's it ain't working anymore because that is one of the things that I would try to do it's like okay well I'm going
[112:25-112:26] SPEAKER_01: to the Dallas office
[112:26-112:33] SPEAKER_02: right and whenever all this stuff started happening people were like this isn't right like I'm 400 miles away that
[112:33-112:43] SPEAKER_01: was a choice yeah and theoretically I mean it's like because it's on the north side of Dallas like I can get there in three and a half hours yeah and not really pay you
[112:43-112:43] UNKNOWN: got
[112:43-112:46] SPEAKER_01: a meeting at 11 I'll be there
[112:47-112:57] SPEAKER_02: I'll be available for calls in the meantime and all that yep I mean until I could do something different planes for 350 grand
[112:57-113:12] SPEAKER_01: yeah exactly that's worth it start to place put things in place but basically that's what I would do I was like if you are going to say you you're returning to office like okay that's the one for me or I
[113:12-113:12] UNKNOWN: would
[113:12-113:25] SPEAKER_01: first try the data center like yeah like data center does that count or no you got to be in one of these like Dallas office it is yeah and I will yeah and I also don't I'll be there my one day a week you're
[113:25-113:38] SPEAKER_02: going to an office to be remote like that is the silly thing like where I'm where it doesn't make sense is like hey our team needs to switch and we're talking in meeting and exactly we have in
[113:38-113:58] SPEAKER_01: -person meetings just like we're talking to our team like the Vatican like we need to be in the same place and look at each other all the verbal the nonverbal cues right all that stuff like that but for me like I'm gonna go there and sit on my headphones in a room all day talking to people just like I do right now and so
[113:58-114:12] SPEAKER_02: yeah if they want to make the move of hey we're going back to in office that's fine but it's like you can't pick the Dallas office unless that's the one that got picked for your whole fucking team right but also like your whole team is remote fluid there like you get plugged in
[114:12-114:12] UNKNOWN: to
[114:12-114:19] SPEAKER_02: different places so some of them most of the people you work with don't work from Google right on a day -to -day basis like
[114:19-114:42] SPEAKER_01: so our team is generally relatively small compared to the customer today and but even on both sides the customer teams are generally spread out and remote and our team are spread out and sometimes they're in office sometimes they're remote but even so even if I went to the Dallas office for the stuff that I'm doing right now nobody I know is in that office nobody I'm working with in that office yeah I would just be in there talking like I'm doing right now so
[114:42-114:56] SPEAKER_02: you're kind of a special case like the people that are actually like jamming and working on applications you can argue they need to be in an office because like I need to be able to pop into your office and say hey this is fucked up I'm
[114:56-114:56] UNKNOWN: not
[114:56-114:59] SPEAKER_02: waiting on an email yeah let's get this shit let's do it right now
[114:59-115:30] SPEAKER_01: I agree or if my manager was there something I think my new manager because you know it's not gonna be my anymore right is in that office which is fine that's good and I think else if it is the big version it's gonna end up in the Dallas office I think our requirements is one day a week and it's Thursday like so I think we do if there are any team events or anything like that is on that one day it's like that's fine so every Thursday I'm getting up at 3 in the morning right drive in there working all day and you guys could almost make it
[115:30-115:39] SPEAKER_02: a thing of like you guys both go down there see Ali and Cam and Carmelo and like Mel rolls with you and then you guys come back Friday or whatever just have
[115:39-115:50] SPEAKER_01: our standard hotel yeah like fucking get an investment property like hey we're gonna stay whatever once it wants to every Thursday night we're gonna go or you like get an investment property
[115:50-116:04] SPEAKER_02: or let Ali and camp stay in it and be like the cost is I come and stay in this bedroom like that like that's a legitimate pathway that Thursday yeah you get to see Carmelo every single week
[116:04-116:16] SPEAKER_01: but yeah yeah she wasn't watching the boys which is good I'm not complaining about something um then it'd be easy like I'm gonna go on a mini vacation every single
[116:16-116:40] SPEAKER_02: week you may you gotta make special things for the MacBook specifically I say we just deploy yeah what
[116:49-116:50] UNKNOWN: and
[116:50-116:59] SPEAKER_01: you should have the permissions to your artifact registry administrator right
[117:19-117:20] SPEAKER_02: well
[117:20-117:21] SPEAKER_01: you don't have to download them again
[117:21-117:22] SPEAKER_02: like
[117:22-117:29] SPEAKER_01: they're already in your local Docker it'll be much faster this time we need changes
[117:29-117:45] SPEAKER_02: I think because it didn't actually come but I don't know
[117:45-117:45] UNKNOWN: I
[117:45-117:51] SPEAKER_02: don't fucking know maybe because it is local and that's inherently ephemeral or something but
[117:54-117:56] SPEAKER_01: I'm gonna go make a
[117:56-118:02] SPEAKER_02: shake okay call this for today probably because that's gonna be well past eight
[119:11-119:12] UNKNOWN: I'm
[119:12-119:15] SPEAKER_00: gonna stop this too
[119:15-119:18] SPEAKER_02: so far oh I

==================================================
Generated on: 2025-07-23 12:10:13
Total words: 8969
Total speakers: 5
==================================================





Summary:
creation_date: 2025-08-26 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1150_ZOOM0010_transcript.txt participants: [SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03]

Executive Summary

This session is a technical deep-dive into building the proprietary [[Transcription Service]] previously discussed. The participants perform a cost analysis, concluding that a self-hosted open-source [[Whisper]] model on [[GCP]]'s [[Cloud Run]] service is more than ten times cheaper than using GCP's native Speech-to-Text API `[01:18-01:55]`, `[05:39-05:55]`. They decide to proceed with the self-hosted option and meticulously plan the architecture, which involves using [[Cloud Run]] with GPU support, a three-bucket system in Cloud Storage for file handling (input, output, archive), and a [[Cloud Function]] to trigger the transcription process upon file upload `[36:28-37:15]`, `[81:59-83:23]`. The development workflow will involve local testing within a Docker container before deploying the image to [[Artifact Registry]] and then to [[Cloud Run]].

---

### Key Topics Discussed

- **Transcription Service Cost Analysis**:
    
    - **[[GCP]] Speech-to-Text API**: Estimated cost is **$13 per 10 hours** of audio `[01:18-01:55]`.
        
    - **Self-Hosted [[Whisper]] Model on [[Cloud Run]]**: Estimated cost is approximately **$1.15 per 10 hours** of audio, utilizing an NVIDIA T4 GPU `[05:39-05:55]`. This represents a significant cost saving, making it the preferred approach.
        
- **Technical Architecture Plan**:
    
    - The service will be built as a Docker container and deployed on [[GCP]] [[Cloud Run]] with GPU support enabled to run the [[Whisper]] model efficiently `[05:02-05:39]`.
        
    - A three-bucket system in Cloud Storage will be used:
        
        - An **input bucket** for new audio files.
            
        - An **output bucket** for the resulting text transcriptions.
            
        - An **archive bucket** to move processed audio files for long-term, low-cost storage, preventing reprocessing `[36:28-37:15]`.
            
    - A **[[Cloud Function]]** will be configured to automatically trigger the [[Cloud Run]] service whenever a new audio file is uploaded to the input bucket `[81:59-83:23]`.
        
- **Deployment and Security Workflow**:
    
    - Code will be managed in a private [[GitHub]] repository `[13:40-13:41]`.
        
    - The development process involves building and testing the application locally within a Docker container before pushing the container image to [[GCP]]'s [[Artifact Registry]] `[80:30-81:14]`.
        
    - Deployment from the [[Artifact Registry]] to [[Cloud Run]] will be done via `gcloud` commands, opting for manual deployment over a continuous [[GitHub Actions]] pipeline for this project `[50:07-50:24]`.
        
    - The [[Cloud Run]] endpoint will be private and require authentication. A dedicated [[Service Account]] with minimal necessary permissions will be used by the [[Cloud Function]] to securely invoke the service `[81:59-83:23]`, `[90:08-90:27]`.
        

---

### Action Items & Decisions

- **Decision**: To build a self-hosted [[Transcription Service]] using the open-source [[Whisper]] model on [[GCP]] [[Cloud Run]] due to significant cost savings `[05:57-06:00]`.
    
- **Decision**: To use a private [[GitHub]] repository for the project's source code `[13:40-13:41]`.
    
- **Action**: Create a new [[GCP]] project, a dedicated [[Service Account]], and the required Cloud Storage buckets and APIs ([[Cloud Run]], [[Artifact Registry]]) `[15:16-15:23]`, `[22:52-22:59]`.
    
- **Action**: Develop and test the transcription application locally in a Docker container to validate functionality before deploying to the cloud `[99:18-100:02]`.
    

---

### Suggested New Links/Tags

_New concepts identified during the meeting that are not yet in the knowledge base._

- [[Artifact Registry]]
    
- [[Cloud Function]]
    
- [[Cloud Run]]
    
- [[GitHub]]
    
- [[GitHub Actions]]
    
- [[Service Account]]
    
- [[Whisper]]
    

---

### Linked Concepts

- [[Artifact Registry]]
    
- [[Cloud Function]]
    
- [[Cloud Run]]
    
- [[GCP]]
    
- [[GitHub]]
    
- [[GitHub Actions]]
    
- [[Service Account]]
    
- [[Transcription Service]]
    
- [[Whisper]]
    

---

### #Tags

- #AI
    
- #Automation
    
- #GCP
    
- #SoftwareDevelopment
    
- #Startups

zoom11
Transcript:

https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1127_ZOOM0011_transcript.txt

==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:01] SPEAKER_06: Yeah, it's just
[00:01-00:01] SPEAKER_02: a microphone.
[00:02-00:02] SPEAKER_08: I don't know
[00:02-00:04] SPEAKER_02: how well it'll do with
[00:04-00:07] SPEAKER_08: it. Yeah,
[00:07-00:31] SPEAKER_02: so we're going to build a transcription service. OpenAI made theirs open source, so you can just use it. We're going to build it and host it on GCP, and then basically we can take any kind of meetings that we do like this and feed it up there. And we're also building agents too, like if we wanted to do a topic. So basically we have them that they can absorb the information or the request and say like,
[00:31-00:31] UNKNOWN: hey,
[00:31-00:56] SPEAKER_02: I want a podcast on World War I for the first year. And it's like it might take several hours, but it'll spit one out and you can say like, I want it to be four hours. I want it to be based on these books and all these different stuff. And then all the way to like business meetings. Hey, summarize this for us, make a bulleted list of everything we talked about. And you can then go, hey, this bullet point right here, dive deeper into that. Give me the full context around that conversation type of things.
[00:57-00:57] UNKNOWN: And
[00:57-00:59] SPEAKER_02: I think it does.
[00:59-00:59] UNKNOWN: Yeah,
[00:59-01:07] SPEAKER_02: right. And that's how you kind of like rip the value out of our meetings. You keep all the data and the thoughts that everybody.
[01:07-01:12] SPEAKER_06: Yeah, I mean, I already do that at work. Like it's built into Gemini. Oh,
[01:13-01:13] SPEAKER_02: they transcribe everything.
[01:14-01:22] SPEAKER_06: It's built into me. So like you just turn on the button in it does a full transcription and it keeps track of the voices and then labels them.
[01:22-01:22] UNKNOWN: And
[01:22-01:33] SPEAKER_06: like this does this will do it too. And it gives you a summary. It gives you a summary of the conversation like inputs in paragraphs of the different topics and keeps action items.
[01:35-01:35] SPEAKER_08: Yeah.
[01:35-01:41] SPEAKER_06: Yeah. So effectively nobody ever we don't ever take notes anymore. You just turn on notes taking. Wow.
[01:42-01:42] UNKNOWN: And
[01:42-02:15] SPEAKER_06: at any point you can go back. So you turn notes and like video recording. I typically don't turn on video recording unless it's a customer that's like annoying. But you turn on notes and at any moment you can go back and say, like, so if you keep track of this, like, and you typically what I do is take all the transcripts and notes for given. Like if it's a set of meetings about the same thing, like, and then do exactly what he said. I load it all into Gemini and then like ask questions or like, hey, you know, summarize the plan, generate an email, whatever, because it just knows the whole context.
[02:21-02:22] SPEAKER_05: Man, that looks good.
[02:22-02:23] SPEAKER_02: That plastic.
[02:26-02:27] UNKNOWN: Shallow.
[02:29-02:31] SPEAKER_02: What happened? Count took a nutshell.
[02:39-02:39] UNKNOWN: Is
[02:39-02:42] SPEAKER_05: there any blood? I don't know
[02:42-02:42] UNKNOWN: if
[02:42-02:45] SPEAKER_05: there's no blood. There's blood from that.
[02:45-02:49] SPEAKER_02: You need to go to the emergency room.
[02:50-02:51] UNKNOWN: What happened?
[02:51-03:01] SPEAKER_01: What do you get your tattoos? Where'd you get those at? Did they hurt?
[03:06-03:13] SPEAKER_00: On your foot. Your mom would give you those.
[03:14-03:20] SPEAKER_01: What? You did that
[03:20-03:20] UNKNOWN: at
[03:20-03:21] SPEAKER_01: your house?
[03:26-03:30] SPEAKER_02: That's tough, buddy, but there's nothing anybody can do for you until it just goes away.
[03:31-03:32] SPEAKER_00: Yeah, you just got to hold down.
[03:44-03:45] SPEAKER_01: You think that's funny?
[03:55-03:57] SPEAKER_03: Earlier when he hit his head I said,
[03:59-03:59] UNKNOWN: are
[03:59-04:00] SPEAKER_03: you tough? He goes,
[04:01-04:01] UNKNOWN: no.
[04:01-04:03] SPEAKER_03: Who said that? Highland.
[04:09-04:09] UNKNOWN: Your
[04:09-04:11] SPEAKER_00: mom just doesn't know how that feels, bro, she can't relate.
[04:13-04:15] SPEAKER_03: No further information. I had a baby two months ago.
[04:15-04:17] SPEAKER_00: And I didn't cry. Yeah, I guess she does.
[04:23-04:25] SPEAKER_06: You're not a boy?
[04:25-04:38] SPEAKER_03: Hey, look at me. That's like you pushing a pinnacle out of a pinhole. What? How do you think that would feel? Right. Good name of caribou. It's a
[04:38-04:38] UNKNOWN: good
[04:38-04:43] SPEAKER_03: name. He likes it. No.
[04:48-04:54] UNKNOWN: Look, Alex, he had to eat. He had to eat. It
[04:54-05:07] SPEAKER_03: was a slice. You happy now? You want to know what a boy said yesterday? Bro. He thinks he looks like Alex. He thinks he looks like Alex? He looks funny. Highland.
[05:12-05:13] SPEAKER_01: Thanks, Alex. What?
[05:14-05:15] UNKNOWN: What
[05:15-05:15] SPEAKER_03: does he
[05:15-05:15] UNKNOWN: look
[05:15-05:15] SPEAKER_03: like?
[05:15-05:15] UNKNOWN: He looks
[05:15-05:17] SPEAKER_01: like a
[05:17-05:18] SPEAKER_03: Puerto Rican.
[05:18-05:19] SPEAKER_00: Puerto Rican?
[05:21-05:21] SPEAKER_03: Well,
[05:21-05:21] UNKNOWN: Alex
[05:21-05:22] SPEAKER_03: has something Puerto
[05:22-05:22] UNKNOWN: Rican.
[05:22-05:23] SPEAKER_00: Yeah, I don't know about that
[05:23-05:24] SPEAKER_03: one.
[05:27-05:28] SPEAKER_01: Oh, bless you.
[05:33-05:34] SPEAKER_03: It really did.
[05:36-05:37] SPEAKER_07: Man, that's solid.
[05:38-05:38] SPEAKER_03: Which one did you get?
[05:40-05:43] SPEAKER_07: The butter bomb. Butter bomb, yeah.
[05:45-05:45] UNKNOWN: It's like
[05:45-05:48] SPEAKER_03: a good bun.
[05:49-05:51] SPEAKER_07: It's fine. You want a bite?
[05:51-05:52] UNKNOWN: I don't know.
[05:53-05:53] SPEAKER_07: You want your
[05:53-05:53] UNKNOWN: own?
[05:53-05:54] SPEAKER_07: Yes,
[05:54-05:54] UNKNOWN: I
[05:54-06:03] SPEAKER_03: do. Oh, that's sweet. We made a mistake before we came here. We got large coffees, but they're like this one. Why did
[06:03-06:03] SPEAKER_07: you get large?
[06:05-06:09] SPEAKER_03: It was good. We didn't know we were going
[06:09-06:09] UNKNOWN: to
[06:09-06:10] SPEAKER_03: be tweaking. I am drooling.
[06:10-06:10] SPEAKER_01: I
[06:10-06:10] UNKNOWN: am
[06:10-06:11] SPEAKER_01: tweaking.
[06:11-06:11] SPEAKER_03: I
[06:11-06:11] UNKNOWN: am.
[06:11-06:15] SPEAKER_03: I can't stop. I don't know if I'm going
[06:15-06:15] UNKNOWN: to
[06:15-06:20] SPEAKER_03: be able to rap in dry pop. Thanks for that.
[06:20-06:20] UNKNOWN: Say,
[06:20-06:22] SPEAKER_03: are you drunk? I'm
[06:22-06:22] UNKNOWN: going
[06:22-06:25] SPEAKER_03: to be like, no. I had well -capped wine shot.
[06:29-06:32] SPEAKER_04: Say hi, puppy. Are you trying to say it?
[06:33-06:35] SPEAKER_03: I'm going to stop. You're
[06:35-06:36] SPEAKER_04: trying to say it.
[06:39-06:44] SPEAKER_03: I did find out that they did both of his cheeks also.
[06:46-06:47] SPEAKER_06: Were they not supposed to do that?
[06:48-06:57] SPEAKER_03: They said they would get in there and then see what needed to be done. But when they brought him back out to me, I couldn't tell. And so I was like,
[06:57-06:57] UNKNOWN: I
[06:57-06:59] SPEAKER_03: don't know. They never told me.
[06:59-06:59] UNKNOWN: And
[06:59-07:01] SPEAKER_03: then apparently they didn't tell her. What did
[07:01-07:01] UNKNOWN: they
[07:01-07:01] SPEAKER_03: do
[07:01-07:03] SPEAKER_00: to his cheeks? Similar thing to his cheeks? They
[07:03-07:10] SPEAKER_03: lasered him. But today she was like, OK, both of his cheeks look well and healed.
[07:10-07:10] UNKNOWN: And
[07:10-07:11] SPEAKER_03: I was like,
[07:11-07:11] UNKNOWN: whew.
[07:12-07:13] SPEAKER_03: I said, that was
[07:13-07:13] UNKNOWN: good.
[07:13-07:24] SPEAKER_03: Lucky. They haven't stretched him. Wonderful. I was hoping you would say that. I thought so, too. I was like, oh, there's my answer.
[07:32-07:32] UNKNOWN: How
[07:32-07:33] SPEAKER_07: many times have
[07:33-07:33] UNKNOWN: you
[07:33-07:33] SPEAKER_07: had bread?
[07:34-07:38] SPEAKER_00: Not really. Yeah, it's really good. Keto, almost done with two eats.
[07:39-07:40] SPEAKER_07: How's that going?
[07:40-07:40] UNKNOWN: Is
[07:40-07:40] SPEAKER_07: that
[07:40-07:40] UNKNOWN: your
[07:40-07:41] SPEAKER_07: first time?
[07:41-07:42] SPEAKER_00: Good. I'm down like nine pounds. I
[07:42-07:44] SPEAKER_07: believe it. I believe it.
[07:45-07:45] UNKNOWN: I
[07:45-07:46] SPEAKER_00: never even had it, really.
[07:47-07:54] SPEAKER_02: My workouts never came back. We got like a week and a half in, and I was still just like day two basically. Just feeling like garbage.
[07:55-07:57] SPEAKER_00: Yeah, I still like my workouts. I just can't get through a full one.
[07:58-07:58] UNKNOWN: But
[07:58-08:05] SPEAKER_00: I'm hopeful because I'm doing it until my birthday. And then after that, I'll just try to like eat better. Be reasonable until
[08:05-08:08] SPEAKER_02: you build up to another big move.
[08:11-08:18] SPEAKER_00: But yeah, it's been really the toughest part is just like food selection. Yeah. Because like right now I can't even cook at the house. So
[08:18-08:19] SPEAKER_02: I
[08:19-08:26] SPEAKER_00: have to eat out and it's like grilled chicken or grilled chicken salad. No
[08:26-08:27] SPEAKER_02: sauce. No.
[08:29-08:32] SPEAKER_03: Shiloh doesn't like that. He's
[08:32-08:32] UNKNOWN: like,
[08:32-08:39] SPEAKER_03: I like milk. He is going to be an eater though.
[08:39-08:39] UNKNOWN: Like
[08:39-08:43] SPEAKER_03: already he's too much old and he's like. He is like. Like he's. If you're eating
[08:43-08:44] SPEAKER_07: around him.
[08:45-08:48] SPEAKER_03: He's into it and like. I'm a mystic kind of.
[08:50-08:51] SPEAKER_05: Hi.
[08:53-08:54] SPEAKER_03: On the left.
[08:56-08:57] UNKNOWN: Got it.
[09:06-09:13] SPEAKER_06: Whatever came up the deal with the district distribution like ladies or something like
[09:13-09:15] SPEAKER_00: that. Yeah. Nothing.
[09:15-09:15] UNKNOWN: I
[09:15-09:17] SPEAKER_00: was kind of waiting until we got together to talk about it. But
[09:17-09:20] SPEAKER_07: do you know about it?
[09:22-09:27] SPEAKER_00: My buddy works for. It's Campbell's.
[09:28-09:28] UNKNOWN: They
[09:28-09:53] SPEAKER_00: own the Pepper's farm. And so they have like all these snack chips and like all kinds of different whatever. Yeah. And it's just a distribution. And so you can buy. So the way I was like telling him about it's basically like LDF just has like. Nickel or whatever and they just won the bid to their route to their local. Yeah. And this guy has a route for sale in like the Claremore Pryor and Owasso area.
[09:53-09:54] SPEAKER_02: I think FedEx does that.
[09:54-09:55] UNKNOWN: Like you
[09:55-09:57] SPEAKER_02: can buy a route. That's what
[09:57-10:11] SPEAKER_00: I thought. It's like similar to Amazon. Yeah. And I don't know how that works. But and apparently the it's not a multimillion dollar one. Yeah. But the smaller ones that this size kind of go up pretty often. Yeah. And it's just like people retiring or moving and stuff.
[10:12-10:12] UNKNOWN: But
[10:12-10:17] SPEAKER_00: it's like one hundred and eighty grand. And apparently they'll finance it for you. And you put down a down payment.
[10:17-10:18] SPEAKER_02: Yeah.
[10:18-10:18] UNKNOWN: And
[10:18-10:18] SPEAKER_02: then
[10:18-10:42] SPEAKER_00: you make your own things. I never did do like a follow up meeting or get any specifics on it. My buddy just told me about it. And basically his job is he works directly for Campbell's. So he's a rep for all the distributors. So he goes into research and does the sales and crap like we're going to in cap. Let's do all that. He's doing what Harley's doing kind of. Yeah. Basically that. And then the distributor like it's getting orders and
[10:42-10:42] UNKNOWN: say
[10:42-10:53] SPEAKER_00: hey deliver all this stuff over here. And they have they warehouse everything for you and all that. You just pick up and you're basically in charge of getting orders. Make sure orders placed on time. And make sure the shelves are stocked. Yeah.
[10:54-10:54] UNKNOWN: But
[10:54-11:10] SPEAKER_00: it's basically like what I was thinking is that's just buying a job. And you can scale it like there's upside. But even if it didn't. Yeah. You're kind of yearly like you have numbers from those dudes. I don't. So I do know that the number of a hundred and it's a hundred and
[11:10-11:10] UNKNOWN: ninety
[11:10-11:21] SPEAKER_00: two something. Yeah. For the route. That's like calculated from something. That's based on. Yeah. Because the number is so like specific. It's really something times two or whatever. Times three. Right.
[11:21-11:21] UNKNOWN: If
[11:21-11:21] SPEAKER_00: it was three
[11:21-11:26] SPEAKER_02: it's like sixty five grand or something like that. Right. Times two you're talking about like just under a hundred. And
[11:26-11:38] SPEAKER_00: he said so there's one of his big customers has sixteen routes in Oklahoma City. Or it's just north of Oklahoma City. He said there's like fifty two routes in Oklahoma City. That are each individually owned. Some of the bigger guys.
[11:38-11:38] UNKNOWN: This
[11:38-11:45] SPEAKER_00: dude owns like fifteen or sixteen. And he's pulling in like eight hundred nine hundred a year. So.
[11:45-11:45] UNKNOWN: You
[11:45-12:01] SPEAKER_00: can definitely scale it. Right. But even just the one route. And the commission is unlimited. So if you own a route. If you own this route. And then they built this resource here. Yeah. You just automatically get this resource. You get all the sales going. Yeah. So you can do some strategy.
[12:01-12:01] SPEAKER_02: Right.
[12:02-12:06] SPEAKER_06: Right. So you own the area. Right. And so any store that you
[12:06-12:06] UNKNOWN: know
[12:06-12:06] SPEAKER_06: you
[12:06-12:08] SPEAKER_07: distribute to that has that product.
[12:08-12:15] SPEAKER_00: You just inherently have it. Yeah. And there's no competitors in the area. No nothing. And. That's interesting for sure.
[12:15-12:19] SPEAKER_02: Yeah. Yeah.
[12:19-12:19] UNKNOWN: And
[12:19-12:22] SPEAKER_02: like how quick do you recoup. Or how quick can you pay off
[12:22-12:30] SPEAKER_00: that loan. And all that stuff. And the financing thing I didn't even see until. I called Daniel as soon as he called me about it. Right. Just like get it off my brain. And then.
[12:31-12:31] UNKNOWN: As
[12:31-12:44] SPEAKER_00: I was kind of reading at the bottom of the deal. The listing for it. It says. Campbell's will finance if we have to have some portion of the down payment. Yeah. And I'm sure that's based on some kind of credit. Oh yeah. Worthiness or whatever. But. That's cool.
[12:44-12:45] SPEAKER_06: Why is the guy selling it?
[12:46-12:49] SPEAKER_00: Apparently he's moving. Oh okay. And so.
[12:49-12:49] UNKNOWN: Take
[12:49-13:16] SPEAKER_00: your route with you. Yeah I emailed the guy. And. I didn't get an email back. But apparently. The. The guy that I emailed isn't the owner. He's like a. Rep for Campbell's. He's like brokering. They basically when the route goes for sale. Campbell's handles the sale of it. So my buddy was like well. If you guys are interested let me know until. Set up an email or meeting or something. Yeah. At least to get more specific numbers on it.
[13:18-13:19] SPEAKER_08: Hey. That
[13:19-13:22] SPEAKER_02: would be interesting. Cause it's
[13:22-13:28] SPEAKER_06: legit like he's just moving out. How does the distribution work? Like you have to own your own truck and stuff like that?
[13:28-13:28] UNKNOWN: No
[13:28-13:41] SPEAKER_00: that's what. So some people have like little enclosed trailers. Or a box truck. Anything like that. And then you just go pick it up. See if your route is small enough. You can have like a big service van. But. Get full self
[13:41-13:45] SPEAKER_02: driving. We'll buy a couple of Teslas. Yeah. The beach is delivered.
[13:50-13:50] SPEAKER_01: What are you
[13:50-13:50] UNKNOWN: eating?
[13:51-13:52] SPEAKER_01: Mac and cheese?
[13:54-13:55] SPEAKER_06: How's muddy toes going?
[13:57-14:02] SPEAKER_00: It's okay. So making a big change. I'm just gonna. I'm just wholesale on everything.
[14:03-14:03] UNKNOWN: And
[14:03-14:04] SPEAKER_00: I'm going
[14:04-14:04] UNKNOWN: to.
[14:04-14:23] SPEAKER_00: We talked about doing that. Continue to sell on Amazon. But. I'm separating them. Like I'm gonna buy a half pallet of balls. Like 9 ,000 balls. And break it down and sell it. And I won't buy more balls until that sells. And if everything turns upside down. And I can't sell another ball on Amazon. I lost 9 ,000 balls.
[14:23-14:23] UNKNOWN: Not
[14:23-14:42] SPEAKER_00: everything. And I'm wholesale on everything else. Just to make it a math problem of. I need to sell this many balls to make this much money. And my main thing is to pay off like the additional. What I can't get out of my house. Paying off the rest of that. Equals 400 ,000 balls. Or whatever the number is.
[14:43-14:43] UNKNOWN: And
[14:43-14:54] SPEAKER_00: just get it down to that like spreadsheet entry. This is what I did. Okay. Here's where you are. Yep. Like the diver started last week. And I literally have on the sheet. Like this is how many balls they got in. And I have to sell two pallets at a time. Or
[14:54-14:54] UNKNOWN: I
[14:54-14:59] SPEAKER_00: have to ship two pallets at a time. So I'm just tracking as they sell. And that's it. Like pretty.
[14:59-14:59] SPEAKER_02: Who
[14:59-15:11] SPEAKER_00: are you wholesale to? It's just. Just kid actually. He lives down in Texas. But he's a broker. And apparently he's got some overseas buyers that. I was like. Bro I don't care where you sell. That's not my problem.
[15:12-15:12] UNKNOWN: So
[15:12-15:13] SPEAKER_00: he's only paying 28 cents a ball.
[15:14-15:14] UNKNOWN: But
[15:14-15:17] SPEAKER_00: I'm still. Right now. It's by the pallet load. I
[15:17-15:17] UNKNOWN: mean.
[15:17-15:25] SPEAKER_00: Yeah. The average cost is like 13 cents a ball. So you're making 15 this cents. And all I'm doing is I run it through the washer. And I pull ranging cuts.
[15:25-15:29] SPEAKER_02: And if Amazon still squeezing you like they were. That's probably not that much
[15:29-15:40] SPEAKER_00: worse. Like full scope. Like India last year. Selling everything on Amazon was like 32 cents gross. Yeah. With all the overhead. All the additional work. And
[15:40-15:40] UNKNOWN: like
[15:40-15:42] SPEAKER_00: all the bags and all. And so what are you getting
[15:42-15:43] SPEAKER_06: from him?
[15:43-15:44] SPEAKER_00: 28. Yeah.
[15:45-15:46] SPEAKER_06: Easy. And shipping them in like big
[15:46-15:47] SPEAKER_02: white sacks or something like that.
[15:48-15:53] SPEAKER_00: Yeah. And those white sacks I'm getting for 56 cents a piece. 600 balls in there.
[15:53-15:53] SPEAKER_02: And.
[15:54-15:54] UNKNOWN: So
[15:54-16:01] SPEAKER_02: 600 at calling 50 sacks even is six. And those bags cost like 70 cents. Yeah. Exactly.
[16:02-16:05] SPEAKER_00: But yeah. It's. So I'm doing that. And then I'm
[16:05-16:05] UNKNOWN: going
[16:05-16:08] SPEAKER_00: to. My end game is like selling two courses.
[16:08-16:08] UNKNOWN: And
[16:08-16:12] SPEAKER_00: like making that. And like direct on the website. Let them
[16:12-16:13] SPEAKER_02: organically grow.
[16:13-16:21] SPEAKER_00: Yeah. And that would give me time. Like when I buy that half pallet. I'll clean all of that. Break down and have inventory for the website. And then everything else go to Amazon.
[16:22-16:22] UNKNOWN: You
[16:22-16:23] SPEAKER_06: see the websites active.
[16:24-16:25] SPEAKER_00: It will be in like a couple days. Do
[16:25-16:25] UNKNOWN: you
[16:25-16:26] SPEAKER_06: get any sales?
[16:26-16:34] SPEAKER_00: It hasn't. We haven't even launched it yet. We're going to try to do it by the masters. And so Josh my brother and myself and Taylor have been working on it.
[16:35-16:36] UNKNOWN: And
[16:36-16:41] SPEAKER_00: I'm probably a little bit too anal with it. We probably could have launched it. But I was like. So it's perfect. I want to get it right.
[16:42-16:52] SPEAKER_02: Yeah. Make it perfect. Yeah. And don't like that's the whole. Just going so don't need courses and don't need the website. And then slowly over time it'll be like oh shit. We're selling all that. Right. Yes.
[16:52-17:08] SPEAKER_00: And I'm hoping. There is. Like last year we got like four hundred and twelve thousand balls out of the water. We got three hundred and fifty out of fifteen courses. So if I lost everything else except these 15 courses. Yeah.
[17:08-17:08] UNKNOWN: I
[17:08-17:10] SPEAKER_00: can still maintain three
[17:10-17:10] UNKNOWN: hundred
[17:10-17:13] SPEAKER_00: fifty thousand and make them fifteen cents on them puts me at close to sixty.
[17:14-17:19] SPEAKER_02: And you probably could have got another fifty off of those fifteen if they were the only ones you had. For sure. Like
[17:19-17:26] SPEAKER_00: if we worked on the way we work these. Yeah. There's two courses in Oklahoma City that other people work. And just some stuff like
[17:26-17:31] SPEAKER_02: that. So are most of them those fifteen close? I assume it's the big seven. They're all close.
[17:31-17:32] SPEAKER_00: It's like the big seven.
[17:32-17:32] UNKNOWN: Fire
[17:32-17:36] SPEAKER_00: Lakes we got fifty two thousand balls from last year. Something crazy.
[17:37-17:43] SPEAKER_02: It's just is it cheap? I don't know. I'm thinking of the shit place up in Kansas. Oh. Fire Lakes is a banger. Yeah. Four
[17:43-17:43] UNKNOWN: bucks
[17:43-17:44] SPEAKER_02: is like twenty five dollars.
[17:45-17:58] SPEAKER_00: Fire Lakes it's a resort. Yeah. In Shawnee. So they just every time I'm up there they have a tournament going on. They're just constant tournament play. And so it's like shitty golfers fundraisers. It's like a bunch of me's. That's literally what I
[17:58-17:58] UNKNOWN: was
[17:58-17:58] SPEAKER_00: thinking. It's
[17:58-18:01] SPEAKER_06: like I'm going to get some nice balls but then I'm going to lose them all.
[18:03-18:07] SPEAKER_00: Yeah. So. But yeah. So just maintaining those. It is actually.
[18:07-18:07] UNKNOWN: Like
[18:07-18:26] SPEAKER_00: ideally we keep everyone that we have a relationship with. But if all else fails that for me is like sustainable. Those twelve courses. That three hundred fifty. And I can have a pretty good idea in my head. Like I can almost put it on a spreadsheet of it'll be able to pay off this amount of money in this time. Right. Or whatever. And
[18:26-18:29] SPEAKER_02: now under who that dude's
[18:29-18:29] UNKNOWN: foreign
[18:29-18:32] SPEAKER_02: contacts are. Dude they got to be paying crazy amounts for him to be
[18:32-18:32] UNKNOWN: shipping
[18:32-18:33] SPEAKER_02: to
[18:33-18:34] SPEAKER_05: across the water.
[18:35-18:44] SPEAKER_02: Yeah. Yeah. But I mean it's weird because like who's buying the hundred sex at that volume. So across the.
[18:45-19:13] SPEAKER_00: I've heard that different bubbles and balls told me he had a guy hit him up one time and said I'll take the worst balls you got all of them. Really. And he goes but I can only pay eight cents. And Jimmy's like I can't do that. Yeah. And then whenever he bought out the company. Whenever he bought out the company he's still getting the balls. Him and the other guy Clint. Yeah. So it cost him zero. He was like at that rate I'm still making a sense of all the balls we
[19:13-19:13] UNKNOWN: got.
[19:13-19:19] SPEAKER_00: But that dude said he ships them overseas by the container. Yeah. What the
[19:19-19:38] SPEAKER_02: heck. So what they're using in Ukraine now. Maybe. Maybe use them from like freaking ammo or something like that. Drones are just blasting those things out. That's cool. Yeah. She needs to do something. They keep running over this table for some reason.
[19:43-19:53] SPEAKER_00: But yeah he committed to buying five hundred thousand this year at that price point. So. That's all. And I won't be able to get five hundred out of the water. I'll get at least three feet whatever. Yeah. But you can buy
[19:53-19:56] SPEAKER_02: anything less than twenty eight cents. Yeah. That's
[19:56-19:56] UNKNOWN: passed
[19:56-20:06] SPEAKER_02: it on to him. Thirty thousand balls. Yeah. Yeah. If you can find somebody that's willing to get rid of them for twenty or twenty five even. Right. Yeah. I'll take a couple cents here and there.
[20:07-20:07] UNKNOWN: It ain't
[20:07-20:08] SPEAKER_02: hurting anybody's feelings.
[20:11-20:12] SPEAKER_08: What
[20:12-20:35] SPEAKER_02: happened? So. I want to start doing something semi -regular and not even just specifically bad. Like bring Harley in if he wants to come and like see Jay or whoever and start to execute on like that. And really just get like the thing that's in my head is the Saturday meetings we used to have. Like those things were productive and obviously we
[20:35-20:35] UNKNOWN: got
[20:35-20:42] SPEAKER_02: had to do other stuff. But if we could get back to just like meetings of the minds type situations just on a regular basis. Yeah.
[20:42-20:42] UNKNOWN: We
[20:42-20:43] SPEAKER_01: do. Yeah.
[20:44-20:50] SPEAKER_00: I was telling Taylor literally like I just missed that. Because even though it's like the collaborative it's good for me mentally. Right. To have
[20:50-20:58] SPEAKER_02: that. Yeah. That's what like I think this with that transcription then we can really like start to even be able to take that away with us.
[20:59-20:59] UNKNOWN: And
[20:59-21:06] SPEAKER_02: like what did we talk about. Right. And whatever's bouncing around your head like oh man what did Alex say about this thing. Right. And yeah I
[21:06-21:06] UNKNOWN: think
[21:06-21:08] SPEAKER_02: if we. I love you buddy. See you
[21:08-21:08] UNKNOWN: later. I'll
[21:08-21:19] SPEAKER_02: see you tomorrow. I think if we got to a place if we had if we expanded the numbers a little bit we could have a regular thing where there's always like three or four people at least. And then occasionally we get the full group.
[21:20-21:20] UNKNOWN: But
[21:20-21:33] SPEAKER_02: like that's I think an ongoing thing where even if we're not like trying to come up with business ideas or whatever it's like we talked about having something that can like a 20 or 30 minute topic. See you tomorrow. See you KK.
[21:35-21:37] SPEAKER_03: See you. See you.
[21:37-21:37] UNKNOWN: See
[21:37-21:37] SPEAKER_03: you. Bye.
[21:38-21:57] SPEAKER_02: Like 20 or 30 minute topic that can get you through the first like oh what do we talk about. It's not like well let's hang out and play pool and see if something happens because that just turns into hanging out and playing pool and then we leave. Right. And so if we could start to get something semi -regular then at the very least we would have a pretty big database of stuff we've talked about. Right.
[21:57-21:57] UNKNOWN: And
[21:57-22:14] SPEAKER_02: it would be able to go like hey you may not realize this but every time you get together you talk about this thing for like 30 seconds and then move away from it. It's like oh shit that's the thing. Right. And so I think if we can start getting some regular shit going on like that who knows maybe we'll just be way better people at the end of it. Yeah I was
[22:14-22:14] UNKNOWN: going
[22:14-22:15] SPEAKER_02: to
[22:15-22:23] SPEAKER_00: say at the end it works on my brain to where whatever any of us are doing individually makes us better at that or it could. Yeah. And take gems away from that.
[22:25-22:25] UNKNOWN: But
[22:25-22:30] SPEAKER_00: the collaborative stuff is definitely like good for me mentally even and I do I'd like to keep that. I like to start at
[22:30-22:30] UNKNOWN: that.
[22:30-22:32] SPEAKER_00: And I think there's a decent
[22:32-22:33] SPEAKER_02: chance some business stuff will come out of
[22:33-22:33] UNKNOWN: it.
[22:33-22:57] SPEAKER_02: Some of it will come out of it. Right. But I think there's even a value to it not being the target. It's like you have your best ideas in the shower when you're on a walk or something not trying to come up with great ideas and that's when they come. And so like we're all in a different place and we can like not require it to be like oh my gosh we need Muddy Toes to make this much this year or fuck. Yeah.
[22:58-23:16] SPEAKER_00: I talked about that with Harley like being able to back into Vatican or whatever from a position where it's like I'm door dashing 12 hours a day. Right. And if this thing can't pay me in like five months I'm shit out of luck. Yeah. It's not like it's not feasible. Yeah. And now it alleviates the pressure from that.
[23:17-23:17] UNKNOWN: And
[23:17-23:34] SPEAKER_00: like I would like to. So I've met with Grant several times and of that money that I've had 50 of it being grants he doesn't want that money back. He wants you to do something else. He's like I just want that to stay there and I want 500 bucks a month. I'm going to own some retarded shit. He's
[23:34-23:34] UNKNOWN: like
[23:34-23:37] SPEAKER_00: I just don't want it.
[23:37-23:37] UNKNOWN: And
[23:37-23:43] SPEAKER_00: so he is he's not even with the SRS anymore. Oh yeah. He's going to cash
[23:43-23:43] SPEAKER_02: out.
[23:43-24:01] SPEAKER_00: Yeah. He cashed out on the buyout and he was in Fort Smith and he has since moved on. He's still kind of floating around doing whatever. He sold a couple roofs here and there. He's like he makes like 12 grand on the roof that he sells. So he's like I just sell a couple of those and keep me going. Once a month
[24:01-24:02] SPEAKER_02: you're
[24:02-24:02] UNKNOWN: hitting
[24:02-24:03] SPEAKER_02: 150. Yeah.
[24:04-24:07] SPEAKER_00: But he said like he just doesn't want that money back.
[24:09-24:09] UNKNOWN: So
[24:09-24:15] SPEAKER_00: if once I get to a place where I'm able to pay that then ideally you know
[24:15-24:15] UNKNOWN: I
[24:15-24:27] SPEAKER_00: don't know. It's right back there. Yeah. It's where we're at like what the original intention of it was. Right. And instead of that 50 having to produce salaries it's just there to like. To do something. What it's supposed to be. What we wanted it to do originally.
[24:27-24:28] SPEAKER_06: It just took a few years.
[24:28-24:35] SPEAKER_00: Yeah. And like I've told my brother Josh this because he's kind of in a weird place a little bit.
[24:36-24:36] UNKNOWN: But
[24:36-24:52] SPEAKER_00: I was like dude if you're he's working at UPS in the mornings. I was like I should if I could have done it backwards and had the job for a couple of years and put myself in a position to take that leap. Right. That leap I might have been a little more successful on the first jump. Right. But I mean here we are nonetheless.
[24:53-24:53] UNKNOWN: But
[24:53-24:59] SPEAKER_00: you know now being able to like kind of go back to a 180. 100 percent. Yeah.
[24:59-25:03] SPEAKER_02: And by that big one you were thinking about. Yeah. Yeah.
[25:05-25:09] SPEAKER_06: So you guys have talked a little bit about agents right. Do you understand.
[25:10-25:10] UNKNOWN: Do you
[25:10-25:10] SPEAKER_06: know what agents
[25:10-25:10] SPEAKER_00: are.
[25:11-25:15] SPEAKER_06: I'm interested in describing it to you so you can help us think.
[25:16-25:22] SPEAKER_00: Yeah I would love to. I don't think that I know anything. I think I know a little bit but just assume I know nothing about it.
[25:22-26:37] SPEAKER_06: So I'm going to start with an application. Like so just that word you know me like so some sort of a computer using computers to solve some problem or do something for you. Right. So it's as simple as that. And so an agent application is an application that consists of agents. And so the way to think of an agent is from a computer perspective is a computer that can or a portion of the program that can do some task very repetitively. And even it's relatively complex. So the reason why it's an agent or brings in a eyes because they can think a little bit. Right. So rather than just saying hey I'm going to make a portion of the program you know take go look at a database look up this whatever look up something out of database and just return it. That's just very repetitive and it's not very thinking at all. It could be something like hey I want you to every time you know somebody from Canada buys something or sends us an email get send me the name of that person. That's something that is just not super complex but you know I like to think I've used Mila as an example but maybe something
[26:37-26:42] SPEAKER_02: like get their address and see if we have any customers that live close by them. Right.
[26:42-26:42] UNKNOWN: Or
[26:42-27:25] SPEAKER_02: something like that. Like it's a level up because just grabbing their name you could do with code. Right. But like that is a good difference of like that's a what you described as a function. It's like every time it comes in take that send it. Don't need to think about it at all. But if you gave them the tool of Google Maps and access to Gemini you could say that other thing that's a little more vague. And then it really jumps in when you go like I mean you could get to a place where you go like look up their address and see if we have anybody near them and also like check out their Facebook see what they're into like these types of things. Do we have anybody on staff that might relate well to those people and like that type of shit and like plug people like salespeople with the right customers and things like
[27:25-27:29] SPEAKER_06: that. And you can do these little tasks like that are like little assignments.
[27:29-27:29] UNKNOWN: It
[27:29-28:11] SPEAKER_06: is the way to almost think of it is like little personas or somebody like hey one example is like we did an example of this in the course of like a like a studio or something like that. And so what there was a writer so you can have this group of agents one of them is a writer one of them is like a proofreader one of them is the director of one of them. And they have these different personas and you give them these not a task. It's not really a task. It was really a persona is like hey in this system you your job is to proofread. Every time somebody produces a document gives it to you you just look over it and update it and give it back.
[28:11-28:48] SPEAKER_02: You might have like a manager and all of them have what I've seen there's like a property inside of every single one that is allowed delegation. So if that's true they can go like you get asked a question you can go you know what I think Daniel's better for this send it to him. And so the machines in the background can go like I think you got this actually and the director can then be like yep and then take a full one and then you can have a next one that's like if we're making a movie here the director is like good I like it send it to the screeners. They're going to watch it and be like not not ready yet send it back go through the whole process.
[28:48-28:50] SPEAKER_06: Right. And so they can do these tasks. That's
[28:50-28:50] UNKNOWN: before
[28:50-29:01] SPEAKER_06: any human intervention. Like independently like they're there this little independent agent and you can give them tools like so it can be a tool could be anything from like hey search the web like you're allowed to like your tool is the internet.
[29:02-29:02] UNKNOWN: If
[29:02-29:52] SPEAKER_06: you need to solve my problem like if I say hey I want you to do whatever the task before is like hey if there's anything you can anything I asked you to do one of your tools available to you is the internet search you can go search the internet do whatever get information you want and use it to help you. So it's almost like you know probably I think Mila's too young but like a task you would give to you know a person that says hey I want you to do this thing and every time use whatever tools whatever but do the thing and you can give it in plain language in English. Like so you know this is not code we're talking about doing this like literally I can describe your job function and you do that and if every time you do that then hand it to this person then when they get done they're going to hand it to this person and if they veto it it's going to go back to this whatever and you can do it. Basically anything
[29:52-30:06] SPEAKER_02: that happens on a computer you can create a thing that can do it with a small amount of logic that's not like you don't have to define exactly right every step for it to do you like here's the end goal and here's all your teammates make this end goal happen.
[30:06-30:49] SPEAKER_06: And so that is typically applied or at least right now our perspective or the our not ours but the general the perspective is for complex workflows where you have to go through several steps and there's not a consistent path it's not just direct it's like well if this happens then well you got to do this and if this happens and it takes some logic or thought to get through it. So complex workflows or like complex problems things like that so rather than trying to just say hey look up the best answer to this is like well you guys process it and think about it just like we would do a group and so those are the types of problems that's generally suited well for but they're very new.
[30:49-30:49] UNKNOWN: So if you
[30:49-31:20] SPEAKER_02: were trying to solve a problem using AI like chat GPT it can basically do that in the background it can be it can know the goal at hand and you don't have to go okay but what about this but what about this it's going to do that. Right like I use cursor for coding right now and it's basically same as the old ones but like it's where you write code but it's got AI in it and you can see the agents talking to each other whenever you ask them to do something and it's like you're going back and forth and then it's like okay here's what I'm going to do and it spits it out and it does all the code for you.
[31:20-31:21] SPEAKER_06: Yeah they may even be those
[31:21-31:22] SPEAKER_02: are agents
[31:22-31:30] SPEAKER_06: like so yeah anything like that where you would like need a group of people to that would help solve a problem especially if they're
[31:30-31:30] UNKNOWN: specialized
[31:30-31:56] SPEAKER_06: interests or you know people inside of each group like even like hey I need an engineer a architect and manager whatever like that you that you can imagine if you put those three together what types of problems you can solve. But now they abstract another layer is like I can put any five people I can put any number of personas together that are experts at their thing and put them together and give them this tax together
[31:56-32:05] SPEAKER_02: so the plan is to build an agent that's good at picking teams that has access to all the agents so it picks which agents it needs and goes and tackles the problem. Yeah
[32:05-32:34] SPEAKER_06: so one of the people is the captain right so that's one of their strategies for one of the application we're going to make is create a whole bank of agents maybe call it 100 whatever but for this problem one of the agents is trained on okay well given the problem I think I need this person this person this person this person and you put the team together and then move forward. Right so you can do any like is unlimited like the creativity you can have to like create the agents and you
[32:34-32:34] UNKNOWN: know
[32:34-32:54] SPEAKER_06: teach them how to solve the problem but given that I don't know I don't know not necessarily trying to put you on the spot but thinking through like well what types of problems which is can you solve with that because this has never been possible before without lots and lots of developers and computing power right whereas we can build this in an afternoon it really is like build whatever.
[32:55-34:04] SPEAKER_02: Yeah so the current plan like we I told you about the pull shed one that would output the steps and the problem with that one was we had already done all of that and so then we were going to build this thing use it once and be done basically it would still be useful to be in the bank of agents but we switched to this other one because we think we'll actually use it and worst case I'll just listen to a new podcast every morning about some like deeply researched shit talked about getting like 85 % of a Dan Carlin podcast but being able to spit them out once a week as opposed to like once a year. And so I think that's like worst case is you just build something that you know you're going to use a lot and get a lot of value out of and so one thought I had for you is if we could get access to the like an Amazon ads agent that could optimize through that which you're not necessarily doing it at that scale anymore but like if you could truly have something plugged into like sentiment analysis and things other people are trying plugged into a few products of like which products are selling and doing all this stuff. Right. And basically have a smart version of that helium 10 or whatever like that's actively thinking and trying to figure out his own strategies as as every day goes by.
[34:04-34:04] UNKNOWN: It
[34:04-34:37] SPEAKER_06: may even be thinking about it like what you would do like how would you optimize your ad strategies like well first I go research this and I whatever conclusion I come to this then I go look at this thing when I go do this then I go do this and I kind of have to interpret what is excellent that those things is like we'll teach it how what you would like teaching what you would do first look at this thing and what you're trying to do and literally describe it in words and then it will do it and then when you're done give it to this thing and you go look at this and describe it in words what you're trying to do and it will do it.
[34:37-34:37] UNKNOWN: I
[34:37-34:38] SPEAKER_06: think the lawyer in your
[34:38-34:57] SPEAKER_02: pocket to like start it whenever you get pulled over and be like oh hello officer that type of thing I think is possible like in that place you have to have some serious disclaimers like obviously I'm not a lawyer. This is a toy and it's for entertainment only. I think that type of thing becomes possible.
[34:59-35:13] SPEAKER_06: Yeah just wanted to expose you to that just so if you're in the shower thinking man or you're coming across some problem that's like man I really wish we could build something that would just do this like you can effectively automate anything
[35:13-35:15] SPEAKER_02: that you can do on a computer. Yeah pretty much be done by you.
[35:15-35:47] SPEAKER_00: Yeah it would be cool if one of them could just I mean it can't because it can do anything. Right. But basically just analyze someone's workflow and then kind of gives you a summary of that and if that person is so I'm just thinking so like my buddy Jacob who runs the LED electric he just runs it's just a little electric they sell electrical parts prior but it's him and then a sales guy in the front so I don't really know what his process looks like. Right. But if that agent could just monitor his process for a set amount of time.
[35:48-35:48] UNKNOWN: I
[35:48-35:49] SPEAKER_00: mean there's over the course of a week or whatever
[35:49-35:57] SPEAKER_02: you probably build up to if we wanted to add video like literally Hey Rock this body cam for a week and we'll capture all of it feed it to the agent.
[35:57-35:57] SPEAKER_00: Yeah,
[35:57-35:57] UNKNOWN: capture
[35:57-36:27] SPEAKER_00: workflow and then if the template could even just ask like what what is what what are you doing. Yeah. What's the most. Yeah. Exactly. And then he can just type in plain dumb English or whatever. Exactly. And then I guess the most automated version of that is that agent then just says okay here's an application for this you don't have to do it anymore. Right. But even a step in between that is that agent gives us a summary of his workflows. We go hey here's what we can build. Build an agent to automate that. That would be sick.
[36:27-36:27] UNKNOWN: Like
[36:27-36:34] SPEAKER_02: if we could. We don't need you to know what the annoying things because one of the hard things is getting people to tell you what they need.
[36:34-36:34] UNKNOWN: Right.
[36:34-36:35] SPEAKER_02: Right. Right.
[36:35-36:36] SPEAKER_00: Because they don't
[36:36-36:36] SPEAKER_06: know.
[36:36-36:43] SPEAKER_00: You're talking about doing that thing with Tina. I want to talk about shadowing her. Right. We don't even know. I don't know what we have.
[36:43-36:43] UNKNOWN: I
[36:43-36:44] SPEAKER_00: don't know what
[36:44-36:44] UNKNOWN: a
[36:44-36:44] SPEAKER_00: broker
[36:44-36:48] SPEAKER_06: or whatever real estate agent does. I don't really know what you do.
[36:48-36:48] UNKNOWN: Right.
[36:48-37:00] SPEAKER_00: Yeah. So if we could just tail them with this digital like monitor. Exactly. And it's just like anytime they start a workflow it just records whatever they're doing. Yeah.
[37:00-37:00] UNKNOWN: And
[37:00-37:01] SPEAKER_00: I like the
[37:01-37:11] SPEAKER_02: idea of like even if at the end of the day like hey you're helping us develop this thing at the end of the day it might ask you like hey right here on this video that it re -shows you like what were you doing here.
[37:12-37:12] UNKNOWN: And
[37:12-37:13] SPEAKER_02: so even if it's not in the moment.
[37:14-37:14] UNKNOWN: Yeah.
[37:17-37:34] SPEAKER_06: And one of the things that changes subjects just a little bit and we can come back to agents but we definitely like with AI based like tools for coding and development software development we could definitely make a ball sorting machine. Yeah. No question.
[37:34-37:34] UNKNOWN: Technology
[37:34-37:35] SPEAKER_06: size. Like
[37:35-37:35] UNKNOWN: I
[37:35-37:43] SPEAKER_06: think it's probably 10x like our ability to write software and practice. He's written a bunch of applications. Like computer vision in general.
[37:43-37:43] UNKNOWN: It
[37:43-37:51] SPEAKER_02: can like actually see pictures now and stuff like that. It's not like it was. There's no question that we built.
[37:52-37:57] SPEAKER_00: Like durability. I mean your ability. But like the technology. Yeah. Like the technology is jumped like
[37:57-38:12] SPEAKER_02: the LLM. Like I don't know if you've used chat GPT like live talking to live. But like you can literally go like I read it all my parents light switches like OK. Which one of these wires goes on which screw. And it's like oh yeah that one goes on the oh
[38:12-38:12] UNKNOWN: yeah.
[38:12-38:20] SPEAKER_06: I guess very different now like the tools and capabilities are like through the roof like and it just happened in like a year.
[38:20-38:40] SPEAKER_02: Yeah. Google showed up to the game for real. Yeah. Like I don't know if you saw video is on it. Yeah. So my dream for a while now since I became is that someone's going to just remake Game of Thrones with it using the same like looking actors and all this. Like it's going to look like the exact same people but they're going to fix it with AI. And that's about to happen. So you can
[38:40-38:52] SPEAKER_06: load. Pictures and you know pictures of the characters that you want like pictures of the locations that you want or whatever. And it will then hold those consistent and you're describing words.
[38:53-38:53] UNKNOWN: What
[38:53-39:06] SPEAKER_06: you say I want to see a low angle camera view with the sunset in the background and you know slowly painting from left to right of the characters having a conversation about this. And it generates the scene and
[39:06-39:14] SPEAKER_02: then if you incorporate any level of like video editing together and all that and you can give it a script and they can talk to it. Right. It's not just random video.
[39:14-39:14] UNKNOWN: And it will say
[39:14-39:14] SPEAKER_02: those
[39:14-39:30] SPEAKER_06: things and it looks great and it looks like you can still tell that it's AI but it's like you gotta be looking for it too. That's the other thing. And then you can just tag the scenes together like so people like what I sent you is them making like a full like a 10 minute movie. Yeah there's like this
[39:30-39:33] SPEAKER_02: robot walking around and in that version I watched
[39:33-39:33] UNKNOWN: the
[39:33-39:41] SPEAKER_02: very beginning of it like somebody is controlling it but it's just happening like so it's making the movement was there but like in the in the scene.
[39:42-39:42] UNKNOWN: It's
[39:42-39:42] SPEAKER_02: crazy
[39:42-39:49] SPEAKER_06: that the reason that they did that is because they were testing another software that was always they use three different software packages to compare them.
[39:49-39:49] UNKNOWN: Yeah, I
[39:49-39:51] SPEAKER_06: get it. But they said that video
[39:51-39:53] SPEAKER_02: just use video. Yeah that's where we're getting.
[39:54-39:54] UNKNOWN: Yeah.
[39:54-40:06] SPEAKER_02: It's like coding. So you can do all this stuff but like just use the AI. It's gotten really good and you need to know like how to spot when it's wrong. Right. But that's really the magic of it right now. And I
[40:06-40:33] SPEAKER_06: think the thing that it does for groups like us is it abstracts away the technical part To where you can just out think everybody that hey I if you have a great exactly you be creative that I can create this system of agents and just teach it how to like You know how to creatively solve a problem like okay You do this and like literally describe it in English and words what your job is and you don't have to know how to code Like give it a just word description Hollywood's
[40:33-40:41] SPEAKER_02: dead yeah like just from this Place of like the creatives are just gonna be able to skip all the other bullshit Go make their thing right like if you have a creative story like you
[40:41-40:52] SPEAKER_06: don't need to have the money You don't need to have a technology sold you just have to make it make it and you can literally in your Basement make a movie. Yeah, somebody's gonna
[40:52-41:02] SPEAKER_02: make a movie for like a hundred million dollars And there's gonna be a few things wrong with it and some nerds gonna go like hey, I made one too check it out Like 20 bucks right and that's gonna be the end of that business
[41:02-41:11] SPEAKER_06: Right and we were even talking like from like, you know in Hollywood or whatever like trying to like get your script sold or whatever It's like you don't need to like right make the movie It
[41:11-41:11] SPEAKER_02: was good make
[41:11-41:15] SPEAKER_06: a make a cheap version of it. You make the whole thing like here's the movie
[41:15-41:23] SPEAKER_00: Yeah, here it is. There's a link to it Instead of like Warner Brothers is just an AI studio, right a team of some
[41:23-41:30] SPEAKER_02: a little key the agents We're building our little mini studio It's gonna ultimately we talk about a topic and it spits out a pop cast on the other end.
[41:30-41:30] UNKNOWN: Yeah.
[41:30-41:36] SPEAKER_06: Yeah I mean and that's here. It's not like hey one of these days this is gonna be here, right? It is it's here today.
[41:36-41:36] SPEAKER_02: They're
[41:36-41:36] UNKNOWN: gonna
[41:36-41:50] SPEAKER_02: be famous actors, but they're not gonna be real people Right gonna be like something that somebody created and they got some swing So somebody was like hey, can I can I use that? That's gonna be the next generation but I made the last one exactly
[41:50-41:55] SPEAKER_00: Yeah, I'm pretty sold that a lot of those guys are just creeps in order to get those positions anyways
[41:58-41:58] SPEAKER_02: Actors everywhere.
[41:58-42:39] SPEAKER_00: Yeah, that's why I think like you don't see those people out and about in public most of time It's because like they're weird. They're weird. Yeah, right. That's why Yeah, right. There's plenty of people they could do this job like and there's only a few of them And that's an industry where it's like Someone literally just picks you not you. Yeah, you're famous and rich now, right? So if you want that that's what he was doing That Doing the ball sorter Just think makes you think of the pool table thing Yeah if that camera could just hang from the light above or above the table or had some way to view the table and
[42:40-42:44] SPEAKER_02: If it was just like a pinhole camera too that you could put in almost any light over a table,
[42:44-42:54] SPEAKER_06: right? yeah, so the question for me for that one is How you get it power right which you can do battery operated I think and just and
[42:54-42:57] SPEAKER_02: becomes a thing but like the barb maintains everything how
[42:57-43:00] SPEAKER_06: you How you hang it slash how you put it up?
[43:00-43:00] UNKNOWN: But
[43:00-43:03] SPEAKER_06: I mean I think that that's so easy able to be over that
[43:03-43:16] SPEAKER_00: light that lights got power coming to it He's actually there's power in and that lights hanging there so if you just were able to fashion it to I mean it would need to be some kind of universal thing you could do But You can have options
[43:16-43:20] SPEAKER_02: like battery or this one battery requires you to go change the battery My
[43:20-43:24] SPEAKER_06: reservations about any of the software is gone, right? Yeah,
[43:24-43:24] UNKNOWN: you
[43:24-43:36] SPEAKER_06: can literally write Anything anything now like so as long as you we've just basically have to be creative I really feel like I believe is not solved. Sorry, it's all any problem
[43:36-43:47] SPEAKER_02: Like that's how that solves all the problems that we were dealing with is if you have power It's like well you bring your phone close with the app to release the balls, right? And there's just a mechanism back there
[43:47-44:01] SPEAKER_00: that's powered the camera the biggest thing that Like stump me was the any tone the games over Whenever they cue they know what game they're playing So they a ball is not on the table anymore or they're playing nine ball or whatever
[44:01-44:01] SPEAKER_02: on
[44:01-44:02] SPEAKER_00: the code can
[44:02-44:06] SPEAKER_02: know the content You can do that. It doesn't even need we don't even need the hard -to
[44:06-44:06] UNKNOWN: -find
[44:06-44:11] SPEAKER_02: it anymore. The eight balls gone It's like no that person it sunk it on a weird thing like right?
[44:11-44:23] SPEAKER_06: Yeah game over like and it just won't release the balls anymore Right because it knows Because it can know the rules of the game and you can program it Yeah, or make an agent that does it and it does it on the phone. It's like
[44:23-44:30] SPEAKER_02: literally watching it So there's no scenarios if it's ever happened in a pool game the agent can handle it Yeah, is
[44:30-44:47] SPEAKER_06: there that smart like it is just like you like you can see even the not just the ability to code the System but to have this conversation meaning I'm gonna take this recording back and say hey Let's talk about this. You know what we were talking about here is trying to
[44:47-44:47] UNKNOWN: create
[44:47-44:52] SPEAKER_06: and start talking about it and it will Start so it's another person in the room at all
[44:52-44:58] SPEAKER_02: times It's the most qualified person to make this design right and it's gonna step in it's on our team for free,
[44:58-45:09] SPEAKER_06: right? That's why we're doing this like because every everything we're talking about is just idea generation But you're gonna take it back to the lab right and process it and think about it and yeah And then bring that to our next meeting.
[45:09-45:09] UNKNOWN: It's
[45:09-45:23] SPEAKER_06: like hey Well, this is you know, we'd possibly crunched on it a little while and here's what it recommended and and keep jamming So there's a whole nother person or a team in the room with us at all times And that has never been like that
[45:24-45:40] SPEAKER_02: Yeah, I think there's something to even just like building a database of our Conversations like if we were able to just query old all the conversations about a clever head There's probably a bunch of ideas in there that we just like whatever From all of the conversations
[45:41-45:46] SPEAKER_06: Or not not as detailed as that but at a minimum we could go back and grab the notes and add those
[45:46-46:03] SPEAKER_00: Yeah, I'm kind of like a little thing right now a little self -help deal but like even on that a lot of like Prince things you said you were gonna do or not gonna do and Bro, a week later you're doing them or you're not doing them and stuff like that I know you've seen like the obsidian map like the notes taking thing that I think you showed me Looks
[46:03-46:22] SPEAKER_02: like a some kind of neural web So the problem with that is you have to do all this stuff right make it work I like you have to tag the right notes and all that stuff not this shit, right? I'll be like, hey, you're an obsidian expert Go make this and make the map super robust, right? And then you've got like a vertical map of everything and all these
[46:22-46:39] SPEAKER_00: different connections. Yeah It's like last week. You said you guys were gonna do this, right and every week you keep saying you're gonna do this and you don't Mm -hmm You guys program it to be kind of a dick to you about right like you have you guys have said five times that this is A bad idea. You're not gonna do this anymore
[46:44-46:45] UNKNOWN: Yeah,
[46:45-46:51] SPEAKER_02: I think basically it's anything the limitation is our imagination I
[46:51-46:55] SPEAKER_06: think we can excel at that. Yeah,
[46:56-46:56] UNKNOWN: and
[46:56-47:05] SPEAKER_06: I think it is a matter of there's a bit of a race I think You know the the race of the big boys the multi -billion dollar companies. That's not what we're talking about
[47:05-47:09] SPEAKER_02: That's like who's laying lines for the internet, right? That is established.
[47:09-47:14] SPEAKER_06: It's like they're building these tools that okay Well, who's gonna be the first one to use these tools to do?
[47:15-47:15] UNKNOWN: Right
[47:15-47:16] SPEAKER_06: whatever thing with them. Yeah,
[47:16-47:26] SPEAKER_02: he was gonna own them as Google So you have to build something that they want and they buy it and then you return it, right? Right and they buy retarded shit like it's like a dot -com
[47:27-47:32] SPEAKER_00: We're gonna try and see if this thing would What's that for 19 billion
[47:32-47:32] SPEAKER_02: dollars?
[47:35-47:46] SPEAKER_06: Whatever website like pest .com gonna be the first one to make Who's gonna be the first one like right? It's gonna be that like who's gonna be the first one to do this thing with these new tools. Yeah
[47:46-47:57] SPEAKER_02: Yeah, it's like a it's a bit of a dot -com Era so and we can play because it's not centralized to the coach. Yeah, right. Well, that's the thing And it's cheap
[47:58-48:06] SPEAKER_06: So yeah, you don't have to have it There's no there's no barriers to entry right because all the compute is in the cloud and you don't pay for it until you use it And you
[48:06-48:25] SPEAKER_02: don't have to shoot huge either like you can go Shoot low and hit all the roofers and be like, what do you do? And now you got right a thousand people using your little thing But Yeah, I'm excited about this That and the idea of just like getting a regular like it's kind of growth
[48:25-48:25] UNKNOWN: or
[48:25-48:35] SPEAKER_02: some shit And like surely some sort of business thing that's gonna come out of that and even if it doesn't that just means something else better
[48:37-49:14] SPEAKER_00: Potential collateral thing that comes out of it exactly Yes, that's pretty much where I'm at yeah Yeah two things that are in my head is if I could get one of my buddies who kind of just has like a Sitting at their desk like my buddy kence of financial analyst over at Crosby Oh, he works remote from his house if you if we could like monitor his workflow somehow or I could get him to even just like Walk through one. Yeah record and just take a Physical note of what he just did And then just kind of build him an agent out of that. Yeah,
[49:14-49:32] SPEAKER_02: and that's some of the I'm on some reddit Like communities about it and they're basically that one guy's strategy was like I go to somebody say hey I already built this for you 30 days for free. Tell me if you like it Yeah, worst case they help you develop a better product and you move on that's case. You got a new customer
[49:33-49:44] SPEAKER_00: Yeah, yeah If they yeah, you just sell that sub even just on a personal level to Kent But it's five dollars a month $10 a month. You saw a hundred of those You
[49:44-49:44] UNKNOWN: can
[49:44-49:50] SPEAKER_00: do that in one office To the office here's four thousand dollars a month,
[49:50-49:59] SPEAKER_02: right? Yeah And then go downtown and hit every fucking 20. Yeah, plus story that one
[49:59-50:05] SPEAKER_00: tower you could have Really we seem to figure out what the sell of the government because apparently they never cancel subscriptions
[50:08-50:15] SPEAKER_02: And after Doge we increase the budget by a hundred billion dollars It's big beautiful
[50:15-50:20] SPEAKER_00: budget I do think A little biased to it.
[50:20-50:20] UNKNOWN: I
[50:20-50:58] SPEAKER_00: think but that full table thing. I agree solves Real problem every Friday and Saturday night like this last Saturday Was a 30 -minute conversation of no one playing pool about who was up next because of the quarters Yeah, and that is every every night. Yeah on and that's just in one bar that's in right pool holes and stuff across the country the world really right, but In Tulsa we could get on 500 tables in Tulsa And if you're making 10 or 15 dollars a night like those tables I go to Jameson's room is where I go They're making between a hundred hundred twenty dollars Friday and Saturday,
[50:58-51:12] SPEAKER_06: so I want I'm trying to I want you to voice the problems That are that is trying that you're trying to solve. Yeah, that's yeah, so, you know Maybe just kind of go through what your idea is overall.
[51:12-51:23] SPEAKER_00: Okay. Well, so The biggest problem is the queue and the only queue system for the pool game is quarters And the way you identify that is you just put quarters up on the table
[51:23-51:26] SPEAKER_06: and you can't tell they're not labeled You can't tell who's in which order
[51:26-51:31] SPEAKER_00: is whose you can't tell who's in the front who's in the back You're right. I'm putting them on the left and the
[51:31-51:31] UNKNOWN: right
[51:31-51:32] SPEAKER_06: drinking and they do
[51:32-51:42] SPEAKER_00: yeah, you just lose track Yeah, yeah, and the bar has to carry quarters they have to carry change all time or have to have a
[51:43-51:46] SPEAKER_06: To actually start the game to start the game.
[51:46-51:46] UNKNOWN: Yep,
[51:46-52:38] SPEAKER_00: you have to have the it's the same four quarters or a dollar 25 Whatever they charge that's how you actually trigger the game to release the balls and So as far as quarters goes the patrons of the people playing they have to carry cash or some form of it to get the quarters They can't pay digitally, but and that's not a totally point. There are tables that have digital payment systems There's none that are you can just plug into any like plug -and -play right there you have to buy a whole new table It's an eight to ten thousand dollar thing But so a digital payment would alleviate a lot of the problems But then the queue that would come with that that's I think like the software on the back end of it that Makes a queue for the games being played and it would show anywhere like in whatever in your what's it called in your
[52:38-52:38] UNKNOWN: zone
[52:38-52:52] SPEAKER_00: like Yeah, you like your Geo zone like whatever Within proximity to you whatever pool tables there are that have that system on it You can tell how far back in queue they are how many people are waiting to play stuff like that.
[52:53-52:58] SPEAKER_06: And so What was the there's like a jukebox system you said touch tunes already?
[52:58-52:58] UNKNOWN: No,
[52:58-52:58] SPEAKER_06: not yet So
[52:58-54:20] SPEAKER_00: touch tunes literally does that right now with music? That's how everyone like the jukebox is a time Super old thing but they just eliminated the quarter and dollar payment thing and you just walk up there and you have an app You can be anywhere you can I can be at home right now and play a song at a restaurant or something nearby that has it But you just jump on you buy credits and then they put you in a queue your songs third up or whatever and on Tussians you can actually pay to fast pass people and have yours played next but but yeah Yeah, I don't know But like you can but on there it tracks like it does a similar thing to Spotify it gives you like a curated playlist of songs you might like or songs You typically play songs the bar typically plays like stuff. That would be a hit there if you played it and stuff like that But like on the pool table equivalent it could it tracks like your win loss like how you play how you perform Yeah, and I was kind of thinking about like the if the camera is actually overhead and like looking down or at a way Where you can see the whole table? It's watching you play also so you can give you Pointers like on your stroke and stuff you hit the ball like you hit you too low on this ball You miss you to the left or the right because it's literally watching that ball like how it spins Oh, even
[54:20-54:23] SPEAKER_02: like hey for a dollar will give you that replay, right?
[54:23-54:23] UNKNOWN: Yeah,
[54:23-54:27] SPEAKER_02: crazy. Yeah, like you have a monthly membership Like at Birdie Bay That's what
[54:27-54:44] SPEAKER_00: they do is they record every single swing and guys like go back and watch their swings and they have like swing coaches on there you sign up for and stuff, but but the main thing would be just kind of combining the heart and the software of eliminating the quarter problem and The queue for who's up next on
[54:44-54:56] SPEAKER_06: it specifically some sort of replacement for the ball drop mechanism So you don't have to replace the table so we're not talking about making a whole new table But just something where you can you exchange it and then it's digital. Yeah, I
[54:56-55:05] SPEAKER_02: can come in and modify an existing table We'd like to go into a pool hall with a hundred tables and be like it's gonna cost a thousand dollars to put this bitch Right, we're
[55:05-55:05] UNKNOWN: gonna
[55:05-55:06] SPEAKER_02: put these in.
[55:06-55:08] SPEAKER_00: Yeah Yeah
[55:08-55:09] SPEAKER_06: Yeah, that's cool.
[55:09-55:31] SPEAKER_00: I think it's a great idea If we because I know those things are interchangeable because those things break, right? So you can definitely remove those things So if you just completely replace the mechanism or if you just had a component that went over like attached to it and Whatever because it wouldn't have to change anything inside the table if it just attached to it trigger that same mechanism,
[55:31-55:34] SPEAKER_02: right? That's ultimately just a push thing. Usually if it's quarter,
[55:35-55:36] UNKNOWN: right? Yeah
[55:36-55:43] SPEAKER_06: That's cool That's like it that's a good problem I would like to Think about
[55:43-56:13] SPEAKER_00: yeah my simple back of the nap and math is that I know for sure we could get on 500 tables no I've played all over Oklahoma and there's nothing even with the digital pay on it Yeah, those 500 tables if we took 10 % even touched in stage 22 % But if you took 10 % and each of those tables is making $100 a night take 24. Yeah Whatever this is easy making talking $10 a table on 100 tables Or on 500 tables These a week.
[56:14-56:18] SPEAKER_02: Yeah With the occasional spike. Yeah Yeah,
[56:19-56:24] SPEAKER_00: and that's that's this place over here. That's not even like the actual pool halls like right Yeah,
[56:24-56:24] UNKNOWN: if
[56:24-56:25] SPEAKER_00: it's designed right
[56:25-56:30] SPEAKER_02: you're talking like $50 worth of hardware to go on a table
[56:30-56:51] SPEAKER_00: right or less. Yeah, you could even do some kind of Elevated like take on that Until it pays the cost of the right piece like it's 40 we take half and half until we get that paid for Buy it up front take your whatever you want If you get a lot of play, it's probably beneficial just to let us put it in because in three days It's paid for whatever.
[56:51-57:04] SPEAKER_02: Yeah, maybe to incentivize that you go like a big cost 50 bucks you pay The accelerator or the increased amount until we get recouped like 75, right? Or you can pay 50 upfront right in a little extra. Yeah,
[57:04-57:07] SPEAKER_00: right just to have them in sold Yeah, we don't have
[57:07-57:07] SPEAKER_02: to front anything
[57:08-57:12] SPEAKER_06: And if we do then we're gonna take a little
[57:15-57:16] UNKNOWN: Yeah,
[57:16-57:52] SPEAKER_02: that's letting that bounce around yeah, the software side is not a limitation so it's can you make the hardware side cheap and easy enough cheap probably isn't a problem because ultimately you're just plugging in the Software and replacing one mechanism right and so Can you make it cheap and easy and replaceable like quickly like it needs to they need to have? Some number of quick replacements in the back like ready to go in the middle of a crazy night So they don't lose a table. Yep, or be able to disable it Like hey now that's just a regular table like quarters
[57:52-58:19] SPEAKER_00: right now It's not totally foreign for some of those things to get jammed or the drop thing to stop and they'll just unlock the side and say It's free pull for a couple of days or whatever until I don't know if it's a manufacturer if there's a repair guy right like the Tulsa repair guy that comes down and fix it, but then he fixed it and then so if Whatever the company's called could come around and Just repair our you know, whatever device. Yeah, they
[58:19-58:19] UNKNOWN: just roll
[58:19-58:21] SPEAKER_00: back up You got ten of them in the
[58:21-58:24] SPEAKER_02: trunk. So if you get a phone call you roll over.
[58:24-58:48] SPEAKER_06: Yeah, I have two thoughts They're adjacent to this one is we could test a multi agent system without creating the agents by Just doing prompts into Gemini or whatever. I just say you give it the whole upfront. You are a whatever blah blah blah blah Attach any documents and then add the prompt and then take the results of that and give it to another one like it just
[58:49-59:05] SPEAKER_02: Lost because just in my experience of coding We used to do that a lot and cursor is about Two or three times more accurate then even just like here's all the error message that this thing put out versus Oh, I see those error messages. Oh, I agree
[59:05-59:51] SPEAKER_06: I think it's because those systems are agented and they're passing you don't see already and the other one is a bit random of this There's this customer that's that in ad agency and it's probably not unexpected that ad agencies have they run these Servers that are exchanges. So there is the bid side and then the supply side or whatever So once is one side is the group that has ad space The other one is people like that are set that buying ad space and you and they take the highest bidder or whatever that kind Of stuff like that. And so same concept as the market right the market I guess so I would love to somehow come up with some sort of Exchange for whatever like you just bring together buyers and sellers, right?
[59:51-59:51] UNKNOWN: You
[59:51-59:53] SPEAKER_06: run the market Oh, I'm trying
[59:53-60:04] SPEAKER_02: to get off the dollar. We can make a hey, I got a bunch of eggs. You got any wheat No, I actually have thought about that Like a
[60:04-60:07] SPEAKER_06: barter broker cash bro, bro. No,
[60:07-60:09] SPEAKER_02: I'm not paying taxes Yeah,
[60:09-60:13] SPEAKER_06: just help people match up with just bartering for real
[60:14-60:16] SPEAKER_02: I'm writing that one down. I don't have to
[60:19-60:20] UNKNOWN: Yeah,
[60:20-60:20] SPEAKER_02: I
[60:23-60:28] SPEAKER_00: Like the foundation of how it people traded goats for 100 % to get
[60:28-60:37] SPEAKER_02: off a barter like the dollar is the problem Yeah, you were telling me to read the freaking book on Jekyll Island for like four years until I finally did I think that
[60:38-61:06] SPEAKER_06: We were making money off of it They probably the they could probably come in and do say something about it being illegal But if you like we gave it away and just said hey this barter system It's up and running and you just have to not make any money, right? Do whatever you want to and then there's no taxes. There's no nothing right because this is just I'm bartering with for everything I mean nothing else. Yes, no transaction
[61:06-61:14] SPEAKER_02: As actual slave masters if you want to shut that shit Yeah, like oh, I can't just trade this guy some eggs for some yeah,
[61:14-61:15] SPEAKER_00: right
[61:15-61:15] SPEAKER_02: Why not
[61:15-61:19] SPEAKER_06: I have to pay you to do that to trade with that dude that lives over there
[61:21-61:32] SPEAKER_02: And you can right now because it's such low volume that they don't care or they let us We'll just print another billion dollars. How about that? Yeah, all that money you would have had
[61:32-61:33] SPEAKER_08: is a worship
[61:36-61:43] SPEAKER_00: Yeah, that makes it I mean they can't like they can't print another billion eggs. Nope. There's a number of them Yeah,
[61:43-62:02] SPEAKER_02: I think I've been telling Dana I think cars or trucks Specifically are the rep like the best representation of inflation because they have not improved since they went from $25 ,000 to 125 those dollars are just worthless, right? They still cost 25 ,000 $1990 they're not harder to
[62:02-62:02] UNKNOWN: build
[62:02-62:02] SPEAKER_02: like it
[62:02-62:16] SPEAKER_06: doesn't take more labor hours to build like an hour It's probably a good measure. It's like hey in general if you put labor hours in it, maybe whatever 4 ,000 labor hours to build a car. I bet it's probably about that say maybe even less
[62:16-62:17] SPEAKER_02: Yeah,
[62:17-62:24] SPEAKER_06: right. It's like 3 ,500 made labor hours to build a car today But it costs more
[62:25-62:34] SPEAKER_02: Dollars are useless right, right and there's two ways to get out of that depression or guns There you go big big guns
[62:37-62:40] SPEAKER_06: I Feel like this has been productive. I
[62:40-62:40] UNKNOWN: agree.
[62:40-62:41] SPEAKER_06: Yeah, it's like an
[62:41-62:42] SPEAKER_02: hour a little
[62:42-62:59] SPEAKER_00: bit of what we used to do Yeah, that gets that's the kind of stuff that's good for me mentally because it keeps me like not because I get in these spaces of like Muddy Toes is not gonna sell for 500 million dollars It's
[62:59-62:59] SPEAKER_06: probably not
[62:59-63:05] SPEAKER_00: and it's not gonna be it could be like a really cool family thing that could sell You know Yeah,
[63:07-63:07] UNKNOWN: and
[63:07-63:27] SPEAKER_00: it could buy Lake house and like do stuff like that, but it's not gonna be like on Forbes for any reason and not that I have to be on Forbes, but I feel like that's My spirit just like wants to work for something like that that Changes something like that makes a real difference in something and Gecko for sure ain't that either I mean, yeah,
[63:27-63:44] SPEAKER_02: I in general is the space to be like in this time and place that we find our yeah That's the place to do something like that especially From a low -level place right not to that you can't you can from this place that no one knows who you are Everyone you can change everyone's eyes Yeah, I
[63:44-63:52] SPEAKER_06: mean my first thing that I pitched was using AI to solve social problems Yeah, I don't know that it's possible. Yeah, I think
[63:52-64:28] SPEAKER_02: the problem always arises that ultimately you have to involve people and people Like we break everything people make the problems because the people are involved communism's number one Unfortunately, yeah people are Yeah, but that is kind of where we got to like I mean Create a council and think about these problems. Tell us what you think. Maybe you come up with some novel ideas, but Ultimately, you're trying to like make things better. You're fighting the ocean Yeah of corruption and like an evil
[64:30-64:34] SPEAKER_00: And you're making it worse for somebody right which is like what
[64:34-64:51] SPEAKER_06: I think that if you ever believe in AGI or like this super intelligence that it could come in and Make everything better because it's smart and output like if you if that's possible Well at some point it's gonna get closer and closer as the system get more and more intelligent I
[64:51-65:02] SPEAKER_02: think that's possible when it has enough power to be like, oh you disagree and now you're just gone It doesn't even say anything you just go and you're and it doesn't even make a mess, right? I think that but that's not yeah, I
[65:02-65:02] UNKNOWN: think
[65:02-65:03] SPEAKER_02: I have to be
[65:03-65:12] SPEAKER_06: coupled with ultimate power, right? Maybe and I think my thought process my hope is that you can do it without that without wasn't it I
[65:12-65:20] SPEAKER_02: mean the the book doesn't have anything between Jesus and revelation that says anything about it being cool.
[65:20-65:25] SPEAKER_06: Yeah, it's just gonna be a mess and keep getting worse and worse There you
[65:25-65:43] SPEAKER_02: go Some people think we're in It's like Satan's little season or something like that, which is right before the thousand years of awesomeness after Right the angel throws Now
[65:43-65:46] SPEAKER_06: take 20 or 30 of those Yeah
[65:51-66:07] SPEAKER_02: I'm excited though. I mentioned the Harley the like getting back together regular type things Throw it at CJ maybe even Bryson if he's ever in town and just start to just get mines in Just do a regular thing. I mean we could do it here for the next few weeks Yeah,
[66:07-66:07] UNKNOWN: at
[66:07-66:08] SPEAKER_02: least
[66:08-66:11] SPEAKER_00: I had heard of this for a bag. I did not it's legit.
[66:11-66:11] SPEAKER_02: Yeah,
[66:12-66:12] SPEAKER_06: it's legit
[66:13-66:14] SPEAKER_00: It's so crazy
[66:14-66:17] SPEAKER_02: to think that like crunch fitness used to be research and
[66:17-66:34] SPEAKER_06: it was like this ghetto Well, I mean that they got bought by this company in Texas that does this It's another chain. Yeah that and they have a bunch of these in Texas And this is the first one here the first research that they built new and built they act with that same I
[66:34-66:36] SPEAKER_02: got music and stuff out here
[66:38-66:38] UNKNOWN: Was
[66:38-66:43] SPEAKER_02: like my Melanie mentioned it like shortly after they open I was like, what are you talking about?
[66:43-66:43] UNKNOWN: You
[66:43-66:47] SPEAKER_02: got a hamburger? It's like that
[66:47-67:04] SPEAKER_06: like this is like the old man hangout like yeah in broken arrows like but yeah Going to the club Yeah Taking the kids
[67:04-67:11] SPEAKER_02: It's then you said she got chicken fried steak a mashed potatoes five bucks Yeah crazy. I assume it's like this night. It was like seven.
[67:11-67:15] SPEAKER_05: Yeah, it's legit too. It's yeah, it's good
[67:15-67:15] SPEAKER_02: It's
[67:15-67:17] SPEAKER_05: like it is better than
[67:17-67:22] SPEAKER_06: McDonald's quality and prices No question in their spirit
[67:23-67:43] SPEAKER_02: And also everything else if you just need anything I assume they're not down with you going in like buying a six probably not We all set yes, what what's
[67:43-67:43] UNKNOWN: next
[67:43-67:47] SPEAKER_02: No, we want to plan on another one You know,
[67:47-67:47] UNKNOWN: we
[67:47-68:00] SPEAKER_02: say yes today Wednesday start making a regular thing Yeah, I know my brother works like he couldn't make it like I think he gets off at five Okay, so we may plan on like a floating schedule. We do a late and early or something like that Yeah, I'm
[68:00-68:03] SPEAKER_06: fine with doing late except for when there's games. Yeah
[68:07-68:16] SPEAKER_02: Yeah But yeah, I'd like to start getting something regular and if y 'all are cool with it start to like just at least offer Expanding the size of the group.
[68:16-68:16] UNKNOWN: Yeah.
[68:16-68:42] SPEAKER_02: Yeah, I like I want to spin back into a business when we come up with an idea It's like CJ comes up with the ideas like well, okay, it's not a bad project. Yeah, we're all involved We'll talk about it on that day. Yeah But just an aim to like I don't know it sounds corny and hippie bullshit But like a growth just in whatever ends up happening. Yeah, just get in the space It is but not corny
[68:43-68:45] SPEAKER_00: Way it's very good for me. I
[68:45-68:45] UNKNOWN: mean
[68:45-68:46] SPEAKER_00: it's good I think it's
[68:46-68:46] UNKNOWN: good
[68:46-68:55] SPEAKER_00: for everybody get a lot of it out because I love Taylor to death, but I cannot oh The conversation we just had is she's reading glass of throw
[68:55-69:00] SPEAKER_02: There's a reason it really got kicked off whatever I really do think
[69:00-69:09] SPEAKER_06: that there's something to get the group of guys together and hanging out and talking about guy stuff Right talk about whatever like it's I think it's healthy. Right? It's good.
[69:09-69:10] SPEAKER_00: I'm excited. So tentatively
[69:11-69:11] SPEAKER_02: Next
[69:11-69:19] SPEAKER_00: Wednesday. Yeah, I'm good for weekly As I can make it but I plan on being able to anything in the evenings. I'm pretty much good Yeah,
[69:19-69:37] SPEAKER_02: that's where I spin the side a little bit Even if like three or four people don't make it if it's still like three or four other people That do make it then it just becomes this thing that at least you know is actually happening Right, it doesn't become one of those like hey we doing this right maybe like you build the default of just showing up Yeah, just
[69:37-69:37] UNKNOWN: show
[69:37-69:38] SPEAKER_02: up even
[69:38-69:40] SPEAKER_06: if I'm gonna just have a hamburger by myself
[69:46-69:53] SPEAKER_00: I'll record it too No notes Here's the transcription
[69:53-70:00] SPEAKER_02: like children screaming Yeah, I think I'll be good

==================================================
Generated on: 2025-07-23 11:45:37
Total words: 12911
Total speakers: 10
==================================================




Summary:
creation_date: 2025-08-25 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1127_ZOOM0011_transcript.txt participants: [SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04, SPEAKER_05, SPEAKER_06, SPEAKER_07, SPEAKER_08]

Executive Summary

  

The group discusses the plan to build a proprietary [[Transcription Service]] using [[OpenAI]]'s open-source models on [[GCP]] to capture and analyze their conversations `[00:07-00:31]`. They explore the capabilities of [[AI Agents]] to automate complex workflows and generate creative content `[25:22-26:37]`, brainstorming several new business ideas, including a digital [[Pool Table Queue System]] `[50:20-51:23]` and a [[Bartering Exchange]] platform `[59:53-60:13]`. The conversation highlights a strategic shift towards leveraging modern [[AI Tools]] to innovate rapidly and create value with low barriers to entry `[47:46-48:06]`.

  

## Key Topics Discussed

  

- **Building a [[Transcription Service]]**: The primary topic is developing an in-house service using [[OpenAI]]'s open-source models on [[GCP]] to avoid paying for commercial services `[00:07-00:31]`. This service is the foundation of their knowledge management pipeline `[00:59-01:07]`.

- **Understanding [[AI Agents]]**:

    - Explained as a team of specialized AI personas (e.g., writer, proofreader) that automate complex workflows `[27:29-28:11]`.

    - Can be given tools (like internet access) and delegated tasks to creatively solve problems `[28:50-29:52]`.

- **Business Idea Generation**:

    - **[[Pool Table Queue System]]**: A digital payment and queue system to replace quarters at bars, analogous to [[TouchTunes]] `[50:20-51:42]`. It would potentially use a camera for game analysis and replays `[54:20-54:23]`.

    - **[[Bartering Exchange]]**: A platform for trading goods and services to bypass traditional currency, inspired by a desire to get "off the dollar" `[59:53-60:13]`.

    - **[[Distribution Route Business]]**: Analysis of buying a [[Pepperidge Farm]] distribution route, which is owned by [[Campbell's]], as a business model similar to [[FedEx]] routes `[09:22-10:11]`.

- **Notable Concepts**:

    - The idea of using [[Creative AI]] to generate entire podcasts on-demand, such as one on [[WW1]] `[00:31-00:56]`.

    - Discussion on the effectiveness of the [[Keto]] diet and its impact on workouts `[07:34-07:54]`.

    - The belief that modern [[AI Tools]] like [[Gemini]] have lowered the barrier to entry for startups, making imagination the primary limitation `[47:46-48:06]`.

- **[[Muddy Toes]] Business Strategy**: A pivot to focus on wholesaling golf balls, while using a smaller inventory for a direct-to-consumer website via [[Amazon]] `[13:57-14:42]`.

  

## Action Items & Decisions

  

- **Decision**: To build and host their own transcription service on GCP instead of using paid third-party services `[00:07-00:31]`.

- **Decision**: To pivot the [[Muddy Toes]] business model to primarily wholesale, simplifying the operation `[13:57-14:02]`.

- **Action**: Establish regular, weekly "meetings of the minds" to foster collaboration and idea generation `[20:12-20:42]`.

  

## Suggested New Links/Tags

 

- [[AI Personas]]

- [[Workflow Automation]]

- [[Knowledge Management]]

- [[Low-Barrier Startups]]

- #Bartering

- #PassiveIncome

  

## Linked Concepts

  

- [[AI Agents]]

- [[AI Tools]]

- [[Amazon]]

- [[Bartering Exchange]]

- [[Campbell's]]

- [[Creative AI]]

- [[Distribution Route Business]]

- [[FedEx]]

- [[GCP]]

- [[Gemini]]

- [[Keto]]

- [[Muddy Toes]]

- [[OpenAI]]

- [[Pepperidge Farm]]

- [[Pool Table Queue System]]

- [[TouchTunes]]

- [[Transcription Service]]

- [[WW1]]

  

## #Tags

  

- #AI

- #SoftwareDevelopment

- #BusinessDevelopment

- #GCP

- #Startups

- #Automation

  
  
**

zoom12
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1211_ZOOM0012_transcript.txt

==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:03-00:43] SPEAKER_03: And what I don't know is if I've like looked at the dates like I don't know what these are being tagged as maybe they're maybe they don't have any metadata on it but I would like for if it is a life for it to be right right I'll look at that next time I look at a file. So you ran that locally and got back a file I assume it is a JSON file because like and so what I could I was looking at it on my phone and I couldn't understand the format of it. So it's like five thousand lines. And each one
[00:43-01:26] SPEAKER_02: of those blocks is what like. So what I've seen is this text thing is super long I think that's the whole thing. OK. And then it's broken down into segments I don't know what these mean but this is OK OK. I need to get it like time. So yeah these are specifically I mean it's broken it's in the segments whatever that is property. Right. And then it's just a list or a dictionary of segments. And my guess is it's based on like pauses and times like you said OK I need to get from this one. I don't think I'd get from this one.
[01:26-01:42] SPEAKER_03: Yeah. Right. So I think the service then obviously needs to process that because you can't just take file output and dump it somewhere like or let's maybe you take that top line does it have returns in it or is it just going to be.
[01:42-01:42] UNKNOWN: I
[01:42-01:58] SPEAKER_03: think it's just a solid yeah I'm broken but I think like this is clearly how whisper outputs. Oh no I agree. What I'm saying is we need to then handle that JSA file and turn it into a document that is if humans
[01:58-02:01] SPEAKER_02: need to read it I don't know that word. I think so. I
[02:01-02:01] UNKNOWN: think a
[02:01-02:12] SPEAKER_02: step along the path like maybe for testing purposes but I doubt that we're going to have like ultimately the reason to build agents around this isn't to sit down and read the
[02:12-02:31] SPEAKER_03: transcripts. Oh I don't disagree with you. I think that even the agent needs to know who said what. Oh for sure. And I think even a but for human purposes like for you know like Alex your brother asked hey how did everything go. It'd be good to be able to give him a summer. So one of the things
[02:31-02:31] UNKNOWN: I
[02:31-02:42] SPEAKER_03: think recorded uploaded and then it generated transcript and notes like so you know what Jim and I notes does have I showed you what that does. I don't know
[02:42-03:28] SPEAKER_02: that in my head even that workflow like we're not sending the transcript to my brother. So like an agent can read that and summarize it and get all the bullshit out of there. Like that's the point you send this transcript is going to want this is the tiny model so garbage like I can the first one I was just looking for something where I knew what you guys were saying and one it keeps bringing up dentists which I don't exactly remember but yeah so we're hard moving the sprinters. You guys are talking about putting sprinklers. So this is just a test anyway to see that the model would actually go get uploaded and also it's going to take a while like the when it's not in the cache and ready like it takes five to ten minutes for the thing to start.
[03:28-03:28] UNKNOWN: So
[03:28-03:58] SPEAKER_02: that for like the whisper model too. So really even on cloud run it's going to because it's big so it's going to have to like run the image and do all the stuff and it's going to take a while. But I don't think it matters. And my guess is when you upload to that when you're paying for that's the bulk of the time you're dealing with and they've got a nice little like progress bar on there that means nothing. It means that it's starting it's just getting you to kind of not be annoyed and just know that things are working.
[03:58-03:58] UNKNOWN: But
[03:58-04:02] SPEAKER_02: yeah that thing's starting up and then the tiny model took no time.
[04:02-04:16] SPEAKER_03: My guess is in the background they're spinning up a cloud run in project and they're doing this and their model is free or whatever they may have tuned it maybe they're paying for it but we could have made that service. I really really doubt that
[04:16-04:17] SPEAKER_02: they're using. We are making this.
[04:17-04:17] UNKNOWN: My
[04:17-04:28] SPEAKER_02: guess is they are using whisper. Right. Maybe they've gone in and made some tweaks but do they have an engineer better than open AIs engineers on staff? No. Let me tell you right now no. We are making
[04:28-04:30] SPEAKER_03: that service. That is literally what we are doing.
[04:30-04:30] UNKNOWN: And
[04:30-04:43] SPEAKER_02: we're going to like basically we decided and that's the future we're rolling into of like I'm not paying 30 bucks. I'll go make it. I'll spend a few days making it and now I have it for a dollar and ten cents per hundred hours or something like that.
[04:43-04:47] SPEAKER_03: It's like making your own Alfredo's house. Yeah exactly.
[04:48-04:50] SPEAKER_02: It's not that hard. It's much better.
[04:50-04:50] UNKNOWN: That
[04:50-05:04] SPEAKER_02: fucked me up from like a cooking perspective. I'm not huge on pasta or anything but I like Parmesan Alfredo apparently. Whatever is done correct or Fettuccine Alfredo. That's much better than what you get basically anywhere.
[05:04-05:04] UNKNOWN: It's
[05:04-05:18] SPEAKER_02: not the same thing. It's like you put flour and water on your shit before like my whole life. And it's made me not be interested in restaurants. I'm not going to start ordering pasta dishes and shit. But that was really good. We crushed it. That might be
[05:18-05:18] SPEAKER_03: like
[05:18-05:19] SPEAKER_02: the best thing
[05:19-05:23] SPEAKER_03: we've made. Yeah I agree. And I think that if I'm
[05:23-05:23] UNKNOWN: going
[05:23-05:29] SPEAKER_03: to go to a restaurant I want to go to one that's like can make something better than what we can make at
[05:29-05:43] SPEAKER_02: home. Chop house exists and you don't really go there that often because you can make a steak. Right exactly. Or whatever it's called. Roasted chop house. And so once you like to take the magic out of it it's like I'm not giving you fucking hundred fifty dollars to show me my steak knife before I make it out. But
[05:43-05:49] SPEAKER_03: this is the equivalent of that. Hey we can make that same service. I'm not paying you to do
[05:49-05:49] SPEAKER_02: that.
[05:49-05:51] SPEAKER_03: Yeah and
[05:51-05:56] SPEAKER_02: we'll use it a few times and if we never use it again it doesn't matter.
[05:56-05:56] UNKNOWN: It
[05:56-05:58] SPEAKER_02: wasn't a waste of time. No it's learning and
[05:58-06:00] SPEAKER_03: everything like that. And you just never know.
[06:00-06:00] UNKNOWN: Like
[06:00-06:02] SPEAKER_03: my guess is we'll use it.
[06:02-06:15] SPEAKER_02: Yeah I'm thinking we probably will. Like I literally I don't know if I'm going to be this dramatic but might just go up to research by myself on days like whenever. No I'm with you. Like just assume we're doing it. On
[06:15-06:18] SPEAKER_03: Wednesdays at 5 maybe let's call it movie at 5 .30. Yeah
[06:18-06:18] UNKNOWN: even
[06:18-06:19] SPEAKER_03: 6.
[06:19-06:19] UNKNOWN: Like
[06:19-06:20] SPEAKER_03: I'm down. Yeah I'm
[06:20-06:20] UNKNOWN: good
[06:20-06:20] SPEAKER_03: with
[06:20-06:27] SPEAKER_02: 6 too. Like if that's pushing later than I love but like I just won't eat probably maybe get
[06:27-06:27] UNKNOWN: a
[06:27-07:21] SPEAKER_02: snack. And then if it goes till 8 whatever. Doesn't matter. And then yeah just go up there and be like hey if nothing has happened in the text thread I'm probably still going to be there. So or wherever our thing ends up doing. That works for me. Because I do think there will be some value added to it and you just kind of have to force the first part where you like develop the habit and it's not like oh maybe I can make it on Wednesday. It's like yeah that's what I do on Wednesday nights. Right. I'm good with that. Yeah we'll see. Yeah we can move it to 6. Yeah I'm down. Like just whatever works for the biggest group of people because then like I said if my brother isn't able to show up for 6 weeks straight it still happened every one of those 6 weeks and like so on the 7th week it's not like hey is this thing still going on.
[07:21-07:21] UNKNOWN: It's
[07:21-07:29] SPEAKER_02: like hey you've been getting the summary transcripts that the agents are putting out and you know that some other people are
[07:29-07:29] UNKNOWN: going
[07:29-07:30] SPEAKER_02: to be there talking at 6 on Wednesday.
[07:33-07:47] SPEAKER_03: So for this I do think I still think we need a transcript. I think that the agent needs a transcript. Or like the one that does the summarization. Right but they can read that. Right but it doesn't tell
[07:47-07:55] SPEAKER_02: them what who said what. For sure but we haven't got into like actual model tuning or anything. This was like hey is this going to work.
[07:55-07:55] UNKNOWN: Are
[07:55-08:44] SPEAKER_02: there any stupid errors. Right. So my guess is the tiny model can't do any of that. And so that was just kind of like we got through our test and now we need to figure out which we need I think on cloud run and start doing like actually get an idea for what that audio says. Maybe even do an actual test audio like on purpose. I mean I think I have that already. Yeah a test one would be like I have it now. Well I'm saying like now I'm saying this and now we're doing like so we can just read it and be like yep we got it right that time. Maybe talk over each other a little bit do some specific testing. Yeah do a test audio. Maybe even ask GPT like what our line should be for this test audio. Man I still call it GPT that was weird. Yeah pretty much always call it Jim and I now.
[08:44-08:44] UNKNOWN: I
[08:44-09:03] SPEAKER_02: usually use Jim and I on both sides now. I got my downloaded GROCK on my mom's cell phone. OK yeah GROCK solid. Yeah and generally like when I'm out there when we're working she'll be like ask you a little thing what we should do about this. And I get it I just hadn't thought to tell her to get it because it's free and she was like
[09:03-09:03] UNKNOWN: oh
[09:03-09:11] SPEAKER_02: I thought it was something you pay for and I was like no like this the free versions are more than anyone that's not coding needs.
[09:11-09:17] SPEAKER_03: Right 100 percent that's the only only things that the new models do is like coding this type of stuff coding and reasoning.
[09:18-10:04] SPEAKER_02: And so I got her that and she's got GROCK and I was like do not get on X. If you want to know what something's going on in the world X is the place to find out ask GROCK what to look on X. It's raw. That place is poisonous. You don't want to get on there. Yeah but she's got that now and I think like it's also indicative of like the time we're in it's like it makes sense to introduce her. It's in a place where it's like you should be able to use it and she can see the value from like I've been sending her full on GROCK responses. Yeah. The question is that she posts out a lot for like a while now so I think she'll start to And I mean that's as good an indicator to me of the future.
[10:04-10:34] SPEAKER_03: Yeah like what I know Sydney went and looked at a house yesterday and Mel was like what questions she asked and so I put it in Jim and I it was being like well first it was they were like well how much should we offer like and Jim and I won't do that GROCK will GROCK was like 335. Tell these motherfuckers. So you can like you can just post a list like give it the link to the list and they can see all of it. It's like what should we offer. Yeah. 335. But which whatever whatever the number. Yeah.
[10:34-11:00] SPEAKER_02: I had a thought yesterday you were talking about disrupting in like real estate. I think a for sale by owner agent. So don't even try to play their game like just go hey we don't need it. I'll connect you to everybody. We'll put all the stuff out there. Just that's a disruption. Fucking take a knife and put it in the heart of that entire industry. I like that. I think that's
[11:00-11:00] UNKNOWN: the
[11:00-11:26] SPEAKER_02: first I almost texted you I was driving. I think I don't know where I was going. I was pulling in somewhere and I almost texted was like I ain't going to forget this. That's the first one that makes me go. Oh you can make some money with that for real. It's like we don't have you don't have to convince the real estate agents. We're taking them off the table and it's in the same space as my barter shit like that's it's bartering houses. We're not the barter. Still got it like the government will definitely kill me for
[11:26-11:26] UNKNOWN: that. They're going
[11:26-11:26] SPEAKER_02: to
[11:26-11:26] UNKNOWN: get
[11:26-11:27] SPEAKER_02: their piece.
[11:27-11:27] UNKNOWN: But
[11:27-11:37] SPEAKER_03: the agents are well suited for complex multi -step processes normally done by humans and I was listening knowledge worker humans like that's
[11:37-12:37] SPEAKER_02: it. Yeah I want to get some wood to cook that pork and I was pulling in the ace and I was listening to this YouTube video on this guy's claiming that the Airbnb market in Galveston is collapsing because like the housing market is down all these people. But he was talking about how some real estate agent said their house this house that they have under contract wasn't selling and it's not the price it's just people aren't looking and the guy was like well that's about as dumb as shit because if it was half the price I imagine people would take it. So it is the press. Like that and but he was like what's going to happen is that real estate agent is going not do anything they're going to let the listing expire and then they're not going to make any whatever and the thing that jumped out of me like a freaking flag waving in my face was they're going to let the listing expire. Fuck all that nonsense. I'm selling a house. There's no structure around it. I don't have to follow these motherfuckers rules just because they're the ones that
[12:37-12:37] UNKNOWN: are
[12:37-12:48] SPEAKER_02: plugged in to have the network. Ultimately that's what it is. They've developed this network and then developed a whole bunch of bullshit bureaucracy around it that everyone has to deal with and we can just
[12:48-13:01] SPEAKER_03: what if because if you could get on it's about you don't have to do it. Like that's the thing. But I think you just need one real estate license under this. The company that's not disruptive
[13:01-13:47] SPEAKER_02: enough. I'm talking like it's a social network where people sell their houses. Fuck all the other stuff and negotiations. I don't need a real estate agent. You just said it like hey and what it ultimately. Exactly. And get to a fair agreement and then you can potentially have a space for like yeah I'll bring in a negotiator or something but not an all the way real estate agent. I think we can knock that out in two weeks. And like don't even really I mean if you bring a real estate agent in that would be useful nuance of it but like it's almost get a thing in place and get somebody to sell their house through it. But then bring in a consultant.
[13:48-13:48] UNKNOWN: As
[13:48-13:49] SPEAKER_02: like not on like a hey let's
[13:49-13:51] SPEAKER_03: start a company together. No I'm
[13:51-13:51] UNKNOWN: going to
[13:51-14:02] SPEAKER_03: pay you two grand and look at everything we put together under an NDA and tell us what will work and what won't work. And then
[14:02-14:16] SPEAKER_02: thanks. Yeah and maybe if you provide enough value there's a place for something else but that was one that jumped out at me and then you just made me think of it again because it's a silly story. Hold on I'll be right back I'm going to get
[14:16-14:17] SPEAKER_03: Nick did you want one?
[14:18-14:21] SPEAKER_02: No I'm good. I'm going to make some coffee though.
[15:07-15:21] SPEAKER_03: I think the reason I'm saying that I think the transcript well at least we just need to look at how to process these whisper funds. There may already be a package that says hey give me the JSON.
[15:22-15:28] SPEAKER_02: So I guess it's those segments even on the tiny model are what it thinks are the people talking. Right.
[15:28-15:28] UNKNOWN: So
[15:28-15:31] SPEAKER_02: even if it was you or all of them it registered
[15:31-15:43] SPEAKER_03: them as different users or whatever or voices whatever. But there is like at a minimum either look at the whisper I don't think we should look at the whisper document maybe. I
[15:43-15:43] UNKNOWN: think
[15:43-15:51] SPEAKER_03: we should ask Jim and I Claude whoever like hey here's what came back how do you turn this into a transcript and a note summary.
[15:51-16:15] SPEAKER_02: Right. And the JSON kind of is the way like not turning it into less computer readable it's like that's the way assuming that there's a property of like which user or something like that. Right. You may have to do some extra like tuning so like Google for recognize me but because I've talked to it a whole lot. Right exactly. You may have to give it our standard set of users
[16:15-16:28] SPEAKER_03: or teach it as time but long. Yeah 100 percent or I think that you know what that one that you upload to does is it asks you like well it just labels user one or whatever speaker one speaker two.
[16:30-16:30] UNKNOWN: And
[16:30-16:35] SPEAKER_03: then over time or not over time like you go in and take this is Mark this is Daniel. Right.
[16:36-16:36] UNKNOWN: And
[16:36-16:38] SPEAKER_03: at worst case we have to
[16:38-16:38] UNKNOWN: do
[16:38-16:38] SPEAKER_03: that every time.
[16:39-16:42] SPEAKER_02: Yep and so ongoing use we could start to do to be a different agent.
[16:43-16:43] UNKNOWN: But
[16:43-16:52] SPEAKER_02: it would be starting to identify the people. Yeah. So first pass whisper does the user one user two and then it goes to an agent like knows us.
[16:52-17:13] SPEAKER_03: Right. And just assigns the. And I imagine that also it's not that hard because again if we can if me you or whatever mean you could listen to it and go yeah that's Alex that's me that's you. It can do it too. And we know it can do it. Because Google does it right now like that's. But that's also Google and a giant maybe a billion dollar model doing that.
[17:13-17:13] SPEAKER_02: For sure.
[17:14-17:14] UNKNOWN: But
[17:14-17:18] SPEAKER_02: Google I mean the baby version is open source. I would bet my life on it. Yeah.
[17:19-17:31] SPEAKER_03: Because that's what people do. I love that. I love that there's this open source community that's just like hey there's no magic. Here's here it is. Right. I mean sometimes Google opens source.
[17:31-17:44] SPEAKER_02: Yeah. Whenever it is advantageous to them or disadvantageous to their competition. Right. And like it's reasonable. That's. And Facebook the reason they're like the open source model kings. Because they can't compete with
[17:44-17:44] UNKNOWN: it.
[17:45-17:54] SPEAKER_02: Compete with that. The big with the big boys like OK fine. Right. We're going this route. We can disrupt a little bit and make a bunch of people build services on the thing that we built.
[17:54-17:55] SPEAKER_03: Right. And it
[17:55-17:55] UNKNOWN: does
[17:55-18:04] SPEAKER_03: it devalues the big boys. Right. Because just like right now it's like I'm not paying for your service or what. Because why would I do that when I can have this one
[18:04-18:04] SPEAKER_02: with
[18:04-18:05] SPEAKER_03: a
[18:05-18:29] SPEAKER_02: little bit of effort. Yeah. Side note. What was that. Two ish on chlorine which is actually in our range. That's not bad. Yes. Considering all the extra water. And I tuned the thing down to three and a half last time on there and the tabs are basically gone. Like there's still some. How many you put in there? Three. OK. And with rain it maintained it. So I think I'm going
[18:29-18:29] UNKNOWN: to
[18:29-18:38] SPEAKER_02: leave it at three more. Right. And see again next week what we're looking like. Yeah. Perfect. I just did the stick test but it's pretty good.
[18:38-18:38] UNKNOWN: I need
[18:38-18:40] SPEAKER_02: to order those. I
[18:40-18:40] UNKNOWN: mean
[18:40-18:59] SPEAKER_02: we've got probably 10 or 15 left so that's like months. It seems like not very many when you look at them but like you do once a week. It's easy. All right. So yeah I think the next thing here is actually getting it deployed to the registry and up OK. Yeah. So I have
[18:59-19:09] SPEAKER_03: some instructions for that. OK. So you want to just run it. You can pull this code base down. I can do that. Let me get my crap together and think about that. OK. Yeah.
[19:11-19:11] UNKNOWN: So
[19:11-19:28] SPEAKER_03: I need to open. What network are you on? I'm going to make sure. You're up there. OK. So what is the IDE? It is called cursor. I need to open that. What is happening?
[19:29-19:34] SPEAKER_02: You're up there. It's got your arrangement fucked up. I don't know which way you need to go. No it
[19:34-19:39] SPEAKER_03: was what I was trying to get this to come. Oh got you. Like why is that not coming up?
[19:39-19:39] UNKNOWN: I
[19:39-19:42] SPEAKER_03: guess this cursor will need to update because it's been a while.
[19:45-19:51] SPEAKER_02: You don't do anything with your doc like put the stuff you use in it. I don't.
[19:51-19:51] UNKNOWN: I
[19:51-19:58] SPEAKER_02: don't. I probably should. I hate all the Apple stuff. I get rid of it and I've got all of my shit. Some stuff I don't
[19:58-20:41] SPEAKER_03: really use. So what I need to do is open the place where I want to put this. And I've been using. I think I have a. Yeah. OK. But that is what I was looking for. Yeah. That's what I was in before. So I'm going to go back to that. Sure. I don't know what I was working on. Yeah it's fine. And I want to do control. Control. I don't know the command
[20:41-20:44] SPEAKER_02: to. You
[20:44-20:44] UNKNOWN: probably.
[20:44-20:50] SPEAKER_02: You haven't gotten it at all right. So git clone I think is all you need.
[20:50-20:50] UNKNOWN: And
[20:50-20:57] SPEAKER_02: then you should. Did you accept the. I did. I think I have it open.
[20:58-20:58] UNKNOWN: OK.
[21:00-21:07] SPEAKER_02: And then once you get it I guess in theory you won't necessarily need to push anything.
[21:07-21:07] UNKNOWN: But
[21:07-21:12] SPEAKER_02: we'll
[21:12-21:12] UNKNOWN: see.
[21:19-21:28] SPEAKER_02: I got it open from the beginning. Was that. That's the screen. Oh yeah. Before you made a single. Yes soon as
[21:28-21:30] SPEAKER_03: I accepted it I went there.
[21:30-22:06] UNKNOWN: Yeah. OK.
[22:10-22:14] SPEAKER_04: I'm not as rusty as I thought I would be. Because you've done it a couple
[22:14-22:14] SPEAKER_02: of times in the last
[22:14-22:15] SPEAKER_04: few weeks.
[22:16-22:20] SPEAKER_03: All right. That's the overall plan. Oh
[22:20-22:20] UNKNOWN: I
[22:20-22:34] SPEAKER_03: had I was talking to Jim and I about it. And think this is it right here. So. I'm not even going to I'm going to be.
[22:36-22:36] UNKNOWN: Oh
[22:36-22:44] SPEAKER_03: you can't do that. I can't bring you there but that is this is a safari tab for whatever.
[22:47-22:56] SPEAKER_02: You don't have to bring it up like. Just keep it where you keep your workflow good and all. Thanks over there if I just need to see some. No
[22:56-23:01] SPEAKER_03: it'll be fine. I did it just come right up.
[23:01-23:01] SPEAKER_01: OK.
[23:06-23:08] UNKNOWN: This was
[23:08-23:43] SPEAKER_03: me just like thinking through how it would work. Yeah but. OK. So get it to the artifact registry. Yeah. So. I actually kind of want to.
[23:45-23:46] UNKNOWN: I
[23:46-23:52] SPEAKER_02: think if you copy all of that and give it to cursor right. And say upload update the read me.
[23:55-24:11] SPEAKER_03: So there's two parts that I need to put in here. I'm just going to start adopting that. That is not what I wanted to do. So that's one part.
[24:15-24:16] UNKNOWN: And so.
[24:20-24:43] SPEAKER_03: And then like down here it says. And then you would pick up exactly with the cloud runs test we previously discussed. Right. So that's because I did backing. I got to go back and get this part. It was confused about what I was asking it. Like how to basically how to deploy to cloud run.
[24:44-24:44] UNKNOWN: Right.
[24:45-25:20] SPEAKER_03: Like that is part of it. So this is getting to artifact registry and then. And then you would put it.
[25:24-25:28] SPEAKER_04: So I'm going to go back to here.
[25:29-25:29] UNKNOWN: And
[25:29-25:35] SPEAKER_04: say who do I have. That's important. OK. Fuck out of you.
[25:35-25:38] SPEAKER_02: It's the other one. Just.
[25:40-25:41] SPEAKER_03: Which one do you think.
[25:41-25:48] SPEAKER_02: I've been using to five per. I haven't tried out for one or called for at all.
[25:48-25:51] SPEAKER_03: Clock for supposedly better. But
[25:51-26:10] SPEAKER_02: well I think it's in that kind of region like the stuff that I heard was in hardcore tests. It kind of like Google winsome and cloud winsome. Yes. But the guy and I trust the guy as much as anybody in the space I guess.
[26:11-26:11] UNKNOWN: But
[26:11-26:19] SPEAKER_02: he said it feels better. Yeah. Like when you're interacting with whatever it just feels more human. Yeah.
[26:19-26:23] SPEAKER_03: Right. Or more natural like you're truly talking to a person or an assistant.
[26:23-26:31] SPEAKER_02: Right. But performance wise it's like neither of them are all the way to where you just got to not pay attention. So but they're both really really fucking good.
[26:31-26:35] SPEAKER_03: Yeah. That's cool. Uploading the what do
[26:35-26:35] UNKNOWN: you
[26:35-26:50] SPEAKER_03: call that image. To. Cloud container. What is it called. Artifact. Artifact registry.
[27:09-27:26] SPEAKER_02: Did you send me this thing. Are you on the pro plan for Gemini. I am. So you have Veo right now. I assume. They're doing like I think for a short time. Yeah I have the pro users can use it. What's the what's the one you actually have it on. That's like 200 bucks is it.
[27:26-27:31] SPEAKER_03: No I don't have that. That was like enterprise. Yeah. I don't have
[27:31-27:40] SPEAKER_02: that. But yeah I saw something it may have been just an email that they are making it available to pro users. Yeah we can play with it. Whenever. I have to get into that.
[27:41-27:41] UNKNOWN: I
[27:41-27:43] SPEAKER_02: was just curious if that was the level that you're on. Yeah I'm
[27:43-27:46] SPEAKER_03: on the pro level. It's like 20 dollars a month. Yeah.
[27:46-27:57] SPEAKER_02: Something like that. Probably if that's part of the plan want to play with it a little while you have it for not 200 dollars a month. But we don't have to get distracted right now.
[27:57-27:57] UNKNOWN: Just
[27:57-27:58] SPEAKER_02: take a look.
[28:11-28:12] SPEAKER_01: That's how it was before.
[28:18-28:38] SPEAKER_03: I already created an article. I haven't created a registry. I just enabled the API. That's fine. These steps configure doctor to authenticate. Sure. Tag your. These are all steps that came out of that.
[28:38-28:38] SPEAKER_02: Yeah.
[28:43-28:50] SPEAKER_03: It looks good to me. I agree. Is
[28:50-29:14] SPEAKER_02: that all I need to. OK. So so ask it like OK what do we need to do to deploy or to get deployed to the artifact registry and specifically say I would say like go through all the files and make sure we don't have any anything left over from the testing the local testing phases. OK.
[29:38-29:44] SPEAKER_05: So. So forward. Especially.
[30:32-30:34] SPEAKER_04: What are you going to do
[30:34-30:45] SPEAKER_02: to get it. Oh not sending those local transcriptions and sample audio. I mean we can probably just delete that or
[30:45-30:47] SPEAKER_03: no I don't think you should send those up.
[30:47-30:56] SPEAKER_02: I mean local transcripts I did send OK. That's because I had to thought I thought through it and I don't think there's anything in there.
[30:56-30:56] SPEAKER_03: I agree.
[30:57-30:58] SPEAKER_02: That is a problem
[30:58-31:12] SPEAKER_03: because that's just testing. But I do think that because otherwise we're going to load them into the bucket and that has inherent more security than we're going to build anywhere else. Exactly. And. But I think it's whatever we
[31:12-31:40] SPEAKER_02: shouldn't. It should be literally that one local transcription because the reason it makes that in the code is if there's not a GCS bucket you are right to send it to. Got it. It's like so that basically indicates like without saying it oh this is a local testing thing. And I think it literally prints out like hey I don't have a GCS URI so I'm going to do this one. It like does the file path and everything.
[31:40-31:43] SPEAKER_03: And you shouldn't put anything in that local transcription that is sensitive.
[31:43-31:50] SPEAKER_02: Right. It's the whisper output is it. So like unless there's something sensitive inside of that which I don't know how there could be.
[31:51-31:51] UNKNOWN: Right.
[31:54-32:01] SPEAKER_02: I mean other than like if you just don't want people to know what your transcription was like if you were talking about sensitive. So right. Yeah that's
[32:01-32:07] SPEAKER_03: what I'm saying. Like yeah you shouldn't try to transcribe a sensitive file. And that no
[32:07-32:11] SPEAKER_02: one has it to this open source from open AI software to begin with. Right.
[32:18-32:19] UNKNOWN: But
[32:19-32:24] SPEAKER_02: it also isn't hurting anything if they're in there and not sending it up when you push like
[32:24-32:25] SPEAKER_03: I guess.
[32:26-32:26] UNKNOWN: I
[32:26-32:27] SPEAKER_03: agree. So that's why I went ahead and
[32:27-32:27] UNKNOWN: said
[32:27-32:33] SPEAKER_03: it's like it take it up. It doesn't matter either way but go along if that's what you recommend.
[32:37-32:37] SPEAKER_02: Sure. So
[32:37-32:37] UNKNOWN: it
[32:37-33:04] SPEAKER_02: says you might manually remove from history. There's actually. Yeah. And. I think.
[33:10-33:11] SPEAKER_05: So.
[33:11-33:11] UNKNOWN: Do
[33:11-33:18] SPEAKER_02: you want to look at this and just make sure my guess is this empty directory has like a file. With nothing. Exactly.
[33:22-33:24] SPEAKER_03: So basically. OK. What's next.
[33:24-33:31] SPEAKER_02: Yeah. I usually start something like based on the readme. What do you think is next and maybe even suggest like I
[33:31-33:31] UNKNOWN: think it's like a. I
[33:31-33:52] SPEAKER_02: think it's probably pushing to the registry. Artifact registry. Part of the reason I do that is to force myself to think about it. Yeah.
[33:52-33:52] UNKNOWN: Instead
[33:52-34:01] SPEAKER_02: of just full on vibing it's like hey here's what I think is next. Does that make sense. And then I do try to read it and it's like yep that does make sense. Or here's why it doesn't.
[34:02-34:02] SPEAKER_03: Yeah.
[34:02-34:02] UNKNOWN: I
[34:02-34:02] SPEAKER_03: mean
[34:02-34:02] UNKNOWN: I
[34:02-34:18] SPEAKER_03: think that is the way to do it. Right. Not just pure by coding like it's truly an assistant. We created this plan and now we're executing it. Where are we at in there. Does it make sense. Because the reason that I'm typing in your numbers because I was thinking about like what's next. Like
[34:18-34:18] UNKNOWN: how
[34:18-34:20] SPEAKER_03: did it make sense in my head. It's like OK. Now it makes sense. And
[34:20-34:52] SPEAKER_02: that's the whole thing. And you can learn that way too. Like I can't. Nothing immediately comes to mind. But I'll be like well why are we doing it like this. Like spinning up the testing yesterday. I. It was mounting local something. I remember. But to make it work to I think to save those local transcriptions. And I was like why don't want this as a part of like the production thing. Like that's not. And it was like no we already built the image right now. We're just mounting it to it to run it locally on 80 80. And I was like all right. Now I know it's good.
[34:53-34:53] UNKNOWN: Yeah.
[34:55-35:11] SPEAKER_03: Sure. The local doctor image. I have not built that. OK. It's a thrust command create artificial if I have already I have I haven't created the.
[35:12-35:19] SPEAKER_02: You may make ask it what are what model we're currently using because testing it was tiny and tiny.
[35:19-35:29] SPEAKER_03: Yeah I think that it updated it. I don't know where it updated. But that was one of the things because that was in the review as well. Right. But on my
[35:29-35:49] SPEAKER_02: side it's in the E .M .V. files. And so we need to have some environment variables is my guess. Or however that gets handled.
[35:53-35:54] UNKNOWN: Oh.
[36:12-36:15] SPEAKER_03: So it's in the Python file. It's.
[36:16-36:17] SPEAKER_01: Yes.
[36:17-36:17] UNKNOWN: I
[36:17-36:18] SPEAKER_01: see.
[36:22-36:22] SPEAKER_05: So.
[36:22-36:22] UNKNOWN: Should
[36:22-36:23] SPEAKER_05: be.
[36:30-36:40] SPEAKER_03: Yes. So it's set to medium right now but I don't see where that model size is. Source settings that model
[36:40-36:41] SPEAKER_02: says
[36:41-36:45] SPEAKER_03: there's a config settings. So here is all this stuff right here.
[36:45-36:48] SPEAKER_02: Model size. And so
[36:48-36:55] SPEAKER_03: we're going to have to set all this project ID bucket name and everything. At some point we're going
[36:55-36:55] UNKNOWN: to
[36:55-36:56] SPEAKER_03: have to. Yes. So that's where
[36:56-37:00] SPEAKER_02: it's using the environment very like that's always start getting it.
[37:00-37:00] UNKNOWN: You
[37:00-37:02] SPEAKER_02: don't have any.
[37:05-37:06] UNKNOWN: And
[37:06-37:15] SPEAKER_02: I'm not exactly sure what the process for handling that is between. Getting it to the cloud.
[37:32-37:33] SPEAKER_05: Yes.
[37:40-37:40] SPEAKER_02: So. Yes.
[37:41-37:41] UNKNOWN: So
[37:41-37:57] SPEAKER_02: the straight up and down line is like or right. Isn't it. So my guess is in the cloud it's going to have it doesn't need an API key doesn't need a project ID. It's the project ideas where it's deployed the bucket is where it's like got it. I'm guessing.
[37:58-37:58] UNKNOWN: But
[37:58-38:15] SPEAKER_02: that makes me read through this. So with Pydantic it is automatically looking for. Yes. So it's
[38:15-38:24] SPEAKER_03: either going to be a string that you put in here or if the if it's none then it equals OSGit. From your environment. Right.
[38:24-38:24] UNKNOWN: And
[38:24-38:25] SPEAKER_03: my guess
[38:25-38:29] SPEAKER_02: is that's for local testing that might be like a purpose like just the same way. And
[38:29-38:35] SPEAKER_03: once it's up there it knows. Yes. It knows it project ID and bucket name. I believe.
[38:37-38:41] SPEAKER_02: And it's service account can handle any API stuff.
[38:42-39:27] SPEAKER_03: Yes. It will be set directly in the cloud run service configuration. Yeah. Okay. So I think we're ready and I think I understand well enough to move forward. Yeah. What I want to do is open Docker make sure it's up to date. Yeah. It's probably not. It might be. I had it open like last week. But maybe. Yeah. I
[39:27-39:28] SPEAKER_02: just had to do on yesterday.
[39:29-39:29] UNKNOWN: So
[39:29-39:56] SPEAKER_02: basically we're going to build this image push it up there test it see if medium works. If it does great move forward and develop like figure out how to do names and all that stuff or upgrade until we get to one day.
[39:56-40:07] SPEAKER_03: Yeah. Until we get the same result that we just from both places. Yeah. I do want to talk to about. Okay. So I'm going to.
[40:19-40:20] SPEAKER_05: As.
[40:38-40:49] SPEAKER_02: Probably. We're going to have a GPU.
[40:57-40:58] SPEAKER_03: Yeah.
[40:59-40:59] UNKNOWN: I
[40:59-41:03] SPEAKER_03: agree with you.
[41:07-41:16] SPEAKER_02: Or is that comment saying that like it will be CUDA if the GPU is available and configured else it will be CPU.
[41:21-41:30] SPEAKER_03: I don't know. Oh yeah. I agree. I do think that is what that's saying.
[41:31-41:31] UNKNOWN: It
[41:31-41:37] SPEAKER_03: is saying device. Device and if it doesn't return anything. Right. It's going to make it be.
[41:37-41:37] UNKNOWN: See
[41:37-41:38] SPEAKER_03: you. The.
[41:39-41:47] SPEAKER_02: Environment variable map to CUDA. Right. Makes sense. And then model size or medium.
[42:13-43:12] SPEAKER_03: So what about an output. Okay. So. It's just computer to use a single bucket which is probably fine.
[43:12-43:22] SPEAKER_02: Yeah. But in the read me it does mention an output. That's what that next thing is saying. Like the above.
[43:23-43:24] SPEAKER_03: Use a single bucket for
[43:24-43:25] SPEAKER_05: now for simplicity.
[43:31-43:33] SPEAKER_03: Which way do you want to do it. You recommend that you use a single bucket.
[43:34-43:48] SPEAKER_02: Well. I don't think it's that difficult. That's it. Saying like let's just. Keep moving. I don't know. Like I think maybe start a new chance. But. I typically end with.
[43:50-43:50] UNKNOWN: Like
[43:50-43:53] SPEAKER_02: hey make sure the readings up to date so I can start a new chat.
[43:54-43:56] SPEAKER_03: Where does it where does it recommend doing a new channel.
[43:57-43:57] UNKNOWN: To
[43:57-44:00] SPEAKER_03: the right. Okay. So what do you what do you think.
[44:01-44:06] SPEAKER_02: I say like. I'm. About to start a new chat. Make sure the read me is up to date with any
[44:06-44:06] UNKNOWN: of the.
[44:36-44:37] SPEAKER_02: About
[44:37-44:37] UNKNOWN: to start a new chat.
[44:37-44:44] SPEAKER_02: Say like check the read me. Hey we need to make sure that we've got. A two bucket design or something like that.
[44:51-45:13] UNKNOWN: Okay. Okay.
[45:28-45:39] SPEAKER_02: That's the scenarios where you can kind of get. Like. Bitten by. Vibes coding. Because ultimately the last thing you said was like let's just move forward with the one. Right. And if you were just
[45:39-45:47] SPEAKER_03: like accepting like except clicking the whole time. You would not see that. Right. But. And also. Thinking about what we're doing. Right. It doesn't make sense. Do we
[45:47-45:48] SPEAKER_02: still want that.
[45:48-45:54] SPEAKER_03: Yeah I don't. One bucket can work but then everything's going to jumbled in there. It's like I would rather separate. Yeah.
[45:54-45:55] SPEAKER_02: I agree.
[45:56-45:56] SPEAKER_03: And.
[45:56-45:56] UNKNOWN: It
[45:56-45:57] SPEAKER_03: doesn't cost extra money.
[45:58-45:58] UNKNOWN: Either
[45:58-45:58] SPEAKER_03: input or
[45:58-45:59] SPEAKER_02: output. And stuff like that. It
[45:59-46:23] SPEAKER_03: doesn't cost extra money to have two buckets. It costs. Provided storage. Yeah. And so it would be the same. It might be slightly different. But like very slightly different. All right. So I wanted to do the commands for building the buckets and stuff from here.
[46:23-46:23] UNKNOWN: Like
[46:23-46:26] SPEAKER_03: so. Yeah use the CLI. Use the CLI.
[46:33-46:33] UNKNOWN: Yeah.
[46:38-46:44] SPEAKER_02: I might grab the project ID. Go ahead and give it to it so it
[46:44-46:44] UNKNOWN: knows.
[46:55-46:57] SPEAKER_05: What repository do
[46:57-46:57] UNKNOWN: we have
[46:57-46:58] SPEAKER_05: here?
[47:05-47:35] UNKNOWN: GCS buckets. The project ID. Can
[47:35-47:37] SPEAKER_04: you just copy that?
[47:37-47:38] UNKNOWN: No.
[47:57-48:34] SPEAKER_05: It won't do it. Or if this was happening. Yeah. You have central one.
[48:34-48:35] SPEAKER_00: Yep.
[48:51-48:57] SPEAKER_01: I'm just. All of those look good. Say yes it is your central one.
[48:57-48:57] UNKNOWN: But
[48:57-48:59] SPEAKER_01: then.
[49:01-49:01] UNKNOWN: Everything looks
[49:01-49:02] SPEAKER_02: great.
[49:16-49:17] SPEAKER_01: Next step is to
[49:17-49:20] SPEAKER_02: introduce video that's watching.
[49:21-49:21] SPEAKER_00: Yep.
[49:23-49:28] SPEAKER_02: Which at some point they're going to get the monitoring shit right? Yep. I
[49:28-49:29] UNKNOWN: agree. They're
[49:29-49:29] SPEAKER_02: trying.
[49:29-49:38] SPEAKER_03: They're trying to do like it'll just be able to watch the screen. And that's one of the things that Google talked about in IO is that there is an agent that can just.
[49:38-49:43] SPEAKER_02: And then you'll have an agent that is good at receiving reports from that agent and
[49:43-49:58] SPEAKER_03: all that stuff. Right. Artifacts repositories create. Looks good to me. I don't know if it's going to run because I'm not. I probably need to
[49:58-49:58] UNKNOWN: run
[49:58-50:06] SPEAKER_03: the. What's the command for. GCLI or NIT. Just whatever the login. Oh yeah. Log it
[50:06-50:24] SPEAKER_02: off. You can see and if you run it from over there it'll. It'll be able to read it like in there. And see the response and go like hey. You're already logged in.
[50:24-50:43] SPEAKER_03: I'm already logged in and it's good to go. Yeah. What does that say. Updates are available for. Yeah. I probably need to do that at some point. I'm not going to do it right now. Sure
[50:43-50:44] SPEAKER_02: as
[50:44-50:44] UNKNOWN: shit
[50:44-50:45] SPEAKER_02: not taking your
[50:45-50:48] SPEAKER_03: survey. GCLOUD auth configure Docker.
[50:50-50:50] UNKNOWN: Is
[50:50-51:03] SPEAKER_03: it authorized Docker to upload directly. Docker looks good. Why do I have that? Say it looks good. Let's do this first.
[51:08-51:17] SPEAKER_02: You know what drives me fucking crazy. When you buy a digital copy of a game and you download it and it immediately requires. As an update.
[51:17-51:17] UNKNOWN: It
[51:17-51:18] SPEAKER_02: makes me want to fight
[51:18-51:31] SPEAKER_03: someone. And it's like I only was planning on playing for 30 minutes. And now I spent 20 of it downloading this freaking you know whatever the version update. And now it needs another one. Like effectively.
[51:31-51:31] UNKNOWN: When there were
[51:31-51:37] SPEAKER_02: disks. That's fun. Of course you print a bunch of disks and I don't even like the update whatever.
[51:38-51:39] UNKNOWN: But
[51:39-51:47] SPEAKER_02: how about have the most current version on the store. Right. Because it's not that hard. If there's a current version you pushed it somewhere. I agree.
[51:52-51:57] SPEAKER_03: Stores buckets create. Yeah. This is both cool and dangerous.
[51:57-51:58] SPEAKER_02: Oh yeah.
[51:58-52:08] SPEAKER_03: It can do stuff. But I understand what it's doing. And in fact I said I would rather do this than being going to do click ops.
[52:08-52:08] UNKNOWN: 100
[52:08-52:14] SPEAKER_03: percent. Like just go to like so you know now in your history that we did a bunch of this stuff.
[52:17-52:28] SPEAKER_02: You might even have it log those in the readme. So the future version of it knows. As long as that's not like bad practice.
[52:48-52:49] SPEAKER_03: Yeah.
[52:49-52:49] UNKNOWN: Yeah I
[52:49-52:53] SPEAKER_03: think it is bad practice to include the details of all of it.
[52:53-52:57] SPEAKER_02: Basically give people exactly what they're looking for and now they just have to break your lock.
[52:57-52:57] SPEAKER_03: Correct.
[53:07-53:12] SPEAKER_05: So I want to go look at these to make sure.
[53:13-53:15] SPEAKER_03: GCS is easy. I want
[53:15-53:15] UNKNOWN: to
[53:15-53:18] SPEAKER_03: look at buckets. You said I
[53:18-53:18] UNKNOWN: don't
[53:18-53:24] SPEAKER_03: have any buckets. There we go. There's two buckets. And then this artifact
[53:24-53:24] SPEAKER_04: registry.
[53:25-53:26] SPEAKER_02: Yeah I had no
[53:26-53:26] SPEAKER_04: idea.
[53:31-53:33] SPEAKER_05: Excuse me.
[53:51-53:52] UNKNOWN: I
[53:52-54:18] SPEAKER_02: think you put them in there. At least it looks like you put transcription service in there. Like red is what it's taken out. And green is what it's replacing it with. And just that repository you create I think it is the main. Yeah they're in there. Okay. Okay it's private but still. Yeah you might ask it is it a security threat.
[54:50-55:09] SPEAKER_03: Yeah like the one that the planning next moves stop for eight seconds I guess a different agent and has a different icon. And they're reporting to like a boss agent. Yep 100 percent. Like they just figured it out earlier and that's what made the functionality of all of these LLMs. They're not it's multiple of them start to be better.
[55:09-55:17] SPEAKER_02: And basically when we started talking about like the real future being the services built on top of them these motherfuckers started building it.
[55:17-55:31] SPEAKER_03: Right I agree. So that's the question.
[55:31-55:34] SPEAKER_02: Go back up to the top of that. That's a very good question.
[55:35-55:36] SPEAKER_03: Not necessarily.
[55:37-55:44] SPEAKER_02: Can be considered information disclosure risk. Here's why recalling targeted attacks reduce obscurity. Is it critical? No.
[55:44-55:46] SPEAKER_03: And it's not public.
[55:46-56:25] SPEAKER_02: Right so you got to get into the repo find that break Google's authentication and encryption stuff to find us talking about what we've been doing at research. Right. Sounds like it's trying to talk
[56:25-56:31] SPEAKER_04: you into it.
[56:35-56:35] UNKNOWN: I
[56:35-56:39] SPEAKER_03: think it's probably. What do you think? Yeah
[56:39-56:39] UNKNOWN: I
[56:39-56:42] SPEAKER_03: agree. Ultimately it is our decision. I think it's probably fine.
[56:43-56:57] SPEAKER_02: Yeah and it calls out. So as long as this read me is just for you in this project. Right. It will never be shared or used as a template which it won't. I mean I might give it to you. But
[56:57-57:02] SPEAKER_03: it's not going to be allowed to go public and hey fork this and make your own transcription services.
[57:02-57:02] UNKNOWN: Like
[57:02-57:04] SPEAKER_03: if I'm going to do that I'm going
[57:04-57:04] UNKNOWN: to
[57:04-57:08] SPEAKER_03: take the read me put in in an LLM and say hey generalize this. Yeah
[57:08-57:22] SPEAKER_02: I could see posting like hey I don't know if anybody else is doing this but like using the read me like this has worked really well for me. So maybe if anybody else wants to. But yeah I'm not going to. I'm going to post a very generic read me in there.
[57:55-58:02] SPEAKER_03: Confirm from the main tag of the local Docker image you built and tested. I don't think I've done that.
[58:03-58:10] SPEAKER_02: Yeah I agree. I have a built one but I think it's easier to just do it.
[58:21-58:25] SPEAKER_03: Well I mean you did it but was it in here. Oh
[58:25-58:25] UNKNOWN: it
[58:25-58:27] SPEAKER_03: was in a different user.
[58:27-58:27] UNKNOWN: I
[58:27-58:39] SPEAKER_03: don't have. Like it would have been in my. Like Docker. Docker Compose. Yeah. It would be over here. I don't want to look at this. I don't know how to get back to like the regular desktop.
[58:40-58:40] SPEAKER_02: Yeah
[58:40-58:40] UNKNOWN: I
[58:40-58:51] SPEAKER_02: think. Yeah there's like no way it would be.
[58:51-58:51] UNKNOWN: It
[58:51-59:00] SPEAKER_02: could have it. If it's somehow part of the GitHub repo you would still have to like run it for it to actually show up over there.
[59:16-59:18] UNKNOWN: Use the
[59:18-59:24] SPEAKER_03: different. Model and was.
[59:35-59:38] SPEAKER_02: Sure you got a 2021
[59:38-59:42] SPEAKER_03: air in one. OK so you got the one from Walmart. That's cool. That's
[59:42-59:42] UNKNOWN: it.
[59:43-59:50] SPEAKER_03: It's a great machine. 650 bucks. Yes it's a great machine and maybe some learners going to Mac but you're not bad.
[59:50-60:27] SPEAKER_02: Yeah I sat there with her for like 30 minutes just going through like some standard stuff just even like how to use the trackpad is a big one and just getting all that stuff signed in and whatnot and I mean she's going to pick it up pretty quick. She was using Excel and was trying to three finger swipe somewhere. I think she was trying to do the three finger swipe inside of the app which is not a thing and I don't know that she understands like applications and the computer because she was like which thing am I signing into here right a few times like yeah computer versus Apple ID versus Google. I can
[60:27-60:52] SPEAKER_03: see it being confusing and it is almost like how we think about I would say the kids from my perspective maybe not the same from your perspective of using social media and the like you're like whereas I just have grown up with that like well I like well that's this service and this is this service they talk to each other you have to authorize sign in to both services and authorize both services to talk to the other and all of that and it just is on the screen. And
[60:52-61:13] SPEAKER_02: it's all like you only do that all at one time when you buy a new device. Right. And so it's even more like you've done all this a bunch of times probably once a week at least. Right but. It's not like it's in the context of where you know it you know like even in this app I go and I click the Google thing and it does this. Right.
[61:18-61:38] SPEAKER_03: What would you like to name this Docker image. I don't know that I want to tag it latest I want to track it as the combination I think Whisper service V1. Yeah. To specifically say that hey it's based on Whisper and I don't want to call it latest I want to call it V1.
[61:38-61:50] SPEAKER_02: Right. And some version of automatically iterating up like V2. Whenever you push new ones.
[62:02-62:11] SPEAKER_04: And maybe automatically. And what do you call that like what iterator future pushes should or something.
[62:36-62:41] SPEAKER_02: So what it handled it by saying I'm not going to say it but next time you need to type
[62:42-62:46] UNKNOWN: V2. Yeah.
[62:47-62:48] SPEAKER_05: So the way to
[62:48-62:53] SPEAKER_02: do that is with some CICD stuff like that. I can't do that with just
[62:53-62:53] UNKNOWN: like
[62:53-62:54] SPEAKER_02: the running the commands.
[62:54-62:56] SPEAKER_03: I agree. I'm going to have
[62:56-62:57] SPEAKER_02: to
[62:57-62:57] UNKNOWN: go
[62:57-63:01] SPEAKER_02: look at the latest one iterate and it would
[63:01-63:06] SPEAKER_03: have to have access to the repository and it does not nor do I want to give it. We
[63:06-63:11] SPEAKER_02: can set up I mean that would be GitHub actions. So instead of doing all this will and like the future.
[63:11-63:34] UNKNOWN: I agree. Right. Working and then we'll. And I. First of all. Right. I don't anticipate virtually in the service. That's true. Once we get it working for the next day or two. Yeah the transcription sets
[63:34-63:34] SPEAKER_03: specifically. It's
[63:34-63:36] UNKNOWN: just going to be stable. That's true.
[63:37-63:40] SPEAKER_02: I. Yeah so. Hard to. Any.
[63:41-63:41] UNKNOWN: Because
[63:41-64:19] SPEAKER_02: it's like oh we want to go. Some other. Sourceful. We're going there and. This is. But. V3. Or they drop into one more large V7 versus medium. Right. We're going to get our first nice.
[64:22-64:22] SPEAKER_03: Perfect
[64:22-64:22] SPEAKER_02: swimming
[64:22-64:25] SPEAKER_03: day while you guys. Yeah.
[64:27-64:27] UNKNOWN: So
[64:27-64:40] SPEAKER_03: what is going to be beautiful. Right today tomorrow and Sunday. So today I think I want to take advantage of it as much as possible being on our patio or some patio. And probably Sunday when we get back as well. But I'm going
[64:40-64:40] UNKNOWN: to
[64:40-64:54] SPEAKER_03: be gone on Saturday. Which I assume that weather will also translate to that as good as possible in Texas. But it's going to be 10 degrees hotter. And so Jamie Lear will translate to 90 there.
[64:55-64:58] SPEAKER_02: And you don't have your pool and your stuff
[64:58-64:59] SPEAKER_03: in the garage.
[65:00-65:00] SPEAKER_02: Right.
[65:02-65:05] SPEAKER_03: What I do today. I think it's
[65:05-65:05] UNKNOWN: a
[65:05-65:08] SPEAKER_03: little cold for pool weather because I think the high of the day is going
[65:08-65:08] UNKNOWN: to
[65:08-65:09] SPEAKER_03: be like 80.
[65:12-65:14] UNKNOWN: But that's perfect for patio
[65:14-65:18] SPEAKER_03: garage. Oh yeah. Hanging out playing pool. Wish we had
[65:18-65:18] UNKNOWN: that.
[65:18-65:24] SPEAKER_02: I don't wish that the Thunder hadn't won game five. But it would be nice to watch the game outside.
[65:28-65:30] UNKNOWN: So. Do you see the next
[65:30-65:31] SPEAKER_03: one? Yep.
[65:31-65:31] SPEAKER_02: So.
[65:32-65:32] UNKNOWN: Keep
[65:32-65:34] SPEAKER_02: pushing it out. So that'll be.
[65:34-65:37] SPEAKER_03: At a minimum there's six games. Yep. And
[65:37-65:37] UNKNOWN: I'm not making
[65:37-65:41] SPEAKER_03: them that much more tired. But there's a break anyway. So they're going to get some rest. Oh there's less
[65:41-65:43] SPEAKER_02: of a break each time they don't close it out.
[65:44-65:46] SPEAKER_03: Right. And I would like to see the next one.
[65:47-66:06] SPEAKER_02: Yeah. Yeah I'm not again worried about either one. But it seems like the Pacers match up with us a little better. I agree. In the sense that they're young and like to run. Right. I agree. So I would take the next all day. But we're going to head over either way. Do you like to run? Right. Or do you run
[66:06-66:12] SPEAKER_03: more than the Eastern Conference runs? Exactly. Do you run for the average NBA team in the Eastern Conference?
[66:13-66:20] SPEAKER_02: Do you like it? Right. Like I heard somebody saying the other day, I think they were talking about Oklahoma City.
[66:21-66:21] UNKNOWN: Like
[66:21-66:30] SPEAKER_02: the vibe of the stadium. And they were like it's a college stadium. That's what it is. It's like the most hopping college stadium.
[66:31-66:31] UNKNOWN: And the
[66:31-66:31] SPEAKER_02: fans
[66:31-66:39] SPEAKER_03: are really into the team and the players and we like them. We get along with them but we don't think they're like prima donnas. None of them are shitty or
[66:39-66:39] UNKNOWN: at
[66:39-66:40] SPEAKER_03: least it
[66:40-66:55] SPEAKER_02: hasn't come out. And specifically somebody else that was in that conversation was like, I mean they're like a college team. For real. They're like the best college team that's ever existed in the sense of how they play. They're very close to each other.
[66:55-66:55] UNKNOWN: If you took
[66:55-67:13] SPEAKER_02: all -star NBA talent and made it a college team and everybody bought in and even the coaches. That's the part that's not college. The coach isn't this like old dude that's been established forever and that's why the players respect him. They just do. And he's been in this organization. Like
[67:13-67:23] SPEAKER_03: you see them talk about him in the interviews, he's like he's awesome. This is what he told us. Right. And a lot of times, which I get into, it's like how we should think.
[67:24-67:24] UNKNOWN: Like
[67:24-67:25] SPEAKER_03: you know, whatever it is,
[67:26-67:26] UNKNOWN: the
[67:26-67:33] SPEAKER_03: day zero or game one kind of mentality. He is coaching their heads as much as he is coaching them on the floor. Right. What am
[67:33-67:33] UNKNOWN: I
[67:33-67:34] SPEAKER_03: going to teach you about basketball?
[67:34-67:36] SPEAKER_01: Right. That is important.
[67:37-67:45] SPEAKER_02: And the fact that you can get some 22, 23, 24 year old millionaires that have never been told no to play hard.
[67:46-67:46] SPEAKER_03: Yes.
[67:47-67:47] UNKNOWN: And
[67:47-68:08] SPEAKER_03: like really like work, go all out every night. And that's how you get that swarming defense. And it's not, I think all teams in some ways have the capabilities of doing that. But it is, you got to be deep, right? Because you'll get tired. Right. So we're deep and we have that ability. But they get out and get it. They literally are sprinting the whole time.
[68:08-68:08] UNKNOWN: That's really
[68:08-68:11] SPEAKER_03: the thing. And that's effort. It's in the head.
[68:11-68:25] SPEAKER_02: Yeah, it's not a genius game plan. Everybody knows that game plan. Like hey, run, run, run, run, run. You just can't pull it off. Yeah, like be in the lanes, do all the things and all the way buy in. Like any coach could come up with that. It's the magic of getting your guys to
[68:25-68:33] SPEAKER_03: do it is the coaching. Right, because you know the prima donnas are kind of like yeah, okay. Yeah, I'm working hard. It's like
[68:33-68:46] SPEAKER_02: whoever, Steve Kerr, when he had the Warriors, it's like do you coach Steph to score 40 and make threes from the logo or like does he just do that? Yeah, he just does. But you just manage his mindset. Yeah,
[68:46-69:02] SPEAKER_03: you put a scheme around to make that more likely to happen. Exactly. I'm going to work this scheme and you should end up with 20 free shots a game wide open and do your thing over there. Also, I heard a podcast talking
[69:02-69:15] SPEAKER_02: about Caitlyn and Angel and basically said it's kind of silly. We see what's going on. Like they're trying to make it pop and being in the news and doing like that.
[69:15-69:15] UNKNOWN: They're trying
[69:15-69:22] SPEAKER_03: to make it be about race. In reality, I don't think it is. I don't think they like it. I don't think they like each other, but I don't like a lot of people.
[69:22-69:22] SPEAKER_02: Yeah, I think.
[69:22-69:24] SPEAKER_03: And it has nothing to do with race.
[69:24-69:34] SPEAKER_02: It seems like Angel, I think in America, it's OK for black people to be racists. And I think Angel Reese is one. There's several
[69:34-69:36] SPEAKER_03: people in the NBA that are like that.
[69:36-69:36] SPEAKER_02: Right.
[69:37-69:37] UNKNOWN: And
[69:37-69:39] SPEAKER_02: that's whatever. That's the American. WNBA,
[69:39-69:39] UNKNOWN: excuse
[69:39-69:47] SPEAKER_02: me. Yeah. But like that was a regular hall of heart foul. No, it was. And like nothing to be, maybe get up and be like,
[69:47-69:47] UNKNOWN: ugh,
[69:47-70:01] SPEAKER_02: but like don't, you're obviously, you've got hate in your heart. Whatever. You're a young woman. You'll figure it out. But generally, they said the comparison is kind of silly because it's like Stefan Dremont is what we're saying.
[70:02-70:02] UNKNOWN: And
[70:02-70:04] SPEAKER_02: like if they were on different teams, they've got this rivalry.
[70:05-70:05] UNKNOWN: Like,
[70:06-70:09] SPEAKER_02: it's not close. Right. And that's what
[70:09-70:24] SPEAKER_03: I think that people try to, that are trying to put race on it or whatever. It's like, well, you just, you know, she's pretty privileged or something. She's pretty whatever. She's white. Angel's better looking than Kaitlyn. Right. Exactly. Whatever. She's a lot better.
[70:24-70:24] UNKNOWN: And
[70:24-70:24] SPEAKER_03: like,
[70:24-70:24] UNKNOWN: it's
[70:24-70:27] SPEAKER_03: like, well, you guys just don't like, you know, her because she's black.
[70:27-70:27] UNKNOWN: It's
[70:27-70:32] SPEAKER_03: like, no, I don't like her because of her attitude. Yeah. But they both kind of have bad attitudes.
[70:32-70:32] UNKNOWN: And
[70:32-70:47] SPEAKER_03: she's just not very good. Right. When I go to her cat basketball and I've watched a lot of basketball in my life, I really have. Right. Like I enjoy watching her Kaitlyn a lot more because she plays a high level game. She can actually shoot the ball. The thing
[70:47-70:47] UNKNOWN: is.
[70:47-70:47] SPEAKER_03: And is
[70:47-70:56] SPEAKER_02: not playing like. She's the only one on the court that's doing things like men are doing. Right. And it's because she's a shooter and that's fine. But like.
[70:56-70:56] UNKNOWN: That's easier
[70:56-71:00] SPEAKER_02: for a woman to do. You can see Steph whenever she pulls up from the fucking logo and they're shooting.
[71:00-71:00] UNKNOWN: She
[71:00-71:03] SPEAKER_02: looks like that. From the same distance. Right. At the
[71:03-71:17] SPEAKER_03: same basket. And her shot looks good. It looks like a pure shooter and all of those things like that. Whereas Angel Reese just looks like, you know, a 12 year old dude. Yeah. He looks like a 12 year old boy. She looks like. Yeah. Like that's about how.
[71:17-71:17] SPEAKER_02: Like
[71:17-71:17] UNKNOWN: your average.
[71:17-71:22] SPEAKER_02: Not average. Your high level AAU 14 year old. Wiping the floor with all of them. Right. No question.
[71:22-71:29] SPEAKER_03: No question. Like I think that her skill set, even body type, is probably about a 12 year old AAU star.
[71:29-71:29] SPEAKER_02: Yeah.
[71:29-71:31] SPEAKER_03: Like a beast of a 12 year old.
[71:31-71:31] UNKNOWN: But
[71:31-71:38] SPEAKER_03: like. But if you put her anywhere beyond that in a men's game. She would not. But I think Kaitlyn.
[71:38-71:43] SPEAKER_02: Yeah. Kaitlyn is close. She's still making those shots. Can she get them off? Can she get them off?
[71:44-71:48] SPEAKER_03: Can she get open or whatever. But if you put her in the court. She's
[71:48-71:48] UNKNOWN: going
[71:48-71:48] SPEAKER_03: to
[71:48-71:48] UNKNOWN: make
[71:48-71:51] SPEAKER_03: that shot. And you better not give
[71:51-71:58] SPEAKER_02: her that freaking space because she's going to make it. And that's why, I mean, that's why the gap is so big because she's doing something different. Right.
[71:58-72:09] SPEAKER_03: And yeah, I don't know. And you actually have to guard her. And you know, her game is not based on like, well, you're going down low and you're tall and you're big. Right. Like you try that.
[72:10-72:30] SPEAKER_02: Also, I was watching Cameron and Mace, their podcast again, and they were talking about something to do. Angel Reese got like 500 points and 500 rebounds or something. And she did it faster than anybody else. So they were kind of trashing all the old heads that from the WNBA that before were talking about like Kaitlyn and Angel had a bunch to go through. They were just going to come in and dominate.
[72:31-72:31] UNKNOWN: And
[72:31-72:31] SPEAKER_02: they're like,
[72:31-72:31] UNKNOWN: well.
[72:32-72:38] SPEAKER_02: They did. But they did both say like, I mean, Angel got 500 rebounds because she keeps missing layups.
[72:39-72:39] UNKNOWN: And
[72:39-72:40] SPEAKER_02: getting the rebounds too.
[72:40-72:40] UNKNOWN: It's
[72:40-72:42] SPEAKER_02: true. She gets two or three
[72:42-72:45] SPEAKER_03: rebounds of possession. Because she just plays sloppy.
[72:46-72:46] UNKNOWN: But
[72:46-73:29] SPEAKER_03: in just in general, the WNBA play is sloppy. With one exception. Yeah. That's super sharp. Right. And I think that there are people like the latest generation of girls coming in that have been playing in the college and in the Olympics and stuff like that. They play better. Like their skills are better. And it's not just sloppy going on. Like you can tell they've been playing. They had coaching and AAU and all like guys have been doing for 20 years. Right. They have been playing their whole lives since. Like you can go back and see like, you know, Kaitlyn when she was 10. Right. Playing in these leagues and looking the same way she does now. Right. And I just think it's going to take another 20 years for it to be better. But it's still not going to be.
[73:30-73:37] SPEAKER_02: Yeah. That's the problem is like. And also like when does the NBA decide we're not willing to lose tens of millions of dollars every year? When the culture changes and they
[73:37-73:40] SPEAKER_03: can say and they can do that without getting canceled.
[73:40-73:40] UNKNOWN: And
[73:40-73:46] SPEAKER_02: like can it then continue and like does it is that runway long enough? It's not. For the
[73:46-74:03] SPEAKER_03: new figure. It's not. Right. I mean this is I don't know when we're going to get to this place but it is not sexist that no you don't get paid the same because you don't you're not as popular. Right. And you can try to shame people and say well you should like this as much as you like the others. Talk
[74:03-74:09] SPEAKER_02: to all these super sexist women that aren't watching you play basketball and are watching men play basketball. Right. Exactly.
[74:09-74:09] UNKNOWN: When
[74:09-74:19] SPEAKER_03: you find there are women who like sports there's not a lot of them. It's probably down in the like that legitimately would look at basketball the way we do. Nobody else is going out
[74:19-74:21] SPEAKER_02: but they're going to the sports bar to watch the
[74:21-74:21] UNKNOWN: game.
[74:21-74:27] SPEAKER_03: That legitimately enjoy sports. They don't like women's sports either. So it's not I mean that's.
[74:27-74:27] UNKNOWN: They
[74:27-74:43] SPEAKER_03: like the best. I mean so you can lay some statistics or facts or whatever over top. It's not that I'm sexist within every I guess women all sports fans are sexist. Right. Make a that's one way of fashion show that a bunch of straight guys want to go to.
[74:43-74:43] SPEAKER_02: Right.
[74:43-74:43] SPEAKER_03: And
[74:43-74:45] SPEAKER_02: watch it fail. Same same.
[74:46-75:17] SPEAKER_03: Right. Right. That's exactly that's a good example like well how come you know men are not into fashion. Well because you make a fashion show. Because it's not this they're different and you like and look at things differently and that's just the way it's always going to be. And we just live in this little retarded era where we're pretending like things are how they are like the like what is it that whatever the Army Special Forces is are they the ones that did it. Do you know what I'm talking
[75:17-75:17] UNKNOWN: about. The
[75:17-75:29] SPEAKER_02: whole military has been removing their freaking qualification standards as fast as they possibly can because they need the World War Three level numbers but everybody's on to their bullshit.
[75:29-75:59] SPEAKER_03: No I think specifically like there's this group women's group that lobbied the some special forces to the Green Berets somebody like that to say hey allow women but don't change the standards. I think that's perfectly reasonable. That's like hey if you say well we don't we're not saying make the standards be different just make it open to any sex is if you can pass the test and they did it and nobody has passed. Not one. Of course because it's really hard for men to do.
[76:00-76:01] SPEAKER_02: And it's purely
[76:01-76:26] SPEAKER_03: physical it has nothing to do with like any of the other intelligence. And she sent me this video of I think that same group that did some field testing of women's units and men units going through this and basically they've determined that women get hurt more often and have it and have a difficult time in the field doing the same things as men. It's like well they can do the same things they just can't keep up at the same pace.
[76:26-76:29] SPEAKER_02: But have you not seen lioness. Right. Like there's
[76:29-76:38] SPEAKER_03: all of them and they're beating up everybody. Right. It's like but yeah you put them in the field like well they have a hard time carrying the packs and keeping up with the team and do
[76:38-76:39] UNKNOWN: it.
[76:39-76:40] SPEAKER_03: Yeah.
[76:40-76:41] SPEAKER_02: I could have.
[76:41-76:41] UNKNOWN: That's before
[76:41-77:02] SPEAKER_02: you even get to the whole like that's so obvious and easy that it's like of course but you say like that's perfectly reasonable to say like if you can do this well I would say it's like 75 percent reasonable because there are other variables like now you have one woman in a group of seven dudes in the middle of nothing. What are we doing? That changes
[77:02-77:02] UNKNOWN: things.
[77:02-77:06] SPEAKER_02: What are we doing? It really does change things. There's going to be three love
[77:06-77:06] SPEAKER_03: triangles
[77:06-77:16] SPEAKER_02: first of all. There's not going to be one. Yeah and we're this super tight knit team. I mean in ancient times the bros fucked each other. They were so close. It was such a
[77:16-77:23] SPEAKER_03: thing. It's going to be a thing. Yeah. Unless you like have pairs. Right?
[77:23-77:23] UNKNOWN: I
[77:23-77:25] SPEAKER_03: can see that. Even that.
[77:25-77:25] UNKNOWN: Like
[77:25-77:26] SPEAKER_03: what do
[77:26-77:26] UNKNOWN: you
[77:26-77:27] SPEAKER_03: call it? Husband and wife whatever.
[77:27-77:30] SPEAKER_02: Fingers crossed you don't get in a retarded argument. Right.
[77:30-77:30] UNKNOWN: That
[77:30-77:32] SPEAKER_02: could happen between anybody or whatever but
[77:32-77:36] SPEAKER_03: hey that we're only doing pairs and if it breaks down okay you're out.
[77:36-77:36] UNKNOWN: Well
[77:36-77:37] SPEAKER_03: so now we're having to.
[77:37-77:37] UNKNOWN: You're never coming
[77:37-77:40] SPEAKER_02: in without a pair. We're having to fundamentally change special forces now.
[77:41-77:41] UNKNOWN: So
[77:41-77:52] SPEAKER_02: like that's but like the physical side of it is just so obviously like of course that you don't even have to get to the next side and argue the nuance over it because what are you talking about? Right so
[77:52-78:10] SPEAKER_03: now things like submarine warfare and all that. Sure. Like you're pressing buttons or you know looking at a periscope doing whatever. I think there are mindset differences too. Yeah. For sure. They're just harder to prove. That is the thing. That is more controversial. Right. To say that hey our brains are
[78:10-78:10] UNKNOWN: not
[78:10-78:11] SPEAKER_03: physically. Right
[78:11-78:36] SPEAKER_02: because we live in a world. Physiologically different. We got to this place on the physical side. Where what's very clear to everyone as a fact we were there were still arguments over. So yeah this other side of like intelligence emotional intelligence fucking all these other different things. You can't prove that. So it's like but okay so physicality is the one thing humans are different about. And we can't agree on
[78:36-78:36] UNKNOWN: that. Across
[78:36-79:04] SPEAKER_03: the board. We can't agree on that. Yeah. But in the end like I need a very focused and lethal warfare unit. Right. To put in the field. It has nothing to do with equality or anything. You know and I would argue that it's like this everywhere. And this is the problem is like well I want to put together the best most entertaining movie as possible. And all of these other factors that you're trying to lay in it just the cloud and make it worse. Because it's not as
[79:04-79:11] SPEAKER_02: obvious as like that group is stronger than that. Right. That's not what we're talking about. It's like that group's better at writing stories in that group.
[79:12-79:20] SPEAKER_03: And it doesn't matter. Like I'm not saying that women are better at writing stories or better or worse at writing stories. What I'm saying is it doesn't matter. They're
[79:20-79:20] UNKNOWN: probably
[79:20-79:36] SPEAKER_03: you're a woman or women. Probably. Yes. Some men are good at writing stories. Probably. I agree with that. And I mean to a certain extent yes maybe black people are better at writing black stories for black consumers because they understand better.
[79:36-79:36] UNKNOWN: Have the
[79:36-79:39] SPEAKER_03: experience. What that again is not necessarily associated with race.
[79:39-79:39] UNKNOWN: It
[79:39-79:54] SPEAKER_03: is that hey you write what you know. Right. Yes. Right. And it has nothing like so to say that but on the flip side can is it possible for me to write a story about that is appealing to white people. Probably.
[79:55-79:56] UNKNOWN: It's not
[79:56-79:58] SPEAKER_03: that crazy. Or vice versa.
[79:58-80:06] SPEAKER_02: Yeah. And you write a really emotional one. And like if people don't know they're not going to be like what color was this race. Right.
[80:08-80:34] SPEAKER_03: Who wrote this. Or you know the representation thing is like hey if I write a story for a gay person does the actor have to be gay. Like well maybe. But if they're not good at the job it doesn't matter. How far are we taking it. Like what if I write a story about retarded people. At some point you have to be like OK I'm just trying to write a good story and make a good movie. What if I write a story about a serial killer.
[80:34-80:34] UNKNOWN: I
[80:34-80:38] SPEAKER_03: need to go troll the prison. That's a perfect example.
[80:38-80:38] UNKNOWN: What
[80:38-80:47] SPEAKER_03: are we talking about. Should they be represented. I've never killed anyone. How can you possibly write. How can you possibly relate to being a serial killer.
[80:47-80:47] UNKNOWN: You
[80:47-80:48] SPEAKER_03: can't. Right. Because you've never been.
[80:49-80:49] UNKNOWN: Right.
[80:50-80:54] SPEAKER_03: Stop it. It's silly. That mother
[80:54-81:12] SPEAKER_02: trucker is still working. I assume it's not broken. No it's just the whisper models fucking gigantic I think. And it has to like download it and then load it into the whatever thing. I think it will.
[81:15-81:20] SPEAKER_03: I think. The last time I looked at it was on four.
[81:20-81:25] SPEAKER_02: Maybe not. It's been on five for a long time and because that is the whisper model.
[81:27-81:28] UNKNOWN: Yeah
[81:28-81:33] SPEAKER_03: I went over here to see if it was showing anywhere else like if it's actually in here but it's just doing it in the background.
[81:33-81:34] SPEAKER_00: Yeah.
[81:47-81:48] UNKNOWN: Yeah
[81:48-81:50] SPEAKER_03: I think we may be
[81:50-81:50] UNKNOWN: able
[81:50-82:39] SPEAKER_03: to get past getting it into the repository and actually get it to cloud run. But one of the things that I also we may need to update the read me it to talk about. Oh no. No it's fine. I was going to say to talk about authentication but I did that and we shouldn't. Nobody should be able to hit the endpoint the cloud run endpoint directly. Right. It will only accept authentication from Google. So that means I am right. And so you could you can do that by doing what do you call that workload identity federation. So you federate to any other. And then that ties into a service account. Right. And then you get your token that way. But we're not. That's a whole other thing. We're just going to do internal.
[82:39-82:39] UNKNOWN: And
[82:39-82:56] SPEAKER_03: then the only thing that's going to be calling it is this cloud function. And the cloud function runs when we upload something to a book triggers the bucket. So dropping it. So we use our personal identities to authenticate audio file to the book. Right.
[82:56-82:56] UNKNOWN: And
[82:56-83:19] SPEAKER_03: then everything else is internal. Yeah. And you don't need any external. Yeah. There's no security to be breached. Right. Well if it can be breached well. Yeah. So we will have this public endpoint out there for cloud run. But people can use that. And that's on you Google. Yeah. What am I going to do.
[83:20-83:20] UNKNOWN: I
[83:20-83:37] SPEAKER_03: need a few shekels. I'll be able to allow people to do that. Right. Like how else can I. Well if you if there's something that I need to do to harden a cloud run endpoint then you can't use cloud run. I know plenty of enterprise users that are using cloud
[83:37-83:37] UNKNOWN: run.
[83:37-83:39] SPEAKER_03: Yeah. You need air gaps. Right. If you need more than cloud
[83:39-83:41] SPEAKER_01: run. Like what are we talking about.
[83:49-83:51] SPEAKER_03: They were working. I told you we
[83:51-83:51] UNKNOWN: were
[83:51-85:14] SPEAKER_03: working on that agent for doing consulting work basically. And we were just about to the place where we were ready to do like MVP and really start testing it. And two weeks ago the or announced like so we have like the workspace that we can just go in and start building stuff and testing like basically they moved to a different one. Like there was some security risk or whatever. They're like by the 30th today all of those projects are going to be closed. So we basically had to start document make sure we had everything documented and in a repository. And you get in the next two weeks trying to start the shit. Going through all the bugs of this new new environment requires like 10 hours 10 to 15 hours worth of training and certification before you're allowed to use the environment. And so my goal like this is the reason why it popped in my head is because I was thinking what I need to do this like oh I got to do that freaking bunch of labs and training on this new environment so that I can get authorized to use it so that I can then start. So whatever part of the course like basically we were right at there. It's like it's like within two weeks we're wiping out all your stuff. It's like right. It's like there's an exception process but it needs to be a good reason. Like the reason is you didn't give me enough time. Right. We're almost fucking done with this
[85:14-85:15] SPEAKER_02: project.
[85:17-85:26] SPEAKER_03: That sucks. But it's fine. Keep you busy. There you go. Oh no something happened. No it's.
[85:27-85:29] SPEAKER_02: Yeah we got a new extracting line I guess.
[85:30-85:30] SPEAKER_03: Yeah.
[85:37-85:39] SPEAKER_05: Something happened.
[85:42-85:43] UNKNOWN: Yeah.
[85:51-86:10] SPEAKER_03: I basically have one meeting and one training and the training is it's good. It's like it's designed for CEs which are the customer engineers. So they're on the agent. They're on the account side. But there's engineers over there too and they're dedicated to a customer. You
[86:10-86:10] SPEAKER_02: were kind
[86:10-86:15] SPEAKER_03: of almost in that space. I worked with a bunch of customer engineers especially like when you do pre -sales.
[86:16-86:16] UNKNOWN: Like
[86:16-86:16] SPEAKER_03: you were
[86:16-86:16] SPEAKER_02: getting
[86:16-87:02] SPEAKER_03: or you were maybe like gonna you had the opportunity to become one. Yeah for sure. And so but they're doing this series on agent space and it's a technical series like every Friday for an hour. And so that's good. I'm doing that training and they go. It's actually good training where they like showing these windows because normally it's like especially for things for account nice for account teams. It is like hey say these words to the customer like. Yeah. No I actually want technical training like what when I go to actually deploy this. Right. How do you do it. And it loses all this like even they upfront they're like hey this is technical training. And if you're not in a technical role you don't need it.
[87:02-87:08] SPEAKER_02: If you're in sales go be continue to be disappointed. Right.
[87:15-87:43] SPEAKER_03: But in general agent space is pretty straightforward. It's just it's really good like you it is this combination of enterprise search and an agent. Yeah. And you can tie any other agent to it. And in the end like the stuff that's complex is tying your identities and like creating the data pipelines to these corporate or enterprise. Right. That's all old stuff. That's not new.
[87:43-87:47] SPEAKER_02: The agent the agent portion of it is just ultimately functions.
[87:47-87:47] UNKNOWN: It
[87:47-87:52] SPEAKER_02: took functions and it took AI and it said hey they work together. Now we call them agents. Exactly.
[87:52-88:35] SPEAKER_03: Right. And so it is that the complexity of doing that is like hey well we want to tie this data source but not this one. Right. How do you authenticate to this and how do you make sure that. How can I make a tool how can I make this thing a tool that an agent can use. Right. That type of shit. Yeah. It is not literally cutting edge stuff. It is more like you know just. It's just plugging into the cutting edge. Like that side of it. It's just giant because every business is like well sure I'll use that tool. If I can for one stop shopping I can access all of these five different places without switching back and forth. Yes. So this is just a huge business opportunity and people are signing up to do it. And it's like well you need to know how to do that. It's like it's not necessarily interesting or cool. It's
[88:35-88:35] UNKNOWN: just. It's
[88:35-88:36] SPEAKER_03: valuable. Right.
[88:37-88:37] UNKNOWN: Yeah.
[88:38-89:16] SPEAKER_02: You're basically the construction workers. Right. For the future like integrating the future. Right. For. Two of the seven potential games are at seven o 'clock. OK. The rest are at seven thirty.
[89:17-89:23] SPEAKER_03: It's not terrible. I'm able to make it through and not have a terrible day the next day. Yeah. If
[89:23-89:23] UNKNOWN: even
[89:23-89:25] SPEAKER_03: staying up to the very end. Yeah I agree.
[89:25-89:30] SPEAKER_02: It's just like. Why not seven across.
[89:30-89:36] SPEAKER_03: Right. Because we're in the Midwest. Both teams are in the wrong teams. Well maybe not. Yeah.
[89:36-89:36] UNKNOWN: I'm
[89:36-89:41] SPEAKER_03: not sure. If it's New York then I get it. But that actually makes it go earlier.
[89:42-89:48] SPEAKER_02: Yeah it should be a six. Yes. Seven thirty in New York City. Yeah exactly. Exactly.
[89:49-89:49] UNKNOWN: Six
[89:49-89:57] SPEAKER_02: thirty. Also those fucking degenerates are just a later culture. So no I agree. Over there. And
[89:57-90:16] SPEAKER_03: they want to catch West Coast people. Because if you start at six thirty Eastern it's like three thirty. Yeah. On the West Coast and people are not even home. They're not even let them work yet. Yeah. In a lot of cases because they don't bring it start work till ten. Yeah. Which is crazy. Yeah. Like when I went over.
[90:16-90:16] UNKNOWN: Already
[90:16-90:29] SPEAKER_03: two hours behind us. Like I was worried about getting the work and getting it. I literally got to the office and was like. I literally was the only person in there for like two hours. I literally. I was worried about like I'm gonna get there at eight. Like just to.
[90:29-90:29] UNKNOWN: You
[90:29-90:40] SPEAKER_03: know a little later. Because this is not my office. But because at that time in the data center. Like I've been there very long. Right. Like we were getting to work at like seven. Of
[90:40-90:40] UNKNOWN: course.
[90:40-90:41] SPEAKER_03: Seven thirty. It's like I'm gonna get.
[90:41-90:41] UNKNOWN: The
[90:41-90:42] SPEAKER_03: actual workers bro. I'm gonna get there at
[90:42-90:57] SPEAKER_02: like eight. Like the concentration of money on the coast. But the lack of work. It's like the Pareto principle in reverse. Like 80 percent of the work's being done in the flyovers. Right. And these people are just fucking useless. But somehow they've convinced us to let them control the money. Right.
[90:59-91:02] SPEAKER_03: I don't think it's gonna be like that for much longer.
[91:02-91:02] UNKNOWN: I
[91:02-91:04] SPEAKER_03: mean I think that.
[91:04-91:04] UNKNOWN: You
[91:04-91:04] SPEAKER_03: know.
[91:04-91:04] UNKNOWN: I mean the
[91:04-91:05] SPEAKER_03: billionaires. They're
[91:05-91:05] UNKNOWN: trying
[91:05-91:19] SPEAKER_03: to become lords right now. They're trying to buy up all the land and do that. But I'm just. The point. Like the Midwest is like coming up for sure. Right. Like Austin is. It is for sure a take up. Like just by talking to people.
[91:19-91:19] UNKNOWN: We're
[91:19-91:31] SPEAKER_03: going like it is like you know both. Like that was that's the second place where Waymo is launching. And that is the place where Tesla is launching. And I think Tesla's.
[91:31-91:31] UNKNOWN: Well
[91:31-91:51] SPEAKER_03: they. They had. I think I read something. I don't know whether it was true or not. That they got approval to launch in California yesterday. Or this week. You know. So California. That makes sense. Silicon Valley. They're going to start somewhere in San Francisco somewhere like that. Right. And then. One warning.
[91:52-92:02] SPEAKER_02: It's because you built on a Mac. It's fine. I think you might. Or it should. That's interesting. It's like doing anything with that.
[92:03-92:09] SPEAKER_03: I didn't think about that. Well we'll put it up there and see what happens.
[92:11-92:16] SPEAKER_02: Oh OK. So. You might be able to just say like continue.
[92:21-92:28] SPEAKER_01: Or just ask it about what. What's next. Yeah. Well successful.
[92:39-92:39] SPEAKER_03: OK.
[92:40-92:45] UNKNOWN: OK. Makes sense.
[92:48-93:04] SPEAKER_02: Docker push. Even that like that would have been. Two and a half minutes of like grabbing something.
[93:04-93:04] UNKNOWN: What
[93:04-93:05] SPEAKER_02: is the
[93:05-93:05] UNKNOWN: command? What's
[93:05-93:06] SPEAKER_02: the exact command?
[93:06-93:22] SPEAKER_03: Is it working? Yeah. Yeah. Just that. Even if you're not using it for thinking. Just being able to. Helping. Format. Lines and stuff like that. 100 percent.
[93:30-93:31] SPEAKER_02: This is
[93:31-94:59] UNKNOWN: going to take forever. OK. OK. OK.
[95:15-95:34] SPEAKER_02: This is not going to finish before. Like if you look at that's at 76 out of 5250. Where do you see that? That's megabytes. The rest of that will be done in a couple of minutes. Those are all done. But that's the whisper model. Yeah. It's going to take some
[95:34-95:38] SPEAKER_03: time. I'm not sure if it will work in cloud run
[95:38-95:38] UNKNOWN: in the future.
[95:38-95:45] SPEAKER_03: Now that I think about it. Like if we built the image. You could run that image locally. Because you it was building a Mac and running a Mac.
[95:45-95:54] SPEAKER_02: Well I couldn't even run the medium one because it was too big to actually ultimately load. Like it downloaded it but then it would it was too big to actually run on my computer.
[95:54-96:02] SPEAKER_03: Well what I'm saying is this image may not run on whatever the underlying hardware. Right. We can
[96:02-96:04] SPEAKER_02: adjust the hardware. Yeah.
[96:04-96:09] SPEAKER_03: But I don't think you want to run a Mac hardware in cloud run. That's not
[96:09-96:10] SPEAKER_02: going to be a Mac.
[96:10-96:16] SPEAKER_03: No it's going to be a Linux machine in cloud run. But this image was made on a Mac.
[96:16-96:23] SPEAKER_02: Right. That was that warning. But like based on what I was doing yesterday it's basically like it shouldn't be an issue. It's still built for.
[96:24-96:29] SPEAKER_03: Yeah. As long as it's built for Linux and will run natively on a Linux machine.
[96:29-96:37] SPEAKER_02: Yeah. I think that warning was saying like hey we detected that your machine is different than what this is being built for.
[96:37-96:37] UNKNOWN: Oh
[96:37-96:47] SPEAKER_03: got it. Thanks. I'm not trying to run it on my machine. Yeah. So we might as well quit or do something else while that's happening.
[96:48-96:51] SPEAKER_02: Yeah. We got a little 20 minute something.
[96:51-97:05] SPEAKER_03: Maybe we're talking about I want to upload that file. Will you send me that file. The audio file like the JSON file. Oh yeah. You should have it. It's in the project.
[97:06-97:07] UNKNOWN: OK.
[97:13-98:39] SPEAKER_03: I want to talk to Jim and I about. This opening. Yes. I didn't know you could do that first of all. Absolutely.
[99:29-99:42] SPEAKER_02: Formatting just the text, I agree that's easy. Right. But in a structured way with the users and whatnot is slightly different.
[99:57-100:03] SPEAKER_03: I want to see if it can do it just like this. Yeah. Like how easy is it to turn that JSON into a transcript?
[100:03-100:03] UNKNOWN: I
[100:03-101:40] SPEAKER_02: mean, so it all depends on how good the model is I think because ultimately super easy. Right. JSON is going to be like, okay well I know the properties of it now, here's this, this and this and then it's just going to make like a bulleted list basically of the different text inside the different bracket. Like each bracket equals a line. Yeah, nailed it. But it's not, like my guess is that model does nothing with differentiating users. It's just hearing words. You might ask it like, so specifically does the tiny whisper model do any kind of like user differentiation? Yeah. Oh, you want to make a movie?
[101:42-101:42] SPEAKER_03: Oh yeah.
[101:42-101:44] SPEAKER_02: That's that video. Yeah, that's
[101:44-101:44] SPEAKER_03: what video
[101:44-101:52] SPEAKER_02: is. Yeah. Times 10 years. No user.
[102:06-102:07] SPEAKER_04: So,
[102:08-102:08] UNKNOWN: how
[102:08-102:13] SPEAKER_04: do we add that functionality?
[102:22-102:23] UNKNOWN: Oh,
[102:23-102:27] SPEAKER_01: there you go. Go back up to the last paragraph.
[102:30-102:31] UNKNOWN: That's,
[102:32-102:37] SPEAKER_02: you use it as an output and go to a speaker diarization system.
[102:40-102:47] SPEAKER_03: Okay. Yeah, so there's a follow on, so that's I think will be part of the function. Yeah,
[102:48-102:48] UNKNOWN: so
[102:48-103:10] SPEAKER_03: it's going to go through this series of things that we're going to do this, turn it into a transcript, run it through speaker diarization and maybe even interact and say, hey there's four speakers. Right. Give me the first words that each one of them spoke. Okay. And then move on. Yep. Okay. So,
[103:15-103:16] UNKNOWN: the transcript.
[103:26-103:30] SPEAKER_01: What's the progress on that?
[103:31-103:38] SPEAKER_02: Push. It's moving a little quicker now that it's the only one. But it's not yet that
[103:38-103:38] UNKNOWN: half
[103:38-103:40] SPEAKER_02: of the five gigs.
[103:42-103:42] UNKNOWN: There
[103:42-103:42] SPEAKER_02: you go.
[103:42-103:42] UNKNOWN: So
[103:42-103:54] SPEAKER_02: it's B. All day. Yeah. What the fuck is Joey saying? Maybe it's further dead. No, that's it. I think the dentist is so that it doesn't.
[103:55-104:00] SPEAKER_03: Right. It's not a very good transcription, but I wanted to see something like this. Right. Yep.
[104:01-104:01] UNKNOWN: I
[104:01-104:01] SPEAKER_02: agree.
[104:09-104:20] SPEAKER_03: I'm not truly trying to, but I do want to go back and talk and be like, okay, well what's the workflow to get through, get to an output that has...
[104:22-104:22] UNKNOWN: How
[104:22-104:23] SPEAKER_03: do you choose if you're not darn good? And
[104:23-104:30] SPEAKER_02: specifically for this, we need transcription, which is its own service, which
[104:30-104:30] UNKNOWN: is the one
[104:30-104:54] SPEAKER_02: which is going to output just a big long list of all the words that were said in the recording. And then Jim and I called it diarization, which is to distinguish between different people in the conversation. How do I choose? I want to choose B. At the bottom of them? Is there like a choose this one? No.
[105:17-105:19] SPEAKER_03: I don't know if that's the word.
[105:19-105:22] SPEAKER_02: It'll know. That's what I would have guessed.
[105:29-105:33] SPEAKER_01: This may be...
[105:54-105:55] SPEAKER_03: Sorry.
[105:55-106:05] SPEAKER_02: Maybe it would kill, but we could in these times have AI respond audibly so it could hear it.
[106:05-106:07] SPEAKER_03: Oh, that's true. Yeah.
[106:08-106:22] SPEAKER_02: And it would actually probably make us more efficient in actually absorbing the entire text that it outputs. 100%. But that may be overkill slash just wait until they figure out the screen monitoring and then that's done.
[106:22-106:29] SPEAKER_03: I don't disagree. I think that's a good idea. Like anytime we're interacting like this, just put it in audio mode
[106:29-106:33] SPEAKER_02: or archive all the conversations. It's already in text.
[106:33-106:33] UNKNOWN: We
[106:33-106:36] SPEAKER_02: don't need to transcribe it. There you go.
[106:36-106:37] SPEAKER_03: Yeah. So at the end,
[106:38-106:38] UNKNOWN: like
[106:38-106:46] SPEAKER_03: anything we did like this during the day, during the morning, we also put that with the notes. Yeah. Like I do that by the way, when I am summarizing meetings,
[106:47-106:47] UNKNOWN: I
[106:47-106:59] SPEAKER_03: grab any, I grab text, chat conversations, emails, all that and the transcripts and put it all together and say, Hey, summarize everything that we're doing. Like, and I use that because those are just different inputs.
[106:59-106:59] UNKNOWN: So we got a team
[106:59-107:00] SPEAKER_03: of three. Right.
[107:00-107:02] SPEAKER_02: It's not a team of two that we're working in. Exactly. I
[107:02-107:09] SPEAKER_03: already do that. Yeah, that is a great point. So it says MP3 to a suitable format.
[107:10-107:10] UNKNOWN: It
[107:10-107:16] SPEAKER_03: will do that. Speaker diarization, then transcription. So I guess the speaker diarization is first.
[107:17-107:26] SPEAKER_02: Not possible, I don't think. But maybe. I guess, yeah, it's. How does it do?
[107:26-107:26] UNKNOWN: I
[107:26-107:27] SPEAKER_02: guess there's services for
[107:27-107:27] UNKNOWN: it. So
[107:27-107:33] SPEAKER_03: to WAVE, but we can just record and WAVE first of all. Yep. And so that might be a change we need to make.
[107:35-107:35] SPEAKER_02: But that
[107:35-107:37] SPEAKER_03: is a computer program that can do that.
[107:37-107:40] SPEAKER_02: Well, it currently does it. That's already done that.
[107:40-108:05] SPEAKER_03: Oh, it does it as a part of whisper. Right. But if it is going to some other program first. True, true. And that's what it is. It is recommended. And like, hey, go to use this Python tool and it will do speaker diarization. OK. And then there's some alternatives and then go to whisper. OK. Right. Yeah. So we need to either record and WAVE or convert. I think it's probably
[108:05-108:05] SPEAKER_02: convert.
[108:05-108:05] UNKNOWN: I
[108:05-108:14] SPEAKER_02: would bet all the money that. That tool does it. Whisper does. Uses that tool. Like it's running that line of code. Whenever
[108:14-108:31] SPEAKER_03: it does the transformation. Right. So it's easy. So we just convert to WAVE then use this Pyanote. Pyanote? An annotation. Where are you going? I'm not ready to get sick. I love you.
[108:32-108:37] SPEAKER_01: I'm ready to get all the way better actually. I don't like me.
[108:39-108:39] SPEAKER_03: Yeah.
[108:39-108:39] UNKNOWN: And
[108:39-108:59] SPEAKER_03: then. That's the whisper step we're already doing. Yeah. And then. This is the most complex step I've ever done. Iterate through each transcribed word from whisper. For each word segment take its midpoint time. I'm sure. Yeah. I'm sure. It sounds
[108:59-109:01] SPEAKER_02: super complex but it's a little bit of code.
[109:01-109:09] SPEAKER_03: Like it already. Like hey here's some pseudo code. Or conceptual code. Like so literally take this and say OK. Yeah.
[109:09-109:14] SPEAKER_02: What's happening behind the scenes is unbelievable. You cannot wrap your head around it. Right. But it's just a few lines of code.
[109:14-109:15] SPEAKER_03: Right.
[109:15-109:15] UNKNOWN: And
[109:15-109:16] SPEAKER_03: then it does this.
[109:16-109:16] UNKNOWN: Like
[109:16-109:23] SPEAKER_03: instead of giving this just two second outputs it is. Well it combines them together into speakers.
[109:23-109:31] SPEAKER_02: Yeah. So if there's a like the list of names is like Daniel, Mark, Daniel, Daniel, Daniel, Daniel, Daniel, Daniel, Daniel, it'll just be Daniel,
[109:31-109:31] UNKNOWN: Mark,
[109:31-109:32] SPEAKER_02: Daniel.
[109:32-109:45] SPEAKER_03: Exactly. And so yeah. This is what I was looking for. So we just need to change it up a little bit. Yeah. So the transcript we're going to have to do this whole thing again because that service is going to include all of those things in it. And it specifically
[109:45-109:52] SPEAKER_02: is beforehand. So yeah. You might real quick get that into cursor and have it.
[109:52-109:52] SPEAKER_03: Well
[109:52-109:52] UNKNOWN: I
[109:52-109:59] SPEAKER_03: don't think I can do it while that's happening. It's fine. I will. I think this is not going to go away.
[110:00-110:00] UNKNOWN: But
[110:00-110:01] SPEAKER_02: it's
[110:01-110:18] SPEAKER_03: not going to go away. I'm going to take this conversation and put it in there and say OK now update the read me. We may have to go back. It's fine. And it's going to take this long again. Maybe not. I don't think because those segments will be available. Right. Places like so it won't have to do this again.
[110:18-110:28] SPEAKER_02: Yeah. I think it'll be still longer than just like hey hit my service. It'll be like some boot up time because it's still a big fucking giant model that has to start.
[110:28-110:30] SPEAKER_03: Oh no. I'm talking about doing the image.
[110:31-110:31] SPEAKER_02: Oh yeah.
[110:31-110:48] SPEAKER_03: So if this we got to go through this process at least once. Yeah. Well only once technically. And now it is available on my computer and available in the repository. So even if we change and add packages and everything like that it's not going to look like this. I'm
[110:48-110:48] UNKNOWN: going
[110:48-110:49] SPEAKER_03: to take this long.
[110:49-110:49] UNKNOWN: Right.
[110:50-110:52] SPEAKER_03: Because that layer is already up there.
[110:53-111:09] SPEAKER_02: Right. Yeah. You said this but I do think you're right. We should still record in P3 and have that conversion done no matter what because maybe we're not the ones recording and maybe somebody recorded with their phone because we did forget the thing.
[111:10-111:16] SPEAKER_03: And it's just smaller more compact. Yeah. And it's just whatever a thousand hours worth of space on that card.
[111:17-111:17] UNKNOWN: Versus
[111:17-111:20] SPEAKER_03: like 400. And we don't have to remember like oh crap we're running out of
[111:20-111:20] UNKNOWN: space.
[111:20-111:22] SPEAKER_03: Like what if we run out of space in the middle of a meeting.
[111:22-111:22] UNKNOWN: We will
[111:22-111:22] SPEAKER_03: because
[111:22-111:27] SPEAKER_02: we're going to. It's like so much space that we're going to run out in the middle of something. But it'll
[111:27-111:27] UNKNOWN: at
[111:27-111:27] SPEAKER_02: least
[111:27-111:31] SPEAKER_03: only happen once. A year. Six months from now. Yeah.
[111:31-111:33] SPEAKER_02: And on that day we'll have a weird one where we're
[111:33-111:33] UNKNOWN: like
[111:33-111:37] SPEAKER_02: fuck somebody get their phone out and get the second half and then it'll be fine.
[111:37-111:37] UNKNOWN: It
[111:37-111:41] SPEAKER_03: will be. All right well I'm just going to leave this.
[111:41-111:43] SPEAKER_02: Yeah since it's not yet one.
[111:43-111:43] SPEAKER_03: Right.
[111:43-111:44] SPEAKER_02: Of five and
[111:44-111:47] SPEAKER_03: a quarter. But it's good though.
[111:47-111:51] SPEAKER_02: Yeah it's more progress. I'm excited too man. It's interesting.
[111:52-111:53] UNKNOWN: And
[111:53-112:02] SPEAKER_03: the old Purcell Bihounder thing there's something there. Yeah I definitely think there's something there. I am just as excited to do this because it's
[112:02-112:02] UNKNOWN: like
[112:02-112:12] SPEAKER_03: first of all it's as close to real as like this is like doing stuff like it's literally deploying to run and it's like it's a real service.
[112:12-112:12] SPEAKER_02: Yeah.
[112:12-112:13] SPEAKER_03: We're
[112:13-112:17] SPEAKER_02: not just running localhosts a little like oh look at the functionality. Yeah like people do for vibe building and like
[112:17-112:21] SPEAKER_03: no like let me see you deploy that and like get it all the way to production.
[112:21-112:26] SPEAKER_02: Right. And running it safely. Let me see you use it as a new user. Right. Exactly. And
[112:26-112:26] UNKNOWN: I'm excited to do that without
[112:26-112:29] SPEAKER_02: all the I know what's broken and I don't show that.
[112:29-112:29] SPEAKER_03: Right. Yeah.
[112:30-112:30] UNKNOWN: So
[112:30-112:44] SPEAKER_03: it's that and I'm just as excited to actually start transcribing what's on there. Right. Because there's a couple of conversations that's like hey I want to actually follow up on some of those things. Exactly. And then
[112:44-113:10] SPEAKER_02: this is kind of new but like thinking about how to deal with that. That's the service built on top of the services right. We need to have some manner of tracking like topics per meeting but also like a master tracking like hey we talked about it in the last one but like y 'all have mentioned this thing for 30 seconds the last five weeks in a row and not proceeded beyond it at all. I
[113:10-113:29] SPEAKER_03: actually feel like for sure that but I think some sort of pre some amount of pre -processing meaning hopefully in fact before our next Wednesday meeting. It creates an itinerary basically like hey here's all the things you've talked about over the last week and I prioritize them into like hey these are the most pressing topics or whatever. Yeah. Because we're
[113:29-113:29] UNKNOWN: going
[113:29-113:29] SPEAKER_03: to have even
[113:29-113:31] SPEAKER_02: more since the meet that's. Yeah.
[113:31-113:46] SPEAKER_03: So it just collects all of it and it's not only a transcription service there's an another service that we're going to that is managing our notes and meetings and then that's doing all of the things. That's another service. Yeah. Right. And that in and of itself is valuable. We can start having.
[113:46-113:46] UNKNOWN: I
[113:46-114:00] SPEAKER_03: don't know that Google doesn't even have that. No we can start having. I do that with my people exactly. There's not a full. I take all of my notes and then create meeting agendas and stuff like hey based on all these things we talked about here's the things that are outstanding that we need to resolve and
[114:00-114:09] SPEAKER_02: I do that. Dumb little pipeline might be the thing that we sell to somebody. As silly as it is like you could do this but you don't
[114:09-114:10] SPEAKER_03: have
[114:10-114:10] SPEAKER_02: to. You can't
[114:10-114:20] SPEAKER_03: give me a million. It is like effectively yeah this is new. This is another one that makes me excited is what persona I'm playing in that is the project manager. Yeah. So
[114:20-114:26] SPEAKER_02: everybody everybody that has jobs 10 years from now project managers of a eyes. Right. Like that's
[114:26-115:02] SPEAKER_03: that's where we're at. And so the way I managed my last couple projects is give me a big funnel of collect as much information transcripts and email everything that's important to this project and put it into Gemini and outcomes this very clean. Hey here's everything that's important who is working on what. Here's all the tasks here. Yep. Cleanly manages and keeps all that stuff up to date. And that is very valuable. Like basically record everything. Give me access to all of your emails all of your conversations. I don't know if you want to do it but whatever. Put everything that you want me to consider in this bucket.
[115:03-115:25] SPEAKER_02: Yeah. I mean it's pretty clearly like one of the things that's coming out. I was thinking like we need to get recording devices and cameras with people just like record anything you think of and pretty clearly like even though I don't believe in it for a second counseling is primed up for this thing couples counseling especially like listen to you and your wife talk
[115:25-115:25] UNKNOWN: to
[115:25-115:30] SPEAKER_02: each other real time and just like well here's what I think. Yeah. And I'm just an A .I.
[115:30-115:30] UNKNOWN: so
[115:30-115:32] SPEAKER_02: don't get mad at me.
[115:32-115:32] UNKNOWN: I
[115:32-115:53] SPEAKER_02: think he's right here. And but like those types of services just kind of naturally are available to this overarching thing that we're building. Yeah. And with the slightest amount of tuning like hey the tuning could be like the prompt that you ask it ultimately. How much do you tune Jim and you don't. Right. You just ask you exactly.
[115:54-116:22] SPEAKER_03: But effectively what I think this I think this allows us to do is what I've been doing for project management at work is just record everything and it will keep track of everything. So and I forgot that this morning you saying that hey when we need to grab what's what we talked about Jim and I said yes. So some sort of. So the next service I think and I don't know if it's maybe it's next what we do but like basically the bucket on this case is everything that we've talked about. What do you think about doing
[116:22-116:37] SPEAKER_02: a local like hit the Jim and I API instead of talking to the UI because then if you're doing it you can just have the output sent. Oh no I think so. Hey that's what the
[116:37-116:37] SPEAKER_03: service would
[116:37-116:37] SPEAKER_02: do.
[116:38-116:38] SPEAKER_03: Right. So
[116:38-117:03] SPEAKER_02: I'm saying like even like the chat that you just had with Jim and I there not be through Jim and I Google that come be through our little app that we made and part of the functionality of that app is that when we end a chat it offloads it into a transcript. I think that's great from Joe. I think that's great. It becomes less 20 dollars a month and more based on usage. Right. But it might be cheaper. It might be.
[117:03-117:03] UNKNOWN: I
[117:03-117:04] SPEAKER_02: mean I'm still going to keep that
[117:04-117:04] SPEAKER_03: one.
[117:05-117:07] SPEAKER_02: Yeah and do that for the non work stuff for.
[117:07-117:07] UNKNOWN: I
[117:07-117:24] SPEAKER_02: mean ultimately it would be nice to get literally like every fucking GPT conversation I've ever had. You can. Well yeah but like if that were had in this app that I made that was already just like pushing it over there populating my obsidian map with them like that's. That's the workflow. I think
[117:24-117:32] SPEAKER_03: it is like take a bunch of data in. Right. So however you get it whether it is directly ported from Jim and I or whatever.
[117:32-117:35] SPEAKER_02: That's the whole trick really is like how do you get all the data in.
[117:36-117:36] UNKNOWN: Then
[117:36-118:04] SPEAKER_03: turn it into some artifacts that come out where there is no meeting summaries for individual events which is what we're working on now. But overall like hey for this team here like you can even think of it as a manager and like hey overall here's all the different projects that are working on. March the lead on this one and here's all the things that are you can do all of the things like this. I think this is immediately
[118:04-118:11] SPEAKER_02: applicable to everything. Everybody gets literally like yeah everybody. What we're talking about is the you agent.
[118:12-118:12] UNKNOWN: You're
[118:12-118:14] SPEAKER_02: right. Like it's the you that sits at
[118:14-118:14] UNKNOWN: the
[118:14-118:17] SPEAKER_02: top of all the other agents that you only talk to it.
[118:17-118:19] SPEAKER_03: Right. And so you can
[118:19-118:19] UNKNOWN: you
[118:19-118:31] SPEAKER_03: can generalize it to say upload any audio files email notes PDFs whatever conversation and it will be smart enough to parse them. This is an audio file send it to
[118:31-118:31] UNKNOWN: the
[118:31-118:33] SPEAKER_03: transcription service put it.
[118:33-118:39] SPEAKER_02: Yeah. And that's easy. That's based on the fucking end of the name. Like file extension.
[118:39-118:39] UNKNOWN: Which
[118:39-118:57] SPEAKER_03: is like hey here's all of the different projects that I've detected status updates blah blah blah. Here's the overall report. And for your next meeting. OK. Well we're getting ready to have a meeting with this group of people to talk about this thing. Here's the things you need to talk about record all the stuff put it back in the thing. Exactly.
[118:57-118:58] SPEAKER_02: You know we're
[118:58-118:58] UNKNOWN: going
[118:58-119:01] SPEAKER_02: to have to come up with a strategy for managing. We're going to get a
[119:01-119:01] UNKNOWN: lot
[119:01-119:08] SPEAKER_02: more buckets. Yeah. Like a radical bucket and a UNL bucket and a vacation bucket. No I agree.
[119:08-119:38] SPEAKER_03: But I think that this is a. So I don't know that I would call the project manager is like a life manager. It's like a you. It's like the. Keep track of everything that I'm working on everything that I've ever as long as I record all my conversations as a personal assistant. It's personal assistant. That's what I'm even though like so I'm not necessarily looking for personal because that's kind of what Google is going for. It's like a it is like a manager. It's like so what I'm thinking of is literally what I do at work.
[119:39-119:39] UNKNOWN: So
[119:39-119:41] SPEAKER_03: it depends on the project that I'm working on as a
[119:41-119:45] SPEAKER_02: manager but you're now a CEO. Right. Exactly. You have to change the definition.
[119:45-119:45] UNKNOWN: You're
[119:45-119:45] SPEAKER_02: all
[119:45-120:02] SPEAKER_03: the stuff that's going on. Keep everybody on track. Keep all the stuff like and if something's labeled as critical or we discuss it as critical and it's not happening. Be like hey we said that today we would be doing this thing. Send an email to what do I need to do. Everybody that's part of the
[120:02-120:03] UNKNOWN: group. Get
[120:03-120:08] SPEAKER_03: a status from that person on this thing because that's the most critical thing that you should be thinking about right now.
[120:09-120:09] UNKNOWN: As
[120:09-120:26] SPEAKER_03: a CEO as whatever. Like so it allows you to I don't need to monitor all those things by myself. I just need to give it all the data and it's parsing. Yep. Doing the things and sending emails and saying hey agenda for this meeting today is resolve this. It needs to be resolved today. Yeah. That kind of stuff. Yeah. And we can
[120:26-120:42] SPEAKER_02: get there. Like it's we can build this very much not even like a year long plan. We can get to that. We need to get this done so we can get all of that out of there and it can make us a plan for executing all of it. Alright I'm going to turn this off. Okay.

==================================================
Generated on: 2025-07-23 12:36:03
Total words: 16521
Total speakers: 7
==================================================




Summary:
creation_date: 2025-08-26 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1211_ZOOM0012_transcript.txt participants: [SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04, SPEAKER_05]
Executive Summary

This meeting is a technical working session focused on deploying the proprietary [[Transcription Service]] to [[GCP]]. The participants successfully build a Docker image containing the [[Whisper]] model and push it to the [[Artifact Registry]] for use with [[Cloud Run]] `[50:45-51:03]`. During this process, they identify a key limitation: the base [[Whisper]] model cannot differentiate between speakers. They research and decide to architect a more robust solution by incorporating a separate [[Speaker Diarization]] library into their workflow `[102:32-103:10]`. The conversation also branches into a new business idea for a "For Sale By Owner" real estate platform, aiming to disrupt the traditional agent model `[10:34-11:00]`. The session concludes with a commitment to formalize their weekly meetings to maintain project momentum `[06:02-06:15]`.

---

## Key Topics Discussed

- **[[Transcription Service]] Deployment to [[GCP]]**:
    
    - The primary goal is to deploy the Docker image containing the [[Whisper]] model to the [[GCP]] [[Artifact Registry]] `[23:08-23:43]`.
        
    - They use `cursor`, an [[AI Tools|AI-powered IDE]], to assist with generating commands for creating [[GCP]] buckets and repositories `[45:59-46:26]`.
        
    - The team discusses the long startup time for the [[Cloud Run]] service due to the large size of the [[Whisper]] model `[03:28-03:58]`.
        
    - They decide on a two-bucket architecture: one for audio file input and another for the transcribed output `[45:48-45:54]`.
        
- **Implementing [[Speaker Diarization]]**:
    
    - They realize the initial JSON output from the tiny [[Whisper]] model does not distinguish between different speakers `[07:33-07:55]`.
        
    - Research reveals that [[Speaker Diarization]] is a separate process required before transcription to identify and label individual speakers `[102:32-102:37]`.
        
    - They identify `pyannote` as a potential Python library to integrate into their workflow to solve this problem `[108:14-108:31]`.
        
    - **New Workflow**: Convert audio to WAVE format -> Run through a [[Speaker Diarization]] tool -> Feed to [[Whisper]] for transcription -> Combine outputs `[107:10-107:16]`.
        
- **New Business Idea: [[For Sale By Owner Platform]]**:
    
    - A significant tangent on creating a platform for "For Sale By Owner" (FSBO) home sales `[10:34-11:00]`.
        
    - The concept is to disrupt the traditional real estate industry by creating a social network-like platform that connects buyers and sellers directly, removing the need for agents `[13:01-13:47]`.
        
    - This is framed as another example of a [[Low-Barrier Startups|low-barrier startup]] enabled by modern technology.
        
- **Project Management & Collaboration**:
    
    - The transcription project is the first step toward building a comprehensive [[Knowledge Management]] system powered by [[AI Agents]] `[113:31-113:46]`.
        
    - The ultimate vision is a "personal assistant" or "CEO" agent that consumes all meeting notes, emails, and chats to manage projects, create agendas, and ensure critical tasks are addressed `[119:08-120:09]`.
        
    - They formalize their collaborative meetings, setting a recurring time for Wednesdays at 6 PM `[06:15-06:20]`.
        

---

## Action Items & Decisions

- **Decision**: Proceed with deploying the [[Transcription Service]] to [[GCP]] using [[Artifact Registry]] and [[Cloud Run]] `[23:08-23:43]`.
    
- **Decision**: Modify the architecture to include a separate [[Speaker Diarization]] step before transcription to identify speakers `[102:40-102:47]`.
    
- **Decision**: Establish a regular weekly meeting on Wednesdays at 6 PM to ensure consistent progress `[06:15-06:20]`.
    
- **Action**: Rebuild the Docker image to include the `pyannote` library and the updated multi-step processing logic `[109:32-109:45]`.
    
- **Action**: Create two GCS buckets for the service: one for audio input and one for transcription output `[51:52-51:57]`.
    

---

## Suggested New Links/Tags

- [[For Sale By Owner Platform]]
    
- [[Speaker Diarization]]
    

---

## Linked Concepts

- [[AI Agents]]
    
- [[AI Tools]]
    
- [[Artifact Registry]]
    
- [[Cloud Function]]
    
- [[Cloud Run]]
    
- [[For Sale By Owner Platform]]
    
- [[GCP]]
    
- [[Gemini]]
    
- [[GitHub]]
    
- [[GitHub Actions]]
    
- [[Knowledge Management]]
    
- [[Low-Barrier Startups]]
    
- [[Service Account]]
    
- [[Speaker Diarization]]
    
- [[Transcription Service]]
    
- [[Whisper]]
    
- [[Workflow Automation]]
    

---

## #Tags

- #AI
    
- #Automation
    
- #BusinessDevelopment
    
- #GCP
    
- #SoftwareDevelopment
    
- #Startups

zoom13
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1257_ZOOM0013_transcript.txt

==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:04-00:05] UNKNOWN: Also,
[00:05-00:12] SPEAKER_03: I had an epiphany this morning that made me feel like a full on retarded for the last two weeks but there's a Python package for unit
[00:12-00:23] SPEAKER_04: conversions. For unit conversions? So you're talking like for doing the meal prep. Okay. Yeah. There's just one. Or there's several. And of course there are.
[00:24-00:26] SPEAKER_03: And there's probably. And they do a really
[00:26-00:28] SPEAKER_04: good job. Somebody thought about this
[00:28-00:38] SPEAKER_03: and resolved this problem. Right. I got thinking about like oh you should use agents for everything and you stopped thinking the fundamental concept of coding is like well there's a package for that. Right.
[00:39-00:47] SPEAKER_04: Right. And effectively only use agents for the things that are complex enough that require that you have not been solved programmatically. Right.
[00:48-00:58] SPEAKER_03: Like you could in theory have like an agent that checks everything and makes sure it's good after the unit conversion package. Right.
[00:59-00:59] UNKNOWN: But
[00:59-01:27] SPEAKER_03: probably, or at the very least you can have that unit conversion package in place first. Right. I got a little sore on my mouth.
[01:33-01:41] SPEAKER_04: Alright. I haven't looked at this since everything finished up but you. Is this what you want to do?
[01:41-02:22] SPEAKER_03: Yeah I think unless there's like what else. Because this is pushing forward toward the transcription service that we actually. I mean I think we confirmed that it ran locally and then we built the image with the medium model so it's a matter of going up there and deploying. Yeah it just needs to just go to cloud run and. You might pull. I think I have pushed since you. Okay. Have been on there. Because I think I redid the read me in more of a like to do list type situation. Yeah. There you go. Looks good
[02:22-02:22] SPEAKER_00: to
[02:22-02:48] SPEAKER_03: me. And the very top section is like literally next development focus. Okay. And I think like that's what whenever I start a new chat with cursor I typically will go like hey update when I think of it update the read me to reflect anything we've done in this chat as complete or started and then redo the next development focus because typically it has something like okay here's what we can do next just in the last response that you've gotten.
[02:48-02:48] UNKNOWN: And
[02:48-02:51] SPEAKER_03: it's like well that should probably be in the next development focus. I agree.
[02:55-02:55] UNKNOWN: So
[02:55-03:02] SPEAKER_04: select whisper model and GPU configuration. I mean we already did the whisper model but the GPU. I think that's part of.
[03:03-03:03] UNKNOWN: Probably
[03:03-03:34] SPEAKER_03: all done because I cursor cannot see what you've done in GCP. Right. And so it might have that and I was not touching cloud run so I was just like yeah those are fine. So we'll start a new chat. Like what do you normally say. I think with this one since it hasn't actually done the work there you're probably good to just start a new one. Okay. And say like hey check out the read me and something to the effect of like determine what our next steps are. As a part of the new chat or just.
[03:35-03:35] UNKNOWN: Yeah a
[03:35-03:50] SPEAKER_03: new one is what I would go. I haven't been in a situation where I pulled down new work really. Yeah.
[04:21-04:27] SPEAKER_04: Yeah. That's going to decide on the exact values for all placeholders. Yeah.
[04:27-04:27] UNKNOWN: Service
[04:27-04:45] SPEAKER_04: name. Whisper transcription service I think is fine. I don't know. I call this repository. Transcription service repo but that's fine. And then whisper services the package.
[04:45-04:46] SPEAKER_01: Sure.
[04:50-05:36] SPEAKER_04: I've already pushed central one. I don't know. VCP memory allocation buckets are already done. Max instances. Hopefully there's only one. We're not doing that many at a time. Service account email. I do need that to give that container port. Okay. G .P. Check the latest looks up for deployed services with G .P. use. I'm worried about this being super expensive. I agree.
[05:43-05:56] SPEAKER_03: I think we looked at it though right. Like we did the pricing with this which is how we got our first read me. I guess so. And it was like a dollar twenty for ten hours I think.
[06:03-06:04] UNKNOWN: But
[06:04-06:06] SPEAKER_03: that's all kind of in theory.
[06:08-06:08] SPEAKER_02: Just
[06:08-06:21] SPEAKER_05: going to answer a bunch of these questions. That's nice.
[06:30-07:20] UNKNOWN: Okay. Okay. Service account email.
[07:37-07:37] SPEAKER_02: What?
[07:38-08:20] UNKNOWN: What? We're going to that because I need to know what the frequency recognition is. Yeah. I
[08:20-08:25] SPEAKER_02: don't know which one it runs on. Yeah. That drives me fucking crazy.
[08:25-08:25] UNKNOWN: Go look at
[08:25-08:31] SPEAKER_02: it. It says go yeah. Yeah you have to look at it just as much as me.
[08:35-08:38] SPEAKER_03: You do have to give it permission to look stuff up so that one's
[08:38-08:38] UNKNOWN: fine.
[08:38-08:57] SPEAKER_03: That's fair. For the G .P. you find. Yeah. It's probably that that line is correct because I wrote it previously. I think Jim and I actually wrote it like you had that one.
[09:27-09:29] SPEAKER_05: Can't copy that.
[09:32-10:57] UNKNOWN: That's not what it says. Okay. Oh
[10:57-11:04] SPEAKER_03: yeah minimum instances should definitely be zero. Yeah. And max one.
[11:09-11:10] SPEAKER_05: Makes sense.
[11:19-11:20] SPEAKER_03: Object viewer makes sense.
[11:21-11:21] UNKNOWN: Object
[11:21-11:22] SPEAKER_03: creator makes sense.
[11:22-11:22] UNKNOWN: It
[11:22-11:23] SPEAKER_03: needs to be on the wrong cloud.
[11:31-11:32] UNKNOWN: It
[11:32-11:37] SPEAKER_04: may take forever to start up and connect to a B .C .P. or a G .P .U. but it's fine.
[11:37-11:37] UNKNOWN: It
[11:37-11:39] SPEAKER_04: doesn't even if it takes 10 minutes.
[11:39-12:21] SPEAKER_03: Yeah our typical workflow I think is going to be like hey we're done with the thing send it. I'll check it next time we work so it takes 12 hours. It needs to be done by six o 'clock the next morning. Right I agree. And maybe needs to be done by six o 'clock the next morning. I mentioned to CJ yesterday he was like yeah it's just like my job. Suggests like if I can make it I will try basically. But I think if we can have the sit down get together whatever feed it to the agent and it outputs like a actual like structured and somewhat interactive like thing that it can send out to just that whatever the group is. Right.
[12:22-12:22] UNKNOWN: Email
[12:22-12:44] SPEAKER_03: it send it in a text or whatever. And I think the real magic comes with that somewhat interactive aspect of it because it still has the entire transcript and knows exactly what was said. So you could go like hey what what got said about this stuff and like truly ask questions and not just have the summary like that would be huge.
[12:44-12:59] SPEAKER_04: I'm with you like so I think what I am hearing from you is some sort of group agent like an agent that anybody that has all the background. And then anybody can talk to it. And it's keeping up with everything all at
[12:59-12:59] UNKNOWN: the
[12:59-13:51] SPEAKER_04: same time. And that is consistent with my latest set of thinking and I sent you the one idea actually Mel texted it while I was driving the doctor. Yeah. Yeah. But I think that same concept of basically taking all of this input and helping you manage any situation that's overwhelming or too difficult. Look like you know so it came from we were talking about your dad and your mom going to the appointment didn't realize she didn't know how to record didn't have her notes. So he said a bunch of stuff that I you know first of all we need to teach her how to record. But effectively that's all you need to record add it to the thing and it will just do the thing. It says hey here's the medicines here's what you need to do follow up with this doctor what it recorded it keeps everything like and it keeps you on track and you don't theoretically need to provide some oversight is better than none. But still even if you don't remember anything like just do the things that it says do because it remembers it's all of it.
[13:51-14:30] SPEAKER_03: Yeah that makes sense to me and yeah that's basically the same model and it might have access to a few different agents but like based on like if it's a group conversation or a doctor's appointment or whatever else. But yeah I think generally an assistant yeah and then personal assistant allow for group like you could almost have been there if you spend an hour or two going through this interactive thing and like if you're interested in it you can basically get the value out of the meeting like 80 percent of the value out of the meeting that you would have gotten if you had been there.
[14:30-14:42] SPEAKER_04: Right I mean especially if it's like hey summarize this conversation or you know the notes we'll summarize them into paragraphs to say hey here's what we talked about and hey you know give me the details of this whatever. And the
[14:42-14:50] SPEAKER_03: way that like an AI response will give you as references of like where it got something it's like well this is from this time stamp. Yeah go look at it. If you want to go listen to
[14:50-14:50] UNKNOWN: it.
[14:50-14:54] SPEAKER_03: Listen to yeah the 10 minutes around it then you can or whatever. Yeah.
[14:58-15:00] UNKNOWN: All right.
[15:01-15:34] SPEAKER_04: Grant permissions. Object viewer and object creator. So. So. It has storage admin right now which is probably too much. Yeah. I think that's probably a good idea. Change that to. Just delete this one. Yeah. Probably cloud running admin
[15:34-15:34] SPEAKER_03: is
[15:34-15:35] SPEAKER_04: too much to do
[15:35-15:43] SPEAKER_03: but it might approach me because it does base it's doing it like all of it. We're not even touching
[15:43-15:44] SPEAKER_04: it.
[15:53-15:54] SPEAKER_05: About this.
[15:54-15:54] UNKNOWN: I
[15:54-15:55] SPEAKER_05: must.
[16:14-16:20] SPEAKER_04: Yeah I think that that is just a different. I'm not sure if that's the right
[16:20-16:29] SPEAKER_03: one. Because bucket is like you can see what's in the bucket but can you look at the things in the bucket. I don't know.
[16:30-16:45] SPEAKER_04: Start with cloud storage and then I think that's oh there you go storage object viewer and then on a specific bucket. I don't know how to do that. That's what I was wondering. So I'm going to hit cancel
[16:45-16:54] SPEAKER_03: here. I think what's in that drop down like that or condition. I
[16:54-17:04] SPEAKER_04: think I think you got to go to storage other IAM or some bullshit. I think you go to GCS into the bucket. OK.
[17:05-17:10] SPEAKER_03: And add that principle to. Yeah. And so.
[17:12-17:13] UNKNOWN: But
[17:13-17:17] SPEAKER_03: can that one with general access see all of them.
[17:18-17:18] UNKNOWN: Which
[17:18-17:19] SPEAKER_04: one. Yeah.
[17:19-17:21] SPEAKER_03: So what's the point of going to the bucket.
[17:22-17:27] SPEAKER_04: So it's only limited to that one. So in the future we make new buckets or do it something else. Right.
[17:27-17:27] UNKNOWN: But
[17:27-17:31] SPEAKER_04: service account won't be able to get to the other one.
[17:31-17:38] SPEAKER_03: So do you delete that role. Because if it just has like I think like the object viewer. I did. Yes. Gotcha.
[17:39-17:39] UNKNOWN: I
[17:39-17:41] SPEAKER_03: thought you were doing another
[17:41-17:48] SPEAKER_02: viewer on input.
[18:01-18:03] SPEAKER_04: Dang it.
[18:05-18:06] UNKNOWN: OK.
[18:08-18:26] SPEAKER_04: And then give you. Apparently not. Not even let me. OK. At least you let me do that. So I think this is how you do it.
[18:27-18:28] SPEAKER_01: Makes sense.
[18:30-18:36] SPEAKER_02: And on this bucket it is a viewer. Yeah. I just saw it.
[18:39-18:39] UNKNOWN: I
[18:39-18:40] SPEAKER_02: thought I did too.
[18:44-18:45] UNKNOWN: Yeah.
[18:51-19:07] SPEAKER_04: So any editor owner or viewer of this service had can do that. Right. But then specifically that service account is a store. If you were on this. Yes. And
[19:07-19:09] SPEAKER_05: then it needs.
[19:18-19:18] UNKNOWN: And
[19:18-19:24] SPEAKER_04: I'm sure there's a way to do that. The way we should have done this is programmatically. Like do the G cloud command.
[19:25-19:44] SPEAKER_03: Right. Well I mean we may go backwards and set up like Terraform and do all that. But that's really the. Like click ops isn't a problem if you're going to do it once. I agree. And that's like why we decided not to do any CICD or something because once this transcription service is up we're going to bite ourselves for saying this one day. But we're not going to fuck with it. Yeah.
[19:46-20:27] SPEAKER_04: Until we get tired of it and they're going back and forth. Right. Like we need to go do Terraform and all of that stuff. All right. So I did that. Yes. I can provide the G cloud commands. That's the way to do it is just have them do the G cloud commands and it will just be done. Yeah. I didn't think about that until.
[20:27-20:33] SPEAKER_03: Yeah. I always regularly like I will type stuff in the next program.
[20:33-20:33] UNKNOWN: I'm
[20:33-20:43] SPEAKER_03: prompt as I'm reading through and then regularly you'll get to the end and be like oh and this here's what we need to do proceeding and like wipes out everything I type. I'm like OK I just need to read this shit.
[20:47-20:50] SPEAKER_05: I'll do what? I'll take the G cloud command.
[20:54-20:55] SPEAKER_02: Oh he gave it to me.
[21:07-21:20] SPEAKER_05: Yeah I did that. Did that. OK. I did that already. Oh there's some except.
[21:20-21:29] SPEAKER_04: Yeah it's that reason update. Yeah I did that. Well I don't know that I need to log in but it's fine. I hate it
[21:29-21:30] UNKNOWN: when it does that
[21:30-21:31] SPEAKER_00: thing. Why?
[21:42-21:44] SPEAKER_05: I'll take some
[21:44-21:45] SPEAKER_03: of that. Yeah I want
[21:45-21:46] SPEAKER_05: you to run this.
[21:46-23:18] SPEAKER_03: Right. That's what I'm saying. Like it's open in the new one is still easier than copy and paste them but then you get a hundred fucking terminals. So. You have to stop it whenever it's. How do you stop it? You should be able to send it. It's in there. Lines one through six next to the ad. That takes some getting used to. There it
[23:18-23:24] UNKNOWN: is. Right.
[23:29-23:32] SPEAKER_04: Yeah now it's over here. Yeah. I'm sure it's something that they know.
[23:32-23:40] SPEAKER_03: Yeah. And I mean probably if you just ask it can you don't be an angry fuck like I am sometimes and start berating it.
[23:40-23:48] SPEAKER_04: I'm sure there's a way to say hey yeah. Can you run these for me. Right. Something like that. Following APIs or not.
[23:51-24:12] SPEAKER_03: I think you can click in there and yes like it's just click inside the. In here. Yeah. And then go down and type yes or why. Assuming you can turn those APIs on. Which one is it. I actually now that I'm looking at
[24:12-24:12] UNKNOWN: things.
[24:12-25:10] SPEAKER_03: Yeah. I didn't look at it. Which is it. It says run Google APIs dot com which I'm assuming. And it doesn't have permission to do that. He might just turn it on. That is a shit search.
[25:10-25:12] SPEAKER_04: It is. Run dot Google API.
[25:12-25:14] SPEAKER_03: Yes. Scroll over.
[25:15-25:15] UNKNOWN: It's
[25:15-25:24] SPEAKER_03: got to be. It's literally just gone. No way. That's a bad command.
[25:25-25:25] UNKNOWN: I
[25:25-25:49] SPEAKER_03: think. Like what did it try to run. Maybe that's what because they don't they just don't say. Fair enough. So do you have permission
[25:49-25:52] SPEAKER_04: to maybe not. Yeah you're right.
[25:52-25:52] UNKNOWN: I
[25:52-26:04] SPEAKER_04: think that is what it is. I is trying to run. I assumed it was from. Yeah I'm just an owner. I need cloud run. Right. Because I was the one pushing
[26:04-26:05] SPEAKER_03: so you.
[26:16-26:18] SPEAKER_05: Or whatever. Create.
[26:28-26:29] UNKNOWN: I
[26:29-26:31] SPEAKER_03: can ask. That was it.
[26:31-26:31] UNKNOWN: I
[26:31-26:34] SPEAKER_03: think that run based on the description. This is
[26:34-26:35] SPEAKER_02: my.
[26:49-26:50] UNKNOWN: I think
[26:50-26:55] SPEAKER_03: I
[26:55-26:59] SPEAKER_04: was like partially canceled and brought it back. I think that's what
[26:59-27:24] SPEAKER_03: it is. Yeah I've never seen that before. That might have made it spin out a little bit if you did not change that T to a W. I
[27:24-27:24] UNKNOWN: think that's what it is.
[27:24-27:25] SPEAKER_03: Permission should be updated and I'd
[27:25-27:25] UNKNOWN: be
[27:25-27:43] SPEAKER_03: like OK well I guess let's figure out how to do this shit I guess. These are just the agents talking to each other.
[27:44-27:45] SPEAKER_04: There's
[27:45-27:50] SPEAKER_03: definitely an error. No I'm saying like that little when it's kind of gray like that. That's
[27:50-27:50] UNKNOWN: the
[27:50-27:54] SPEAKER_03: agents figuring it out.
[27:54-28:00] SPEAKER_05: Between two and 16 gigabytes. So you just need to put that on
[28:00-28:17] SPEAKER_03: there. Wait. Reduce memory to the maximum I'll have for four VCBs. To allow for 24 gigs. Where did 16 come from? I thought we agreed on 24
[28:17-28:42] SPEAKER_04: before. Yeah it says the error came back and said it best be between two and 16. So 24 is not an acceptable amount for the four virtual CPU for that Nvidia i4 GPU. Because it's too small. It's a baby you can't have all that. It's fine.
[28:44-28:56] SPEAKER_03: So the minimum requirements for the L4 is four and can run on 16 gigs. So it's going to downgrade the memory instead of up in the CPUs. I
[28:56-28:58] SPEAKER_02: don't want it
[28:58-28:58] UNKNOWN: though.
[28:58-29:00] SPEAKER_02: It's got eight CPUs in
[29:00-29:00] UNKNOWN: it. Oh
[29:00-29:07] SPEAKER_02: well. That's not what I wanted. I don't know the
[29:07-29:08] SPEAKER_03: CPUs are going to make
[29:08-29:10] SPEAKER_02: their cost really do anything.
[29:15-29:25] SPEAKER_04: But also like. We're going to find out though. I certainly don't want to be paying $100 a month for GCP services.
[29:26-29:37] SPEAKER_03: No like if our testing indicates that it's going to be great like we're going to figure out local deployment. Yeah we'll figure it out. But if it's cheap. Yeah if it's
[29:37-29:37] UNKNOWN: like
[29:37-29:40] SPEAKER_03: single or very low double digits.
[29:40-29:52] SPEAKER_04: My guess is it's not cheap. Because the service that the pay service is not cheap. That means they're there is not cheap for
[29:52-29:52] SPEAKER_03: them.
[30:05-30:11] SPEAKER_05: Does not support AMD 64. That's the fucking.
[30:11-30:26] SPEAKER_04: Doc build. Yeah. Going through this whole thing again. Yep. All right. And then push it to the. Yeah. Wait. I was worried about that.
[30:27-30:31] SPEAKER_03: Hey you are. I thought it would be fine.
[30:38-30:42] SPEAKER_04: Hopefully. You know how to do the long downloads
[30:42-31:37] SPEAKER_03: again. Yeah none of those are. Gigantic yet. They're all in kilobytes. Yeah I wonder. How expensive. And you're saying which like the service like the one that's. Like the paid one of
[31:37-31:39] SPEAKER_04: that is relatively expensive.
[31:40-31:44] SPEAKER_03: Yeah it was like 30 bucks for 10 hours or something like that.
[31:44-31:45] SPEAKER_04: Yeah. And.
[31:47-32:02] SPEAKER_03: But maybe that's just marketing right because when you do. Some extent you have like there they probably have an office. If not they're paying for some amount of like even the stupid little shit that adds up like Google workspace. Right. And like multiply that by a thousand. They have infrastructure.
[32:02-32:07] SPEAKER_04: And they're trying to incentivize you to do the big play. Like that one was a yearly five thousand.
[32:08-32:09] SPEAKER_03: Right. Like crazy
[32:09-32:10] SPEAKER_04: minutes for
[32:10-32:34] SPEAKER_03: and it wasn't very expensive. It wasn't linear from that 30 dollars up to 70 or whatever. Not at all. Yeah. And so remove the fact that they have to pay for it like all the other stuff that goes with running a business where it's like that's the advantage of building your own tools. I think that's the era we're moving into is like you're going to pay for some stuff but like not that much. But yeah just
[32:34-32:55] SPEAKER_04: being a directly use the cloud services which I mean I think we're pretty deep in it. Right. Maybe I don't know. At some points I do this both at work and anywhere I'm like can you think of a person that can do what we're doing. Yeah you. Right. Other than us. Can you think of a person
[32:55-32:58] SPEAKER_01: that
[32:58-33:12] SPEAKER_04: could do this. I don't know a person. I don't know a person in my life like that's equipped to sit down and start working not like. Yeah that is like hey deploy a service on using cloud tools like just build your
[33:12-33:14] SPEAKER_03: own. I mean Harley can do it with AI.
[33:15-33:15] UNKNOWN: Harley
[33:15-33:17] SPEAKER_03: probably Harley is probably
[33:17-33:31] SPEAKER_04: can't. It came to my mind. You have to do this like sit down and make yourself do it. Right. That could get to this place and it was like even with us helping them. Right. You can get to it. But that's the two people that I know.
[33:31-33:36] SPEAKER_03: Yeah. Cam came to my mind and that's what made me ask the question of like ready to sit down because he's not like ready to
[33:36-33:36] UNKNOWN: write
[33:36-33:37] SPEAKER_03: jam with
[33:37-33:42] SPEAKER_04: AI and with some support you can get to the place of like man that's so you're right. I should be using my own services.
[33:43-33:43] UNKNOWN: I
[33:43-33:43] SPEAKER_04: can do
[33:43-33:43] SPEAKER_03: it.
[33:43-33:45] SPEAKER_04: Yeah. Other than
[33:45-33:50] SPEAKER_03: that. Yeah. And then Cam probably knows a handful of people who haven't just gotten out of school and whatnot.
[33:50-33:50] UNKNOWN: But
[33:50-33:54] SPEAKER_03: yeah but it's not like it's a bunch of people that are going to work for Google and Austin.
[33:55-34:15] SPEAKER_04: But just like hey yeah just deploy your own service like I think like when I talk to people like there's just one guy I talk to all the time he wants to get into coding and development and he's still like doing courses and like look like he's getting there. That's what you do when I talk to him about using AI tools he's still kind of like I
[34:15-34:15] UNKNOWN: don't
[34:15-34:29] SPEAKER_04: know. Yeah it's like what are you using and it was like I was like you should use cursor. Yeah. Like at least something like tested out. Yeah. There's a few using Jim and I at the same time you're using. Yeah. We're not doing
[34:29-34:37] SPEAKER_03: that. He's not. I'm like yeah get clock. It's only 20 bucks a month. I mean get cursor but for whatever reason you don't know he's doing this like with a group
[34:37-34:57] SPEAKER_04: of people at work and he's using this work like use Jim and I on the you have the. Like it's free. What does he do. What's his job. He's a decent. OK. But you got to know. No I don't know him. No he's in South Carolina. I
[34:57-34:57] UNKNOWN: got
[34:57-35:17] SPEAKER_04: you. I've never actually seen him in person. But so he's trying to do what you did. Yeah. Yeah. I'm like but he's like like he's smart. Yeah. But he just hasn't. He's not around people like us and he's not watching like the whole industry is shifting. And he's still like still over here.
[35:17-35:17] SPEAKER_03: Like
[35:17-35:17] UNKNOWN: I
[35:17-35:26] SPEAKER_03: definitely have my my whole like once I understand it it's not impressive shit. Yeah. Constantly. Yeah. But
[35:26-35:30] SPEAKER_04: I don't think that your perspective is right. I
[35:30-35:30] UNKNOWN: think
[35:30-35:33] SPEAKER_04: that you are much more advanced than you think. I
[35:33-35:54] SPEAKER_03: don't know that I can get over that like that is like I talked to Harley a lot like years ago about this concept of like you can't change your first millisecond. Right. Like the way you react to something is how you react to something. But everything goes into how you deal with that second millisecond. Yeah. Deal with the first one. And I probably need
[35:54-35:54] UNKNOWN: to
[35:54-35:59] SPEAKER_03: get better in that respect. Can I hit accept over here. Yeah. Yeah.
[35:59-35:59] UNKNOWN: You
[35:59-36:09] SPEAKER_03: can do individual like line by line as well. But yeah that's a that's one that I struggle with.
[36:09-36:12] SPEAKER_00: You don't have to do it right now. Just keep it in here.
[36:12-36:33] SPEAKER_03: Oh. It probably gets in the way sometimes. And I know it makes me get frustrated at people for wholly illogical reasons when they don't just already understand something.
[36:35-36:35] UNKNOWN: Yeah.
[36:35-36:35] SPEAKER_03: Yeah.
[36:35-37:08] SPEAKER_04: I feel like like when I can trace some of the stuff that we are doing now back to when I was trying to learn Python by myself in my state controller. Right. Like in you know 15 years ago. Right. Like that's some of the stuff. Well you just know these commands or whatever or commit like you remember how intimidated I do remember a command line. Yeah. Let alone like working in a screen like this. Yeah. It looks like I know what's going on. And
[37:08-37:08] UNKNOWN: what
[37:08-37:15] SPEAKER_04: these layers are and what's going on in Docker. Like there's a lot built like how many videos and things we've watched to know what Docker is doing and
[37:15-37:17] SPEAKER_03: like not as whole right. Yeah.
[37:18-37:20] SPEAKER_04: Yeah. What's the there's
[37:20-37:22] SPEAKER_03: a lot. Well Asian lady from Florida.
[37:23-37:28] SPEAKER_04: There's a lot of hours put into this already to just be able to go. Yeah. Just do that. Yeah.
[37:28-37:33] SPEAKER_03: That's true. But also it's
[37:33-37:44] SPEAKER_04: like super easy. And this is a fantastic tool. Right. The people who made these tools are like yes it's just looking at all the stuff and it's just going right. I
[37:44-37:50] SPEAKER_03: see it working. It's like incredible. It's like a bunch of little people jamming.
[37:51-37:55] SPEAKER_04: I assume you're still thinking. No. Oh I see.
[37:55-37:57] SPEAKER_03: Last little bit.
[37:58-38:02] SPEAKER_04: And literally was saying it and go like I saw it. Watching it.
[38:13-38:24] UNKNOWN: Yeah. So
[38:24-38:32] SPEAKER_04: I think next I don't know what it says it should be but next we should make the bucket happen to make the the car punch
[38:32-38:32] UNKNOWN: hole.
[38:32-38:37] SPEAKER_04: Yep. That since is when a bucket. Yes.
[38:45-38:46] SPEAKER_00: Looks good.
[39:16-39:17] UNKNOWN: I
[39:17-39:20] SPEAKER_04: guess it's an L4. NVIDIA L4. I have no idea what.
[39:21-39:23] SPEAKER_03: Yeah. As long as it doesn't have an H in front of
[39:23-39:23] UNKNOWN: it.
[39:23-39:32] SPEAKER_03: Yes. That's one of the expensive ones. I don't need all of that. Yeah. I don't even know what the current ones are.
[39:32-39:32] UNKNOWN: I don't
[39:32-39:32] SPEAKER_03: even.
[39:33-39:33] UNKNOWN: But
[39:33-39:56] SPEAKER_03: like I think X might have set a bit of a precedent with like well there's not just general ones like because he had a bunch of ones made for them like they collaborated with NVIDIA I'm pretty sure and locked down like a crazy number of the H whatever's. Yeah. That while there he's crazy. Yeah. He's also saying he's going
[39:56-39:56] UNKNOWN: to
[39:56-40:05] SPEAKER_03: get to Mars next year so. Yeah. That's just been like how many times does exaggeration have to happen before it's like. I think the last round he was like
[40:05-40:09] SPEAKER_04: if all of these things go right. Yeah. But what they're not.
[40:10-40:16] SPEAKER_03: You know he's casually cut the capacity of Starship in half right. No. Like the
[40:16-40:16] UNKNOWN: weight
[40:16-40:16] SPEAKER_03: capacity.
[40:17-40:17] UNKNOWN: I
[40:17-40:21] SPEAKER_03: haven't really been following a whole lot. The thing that got all the
[40:21-40:21] UNKNOWN: all
[40:21-40:30] SPEAKER_03: the contracts is now they didn't announce it. He's just saying a number that is half of that number and acting like nothing changed.
[40:30-41:15] SPEAKER_04: Yeah. I've just kind of backed off of basically everything of like I'm just going to focus on the things. Yeah. I mean I think really for me and I would argue for us but specifically for me my answer for the next I'll put a year on it is focusing on this. That I think that it's this window this this golden window that I've complained about. Yes. Forever. Like I'm in it. Yeah. And effectively that is that is the primary driver of my work decisions and stuff like that's like if it's going to take away from this time then I don't want to do it. Yeah. Like and that's fine because I think ultimately the way out is this. I agree. This is
[41:15-41:15] UNKNOWN: the
[41:15-41:42] SPEAKER_04: answer. Even when I talk to I talk to you know I mean he's not going to be he's not my manager anymore. Right. Today as of this morning. I'm going directly to Jeff which I talked to a couple of people who's you know Jeff. So Jeff was you know his manager. So the director basically they never talked to him like yeah. He you're his man. He's your manager on paper but he's so busy he just never talks to you. So I don't have a manager
[41:42-41:59] SPEAKER_03: like if you obviously kind of proving yourself as the guy that is can step into the shit situation. So with the level of proving yourself you become a guy that kind of doesn't need the manager so you get pushed right under the director. It's just whatever. Right. Which
[41:59-41:59] SPEAKER_04: I think is a
[41:59-42:06] SPEAKER_03: good thing. Yeah. I mean it's some number of hours literally every week I imagine. Right. Previously we're talking to Enoch about stuff and now they're
[42:06-42:17] SPEAKER_04: available. But when I was Enoch was in Boulder and so and we did a bunch of stuff together but basically I was like he recommended not being a manager.
[42:18-42:18] UNKNOWN: And
[42:18-42:38] SPEAKER_04: he's like basically you know that you're right. That's in your soul. And we kind of talked about a bunch of stuff and I was like what do you recommend. He recommended that I follow him. Where's he going. Like he's going to this group that does networking like that's like does physical networking. So he's managing so it's data center adjacent. So building out the network. You know kind of like data
[42:38-42:43] SPEAKER_03: center then full on programming and then you would like plug in between the two of
[42:43-42:43] UNKNOWN: them.
[42:43-43:01] SPEAKER_04: Yeah. But it's more it's a physical service right. So they're deploying. So there's like they're doing groundwork and stuff like that. They're actually deploying the fiber optic cables. Right. So it's not like it is some programming and stuff like that once they get it up and testing and everything like that. But it is managing contractors that are digging and building. Yeah. I
[43:01-43:38] SPEAKER_03: mean that is if you're looking at you're trying to take like a step back and get a slightly zoomed out perspective like they have to increase compute by like a lot like not like a look like some number X. Not like we need to increase by X percent. No no. And 10 X. So that is going to be the 10 10 is the number. Yeah. Like an incredible amount of infrastructure real world. I heard some of the conspiracy construction dudes talk about like it's gonna be great for us over the next few years no matter what the fuck. Right. Right.
[43:38-43:38] UNKNOWN: People
[43:38-43:38] SPEAKER_03: need ship
[43:38-43:54] SPEAKER_04: built. And so I think. And but the problem with that and that's why I'm getting to this is two things. One is all jobs all new ones especially change transfer into a new board. It requires you to go to the office or be hired. Oh yeah.
[43:54-43:54] UNKNOWN: Because
[43:54-44:05] SPEAKER_04: you're like grandfathered in but a change means you don't. So that's the one. And so including him. Yeah. His new office is Dallas and he's driving back and forth between Arkansas and Dallas.
[44:05-44:05] UNKNOWN: That's
[44:05-44:15] SPEAKER_04: been there three days. Oh my lord. Three days a week. That. And so that's what it would matter. So my or we're only requires one day a week.
[44:15-44:15] UNKNOWN: So
[44:15-44:16] SPEAKER_04: even if I.
[44:17-44:17] UNKNOWN: Work
[44:17-44:34] SPEAKER_04: they make them pull the trigger on everybody has to do it. And from what I when I talk to people about it the people that I could trust are like do you go to the office. I mean it was the office when they make me. There's some event or something like that. So don't be the guy that isn't there when you need to be.
[44:34-44:34] UNKNOWN: But
[44:34-45:13] SPEAKER_04: like right when you don't need to. But that's one thing. And I don't even want to add that that just it's more time on the road. In addition to traveling for customers you're traveling for day to day work. Yeah that takes away from literally everything. And secondly I had to learn a whole new set of things and everything like that are ultimately useful to your goals. Right. And my goal is to do this right. And so knowing that this again dot com boom but you know what I'm saying like this whatever a boom is getting ready to happen. I don't want to get in and help Google expand on the good. I want to help us expand like become a part of that. And that's where I want to put my efforts.
[45:13-45:16] SPEAKER_03: Yeah. This was your job from GRDA.
[45:16-45:16] UNKNOWN: Then
[45:16-45:17] SPEAKER_03: you make that jump to
[45:17-45:33] SPEAKER_04: that job because it's significantly just more resource. But now I want to lay low. Stay the same. Like long I don't get fired and do I want to do a good job. But I want to preserve this time and ability to think and work with you because this is the answer. And the way to jump
[45:33-45:43] SPEAKER_03: like you did from GRDA to Google is to work for yourself. There's not really or like go on the Google path. That means you have to move places and all that shit. OK. So it's up.
[45:43-45:43] UNKNOWN: It should
[45:43-45:59] SPEAKER_03: be. So probably we tested at least try to give it that one audio file and see what happens even if we have to run it manually. Which I assume that's
[45:59-45:59] UNKNOWN: what
[45:59-46:00] SPEAKER_03: that's about to
[46:00-46:00] UNKNOWN: do. Right
[46:00-46:06] SPEAKER_03: there. Right. Yeah. And then we write the function that automatically triggers.
[46:07-46:17] SPEAKER_04: You should test it. Since it's not publicly accessible, you need to make an authentic record. How do I get my token?
[46:18-46:18] UNKNOWN: You
[46:18-46:30] SPEAKER_04: need to. I don't want to test it like that. I want to just do this. Do the cloud function or whatever. Maybe maybe we can do this, but I don't know how to get this. So
[46:30-46:30] SPEAKER_03: I mean,
[46:30-46:30] UNKNOWN: it
[46:30-46:52] SPEAKER_03: says like identity token. Is that going to print it? I know sometimes you literally run a command to go and it's just going to get it. Yeah. OK. And that's part of this big long command down there. Like in there, the first part of it is printed.
[46:52-46:59] SPEAKER_04: Oh, it's just putting it in there. I think it's going to grab it. And you're already the file name. Right. And
[46:59-46:59] UNKNOWN: that
[46:59-46:59] SPEAKER_04: is
[46:59-46:59] UNKNOWN: just
[46:59-47:03] SPEAKER_04: needs to be in here. Yeah. So I would tell it
[47:03-47:21] SPEAKER_03: what that audio file is in there. It's in there. Right. Sample audio. I would just put that like give it so it knows the path and then. It's good. The.
[47:28-47:56] UNKNOWN: The. The. The. Small coffee. Yeah. To.
[50:27-50:31] SPEAKER_04: It didn't do it right. That's like, hey, can you run the commands for
[50:31-50:32] SPEAKER_00: me?
[50:49-50:54] SPEAKER_04: Check the GCS. All right. I like it.
[50:54-51:12] SPEAKER_03: Yeah. I wish we could see what's happening. Maybe go to logs. Is there a log for this? Air rollers.
[51:21-51:24] SPEAKER_04: I wish you could see those, but it's not going to be able
[51:24-51:25] UNKNOWN: to.
[51:25-51:28] SPEAKER_03: Yeah, but those are the. So it's just working.
[51:28-51:28] UNKNOWN: I
[51:28-51:42] SPEAKER_03: think those are from when it didn't work. Yeah. And it fixed it because there's two and they're both the same. And they came from a little bit before. This started working like milliseconds before.
[51:44-51:56] SPEAKER_04: How? There was something that. To make this like update. Yeah. Oh, it's like this thing right there. I really. Don't
[51:56-51:57] SPEAKER_03: like. Freaking.
[52:05-52:07] SPEAKER_04: I'm in the future.
[52:07-52:07] SPEAKER_03: Yeah.
[52:07-52:09] SPEAKER_04: Yeah. I don't want to be in the future.
[52:09-52:22] SPEAKER_03: Yeah, just like now. And like the last hour, all morning. That's what I wanted. I understand it's built for businesses that have logs that are absurd. And it makes sense to look for like a few minutes, but damn.
[52:25-52:26] SPEAKER_04: I'm just gonna go look at the bucket,
[52:28-52:28] UNKNOWN: but.
[52:29-52:36] SPEAKER_04: And I wanna make sure that it's not just running in the background and killing me. Right.
[52:41-52:49] SPEAKER_03: Yeah, there's nothing. Go back to those logs and just like to the top
[52:49-53:18] SPEAKER_04: of, or like the latest. I think the latest is at the bottom. Oh, you're right. And I wanted to, yeah, like that's what we were trying to figure out. Like how do you just always update it? Right. Yeah, so I want to just give it these errors, I guess. Right.
[53:30-54:11] SPEAKER_03: So that one. There's a couple, like three or four lines above it, it says there's an error. It's not an actual error message yet. Yeah, it's that model name, which we have as an environment variable. You see what it said?
[54:11-54:11] SPEAKER_04: I did
[54:11-54:12] SPEAKER_03: not. It
[54:12-54:12] UNKNOWN: says
[54:12-54:34] SPEAKER_03: it has no attribute model name. Did you mean model size? Got it. So that worked locally because we defined it as model name. There you go. So rebuild. I would accept that.
[54:35-54:36] SPEAKER_04: I hate accept.
[54:41-54:44] SPEAKER_03: This thing need to be put together? Yeah. Is that what's going on?
[54:44-54:46] SPEAKER_04: Yeah. I'm just gonna hang it on the door. Okay.
[55:18-55:19] UNKNOWN: Okay.
[55:38-55:42] SPEAKER_04: I got a little bit of soreness in my hips.
[55:42-55:43] SPEAKER_03: I think it's from
[55:43-55:44] UNKNOWN: kicking. From
[55:44-55:57] SPEAKER_03: lower kicking. That's a different movement than you're used to making. Mine, I was just running back and forth like that and my legs were like sore, sore from running the other day and I feel way better today after just getting them moving. It's
[55:57-55:57] SPEAKER_04: great exercise.
[55:58-55:58] SPEAKER_03: Yeah.
[56:26-57:04] UNKNOWN: Okay. Ooh. Oh,
[57:08-57:09] SPEAKER_04: it's ready to deploy.
[57:10-57:11] SPEAKER_05: Deploy is complete.
[57:19-57:29] SPEAKER_04: Yeah, because all those layers, it literally just changed what was in the file. Variable name. But the layers and everything for the packages are all the same. That makes sense.
[57:31-57:31] UNKNOWN: Okay.
[57:45-57:50] SPEAKER_04: And I think if you deploy the Cloud Run with the same name,
[57:50-57:50] UNKNOWN: it
[57:50-57:57] SPEAKER_04: automatically gives you a new revision. Oh, okay.
[57:58-57:59] SPEAKER_03: That makes sense too.
[58:07-58:07] SPEAKER_04: Okay.
[58:07-58:07] UNKNOWN: Like
[58:07-58:09] SPEAKER_04: it doesn't just keep adding new ones.
[58:10-58:10] UNKNOWN: Right.
[58:33-58:37] SPEAKER_04: Yeah, even knowing how to troubleshoot and go look at lawns.
[58:40-58:51] SPEAKER_03: Yeah, I agree. That's a big one. And I recognize that one, like as we were acquiring the skill, it's like, oh, this is a big fucking deal. Yeah. Like you need to be able to do this.
[58:51-58:58] SPEAKER_04: Like as I talk to customers all the time who only know how to troubleshoot locally and like, well, how can we just test it locally?
[58:59-58:59] UNKNOWN: But
[58:59-59:00] SPEAKER_04: like, or can I get that?
[59:00-59:00] UNKNOWN: And then just work
[59:00-59:08] SPEAKER_04: whenever we can. How do I get access from my machine? I wanna work on my machine, but it work in the cloud. It's like you can't, it's not, you can't do
[59:08-59:13] SPEAKER_03: that. The same way you get a magic carpet to fly. Right.
[59:19-59:19] UNKNOWN: You
[59:19-59:29] SPEAKER_03: could do, you could save and export logs and have them sent local to whoever your developers are and all that shit, but it's gonna cost some cash.
[59:29-59:29] UNKNOWN: Hell
[59:29-59:30] SPEAKER_03: yeah,
[59:30-59:30] UNKNOWN: dude.
[59:30-59:33] SPEAKER_03: So. Loaded successfully on Kudo, which is good. It's running on a
[59:33-59:41] SPEAKER_04: GPU. So that service is up. I'm gonna duplicate again and then take this to storage. See what I see over here.
[59:42-59:42] UNKNOWN: Oh,
[59:42-59:59] SPEAKER_04: okay. Yeah, I need to figure out how to turn that thing down. Yeah, it's got a remote that just has a reset button. And there's nothing in there now,
[60:01-60:02] UNKNOWN: but.
[60:12-60:35] SPEAKER_03: So it received the file. It says model nine, but I've seen that before. So
[60:35-60:35] UNKNOWN: that
[60:35-60:36] SPEAKER_03: makes sense.
[60:37-60:37] UNKNOWN: Or
[60:37-60:38] SPEAKER_03: other side.
[60:38-60:51] SPEAKER_04: So you use monitor the bucket to confirm that the transcription process can be successfully this time without an attribute error. Okay. Cool. Oh, I'm in the wrong bucket. That.
[60:52-60:54] SPEAKER_03: Oh no. Yeah, that's the right
[60:54-60:54] UNKNOWN: one.
[60:54-60:58] SPEAKER_03: So it should have input audio. Like there should be a file in that input one if it's working.
[60:59-60:59] UNKNOWN: So it should have input audio.
[60:59-61:13] SPEAKER_04: No, I don't think so. Cause we went directly to the input. There it is.
[61:13-61:13] UNKNOWN: It's
[61:13-61:19] SPEAKER_04: in there. It's a JSON object. I wanna see it.
[61:22-61:36] SPEAKER_03: There it is. Fuck yeah dude. Okay, okay, go well. I don't know the distance, but you know we want the flower bed to go dude. Yeah. That's pretty freaking good.
[61:38-61:42] SPEAKER_02: I don't know what that does, but yes, it does what I want it
[61:42-61:42] UNKNOWN: to
[61:42-61:42] SPEAKER_02: do.
[61:43-61:45] SPEAKER_03: Pretty pretty. Yeah. Do
[61:45-61:45] UNKNOWN: you
[61:45-61:47] SPEAKER_03: wanna bring it up here? I don't know. I don't know the answer.
[61:48-61:48] UNKNOWN: Cause
[61:48-61:53] SPEAKER_03: this, no, we'll join that out, right? There. That's pretty
[61:53-62:00] SPEAKER_04: damn good. I don't wanna know how much it costs, but I think we play with it for a little while. It's not gonna be $1 ,000.
[62:00-62:12] SPEAKER_03: No, but I think it might be worth limiting the amount that we do to do a number of runs and then maybe feed it our shortest. No,
[62:12-62:12] UNKNOWN: I
[62:12-62:13] SPEAKER_03: think
[62:13-62:39] SPEAKER_04: we just start doing it and if it's $1 ,000 I'll be like. If it's $1 ,000 today, this service is gonna die. Right. Yeah, but so I just, I don't wanna do that now. I wanna do the rest. Like so, okay, now let's do the cloud function. Right, right, right. Now that we know the service itself is working, which is fantastic. Oh yeah. So I'm going to download this and say, hey, here's what came back.
[62:39-62:42] SPEAKER_03: Right. What do you think? What do we do next?
[62:46-63:12] SPEAKER_04: No, I don't want you to give me a version of it. I literally want you to turn this into a file. Download. I don't want it like this. Maybe it is doing that, it is not. I want you to literally become a file.
[63:14-63:14] SPEAKER_03: How do
[63:14-63:14] UNKNOWN: you,
[63:14-63:25] SPEAKER_03: do you know how to do that? No, I mean, worst case copy and paste it into a different place. Okay, fine.
[63:26-63:33] SPEAKER_04: I don't even know how to make a freaking, I do know how to do it in like docs. And I'll do
[63:33-63:33] UNKNOWN: that. I think you just take
[63:33-63:33] SPEAKER_04: it
[63:33-63:37] SPEAKER_03: to cursor, right? If you're gonna give it to cursor ultimately, you just go make a file. Yep,
[63:37-63:58] SPEAKER_04: that's why I need somebody with common sense. Teamwork makes a dream work. So what is the name of that file? I do want it to be named the same thing. Sample audio. Transcription. Sample audio upload transcription.
[64:00-64:03] UNKNOWN: Okay. Sample
[64:03-64:12] SPEAKER_04: audio upload transcription.
[64:16-64:17] SPEAKER_05: .json.
[64:27-64:27] SPEAKER_04: .json.
[64:27-64:27] UNKNOWN: And
[64:27-64:38] SPEAKER_04: then it's that. So, can you make it be anything different than that when all in the same line?
[64:40-64:42] SPEAKER_03: Yeah, it doesn't do the pretty shit over here.
[64:43-64:49] SPEAKER_04: I can do pretty print. Maybe it will do it. Hopefully it'll copy
[64:49-64:49] SPEAKER_03: it.
[64:52-65:22] SPEAKER_04: Yes, it did. Okay, and then I know we need to make the other service for what I forget the word, where it separates it into speakers.
[65:23-65:23] UNKNOWN: Oh,
[65:23-65:46] SPEAKER_04: right, yeah. So I think we need to redo some. So this is a good test, but I don't wanna just do, make it trigger off of the bucket yet because we need to make a new service, I believe. Because I think it's gonna go to that service first, and so we're gonna make a new cloud run service. That's gonna do that first, and then it's gonna take the results of that, put that in some, maybe even,
[65:47-65:47] UNKNOWN: yeah,
[65:47-65:52] SPEAKER_04: in an intermediate bucket, pick that up, and when that bucket triggers, it's gonna go
[65:52-65:53] SPEAKER_03: to
[65:53-65:55] SPEAKER_04: this service. But I'm not sure.
[65:55-65:55] UNKNOWN: What was
[65:55-66:09] SPEAKER_03: the workflow of that? Because how does it get the speakers? Oh, I kinda remember what it was doing. It was combining different threads based on some kind of thing.
[66:09-66:13] SPEAKER_04: Yeah, so I was literally gonna take this and put it in there and say,
[66:14-66:14] UNKNOWN: hey,
[66:14-66:18] SPEAKER_04: we've been thinking, let's start a new file, finish this out to say,
[66:18-66:18] UNKNOWN: hey,
[66:18-66:19] SPEAKER_04: yeah, it's working.
[66:19-66:23] SPEAKER_03: Yep, you probably gotta start a new chat. Right, exactly, it has the thing over there already.
[66:23-67:18] SPEAKER_04: Yeah, so I was gonna say, hey, this is what we're turned, it looks good. Here's what I wanna do next. That's
[67:18-67:27] SPEAKER_03: fantastic. Yeah, I mean, this is. And it was pretty fast. Yeah, this is where we're at, and it took a few minutes. Okay, update the Read Me.
[67:34-67:43] SPEAKER_04: How do you normally tell them to, what do you say when you're trying to update the new chat?
[67:45-67:54] SPEAKER_03: Something like, check the Read Me, and, wait, this is like the end of this
[67:54-67:54] UNKNOWN: chat?
[67:54-68:05] SPEAKER_03: Yeah, the end of this one. Let's say, update the Read Me to reflect any changes we made here, which for you is gonna be nothing. Right, they're doing it right now, yeah. And then, I think that's it.
[68:05-68:05] UNKNOWN: Like,
[68:05-68:08] SPEAKER_03: I sometimes just say, so I'll be ready to work whenever I start a
[68:08-68:08] UNKNOWN: new chat.
[68:08-68:09] SPEAKER_03: And then you just
[68:09-68:10] SPEAKER_04: hit new chat.
[68:10-68:15] SPEAKER_03: Yep, and then there I say, hey, check out the Read Me and determine what we need to start working on. Like,
[68:16-68:16] UNKNOWN: literally
[68:16-68:18] SPEAKER_03: every time, several times a day.
[68:18-68:29] SPEAKER_04: Okay. So I'm just gonna start a new chat, and then say, review the Read Me to get an update
[68:31-68:33] UNKNOWN: on where we are.
[68:37-68:40] SPEAKER_05: And I want to add
[68:42-68:43] UNKNOWN: a
[68:43-68:44] SPEAKER_05: new step
[68:44-68:50] UNKNOWN: to the workflow. I am thinking
[68:50-68:55] SPEAKER_05: about diarh, diarhization? Diarhization.
[69:12-70:00] UNKNOWN: Let me just remove this file. I'm just gonna lose it. Also, it says guest. I don't need that one. What if it was a general text file? I'm gonna walk through it. Let's do that, yeah. WinCominking fills. for n not simply a JSON.
[70:00-70:08] SPEAKER_05: So we will need some pre -processing for
[70:08-70:08] UNKNOWN: the
[70:08-70:08] SPEAKER_05: JSON.
[70:08-70:08] UNKNOWN: We will need some
[70:08-70:22] SPEAKER_05: priorization and post -processing to trans the JSON file into a simple
[70:22-70:22] UNKNOWN: text
[70:22-70:37] SPEAKER_05: file. Here are some notes on the potential workflow.
[70:41-73:47] SPEAKER_04: But review and in the description. We
[73:47-73:47] UNKNOWN: already
[73:47-74:10] SPEAKER_04: got that. We are actually using medium. Formatting the final
[74:21-74:24] UNKNOWN: output. I
[74:24-74:27] SPEAKER_04: like option one.
[74:29-74:29] UNKNOWN: Yeah
[74:29-74:34] SPEAKER_03: that
[74:34-74:38] SPEAKER_04: gives a branch. Like from this time to this time the speaker was talking.
[74:38-74:52] SPEAKER_03: And then the start plus the speaker. I like
[74:52-75:07] SPEAKER_04: the
[75:07-75:07] UNKNOWN: speaker being
[75:16-75:17] SPEAKER_03: like
[75:17-75:24] SPEAKER_04: I applied it to the sample audio upload. It changed that and I didn't want to do that. I don't know how you. It might
[75:24-75:26] SPEAKER_03: be able to command Z inside the file.
[75:32-75:55] SPEAKER_04: Yeah this now says no changes made. I don't know. It also doesn't superman if I was not going to. I can literally delete it and put it back. I literally can. I have it. I can go back and grab this again. And do it again. Easy as that. Whatever.
[75:59-76:02] SPEAKER_03: Yeah it's in GCP like until you explicitly get rid of it.
[76:22-76:54] SPEAKER_04: Yeah I don't want to run them on the same cloud run instance but I'm going to give it some recommended changes here. Yeah. I do want to make separate services. Confirm output. So I want the output to be. This
[76:54-76:55] UNKNOWN: one.
[77:03-77:10] SPEAKER_04: It's pretty good. It is like it looked at everything. It's like OK here's what I need you. Here's the steps that you need to do.
[77:10-77:10] UNKNOWN: Right.
[77:11-77:17] SPEAKER_04: So output choice. This one.
[77:21-77:21] UNKNOWN: OK.
[77:47-77:49] SPEAKER_05: OK.
[77:51-77:53] UNKNOWN: Combined.
[77:57-78:18] SPEAKER_05: Thoughts. To create. Three total. With. Cloud function. Triggers. For the first two.
[78:47-78:47] UNKNOWN: For the first two.
[79:16-79:18] SPEAKER_04: So. Yeah.
[79:18-79:50] UNKNOWN: Yeah. Yeah. Thank you.
[79:57-79:59] SPEAKER_03: Yeah. That's actually good.
[80:28-80:29] SPEAKER_04: They
[80:29-80:29] UNKNOWN: can.
[80:29-80:32] SPEAKER_04: Well
[80:32-80:36] SPEAKER_05: there's that.
[80:41-81:04] SPEAKER_04: Maybe take it off of there anyways but still just keep it up high. Yeah. Just put. Yeah. I just think is they're going to try to close it or be hitting it. Yeah. Yeah. Yeah. Yeah.
[81:05-81:06] SPEAKER_03: Yeah.
[81:06-81:06] UNKNOWN: First
[81:06-81:07] SPEAKER_03: one.
[81:11-82:21] UNKNOWN: Yeah. Yeah. This one. I mean it works. Yeah. Yeah. Yeah.
[82:49-82:51] SPEAKER_05: Yeah. Yeah.
[82:51-82:58] SPEAKER_03: Yeah. Yeah.
[83:26-83:34] SPEAKER_04: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[84:02-84:04] UNKNOWN: Yeah.
[84:32-84:33] SPEAKER_03: Yeah.
[84:33-84:35] SPEAKER_04: Yeah.
[84:35-84:43] SPEAKER_03: Yeah. Yeah.
[84:47-84:59] SPEAKER_04: Yeah. Yeah. Yeah. Yeah.
[84:59-85:08] SPEAKER_03: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[85:23-85:23] UNKNOWN: Yeah.
[85:45-86:45] SPEAKER_03: Yeah. Yeah. Yeah. Yeah. Yeah.
[86:48-87:34] SPEAKER_04: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[87:34-87:49] SPEAKER_03: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[88:11-88:13] SPEAKER_04: Yeah. Yeah.
[88:42-88:47] SPEAKER_03: Yeah. Yeah. Yeah.
[88:55-88:56] SPEAKER_04: Yeah.
[88:56-88:57] SPEAKER_03: Yeah.
[89:26-89:27] SPEAKER_04: Yeah.
[89:33-89:35] SPEAKER_03: Yeah.
[89:41-89:45] SPEAKER_04: Yeah. Yeah. Yeah.
[89:55-90:03] SPEAKER_03: Yeah. Yeah. Yeah.
[90:03-90:25] SPEAKER_04: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[90:54-91:56] SPEAKER_03: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[92:26-92:41] UNKNOWN: Yeah. Yeah.
[93:01-93:27] SPEAKER_03: Yeah. Yeah. Yeah. Yeah.
[93:36-93:54] SPEAKER_04: Yeah. Yeah. Yeah. Yeah.
[94:10-94:16] SPEAKER_03: Yeah. Yeah.
[94:44-95:12] UNKNOWN: Yeah. Yeah.
[95:22-95:24] SPEAKER_03: Yeah.
[95:36-95:40] SPEAKER_04: Yeah. Yeah. Yeah.
[95:42-95:44] SPEAKER_03: Yeah.
[95:46-97:14] SPEAKER_04: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[97:18-97:22] SPEAKER_03: Yeah. Yeah. Yeah.
[97:32-97:34] SPEAKER_04: Yeah.
[97:35-97:37] UNKNOWN: Yeah.
[97:42-98:54] SPEAKER_04: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[99:05-99:06] UNKNOWN: Yeah.
[99:11-99:33] SPEAKER_04: Yeah. Yeah. Yeah. Yeah.
[100:23-100:24] UNKNOWN: Yeah.
[100:24-100:27] SPEAKER_03: Yeah.
[100:55-100:58] SPEAKER_04: Yeah. Yeah.
[101:27-101:28] SPEAKER_03: Yeah.
[101:38-101:39] UNKNOWN: Yeah.
[101:45-101:59] SPEAKER_04: Yeah. Yeah. Yeah. Yeah.
[102:27-102:29] UNKNOWN: Yeah.
[102:56-103:27] SPEAKER_04: Yeah. Yeah. Yeah. Yeah. Yeah.
[103:34-103:48] SPEAKER_03: Yeah. Yeah. Yeah. Yeah. Yeah.
[103:51-103:52] UNKNOWN: Right.
[104:35-104:37] SPEAKER_03: Yeah.
[104:49-104:51] SPEAKER_04: Yeah.
[104:53-105:07] SPEAKER_03: Yeah. Yeah. Yeah. Yeah.
[105:19-105:21] UNKNOWN: Yeah.
[105:30-105:31] SPEAKER_04: Yeah.
[106:00-106:03] SPEAKER_03: Yeah. Yeah.
[106:05-106:06] UNKNOWN: Right.
[106:35-106:37] SPEAKER_04: Yeah. Yeah.
[107:15-107:16] UNKNOWN: Yeah.
[107:44-107:51] SPEAKER_04: Yeah. Yeah. Yeah. Yeah. Yeah.
[107:57-107:59] UNKNOWN: Yeah.
[108:20-108:51] SPEAKER_04: Yeah. Yeah.
[108:51-109:52] SPEAKER_03: Right. Yeah. Yeah.
[110:03-110:18] SPEAKER_04: Yeah. Yeah. Yeah.
[110:37-110:43] SPEAKER_03: Yeah. Yeah.
[110:45-110:47] SPEAKER_04: Yeah. Yeah.
[111:16-111:38] SPEAKER_03: Yeah. Yeah. Yeah.
[112:07-112:08] SPEAKER_04: Yeah.
[112:11-112:12] SPEAKER_03: Yeah.
[112:19-112:21] UNKNOWN: Yeah.
[112:26-112:31] SPEAKER_03: Yeah. Yeah.
[112:31-112:33] SPEAKER_01: Yeah.
[113:01-113:03] UNKNOWN: Yeah.
[113:17-113:23] SPEAKER_04: Yeah. Yeah.
[113:52-113:53] SPEAKER_03: Yeah.
[114:07-114:43] SPEAKER_04: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[114:43-114:47] SPEAKER_03: Yeah. Yeah.
[115:20-116:21] SPEAKER_04: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[116:23-116:28] SPEAKER_03: Yeah. Yeah. Yeah.
[116:35-116:48] SPEAKER_04: Yeah. Yeah.
[116:48-116:50] SPEAKER_03: Yeah.
[117:19-120:00] SPEAKER_04: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[120:07-120:09] SPEAKER_03: Yeah.
[120:33-120:34] SPEAKER_04: Yeah.
[121:03-121:04] SPEAKER_00: Yeah.
[121:14-125:03] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[125:08-125:11] SPEAKER_04: Yeah. Yeah.
[125:14-125:16] SPEAKER_05: Yeah.
[125:22-125:37] UNKNOWN: Yeah. Yeah.
[125:59-126:00] SPEAKER_04: Yeah.
[126:19-126:20] UNKNOWN: Yeah.
[126:43-126:57] SPEAKER_04: Yeah. Yeah. Yeah. Yeah. Yeah.
[126:57-126:58] SPEAKER_03: Yeah.
[127:36-128:02] UNKNOWN: Yeah. Yeah.
[128:02-128:04] SPEAKER_04: Yeah.
[128:32-129:01] SPEAKER_03: Yeah. Yeah. Yeah.
[129:01-129:06] SPEAKER_04: Yeah. Yeah. Yeah.
[129:06-129:08] SPEAKER_03: Yeah. Yeah.
[129:37-129:38] UNKNOWN: Yeah.
[129:45-129:47] SPEAKER_04: Yeah.
[129:56-130:12] SPEAKER_03: Yeah. Yeah.
[130:20-130:26] SPEAKER_04: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[130:29-130:33] SPEAKER_03: Yeah. Yeah. Yeah.
[131:01-131:40] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[132:08-132:08] SPEAKER_03: Yeah.
[132:13-132:15] UNKNOWN: Yeah. Yeah.
[132:47-133:33] SPEAKER_04: Yeah. Yeah. Yeah. Yeah.
[134:01-134:03] SPEAKER_01: Yeah.
[134:03-134:04] SPEAKER_04: Yeah.
[134:32-134:34] UNKNOWN: Yeah.
[134:50-134:55] SPEAKER_04: Yeah. Yeah. Yeah.
[135:01-135:03] SPEAKER_03: Yeah. Yeah.
[135:05-135:07] SPEAKER_04: Yeah. Yeah.
[135:09-135:10] SPEAKER_03: Yeah.
[135:31-136:09] SPEAKER_04: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[136:10-136:12] SPEAKER_03: Yeah. Yeah.
[136:12-136:12] SPEAKER_04: Yeah.
[136:37-136:46] SPEAKER_03: Yeah. Yeah. Yeah.
[136:49-137:09] UNKNOWN: Yeah. Yeah. Yeah. Yeah.
[137:37-137:40] SPEAKER_04: Yeah. Yeah. Yeah.
[137:40-140:19] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[140:47-141:06] SPEAKER_04: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[141:06-141:13] SPEAKER_03: Yeah. Yeah. Yeah. Yeah.
[141:18-142:41] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[143:03-143:04] SPEAKER_03: Yeah.
[143:04-143:06] SPEAKER_01: Yeah.
[143:06-143:08] UNKNOWN: Yeah. Yeah.
[143:37-143:38] SPEAKER_01: Yeah.
[143:51-143:55] UNKNOWN: Yeah. Yeah.
[143:57-143:59] SPEAKER_01: Yeah.
[143:59-143:59] UNKNOWN: Yeah.
[143:59-144:01] SPEAKER_03: Yeah.
[144:01-146:40] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[147:03-147:09] SPEAKER_03: Yeah. Yeah. Yeah. Yeah. Yeah.
[147:09-147:11] SPEAKER_04: Yeah. Yeah.
[147:42-151:13] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[151:42-151:43] SPEAKER_04: Yeah. Yeah. Yeah. Yeah.
[152:05-152:05] UNKNOWN: Yeah.

==================================================
Generated on: 2025-07-23 13:21:30
Total words: 8165
Total speakers: 7
==================================================





Summary:
creation_date: 2025-08-26 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1257_ZOOM0013_transcript.txt participants: [SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04, SPEAKER_05]
Executive Summary

This transcript captures a hands-on technical session focused on deploying the open-source [[Whisper]] [[Transcription Service]] on [[GCP]]. The participants successfully deploy the service to [[Cloud Run]], configure the necessary [[Service Account]] permissions, and troubleshoot a series of deployment errors related to memory, CPU architecture, and environment variables `[27:54-28:42]`. After a successful test run that generated a [[JSON]] transcript file `[1:01:13]`, they planned the next steps for their [[Workflow Automation]] pipeline. The next phase involves creating a separate service for speaker diarization, which will be triggered by a [[Cloud Function]], forming a multi-step process to generate a complete and speaker-labeled transcript. The session also touches on career strategy, emphasizing the current [[AI Boom]] of opportunity in AI and the value of focusing on personal projects `[40:30-41:15]`.

## Key Topics Discussed

- **Deploying the [[Transcription Service]] on [[GCP]]**
    
    - The primary goal was to deploy the Dockerized [[Whisper]] application to [[Cloud Run]] `[01:41-02:22]`.
        
    - They used an AI coding assistant ([[Cursor]]) to generate `gcloud` commands for deployment and permission management `[20:27-20:43]`.
        
    - Setup involved creating a [[Service Account]] and granting it specific [[IAM roles]] (Storage Object Viewer/Creator) on the input and output buckets to follow the principle of least privilege `[16:30-17:38]`.
        
- **Troubleshooting Deployment Issues**
    
    - **Memory/CPU Mismatch**: The initial deployment failed because the requested 24GB of memory exceeded the 16GB maximum for the selected 4-vCPU instance with an L4 [[GPU]] `[27:54-28:42]`.
        
    - **Architecture Mismatch**: The Docker image was built for `AMD64`, which was incompatible with the [[GPU]] instance, requiring a rebuild `[30:05-30:26]`.
        
    - **Incorrect Environment Variable**: The application code expected a `model_size` variable, but the deployment configuration was using `model_name`, causing an attribute error that was identified by checking the logs `[53:30-54:34]`.
        
- **Future Development: Diarization and Automation**
    
    - After successfully generating a raw transcript, the next major step is to add speaker diarization (identifying who is speaking) `[1:02:46-1:02:52]`.
        
    - The plan is to create a new, separate [[Cloud Run]] service specifically for the diarization task.
        
    - A [[Cloud Function]] will orchestrate the entire [[Workflow Automation]] pipeline:
        
        1. File is uploaded to an input bucket.
            
        2. The [[Cloud Function]] triggers the [[Whisper]] [[Transcription Service]].
            
        3. The raw transcript output triggers the diarization service.
            
        4. A final, speaker-labeled transcript is produced `[1:05:41-1:06:54]`.
            
- **Personal and Career Philosophy**
    
    - The participants discuss the unique and advanced nature of their skillset, noting how few people can independently deploy cloud services from scratch `[32:34-33:31]`.
        
    - There's a strong belief that they are in a "golden window" of opportunity with the current [[AI Boom]], similar to the [[Dot-com Bubble]] `[40:30-41:15]`.
        
    - A conscious decision was made to prioritize working on these personal projects over pursuing promotions or more demanding roles at work, viewing this as the most direct path to significant success `[44:54-45:13]`.
        

## Action Items & Decisions

- **Decision**: Successfully deployed the [[Whisper]] [[Transcription Service]] as a containerized application on [[GCP]] [[Cloud Run]].
    
- **Decision**: Confirmed the service is functional by successfully processing a sample audio file and generating a [[JSON]] transcript `[1:01:13-1:01:36]`.
    
- **Action**: Plan and develop a second, separate [[Cloud Run]] service for speaker diarization.
    
- **Action**: Create a [[Cloud Function]] to act as a trigger, automating the workflow from file upload to final, diarized transcript `[1:02:52-1:03:37]`.
    

## Suggested New Links/Tags

- [[AI Boom]]
    
- [[Cursor]]
    
- [[Dot-com Bubble]]
    
- [[GPU]]
    
- [[IAM roles]]
    
- [[JSON]]
    

## Linked Concepts

- [[AI Agents]]
    
- [[AI Boom]]
    
- [[AI Tools]]
    
- [[Cloud Function]]
    
- [[Cloud Run]]
    
- [[Cursor]]
    
- [[Dot-com Bubble]]
    
- [[GCP]]
    
- [[GPU]]
    
- [[IAM roles]]
    
- [[JSON]]
    
- [[Service Account]]
    
- [[Transcription Service]]
    
- [[Whisper]]
    
- [[Workflow Automation]]
    

## #Tags

- #AI
    
- #Automation
    
- #GCP
    
- #SoftwareDevelopment
    
- #Startups

zoom14
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-28_1901_ZOOM0014_transcript.txt

==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:02-00:09] SPEAKER_00: Yeah, I think that that's effectively that would be an ideal input device for us.
[00:09-00:09] UNKNOWN: It's
[00:09-00:12] SPEAKER_00: like just something that's just always on.
[00:12-00:12] UNKNOWN: I
[00:12-00:31] SPEAKER_01: mean, it's just a microphone. It would freak people out. Where my mind went to was like, well, that's not that hard to execute on locally. You need a microphone and a power source. Right. Exactly. And like some storage, which you can get terabytes of storage on a tiny little chip so you could make a pretty tiny little thing.
[00:31-00:31] UNKNOWN: You
[00:31-00:34] SPEAKER_01: could even build it into some glasses if you really wanted to get fancy. 100 percent.
[00:34-00:34] UNKNOWN: I
[00:34-00:37] SPEAKER_01: mean, at a minimum, you carry that around
[00:37-00:39] SPEAKER_00: and offload it every day.
[00:41-00:41] UNKNOWN: Or
[00:41-00:46] SPEAKER_00: have some sort of logic where it uploaded periodically.
[00:46-00:46] UNKNOWN: Yeah,
[00:46-00:48] SPEAKER_01: maybe. Uploads it.
[00:53-01:41] UNKNOWN: What is happening? Okay.
[01:42-01:54] SPEAKER_00: Where are we? Oh, the diarization services. That's the one. Right. Unit and integration testing for
[01:54-01:54] UNKNOWN: the device.
[01:55-01:59] SPEAKER_00: I guess we can do that next. I have a question.
[02:52-03:43] UNKNOWN: Okay. Okay. Okay. I
[03:43-03:50] SPEAKER_00: probably should ask these questions beforehand, but I'm not even sure how this diarization service works. Like what is it output?
[03:51-03:51] SPEAKER_04: Yeah.
[03:57-04:09] SPEAKER_01: I think, is that not what we were doing when we were deciding between the formats? It was like speaker one and a time range versus the start time and speaker one? No, I agree with
[04:09-04:16] SPEAKER_00: you, but then if it doesn't output an audio file, that can't go to the next step.
[04:16-04:23] SPEAKER_01: Right. I've been confused as to how it gains the reference from this to begin with. So it does get the audio file,
[04:24-04:24] UNKNOWN: I
[04:24-04:24] SPEAKER_01: think, because it does.
[04:25-04:25] UNKNOWN: No,
[04:25-04:38] SPEAKER_01: no. So the first day we did diarization, it was talking about identifying the middle of a certain line of speech based on voice patterns and stuff like that. Yeah. And so it kind of just, there's magic there.
[04:38-04:48] SPEAKER_00: Maybe it just creates a whatever, a file that accompanies it. Like a,
[04:48-04:48] UNKNOWN: I
[04:48-04:51] SPEAKER_00: forget what you call those type of files.
[04:56-05:07] UNKNOWN: Not sure. Whatever. It doesn't matter. Let's see.
[05:08-05:18] SPEAKER_01: Yeah, so that Python file, Pyanote. Yeah, the output is a list of speakers. Right.
[05:19-05:19] UNKNOWN: And
[05:19-05:40] SPEAKER_01: it just like, it's able to determine like based on it can hear. Yeah. The same way we are, like the same way that Google Home does. It outputs us JSON file. Yeah, with the number of identified speakers and like some timestamps, I think, or some time ranges in the start and in timestamps of their speech.
[05:40-05:50] SPEAKER_00: Right. And so yeah, it outputs a JSON file. And so the original audio file is not changed. So that still needs to get
[05:50-05:50] UNKNOWN: transferred.
[05:50-05:50] SPEAKER_00: It's in the
[05:50-05:51] SPEAKER_01: bucket.
[05:51-05:51] UNKNOWN: It
[05:51-06:14] SPEAKER_01: never gets like, yeah, it's in that first bucket that the transcription service is also going to read from. Right. And I think we gave both of these services access to that bucket. I think so. And so the diarization will just go look at it, probably copy it to itself or whatever, however it functions and just leave the original alone, come back and then be like,
[06:14-06:14] UNKNOWN: yeah,
[06:14-06:29] SPEAKER_01: output is JSON. It's like, here's all the segments. There's seven speakers, I think, and all this stuff. And then the transcription service will receive that or there's a final step at the very end that needs to put them together. I don't know. That's
[06:29-06:36] SPEAKER_00: what I'm kind of thinking through or trying to understand. I mean, we didn't ultimately design it. I assume it works. Right.
[06:47-06:56] SPEAKER_01: It's under processing. It gets the bucket name, downloads an audio file to a temporary local directory. Where do
[06:56-06:56] UNKNOWN: you
[06:56-07:01] SPEAKER_01: see that? Right above your mouse, like the first bullet. Oh, OK. On download.
[07:07-07:15] SPEAKER_00: Yeah. So here. Yeah. So it outputs this
[07:15-07:31] SPEAKER_01: type of thing. Yeah. And just a whole bunch of them over the course of a two hour or whatever. It'd be interesting to see if it identifies, like when we carry it in there, we're making a
[07:31-07:31] UNKNOWN: copy
[07:31-07:41] SPEAKER_01: of that's different speakers. Maybe. Yes, it is like I imagine that's relatively sensitive. You might be able to tune it to.
[07:42-07:43] SPEAKER_00: OK. That makes
[07:43-08:11] SPEAKER_01: sense. So it's a big long JSON file with just three or four properties. Yeah. So we're up for testing. It's trying to write tests. We can do that if you want to skip it. I mean, it's probably not a terrible thing. We're not going to learn it if it just writes test for us that work. We'll learn a little bit from where it breaks and we have to figure out how to fix it. But I say we skip it. I think we should test it. Yeah.
[08:13-08:13] UNKNOWN: But
[08:13-09:08] SPEAKER_01: I don't know. I'm kind of holding out to have just completely missed the year where you had to write tests. Yeah. Right on the brink of it. I mean,
[09:08-09:08] UNKNOWN: in
[09:08-09:14] SPEAKER_01: theory, you should just do all that. Maybe it just doesn't know that the Pub -Sub topics are there.
[09:16-09:17] UNKNOWN: And
[09:17-09:24] SPEAKER_01: that's a thing we did with G Cloud, but in a history that's not a part of this.
[09:25-09:25] UNKNOWN: I
[09:25-09:27] SPEAKER_01: think it should know.
[09:29-09:30] SPEAKER_00: Maybe not.
[09:30-09:44] SPEAKER_01: Yeah, you're right. I mean, those are in there. Yeah. I
[09:44-09:44] UNKNOWN: mean,
[09:44-10:14] SPEAKER_01: it should work. Given the fact that I told you to look at the fucking reading from the very first thing. Okay. It's right. Unless that's an old thing. We still need a function that responds to the Pub -Sub topic. Yeah, that's true.
[10:19-10:19] UNKNOWN: Okay.
[10:22-10:33] SPEAKER_00: Okay, got it. The chest does service itself. Right. So we have to... Okay. It does make sense.
[10:34-10:44] SPEAKER_01: Yeah. It usually does. Yeah. And I feel silly for getting upset. Sometimes it doesn't.
[10:46-10:51] SPEAKER_00: I'll put the audio file in there. Transcription service input audio.
[10:51-10:52] SPEAKER_01: Yeah, you got it.
[11:04-11:17] SPEAKER_00: There's a bunch now. I didn't know there was that many. I'm not sure what the last one is. Oh, it's from Cloud Build. I accidentally triggered Cloud Build and I wasn't trying to. Oh,
[11:17-11:17] UNKNOWN: it
[11:17-11:42] SPEAKER_00: was trying to do the build of the image using Cloud Build. And it stopped it because the API wasn't active. And I was like, no, don't do that. That was one of the other things I messed. Like, no, I want to do it locally on my machine using the Docker. Oh, or whatever. Don't freaking do that. Yeah, that makes sense. So there's not a... There is.
[11:43-12:17] SPEAKER_01: Yeah, but three is what we want. And then the function should trigger the diarization. And then diarization output should trigger transcription. I agree. Yeah, I am. It's in the project you're in. Like if you go... Like you're trying to open...
[12:17-12:18] UNKNOWN: Go down a little.
[12:29-12:55] SPEAKER_01: So the Pub Sub topic should trigger, but it doesn't have anything to trigger. Like it's watching a thing just upload it, so it should have run theoretically. But it's not pointing at it like any function that it's supposed to run. I guess so. Yep. Like something has to subscribe to the Pub Sub topic,
[12:55-12:55] UNKNOWN: I
[12:55-12:58] SPEAKER_01: think is what the syntax for that would be. I think so,
[12:59-12:59] UNKNOWN: yep.
[13:12-13:57] SPEAKER_01: Let's tell me you find a spot. You get a new chat prompt to do. So it knows final transcript output GCS URI. Yeah,
[14:00-14:00] UNKNOWN: I
[14:00-14:32] SPEAKER_00: think because it's in there. Oh, that's saying, here's what I'm telling you and here's what it is. I see. Yeah, so I think the message type is the GCS, the input URI. Right. And that's this one. Yep. So that's where you just put that. The output URI, where I want you to go. Diarization output is to transcription service. Yeah. And then the final output URI, which goes to the sample output text.
[14:33-14:33] SPEAKER_01: Right.
[14:36-14:57] UNKNOWN: Yeah. So
[14:57-15:01] SPEAKER_01: she's watching the logs of the
[15:01-15:01] UNKNOWN: pad
[15:01-15:05] SPEAKER_01: room. Specifically the diarization service to see.
[15:06-15:06] UNKNOWN: Nothing
[15:06-15:06] SPEAKER_01: came out.
[15:11-15:12] UNKNOWN: Yeah,
[15:12-15:18] SPEAKER_01: I mean it took a while to build that, so I don't know how long it's going to take the spin up.
[15:51-15:56] SPEAKER_00: It just may take a while. Yeah, it's spinning up.
[16:12-16:13] SPEAKER_01: Okay.
[16:21-16:24] SPEAKER_00: I'm kind of vibe coding right now.
[16:31-16:32] UNKNOWN: You
[16:32-16:39] SPEAKER_01: see though, like the audience and the endpoint are different from the URL from the
[16:39-16:42] SPEAKER_00: last deployment. Yeah. So
[16:42-16:42] UNKNOWN: maybe
[16:42-16:47] SPEAKER_00: it just changed. I'm not sure why it did that. But
[16:47-16:57] SPEAKER_01: apparently the method is to delete that shit. I'm sure you're doing it.
[17:04-17:07] SPEAKER_00: Two minutes have not passed. Do you see that?
[17:07-17:07] UNKNOWN: It
[17:07-17:42] SPEAKER_00: says I'll set a brief timer and then we can proceed. Wait approximately two minutes. Okay, two minutes have passed. That is not true at all. We're going to work next week. I've been thinking about it.
[17:43-17:43] UNKNOWN: Like
[17:43-17:49] SPEAKER_00: let me feel it out a little bit. I definitely want to. But I think we should be able
[17:49-17:49] SPEAKER_01: to.
[17:49-17:49] UNKNOWN: I
[17:49-18:24] SPEAKER_01: mean if it's in this time, you're not really missing anything. You're just continuing to get up early throughout the day. I'm starting to come to grips with logic isn't everything. Yeah. And there are other equally valid things in the universe that I
[18:24-18:24] UNKNOWN: don't
[18:24-18:51] SPEAKER_01: understand. Maybe not equally, but not wholly invalid. Right. I finished The Prophet and I'm going
[18:51-18:51] UNKNOWN: to
[18:51-19:09] SPEAKER_01: start reading this biography of Thomas Jefferson. There's a quote in the beginning of it from JFK. He's addressing a coming together of all the living recipients of the Nobel Prize in general. And he said,
[19:09-19:09] UNKNOWN: I
[19:09-19:25] SPEAKER_01: think this is probably the greatest collection of talent when it comes to like minds and thinkers and whatnot that have ever been collected in the White House, except for perhaps when Thomas Jefferson died alone. We'll see.
[19:25-19:25] UNKNOWN: Who
[19:25-19:27] SPEAKER_01: said this? JFK.
[19:31-19:32] UNKNOWN: I
[19:32-19:56] SPEAKER_01: don't really know much about him. Other than the big bullet points. Reach out to support when you start in your chat at the very least.
[20:09-20:17] UNKNOWN: Okay. Oh, we
[20:17-20:33] SPEAKER_00: didn't wait long enough. Yeah.
[20:36-20:38] UNKNOWN: Yeah.
[21:36-21:38] SPEAKER_00: Yeah, I can't.
[21:38-21:38] UNKNOWN: I'm
[21:38-21:42] SPEAKER_00: too. I'm too far in the five coding range to truly. Well,
[21:42-21:52] SPEAKER_01: and I feel like that's the reason to start new chats more often is because the further you get into that, it's easier to get caught pressing the buttons because maybe what it's doing doesn't make sense. Right.
[21:56-22:18] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[22:39-22:53] SPEAKER_01: Yeah. I agree. So if it fixes it real quick and it's easy to find, but we might mention in a few minutes, like, Hey, let's just finish out the pipeline. Right.
[22:54-23:03] SPEAKER_00: Metadata is the word up. You just create a file. Right. Accompanies. And ultimately
[23:03-23:04] SPEAKER_01: that's just another JSON object.
[23:14-23:20] SPEAKER_00: Rebuilding the freaking doctor image. Okay. What do you think?
[23:20-23:20] UNKNOWN: I
[23:20-23:21] SPEAKER_00: mean, I don't
[23:21-23:21] UNKNOWN: know.
[23:22-23:22] SPEAKER_01: Yeah, like,
[23:22-23:22] UNKNOWN: I
[23:22-23:37] SPEAKER_01: think. For the sake of, I guess it added some people. I don't think we ended up adding that debug logging. Maybe it did without you actually pressing accept. But that's the thing you said it was doing at the end.
[23:38-23:41] SPEAKER_00: Oh, I didn't. I wasn't really paying attention to it.
[23:54-23:56] SPEAKER_01: I'm going to get some emergency.
[25:09-27:23] UNKNOWN: Okay. Okay. Okay. That was excellent. Saya reinengine. All right.
[27:56-27:59] SPEAKER_01: I think it did get added to the code.
[27:59-28:00] SPEAKER_05: Right.
[28:00-28:01] SPEAKER_01: Yeah. That's
[28:01-28:02] UNKNOWN: right.
[28:04-28:51] SPEAKER_01: Too many dot files. It's going to run into your terminal.
[28:54-28:55] SPEAKER_00: How does it look different?
[28:55-28:55] UNKNOWN: How
[28:55-28:56] SPEAKER_00: can you tell the difference? I'll
[28:56-28:57] SPEAKER_01: show
[28:57-28:57] SPEAKER_00: you whenever you
[28:57-29:21] SPEAKER_01: ask. It's a change. It's pretty clear. I think the button, the run button is blue, I think. So that's not right. That's not it. It's saying it doesn't want to say fucking do it.
[29:21-29:21] UNKNOWN: You
[29:21-29:27] SPEAKER_01: don't have to say it. It's saying it's resource intensive and tends to time out. It's like we've done it several times in
[29:27-29:27] UNKNOWN: the
[29:27-29:31] SPEAKER_01: last few days.
[29:41-29:41] UNKNOWN: Yeah,
[29:41-29:46] SPEAKER_00: I did stop it a couple times because it looks like it's freezing. But maybe I'm just impatient.
[29:46-30:04] SPEAKER_01: I think that's probably, it takes a while. But you see the difference. Yeah. And the other one I think is up on the top, like the run is up at the top, right?
[30:04-30:12] SPEAKER_00: Yep. Makes sense. After all of that bragging yesterday, we've done nothing in 31 minutes.
[30:13-30:15] SPEAKER_01: We're like three weeks ahead right now.
[30:15-30:15] SPEAKER_00: Yep.
[30:27-30:27] UNKNOWN: And
[30:27-30:42] SPEAKER_01: this really is like some final write that function. I think generally if this first pass doesn't work, we should finish out the pipeline and not try to do an intermediate test.
[30:42-30:49] SPEAKER_00: There's some aspect of it. I think that I need to restart everything. Maybe. Because I had to do that yesterday.
[30:52-31:02] SPEAKER_01: Also, it's not super uncommon for the AI to be real slow. Especially if you run out of fast tokens or whatever. This is local.
[31:02-31:17] SPEAKER_00: Yeah, this is like running the command line. It should be doing this like, and like it's literally doing, I've never seen this happen. Like, it's literally a Docker build command. And it should be, and this shows as 0%.
[31:19-31:24] SPEAKER_01: Maybe try running it locally.
[31:38-31:45] SPEAKER_00: Yeah, it's doing the same thing over here. Why are
[31:45-31:46] SPEAKER_01: we using build X? I
[31:46-31:47] SPEAKER_00: don't know.
[31:48-31:48] UNKNOWN: Like
[31:48-31:59] SPEAKER_00: a sec, I don't know. Like that command doesn't make sense to me. I'm way in far in the vibe range. Yeah, we need to
[31:59-32:01] SPEAKER_01: take some steps today.
[32:33-32:54] SPEAKER_00: Okay. And it may improve your cross building, like building for the Linux machine on ARM. For that reason is why. Yeah. There you go. I'm going to restart. Yeah. Literally going to restart my machine.
[32:57-32:57] SPEAKER_01: Yeah.
[32:57-32:57] UNKNOWN: That
[32:57-33:19] SPEAKER_01: is a thing like, especially you're actually using it, like you're putting it through its paces to some extent. It's not like super strong, but more than the average super powered MacBook is doing. Which like, I don't know what the percentage is, but like 95 % use less than 20 % of the fucking capacity of that
[33:19-33:19] UNKNOWN: thing.
[33:19-33:20] SPEAKER_01: I'm sure.
[33:32-34:08] SPEAKER_00: I'm all over the place because I had to change my freaking password. Yeah. My work machine for the first time. I, it's because I had this machine that was under my name that's at the data center that And it hasn't reported for 90 days. And like, it's just monitoring all the time. And so I got a warning and I talked to the people there and they don't know where it is. So I had to report it stolen or not stolen, reported lost. And it forces you to reset your password because they freaking lost this
[34:08-34:12] SPEAKER_01: machine. It does make sense why that would be the policy.
[34:12-34:45] SPEAKER_00: But, and so, and at the same time, you know, we had to switch to the new environment to like do test stuff. And it's like legitimate. It's better. It's legitimately a new environment, like where I have that admin console. I can add users and all of that stuff like that. And I truly own a new organization and I had to set passwords for it too. So I had to set a password for the super user or whatever. And then I had to create another user. A natural user that you're going to
[34:45-34:45] UNKNOWN: use.
[34:45-34:52] SPEAKER_00: Yes. And so now I have three different passwords that all got created in the last 24 hours. That makes sense.
[34:54-34:55] UNKNOWN: All right.
[34:56-34:58] SPEAKER_00: Okay.
[35:43-35:44] UNKNOWN: Okay.
[36:15-36:16] SPEAKER_00: Okay.
[36:16-36:16] UNKNOWN: I
[36:16-36:20] SPEAKER_00: guess I haven't pushed to the repository in a long time either.
[36:20-36:22] SPEAKER_01: I'll probably show you.
[36:23-36:25] SPEAKER_00: Do that now.
[36:25-36:27] SPEAKER_01: It won't hurt you if you just in
[36:27-36:27] UNKNOWN: case
[36:27-36:28] SPEAKER_01: you forget later.
[36:47-36:47] SPEAKER_00: Okay.
[36:47-36:47] UNKNOWN: So
[36:47-36:49] SPEAKER_00: now it's just a regular docker.
[36:59-37:18] SPEAKER_01: I mean it says it's doing like that's where it might have been fucking being weird. Because I feel like we've built with I know we built for specific machines yesterday and I don't remember seeing that build X shit. I agree. Also if it was working then it wouldn't have jumped out at me maybe.
[37:20-37:27] SPEAKER_00: Yeah. I would have noticed I think. I think that's why it wasn't
[37:27-37:27] UNKNOWN: working.
[37:27-37:38] SPEAKER_01: This machine. Oh. I think.
[37:41-38:01] SPEAKER_00: I said that was weird. I had this. I think both. Yeah. I had to restart this yesterday. I don't know. Apparently we're not doing. Because your mom wants to watch the game.
[38:01-38:01] SPEAKER_01: Yeah.
[38:01-38:01] UNKNOWN: I
[38:01-38:10] SPEAKER_01: was wondering like if somebody should probably tell her that that's what the actual plan for Thursday. At the very least like not dropping over when she gets here to watch the game.
[38:12-38:13] SPEAKER_00: Thank you.
[38:13-38:13] UNKNOWN: Appreciate
[38:13-38:14] SPEAKER_00: it.
[38:16-38:23] SPEAKER_01: Is the finest. Respect. I love it.
[38:28-38:33] SPEAKER_00: I think I force quit it yesterday. Yeah. I just got in some sort of weird
[38:33-38:47] SPEAKER_01: loop. She got pulled. I'm still coming. I don't even know what it is. Me. But. Like. It's getting more.
[39:10-39:16] SPEAKER_00: That's what I expected. I agree. And we're working immediately 40 minutes in.
[39:17-39:17] UNKNOWN: Yeah.
[39:20-39:38] SPEAKER_01: Again. This is to do the intermediate testing stuff. Yeah. So still if this shit doesn't work immediately I think we just finish out the pipeline. Because then we're debugging the actual thing that we're trying to get the actual product.
[39:38-39:46] SPEAKER_00: Right. I agree. But this should work. I mean the diarization service should trigger.
[39:49-39:57] SPEAKER_01: What were we initially. Oh we're just adding the debug statement is not going to work. Like this is to figure out why it's not why it's not working. Right. But I
[39:57-39:57] UNKNOWN: think
[39:57-40:00] SPEAKER_01: we can do a couple of passes. Yeah. Like that makes sense.
[40:00-40:19] SPEAKER_00: I think that adding. I mean that we should be able to immediately test like like OK well I'm going to send a pubs message that that the system would send and also. It should do that should be a scene.
[40:23-40:30] SPEAKER_01: And if it's right. Different URLs in different places. That's fundamentally broken. That's not right. That's the.
[40:34-40:36] SPEAKER_00: Issues. This. Yeah.
[40:37-40:37] UNKNOWN: This
[40:37-40:39] SPEAKER_01: is going to take a while.
[40:44-40:50] SPEAKER_00: The only way to make it be different is to have the packages locally.
[40:50-40:50] UNKNOWN: I
[40:50-40:51] SPEAKER_00: don't think you can do that.
[40:51-41:10] SPEAKER_01: Yeah. And it seems like you're setting yourself up for version conflicts and stuff like that. Or just get in my. That's ultimately if you're going to pull production you don't accept updates. It's like to random packages like I need to way test this whole shit out. So you don't break my entire app.
[41:11-41:11] UNKNOWN: I
[41:11-41:11] SPEAKER_01: have a calculator.
[41:12-41:24] SPEAKER_00: Right. That's. Yesterday.
[41:27-41:34] SPEAKER_01: I mean I think it literally was your machine and maybe Docker specifically needed a full on.
[41:45-41:53] SPEAKER_00: It's not too bad. There's no real big numbers in there. So far.
[41:53-41:54] UNKNOWN: Right.
[42:32-42:39] SPEAKER_00: This is. Being able to keep the logic or status and read me.
[42:39-42:40] SPEAKER_01: Yeah. It
[42:40-42:40] UNKNOWN: just
[42:40-42:48] SPEAKER_01: makes it easier to talk to. You're letting the. You're bridging the gap between the chats. You're having that extra little bit of context that you have a little bit of control.
[42:50-43:09] SPEAKER_00: I mean it actually makes sense to me to do it all the time. But like even when I'm doing just like work stuff like to have it like if you're doing a multi step process keep a read me. Yeah. The issue is the Gemini or whatever all of they can't write to a file.
[43:09-43:13] SPEAKER_01: You have to be in an idea like it has to be an integrated thing which you know I mean whatever you.
[43:16-43:16] UNKNOWN: Yeah.
[43:20-43:30] SPEAKER_00: But what I'm saying is like I just want to work on this word or whatever like whatever like I want to do. It won't constantly update right. It
[43:30-43:36] SPEAKER_01: can update files but then the one that it has in memory is not the one.
[43:36-43:39] SPEAKER_00: Exactly. And so I have to manually.
[43:40-43:43] SPEAKER_01: Yeah. But like the value of even just removing that
[43:43-43:43] UNKNOWN: little bit of memory is not the one.
[43:51-44:20] SPEAKER_00: I'm talking to you not yesterday about just the stuff we're working on and I was telling them that I was like have you ever used cursor and it's like no it's like you never heard of it. So it's like even more so makes me feel like we're like on the leading it like he does not a day to day developer. I can't imagine going back to just regular old code and not have this ability.
[44:20-44:21] SPEAKER_01: Yes.
[44:21-44:24] SPEAKER_00: I wouldn't do it. Yeah. It's very different.
[44:24-44:37] SPEAKER_01: We're just like setting up a cluster like the stuff that he would be doing. And I mean to be fair like this last week is when you started to really see the value when you really got into jamming. I agree. And so he might not have done. He
[44:37-44:45] SPEAKER_00: just hasn't had time to do it. I'm a weekend. Right. But then more than you but I haven't actually like been in you've been doing
[44:45-44:45] SPEAKER_01: it. Yeah.
[44:46-44:47] UNKNOWN: But
[44:47-44:48] SPEAKER_00: I haven't been driving it right.
[44:49-45:17] SPEAKER_01: But it took like an hour. Yeah. But being on the keyboard for you to go like holy shit. This is different. I see it. And so he just needs the next time he has something to do in an ID that's even moderately complex. He needs to go to Kirsten and that's really the only way. Yeah. It's like how you show someone that God exists. Right. It's like you just got to
[45:17-45:17] UNKNOWN: experience it.
[45:17-45:18] SPEAKER_01: You got to experience it.
[45:28-45:30] SPEAKER_00: That is a
[45:30-45:30] UNKNOWN: good
[45:30-45:38] SPEAKER_00: point. Like I don't think you can. I don't think you can say hey well go read this book. Yeah. Now you believe.
[45:38-45:38] UNKNOWN: Like
[45:38-45:39] SPEAKER_00: no. Especially.
[45:41-45:46] SPEAKER_01: There's not like the whole faith of it all. I think way too much about everything.
[45:46-45:46] UNKNOWN: It
[45:46-46:06] SPEAKER_01: took me a while to get over all that. Yeah. I knew about
[46:06-46:06] UNKNOWN: people
[46:06-46:20] SPEAKER_01: that I watch on YouTube use Kirsten for like months. I didn't. Yeah. Because I had caught. Right. And it's like OK. It's already writing all this code for me.
[46:20-46:25] SPEAKER_00: But it's just doing it and applying it all at the same time. Yeah.
[46:25-46:25] UNKNOWN: I
[46:25-46:25] SPEAKER_00: think
[46:25-46:46] SPEAKER_01: where it came together was when the free versions of all the ones like my day users were good enough it was like well I can keep paying for something. Let's try out Kirsten. What's going on. Going back and forth between Kirsten.
[46:47-46:47] UNKNOWN: When
[46:47-46:48] SPEAKER_01: sir. Or
[46:48-46:48] UNKNOWN: whatever.
[46:49-46:55] SPEAKER_01: Thankfully we made our way over here on their pricing structure was already clear and now they've been purchased by.
[46:56-47:06] SPEAKER_00: Cursor. Oh. Yeah. I was like I didn't know that actually was like oh I didn't know cursor was owned by open.
[47:06-47:06] UNKNOWN: Yeah.
[47:06-47:09] SPEAKER_01: I'm sure they're owned by some. Sure.
[47:09-47:18] SPEAKER_00: None none of them are good I guess. But opening eyes one something's going on with them. I don't know what it is.
[47:18-47:28] SPEAKER_01: He's just the VC Huckster guy and now they're putting him in charge of everything. He's trying to be put in charge of everything. Something's going on. I don't.
[47:28-47:29] SPEAKER_00: I
[47:29-47:29] UNKNOWN: don't
[47:29-47:30] SPEAKER_00: like.
[47:30-47:31] UNKNOWN: Yeah.
[47:36-47:47] SPEAKER_01: Yeah I think he's just. I mean. Yeah. They are one in the same. He's got better PR. He's been doing it longer. But they're the same person. I agree.
[47:47-47:56] SPEAKER_00: I don't necessarily trust any of them. But there's no but there's no way around it to be able to have access to these tools.
[47:56-47:58] SPEAKER_01: For sure. No I'm not saying like. I don't
[47:58-47:58] UNKNOWN: know. I
[47:58-47:58] SPEAKER_01: don't
[47:58-47:58] UNKNOWN: know.
[47:58-48:10] SPEAKER_01: It's a constant battle between the two. But when these people are asking for more money. It's like. I don't know.
[48:15-48:57] SPEAKER_00: I didn't know there was all that money. Yeah. Yeah. Yeah. Yeah. So I didn't I wasn't watching it when it was happening because I was mostly in there. I knew it took a long time though. And I had to do it like three times and reset like I just. But it kept getting hung up.
[48:58-48:58] UNKNOWN: Yeah.
[49:04-49:09] SPEAKER_01: It says default timeout equals 300. So after five minutes it's going to stop. Yeah.
[49:11-49:11] UNKNOWN: So.
[49:11-49:14] SPEAKER_00: That happened. So it does stop.
[49:15-49:15] UNKNOWN: And
[49:15-49:18] SPEAKER_00: or it doesn't stop. Like it keeps going. Or maybe I should move it to background.
[49:18-49:22] SPEAKER_01: I would just let it go until we at least see. Because 300 seconds is five minutes.
[49:22-49:32] SPEAKER_00: Because what happened is this window says hey I'm not done or whatever like says it didn't complete successfully.
[49:33-49:33] UNKNOWN: But
[49:33-49:49] SPEAKER_00: but the package actually worked. I believe. Maybe this is the issue that this step this bill step didn't get done or maybe we should change that default timeout. I forgot about that.
[49:49-49:49] UNKNOWN: That
[49:49-49:49] SPEAKER_00: was
[49:49-49:49] UNKNOWN: that
[49:49-49:51] SPEAKER_00: was the one of the issues too.
[49:51-50:03] SPEAKER_01: Yeah. It's moving now. Transformers package which is like basically the machine learning package right. That's a fucking lot of that.
[50:04-50:06] SPEAKER_00: Whatever this service is is complex.
[50:07-50:10] SPEAKER_01: Yeah. I mean it identifies people's voices. Right.
[50:11-50:11] UNKNOWN: Which
[50:11-50:11] SPEAKER_01: is like a miracle.
[50:12-50:12] SPEAKER_00: Right.
[50:17-50:19] SPEAKER_01: Looks like it's getting close.
[50:23-50:26] SPEAKER_00: Yeah. All of those things were part of requirements that.
[50:28-50:29] SPEAKER_01: You know.
[50:32-50:33] SPEAKER_00: This
[50:33-50:33] UNKNOWN: is.
[50:46-50:49] SPEAKER_01: Transformers was the one that kept going for like fucking forever.
[50:50-50:50] SPEAKER_00: Yeah.
[50:53-50:59] SPEAKER_01: So it made it through the. Commented ones.
[51:09-51:10] UNKNOWN: I
[51:10-51:27] SPEAKER_01: mean apparently it doesn't timeout after three years. It's been seven. Unless the first steps took. And the.
[51:27-51:27] UNKNOWN: Max
[51:27-51:29] SPEAKER_01: retransaction. That's actually.
[51:31-51:32] SPEAKER_00: Where do you see that.
[51:32-51:32] UNKNOWN: I
[51:32-51:47] SPEAKER_01: think. The.
[51:47-51:47] UNKNOWN: H
[51:47-51:49] SPEAKER_01: .E .P .S. The.
[51:51-51:53] UNKNOWN: Yeah. I
[51:53-52:05] SPEAKER_01: don't know. You. Stop the process. Or.
[52:07-52:07] UNKNOWN: You
[52:07-52:07] SPEAKER_01: know.
[52:12-52:13] UNKNOWN: Just
[52:13-52:14] SPEAKER_01: in case it's not.
[52:20-52:22] SPEAKER_00: Yeah. This could be the court.
[52:22-52:22] UNKNOWN: I
[52:22-52:42] SPEAKER_00: mean it may have. I wasn't watching it. I.
[52:42-52:42] UNKNOWN: Thought
[52:42-52:43] SPEAKER_00: it finished.
[52:53-52:53] SPEAKER_01: That.
[53:00-53:29] UNKNOWN: It's. Trust.
[53:38-53:45] SPEAKER_00: Yeah, use with extreme caution. Yeah, of course. I don't want to do that thing.
[53:45-53:51] SPEAKER_01: No, and it's in a Docker file, maybe specify that. Right.
[54:55-55:05] SPEAKER_00: Yeah, so the packet needs to run as root in. It didn't do this yesterday. Want to kill it?
[55:05-55:06] UNKNOWN: Yeah.
[55:06-55:07] SPEAKER_00: This one
[55:07-55:12] SPEAKER_01: takes 10 minutes.
[55:21-55:27] UNKNOWN: Okay. Okay.
[56:06-56:12] SPEAKER_00: Uh oh. There is actually no internet connection.
[56:14-56:21] SPEAKER_01: Yeah, it works. It was working over here.
[56:22-56:22] UNKNOWN: Let
[56:22-56:23] SPEAKER_01: me try again.
[56:24-56:26] SPEAKER_00: Well, it wouldn't even just do that.
[56:26-56:34] SPEAKER_01: Let's get that button right there. Oh,
[56:50-56:50] UNKNOWN: I
[56:50-57:25] SPEAKER_00: forgot that I did. Yeah, I think I'm maybe because my machine is full and I don't know how to fix it. I was watching. I forgot that I needed to do that. Yeah, there's.
[57:26-57:26] SPEAKER_01: Yeah,
[57:27-57:35] SPEAKER_00: yeah, I can't. You got to take over. Like I have a bunch of this. It's this weird system data.
[57:35-57:38] SPEAKER_01: Yeah, I've been in that before and I think I'm
[57:38-57:38] UNKNOWN: going to have to do it again. I
[57:38-57:45] SPEAKER_01: like whites and didn't restore from a save or anything like that and basically kind of restarted.
[57:46-57:48] SPEAKER_00: Which is fine. I may do that starting
[57:48-57:54] SPEAKER_01: tomorrow. Documents are 39 gigabytes.
[57:55-58:09] SPEAKER_00: Yeah, I think I'm going to wipe and restart. Yeah, it is this. I need to restart. So yeah, my computer is broken. So you got to take over. It should work just fine, though.
[58:10-58:17] SPEAKER_01: Yeah. Do you want to do a push real quick to make sure it's all up there?
[58:24-58:32] SPEAKER_00: There's no changes. We just did it. All right.
[58:32-58:32] UNKNOWN: I
[58:32-59:00] SPEAKER_00: watched a video the other day. I started watching the video the other day to how to fix that system. I may try that first. Or do you want to work on the system data stuff so that I can keep going? Either way, I'm down
[59:00-59:11] SPEAKER_01: with either of those. Let's just do a little research on that.
[59:11-59:11] UNKNOWN: Let's see if we can get
[59:11-59:12] SPEAKER_01: this all out.
[59:35-59:36] UNKNOWN: Okay.
[59:39-59:42] SPEAKER_01: Yeah, so I've got 75 gigs of system data.
[59:45-59:45] UNKNOWN: So
[59:45-59:55] SPEAKER_01: that might be worth knowing. And it may be like that's what when you bring in these frameworks and install all this shit on your computer, like that's what that is.
[60:08-60:28] SPEAKER_02: Okay. Yeah. Yeah. Yeah.
[60:28-60:28] UNKNOWN: So
[60:28-60:31] SPEAKER_01: it's a bunch of applications that don't have to boot.
[60:52-60:57] SPEAKER_00: So it was
[60:57-60:58] SPEAKER_01: command ship
[60:58-61:09] SPEAKER_00: G. Yeah, but it was him trying. Those were shortcuts to get to a specific place. Apparently you can use shortcuts to move around this window. But
[61:09-61:12] UNKNOWN: I'll go back.
[61:37-61:39] SPEAKER_00: Right.
[61:45-61:46] SPEAKER_02: Yeah.
[61:50-61:51] SPEAKER_00: Yeah.
[61:51-61:51] UNKNOWN: Just
[61:51-62:01] SPEAKER_01: to get to. Should place that's not on the side. For. And then go
[62:01-62:02] SPEAKER_00: to.
[62:04-62:05] SPEAKER_02: All the
[62:05-62:05] UNKNOWN: way
[62:05-62:36] SPEAKER_02: down. Okay. Yeah. Yeah. Yeah. Yeah. Yeah.
[62:58-63:04] SPEAKER_00: Yeah. Yeah. This last.
[63:32-63:37] SPEAKER_03: Yeah. Yeah.
[63:37-63:39] SPEAKER_00: Yeah. Yeah.
[63:45-63:47] UNKNOWN: Yeah.
[63:47-63:48] SPEAKER_03: Yeah. Yeah.
[63:51-64:01] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[64:24-64:26] SPEAKER_03: Yeah.
[64:28-64:30] SPEAKER_01: Yeah.
[64:31-64:32] SPEAKER_00: Yeah.
[64:35-64:44] SPEAKER_03: Yeah. Yeah. Yeah. Yeah. Yeah.
[65:13-65:14] SPEAKER_00: Yeah. Yeah.
[65:14-65:14] UNKNOWN: Yeah.
[65:41-65:43] SPEAKER_03: Yeah. Yeah. Yeah.
[65:43-66:12] UNKNOWN: Yeah. Yeah.
[66:15-66:41] SPEAKER_03: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[66:59-67:00] SPEAKER_01: Yeah. Yeah.
[67:38-68:09] SPEAKER_00: Yeah. Yeah. Yeah. Yeah. Yeah. Well, I'm first of all about to kill all of it. Move all of this to trash.
[68:15-68:21] UNKNOWN: Yeah. And
[68:21-68:41] SPEAKER_00: then next up is pictures. I have the quick wedding. I got to get rid of all that stuff. Yeah. Yeah.
[68:41-68:41] UNKNOWN: I think
[68:41-68:41] SPEAKER_00: it's fine. I
[68:41-68:41] UNKNOWN: mean
[68:41-68:45] SPEAKER_00: that cleared up like 30, 30 gigabytes.
[68:51-69:00] SPEAKER_01: Yeah. Yeah.
[69:01-69:01] UNKNOWN: Why
[69:01-69:05] SPEAKER_01: would that be a default?
[69:08-69:10] SPEAKER_00: It's too much processing to calculate.
[69:10-69:10] UNKNOWN: I
[69:10-69:24] SPEAKER_00: guess that. But I think. I need to go clear my trash now. Yeah. Pictures and video. Yeah.
[69:33-69:37] SPEAKER_01: Between downloads. You actually got like a progress meter on your.
[69:37-69:37] SPEAKER_05: Yeah.
[69:38-69:39] SPEAKER_01: Yeah. Yeah.
[69:44-69:45] UNKNOWN: Yeah.
[69:47-70:00] SPEAKER_01: But I feel like downloads aren't the system data. Oh, I don't necessarily think it's that either. But maybe that system data is like stuff that you need because you have a lot like that's packages and things like that.
[70:01-70:10] SPEAKER_00: I mean, I have a lot more free now, but I still got 58 and system data, but I don't know if that's reasonable.
[70:11-70:13] SPEAKER_01: Yeah. So maybe I
[70:13-70:29] SPEAKER_00: got 26 free now or no. Like 30, 30. Yeah.
[70:29-70:29] UNKNOWN: 50
[70:29-70:41] SPEAKER_00: gigabytes and messages. That's crazy. Ninety, 92 gigabytes and system data.
[70:42-70:48] SPEAKER_03: That's a lot. Yeah. Just identify the biggest space consumer.
[70:49-70:49] UNKNOWN: You
[70:49-70:54] SPEAKER_03: get a call today. I just always have the users and inside the
[70:54-70:54] UNKNOWN: library.
[70:55-70:59] SPEAKER_03: Quick side note. If you have multiple user accounts on your Mac.
[71:30-71:32] SPEAKER_01: So the venture is all alone.
[71:32-71:32] UNKNOWN: You
[71:32-71:50] SPEAKER_01: take five to 10 gigs. That's not plus additional space for cash files, project files, media assets, 3D printing software and CAD programs. We'll take the two one five each with model library. The temporary files animal is code and culture.
[71:50-71:50] UNKNOWN: So
[71:50-71:59] SPEAKER_01: you're both pretty lightweight. Less than two gigs with extensions and cash data and project files can add up. I have
[71:59-72:06] SPEAKER_00: 97 gigabytes of system data. 92 is a lot.
[72:08-72:42] SPEAKER_01: 92. So I said, mine's at like 75. And I said, is this reasonable for the developer machine? And it's within a normal range, especially if you're actively working on large projects, i .e. video editing through your model. The developer's machine might have 50 to 100 gigabytes of system data depending on the workload. A lightweight set of basic coding. No heavy media apps might use 20 to 40. A heavy multimedia development setup like yours can easily hit 75 to 150. Especially with cash files and large dependency like. So I
[72:42-72:48] SPEAKER_00: think it's just normal. Yeah. And I just have to keep stay on top of my excess BS.
[72:49-72:49] SPEAKER_01: Yeah.
[72:49-72:50] SPEAKER_00: And
[72:50-73:14] SPEAKER_01: that's the actual reason that developers are like that's the reason that there are terabyte and two terabyte machines is not because you need it. It's because you need it if you kind of want to be a little bit lazy. Right. Yeah. Which I think is generally a developer thing. It's like not lazy, but like I don't want to deal with this other shit. Let it happen. That isn't working on the project that I'm
[73:14-73:14] SPEAKER_00: working on.
[73:14-73:14] UNKNOWN: Right.
[73:15-73:20] SPEAKER_00: Because now I am literally sidetracked. I'm going to just log
[73:20-74:26] SPEAKER_03: in to the session account separately to do this. My library folder is almost a terabyte and with a few clicks I can see that it's consumed mostly by Dropbox and Adobe's cache files. If you're an Adobe user, you can set your cache folder to be placed on an external SSD drive, which will help tremendously with system data struggles. Just make sure that drive is fast enough. I'll link my favorite in the description. I'm going to delete that Adobe cache folder and pretty instantaneously I'll see a drop in my system data. Another thing that loves to live in system data category completely rent free is all your cloud applications, whether it's Dropbox, iCloud, OneDrive or something else. Your Mac will often label those files as system data. What makes these confusing is that my Dropbox, for example, will show me a full directory of Dropbox files. And because of the way I have it set up, some of those files are synced locally on my Mac, taking up space, and some are only available online. That's a long way of saying that in order to get rid of this 800 gigabytes of Dropbox files, I need to go and un -sync some stuff. Also, I don't believe that... Yeah, some of that may be synced from iCloud.
[74:27-74:29] SPEAKER_00: Right. Because you just can't and I got
[74:29-74:33] SPEAKER_01: a bunch of stuff. Yeah, and that's part of the environment,
[74:33-74:33] UNKNOWN: the
[74:33-74:37] SPEAKER_01: value of the ecosystem is that. Either way, I'm going to go ahead
[74:37-74:38] SPEAKER_03: and un -sync all my Dropbox files.
[74:38-74:38] UNKNOWN: It's
[74:38-74:39] SPEAKER_03: fine.
[74:39-74:43] SPEAKER_00: Now, see if I can make my computer work again.
[74:43-75:04] SPEAKER_01: Yeah, and I could be convinced that Apple does not optimize their storage. On purpose? Yeah. Like the same way they build the rest of their device to fail pretty on time so they can buy the next round. I... Yeah, I could be easily convinced.
[75:11-75:12] UNKNOWN: Alright.
[75:23-75:34] SPEAKER_00: And I believe you. Yeah, so I believe I was having these problems yesterday. That makes sense.
[75:35-75:41] SPEAKER_01: So local machines have been our entire problem. Yeah. Which is a pretty strong argument for the cloud.
[75:42-75:44] SPEAKER_00: Exactly. I'm going to make an
[75:44-75:44] UNKNOWN: offer.
[75:44-75:44] SPEAKER_01: Okay.
[76:12-80:41] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[81:11-81:13] SPEAKER_01: What's that? That'll make sure it's better for
[81:13-81:13] UNKNOWN: a
[81:13-81:24] SPEAKER_01: little while. Yeah. Until the water gets hot and then everything sucks. Just once the water gets hot,
[81:25-81:25] UNKNOWN: it's going to be a little bit better.
[81:25-81:38] SPEAKER_01: Then even if the heater's not running in the evening, go kick it and watch some TV or something? So is there a plan for Thursday?
[81:39-81:53] SPEAKER_00: No. Well, there might be. I don't know. All I got from that was a single text. That we're not doing this? Yeah. Which I can appreciate. For sure.
[81:56-82:19] SPEAKER_01: Yeah, I don't even know what it was. Yeah, I didn't look much further into it, but I saw that if you bring a group of more than 20, you're expected to have a $100 donation. Then I saw another thing that was like for a minimum donation, you can have priority location, like on the line, I guess.
[82:19-82:19] SPEAKER_00: Okay.
[82:19-82:24] SPEAKER_01: And the minimum donation, I'm pretty sure, was a G.
[82:30-82:39] SPEAKER_00: Yeah, so that's like for boutique volunteering. I guess. If you just want to come in here and take some pictures. Right, get the picture. And it'll be all comfortable.
[82:41-82:42] SPEAKER_01: And if you're
[82:42-82:42] UNKNOWN: just
[82:42-82:43] SPEAKER_01: coming in to volunteer to get some
[82:43-82:43] UNKNOWN: time.
[82:44-82:58] SPEAKER_01: That's the best of both worlds. It helps fund the thing. And they are feeding people. But if you just want to swoop in and like, wow. Yeah, that's some darkness of like, it's helpful, but also like you need to get your soul in order,
[82:58-82:58] UNKNOWN: bro.
[82:59-83:01] SPEAKER_01: You're doing good
[83:01-83:13] SPEAKER_00: things for the wrong reason. Right, oh, I agree. But I'm sure they're taking advantage of those people. 100%. Not taking advantage of them. Like I get this, this is win -win. Like, hey, yeah, you did volunteer and you did give money. Right. And it's bringing
[83:13-83:20] SPEAKER_01: money in, it's buying food and doing this whole thing. At least.
[83:23-83:25] UNKNOWN: Okay. I think it's enough.
[83:26-83:32] SPEAKER_00: I feel good about it. It may not be. And I have a meeting at eight. Okay. So like 745
[83:32-83:32] UNKNOWN: probably. You can
[83:32-83:32] SPEAKER_00: take over.
[83:34-83:35] SPEAKER_01: Yeah, I'll probably do a little bit.
[83:35-83:35] UNKNOWN: I
[83:35-84:12] SPEAKER_01: want to, I'm going to work today on integrating that, those unit conversion packages into the. Okay. And then I've got a delivery block at 10. I think that the app is currently usable, but I'm still basically doing the last pass on sending out the shopping list and doing all that stuff kind of the way I was. Okay. Because it works, but it's still clunky and I was in a holding pattern of basically like I'm not going to write a bunch of unit conversions when we're going to have AI agents in like a week. Right. But then I found this package and it's like, well, I don't have to write them.
[84:12-84:12] UNKNOWN: I
[84:12-84:16] SPEAKER_01: just integrate them. So it's fine. And it doesn't have to use AI and the less you can use AI,
[84:17-84:17] UNKNOWN: the
[84:17-84:54] SPEAKER_01: better. Oh, I agree. Yeah. It's not a fix all. Right. And it's expensive. That's the primary. My primary reasoning is like hitting that AI API is worse in theory than like me going and just giving it to free drop. Even if it's manual. I agree. Not worse, but you get it. I don't think any APIs are free. Even like the one hit level. It might be cheap and affordable, but it ain't free.
[84:57-85:06] SPEAKER_00: We're back to where we started back to building. And I were actually six minutes late. That's right.
[85:10-85:16] SPEAKER_01: I mean, it doesn't really matter, but we're like a month into this project now. Right. Based on yesterday.
[85:17-85:17] UNKNOWN: Yeah,
[85:17-85:21] SPEAKER_01: I agree. And also we're not because this is the reality of the world.
[85:22-85:22] UNKNOWN: But
[85:22-85:29] SPEAKER_01: like anybody that's competing with us, maybe is using cursor. So if they started yesterday too, yeah, we're a month ahead.
[85:29-85:37] SPEAKER_00: I think that I needed to resolve that. Yeah, the machine. Yeah, but like I was having these problems yesterday.
[85:37-85:45] SPEAKER_01: Yeah, and that was not going to go away. That was going to become more less and less usable because every time you spun up anything, it's going to add a little bit of that cash
[85:45-85:58] SPEAKER_00: back. Yeah. And so yeah, doctors actually run it's running at one percent CPU, but nonetheless, it's running. My guess is that's all it needs. Right. I agree. But at least it's running. Yeah. Whereas
[85:58-86:07] SPEAKER_01: it's just doing like downloads. Ultimately, right now it's running a bunch of downloads. Right. And you can't really I don't know how that works on a CPU if you can use more
[86:07-86:10] SPEAKER_00: and it go faster. But at least it's not stopped. Yeah.
[86:10-86:10] UNKNOWN: I
[86:10-86:15] SPEAKER_00: think at some point you get to the limit of the how fast the limit is.
[86:15-86:22] SPEAKER_01: Right. Yeah. And just like the network. Yeah. It's like the network's not fast enough to make it use two percent of its
[86:22-86:24] SPEAKER_00: available CPUs. It's
[86:24-86:24] UNKNOWN: going
[86:24-86:24] SPEAKER_00: as fast as it can.
[86:25-86:25] UNKNOWN: And
[86:25-86:34] SPEAKER_00: that's all it needs. Yeah. But it's working. And I think Dr. Like it was using so much like it was
[86:34-86:34] SPEAKER_01: getting
[86:34-86:35] SPEAKER_00: to
[86:35-86:48] SPEAKER_01: that speed. Like we've been there. I think it was Xcode. Like we would always get stalled out because you couldn't update Xcode because it was so fucking big that you had to have most of your machine cleared out. And that's the first time I saw the system.
[86:52-87:02] SPEAKER_00: Yeah. Maybe maybe on vacation. Break my machine and not be able to use it.
[87:02-87:02] UNKNOWN: I
[87:02-87:22] SPEAKER_00: mean worst case is a full life. Yeah. That's what I'm saying. Like do a full wife and only put back the tools to do this. Like cursor like and get rid of all the other stuff and all of the like DaVinci Resolve. Like I don't if we ever do that stuff again and we'll use it on that day. I
[87:22-87:26] SPEAKER_01: think that is the intermediate like one.
[87:26-87:26] UNKNOWN: I
[87:26-87:28] SPEAKER_01: think it will help the explosion.
[87:29-87:29] UNKNOWN: But
[87:29-87:39] SPEAKER_01: using AI to generate scenes and then DaVinci Resolve just maybe with the AI agent that you build yourself and give it access to your DaVinci. I
[87:39-87:46] SPEAKER_00: assume DaVinci is working on that all over the somebody is going to work on this for that's the opportunity
[87:46-87:47] SPEAKER_01: though. Video editing.
[87:47-87:47] UNKNOWN: If
[87:47-88:19] SPEAKER_01: we were to build a little agent for ourselves to put video editing together in DaVinci like does DaVinci have an API. Well do they have the ability as the current company that they are that's working almost guaranteed at capacity whether it's the like executives taking money out or they hire whatever it is. Do they have the capacity to go hey we need to spin up an AI agents division. Right. Maybe or maybe they say hey we need to get some funding so we can buy this agent that somebody has built. Right. And
[88:19-88:43] SPEAKER_00: I think that there is this general universal pathway that Google played with that I .O. of giving that had letting it use a mouse. Yeah. Right. So if you could somehow or there is a tool kit so that I can see the screen and they can control the mouse and it just needs to know how to. I think we have to. In the same way that you do. The reason I think that
[88:43-89:08] SPEAKER_01: maybe that but that's a very keyboard and then it's literally like a plus a very intermediate step though like the mouse is only there to make us dumb humans be able to use the computer. Oh I agree. It doesn't need to use the mouse like you can program at like with a keyboard do everything. I can't. Right. But yeah. So like fuck the mouse just make your selections and maybe apps need to be starting to be built so I can
[89:08-89:12] SPEAKER_00: use it needs a programmatic interface. Right. Right. Effectively like an API but for a local app.
[89:12-89:14] SPEAKER_01: Yeah. They all need to have CLIs. Right.
[89:15-89:26] SPEAKER_00: Like literally command line interfaces. For the application. Hey can you go into CLI mode and it start doing stuff. Yeah. In moving around the video window like in it just.
[89:26-89:38] SPEAKER_01: Just like you had to have an API to really be a public site that's doing anything. Right. Like you have to have an API so programs can access it because that's really where it pops is when everybody's using your shit. Right. Yeah.
[89:38-89:38] UNKNOWN: So you don't
[89:38-89:41] SPEAKER_01: have to have programmatic access for
[89:41-89:41] UNKNOWN: any local
[89:41-89:41] SPEAKER_00: machines
[89:41-89:47] SPEAKER_01: for your local apps. Yeah. If you have to do anything that's my answer. Right. So and now is when those are going to
[89:47-89:57] SPEAKER_00: get built. Can you write a programmatic interface for any. So any app that has a programmatic interface already is susceptible to all of them are apps that are
[89:57-90:05] SPEAKER_01: running on like C short C plus or something like that. And so all of them are fundamentally
[90:05-90:10] SPEAKER_00: to be packed in have. Even if you don't do it we can do
[90:10-90:10] SPEAKER_01: it. Right.
[90:10-90:10] UNKNOWN: And
[90:10-90:44] SPEAKER_01: like even not even saying like hacking into it but like hey this is possible and you need just you don't have the resources to do it yourself. So hey let's you know carve off this little thing give us an entry point do all this will develop your thing. Right. And you just develop the concept in general. And like I said maybe you do do a little hacking where it's not hacking through DaVinci but it can see your screen or whatever and it's a little clunky. It's not fully integrated but like hey DaVinci for five million dollars on them integrated for you.
[90:44-90:56] SPEAKER_00: Yeah but that's I'm sure that's the next way. It seems like like that's I mean to update your application so that it can be accessed by. Yeah. And then
[90:56-91:04] SPEAKER_01: you just never sell one of those tools and then you can become a pump and dump expert like your mom. Right. And act like you're smart for the rest of your life.
[91:04-91:04] UNKNOWN: I
[91:04-91:04] SPEAKER_01: don't
[91:04-91:04] UNKNOWN: want to keep
[91:04-91:06] SPEAKER_01: going. I don't want to.
[91:07-91:18] SPEAKER_00: That's what the fake did too. I don't know what the answer is but build one build something successful get a bunch of cash and then have enough cash
[91:18-91:19] SPEAKER_01: to check out.
[91:19-91:27] SPEAKER_00: Right. Then yeah it might be the answer is like OK go back and work a day job. I don't even like do like just I would start the homestead.
[91:27-91:27] UNKNOWN: You
[91:27-91:29] SPEAKER_00: give me maybe that's the five million
[91:29-91:29] SPEAKER_01: dollars dude I'm
[91:29-91:54] SPEAKER_00: going like what I'm saying like I don't want to do nothing. Right. For sure. That's too dark. That's like slow death. But if you had like a funded like full big project and I'm like we're so under your project selling food. Yeah. Where you be doing something that's interesting and makes a little money but everything's paid off. And you just need to pay taxes basically. There's
[91:54-92:04] SPEAKER_01: that. That's the reason that's the last vulnerability which is not really even a vulnerability.
[92:05-92:05] UNKNOWN: But
[92:05-92:21] SPEAKER_01: if everyone collectively just decide to not pay their taxes which is the reason for digital currencies and the big push for them because then you don't have like OK well I'm taking it. Yeah. But the problem with that theory is it's already solved.
[92:21-92:21] UNKNOWN: They
[92:21-92:23] SPEAKER_01: just print money. Like hey I'm not going
[92:23-92:23] UNKNOWN: to
[92:23-92:43] SPEAKER_01: pay my taxes like OK we'll keep your dollar. It's worth 10 cents now because I just printed five trillion dollars. Yeah. You would have to have an alternative. Yes. Barter. You have to go back to like genuine like high level barter. Like I go to the grocery store and I walk out and I'm like here's a thousand eggs for all the stuff I got in my cart. Right. Yeah. It
[92:43-92:54] SPEAKER_00: has to be some sort of system that can quote unquote legally cut out the government. Right. I need to be able to live and trade and never think about you. I mean the model is
[92:54-93:28] SPEAKER_01: garage sales. Right. But instead of rolling around with dollars I mean even like you're using dollars as a representation of value which when you look into how much you are taxed I'm not talking about your income tax. Yeah. I'm talking about if you hire somebody or do anything technically like the guy mowing the yard you're going to pay him more than the yearly amount probably. Yeah. That you don't have to report. And so he would have to pay taxes for getting paid also for even having a business. Like all these things.
[93:29-93:32] SPEAKER_00: All of it. They just got their hands all in everything.
[93:33-93:37] SPEAKER_01: Like the history books in a hundred years call us slaves. And it's pretty
[93:37-93:50] SPEAKER_00: comfy slaves. And the way that they spend our money is not consistent with like they like if you push back against that it's like well we know it's best. Like no you don't. They just
[93:50-93:56] SPEAKER_01: increased over Biden's largest like the budget is higher now. You told me that.
[93:56-93:56] UNKNOWN: Speaker
[93:56-94:02] SPEAKER_01: Johnson came out and said well you know we want to get things fixed but it's like a big shift.
[94:02-94:02] UNKNOWN: It
[94:02-94:15] SPEAKER_01: takes a while to turn it around. Biden spent so much money. And it's like so the solution is to spend more money than he ever spent. And that's like the big evil that got us in this. People need to start getting you know.
[94:15-94:41] SPEAKER_00: Yeah I don't know the answer to it. And you actually got on it. It's avoided. I do know the answer. Like the ultimate answer is what you just demand change. I'll put it demand change and it has come from the people. And we're very far away from will not accept non change. We're very far away from it because the average person is like you know they buy into that shit. Oh yeah. This
[94:41-94:51] SPEAKER_01: is Biden's fault that they're spending more money this year. And then after that is just well you just have to check out. Yeah you're right. That's a spot.
[94:52-94:52] UNKNOWN: I
[94:52-95:21] SPEAKER_01: need to just act like it's not happening. And I think since my brain runs the entire universe it won't be. So maybe it wasn't broken the whole time. Now these are these Nvidia packages that we did get through last time. Yeah and it took a little while. And I assume like CUDNN is like GPU neural network.
[95:23-95:31] SPEAKER_00: And I think that this actually froze. Like it wasn't running before. That's why I keep looking. Like it was.
[95:31-95:31] UNKNOWN: It
[95:31-95:39] SPEAKER_00: used 12 .5 % of the CPU. Did you see that? No. For like a few seconds it was like 12%. So it is actually running.
[95:39-95:43] SPEAKER_01: Yeah. Yeah that's the test of whether this is working.
[95:44-95:44] UNKNOWN: It
[95:44-95:44] SPEAKER_01: is.
[95:45-95:45] UNKNOWN: Over
[95:45-96:17] SPEAKER_01: there. There's probably logs in there somewhere. I'm sure. Somewhere. We don't need to get there just yet. Yeah and think about that. Like when we talk about this is the right turn. But like the context point knowing how they're never going to be able to get to project level. Think about logs. Logs alone are all like run for 35 seconds. Logs are too big for anybody to hold in context. 100%. But you do need to be able to go and look through them and have all of them available at least until the end of
[96:17-96:42] SPEAKER_00: the project. Yeah and in fact in the past. Right because that's an indicator of like security risks and things like that. Because if you just log every transaction that's effectively what you need to do. And go back and you can use it to trace that hey this account did this then and did that. And it changed its name and did what. Yeah and that's the only way to look at it is. In the past like go look at transactions. And imagine. And you have to keep all of that. How far away you are
[96:42-97:01] SPEAKER_01: from that. Yeah. Like with the little bit of you see how often you need to hit new chat. Yeah. That's where like I don't have like if only I was smarter and I could like structure my thoughts. Together into a coherent piece. But man. They're not even close.
[97:02-97:08] SPEAKER_00: No I agree. I agree. And just the 100x requirements for power. No.
[97:08-97:08] UNKNOWN: Just
[97:08-97:09] SPEAKER_00: that. Yeah and
[97:09-97:10] SPEAKER_01: that's not enough.
[97:11-97:11] UNKNOWN: How
[97:11-97:21] SPEAKER_01: are you. 100x nuclear reactors aren't it bro. Maybe this imaginary fusion shit that you guys need another trillion dollars to develop over the next year. If that happens
[97:21-97:27] SPEAKER_00: and there's just like abundant low cost or free power that is just abundant and available.
[97:27-97:31] SPEAKER_01: Yeah maybe you should ask your totally not bullshit quantum computer how do we solve this.
[97:31-97:48] SPEAKER_00: Right. Like and ask the other dimension people. All of that stuff has to come together before like you get to AGI. Because I think for AGI is going to take a billion times what the human brain uses for energy. Yeah comfortably.
[97:48-97:48] UNKNOWN: To
[97:48-97:54] SPEAKER_00: even approach it and it's just going to be the brute force. I think the sad reality of it for these
[97:54-98:11] SPEAKER_01: folks is they are not and never will be gods. And they are going to die. And I'm sorry but no amount of money is going to change. Right. And the not being gods side you just can't do it. Right. I'm
[98:11-98:19] SPEAKER_00: sorry you just aren't going to be able to do it. And you can yes say I'm going to keep throwing resources and compute it like but that is a fool's error. Well
[98:19-98:22] SPEAKER_01: it's a good money maker. Yeah. They're all some of the richest people in the world.
[98:22-98:22] UNKNOWN: It is a
[98:22-98:29] SPEAKER_01: good money maker. But I don't know. It's almost a good money maker like in the music man version of it. Like if she rolls into town and says I'm going
[98:29-98:29] UNKNOWN: to
[98:29-98:32] SPEAKER_01: put on a show you guys give me some money. Right. And then the show just never
[98:32-98:41] SPEAKER_00: happens. And it's not actually solving problems. Right. Or good for us as a society. Yeah
[98:41-98:41] UNKNOWN: I
[98:41-98:42] SPEAKER_00: mean it could.
[98:43-99:08] SPEAKER_01: That's the thing. It could but like it already is and I'm like you get in the way of innovation I guess. But this explosion came from a few hundred million dollars in Silicon Valley. Not trillions of dollars. And new infrastructure that's going to alter every like the entire electrical grid. You're just going to produce 10x the amount. No no you have to do all of that. You have
[99:08-99:14] SPEAKER_00: to you know make the transmission system capable of handling a hundred X power.
[99:14-99:22] SPEAKER_01: Or generate it locally. This VC nerd is the one that's decided we need to completely re -change the entire U .S.
[99:23-99:49] SPEAKER_00: energy situation. Or I mean you don't necessarily have to transmit it. You just have to build a bank of five nuclear reactors at the data center. And transmit it across the building. And it's going to be fine. They're better now. We make them better now you guys. And they're just all over the place. So nuclear security. We better make sure Iran doesn't get any nukes you guys. That's super important. Nuclear security used to be through the roof or it is right now. Like guarding them and stuff like that.
[99:49-99:49] UNKNOWN: It
[99:49-99:57] SPEAKER_00: is when you're pretending like it matters. But not if there's one on every block. It's just like it's going to be like a gas station. Like oh yeah we got four over there.
[99:59-100:10] SPEAKER_01: There's a area of the conspiracy theorists that say nukes are not real. Really? Like straight up two of them went off and we've done a bunch of testing.
[100:10-100:10] UNKNOWN: But
[100:10-100:12] SPEAKER_01: like straight up big bombs are real.
[100:13-100:13] UNKNOWN: But
[100:13-100:17] SPEAKER_01: like all the things. Hiroshima was a thriving fucking place. I've been
[100:17-100:27] SPEAKER_00: there. I have been there. I've been literally there's a statue. Not a statue. Whatever. Something yeah. At ground zero. Like literally. Like I've walked there and hung out and took pictures.
[100:28-100:28] UNKNOWN: What
[100:28-100:39] SPEAKER_01: happens to like the ten thousand years of fucking devastation and like. I don't know. I'm pretty sure they're living in that place where the reactor melted in Japan. Maybe. Like it's on the come up. You don't drink the water I imagine but.
[100:39-100:47] SPEAKER_00: But yeah. Yeah I've definitely been to Hiroshima. I've been there and taken pictures. Yeah. I haven't dove into that wing of
[100:47-100:47] UNKNOWN: the conspiracy theorists. And
[100:47-100:56] SPEAKER_00: they're not very friendly. Like it's not very accurate picture of what happened at least from what I've been told. Well. Maybe I need to be diving into all of that. But
[100:56-101:00] SPEAKER_01: yeah. I mean why the second one. Why the second one.
[101:01-101:02] SPEAKER_00: Because do
[101:02-101:02] UNKNOWN: you
[101:02-101:03] SPEAKER_00: comply. Do what I say.
[101:03-101:05] SPEAKER_01: They were about to. Like.
[101:11-101:11] UNKNOWN: I
[101:11-101:17] SPEAKER_00: don't know very much about it. And I don't believe what was written in the books anymore. I did until. I
[101:17-101:17] UNKNOWN: don't know.
[101:18-101:20] SPEAKER_00: Three four years ago.
[101:20-101:20] UNKNOWN: I
[101:20-102:32] SPEAKER_01: mean the thing that broke. All of it. It's twofold. Covid kind of was the day's punch really like shook most people out of it. And then the whole Israel situation has been just world ripping apart. Their perspective tearing. Yeah. A huge like a bunch of people that just never cared. And we're just like this guy Kurt Metzger who might be like a prophet slash genius. But he's also just like a comedian. Talked about. He says the funny line. He's like I want to be very clear to Israel supporters. I am biased against Arabs. I don't want to believe them. But you're making it hard. Yeah. And. And he's being silly about like. But it's like. You have to be very careful. Because you'll get attacked. Oh no. He goes hard in the paint. But he's like maybe he's being he's being silly like hey even a person that wants to be blind to it and which is most of us it's not wants to but it's just like yeah Israel's our greatest satellite all the things. And Jesus and all the things. They're totally the same group.
[102:33-102:33] UNKNOWN: They're
[102:33-102:51] SPEAKER_01: not from Eastern Europe. They're not the same people. So it worked. But it's just like you're doing a genocide. Like that's what's happening. And you can argue about syntax and all this stuff. But like you guys are doing the thing while we're alive right now.
[102:52-103:05] SPEAKER_00: It's true. It's true. And like what do you. And the younger generation these kids got a hold of it. And it's going to get harder and harder for them to keep that keep doing the same thing.
[103:05-103:13] SPEAKER_01: Well the problem with this generation is you've been telling them what pieces of shit colonizers are their whole life and how America bad.
[103:14-103:14] UNKNOWN: But
[103:14-103:28] SPEAKER_01: then it's like wait you guys are called what settlers. That's what you call yourselves. Wait a second. Settlers like the beginning phases of civilization. The game. That's what you. You just go in and find an empty places.
[103:28-103:34] SPEAKER_00: Wait it wasn't empty. It's still not right now. Right. But you're expanding.
[103:35-103:45] SPEAKER_01: All right. All right. And they still go like. Do you like you're really making me think like I shouldn't almost. Right. I mean I
[103:45-103:49] SPEAKER_00: don't think that they're like they're not good. They're
[103:49-103:57] SPEAKER_01: evil is shit. Right. But when you use them as the excuse to do this other thing I have to go like well you're more evil at the very least.
[103:58-104:11] SPEAKER_00: Let's run numbers. And I assume that. And or his plan. Oh not on. Accident. I assume they're doing all of this. Oh yeah.
[104:12-104:31] SPEAKER_01: Yeah. We'll see like they might that might be some of the stuff that people like for sure are picking up like oh it's going to be that. But and my guess is it kind of moves away from it and gets into the story. But it is a story about the little guy fighting against the empire. So it kind of does line up even if they weren't trying.
[104:39-104:39] UNKNOWN: Yeah.
[104:40-105:01] SPEAKER_01: So this is just warnings. Like so you see this right here. Oh yeah. So that I think is not broken. They're saying it's not going to continue to respond. Right. You're correct. But it is done. Yes it went through and so the terminal didn't break. It's just like typically at the end of a successful thing it would be like all right nice we did it. Here's what we do next. Right. And I think that's
[105:01-105:01] UNKNOWN: just the way it is. It's
[105:01-105:02] SPEAKER_01: just saying hey
[105:02-105:13] SPEAKER_00: yeah and I had to do this. Yeah. But I had to do this and I was having those errors before and restart the computer. So this is what I did yesterday while you were gone. Right. And these warnings that are apparently fine
[105:13-105:16] SPEAKER_01: and they don't actually mean anything.
[105:26-105:26] SPEAKER_00: You're right.
[105:26-105:36] SPEAKER_01: It did. This is another not that quick. This one might be but then.
[105:40-105:42] SPEAKER_00: So there is there is a new layer in
[105:42-105:59] SPEAKER_01: there. It was all the logging statements right. Like we're still driving towards a not working. Yes. To try to get but literally tomorrow because we're pretty much there. Yeah. Ten to eight. So
[105:59-105:59] UNKNOWN: tomorrow
[105:59-106:08] SPEAKER_01: we'll be able to spin up and at least get those logs and have a good starting point. Run the test. It's working. Finish the pipeline transcription.
[106:09-106:41] SPEAKER_00: Right. Hopefully. But soon if not tomorrow the next day. Yeah. This week is like it's unlikely at that point it's unlikely that we don't finish it. Right. I would like to have it for all of our conversations starting next week. In probably in our vacation and just whatever. Or be able to spend the time on vacation. Even if the whole service doesn't do the summarization and all of that stuff like that. Take the
[106:41-106:41] UNKNOWN: take
[106:41-106:50] SPEAKER_00: the transcripts put them in Gemini and like process everything pull out all of the topics pull out everything and send it back to the team. It's probably here's here's the thing.
[106:50-107:11] SPEAKER_01: Here's where we're. It might be a useful exercise to go through that manual of like here's the output I want and tool that down to something that you can give back to cursor and say hey here's ultimately like an output that I'm happy with. So that and maybe even the whole conversation of like here's here's how I got there. Here's where Gemini you started. Right.
[107:12-107:12] SPEAKER_00: Here's where we got.
[107:13-107:13] UNKNOWN: I
[107:13-108:23] SPEAKER_00: am. I mean I know what I what I think makes sense. Have you seen the Gemini summaries. Yeah. Yeah. So it gives like the output is a doc but it doesn't have to be that then it has two tabs. The tabs I'm talking about the first tab is it gives a summary of who was there like the timing the meeting note the topics who was there and then it goes it gives an overall executive summary of what was talked about and it's paragraph by paragraph of hey here's all the different topics that were talked about in a summary lower level summary of those topics. And then at the bottom is action. And then the second tab is just the raw transcript. So that's what it captures for every meeting. Right. And I think that set of stuff like two artifacts come out of it or you can call it a single artifact of summarize like basically most condensed to least condensed. So an executive summary topic summaries action items and then just all wrong. Data don't like it. So that's like for each file it does that. And then I think there's a layer on top of that that person like goes look at each one of those pulls out relevant things. Yeah. That's where
[108:23-108:27] SPEAKER_01: you go into the next step of like is it creating a podcast.
[108:28-108:28] UNKNOWN: Is
[108:28-108:34] SPEAKER_01: it creating a PDF business model pitch. Is it creating obsidian maps
[108:34-108:40] SPEAKER_00: obsidian. Yeah. So I think that that's the place you know with maybe this is good to have to
[108:40-108:40] UNKNOWN: spend
[108:40-109:22] SPEAKER_00: this few minutes talking about this. So my we started originally talking about making some system that will solve the world's problems that was on the table. Not really viable. We talked about making use it doing that same engine to make videos with it. And we've talked about doing using building an engine that just keeps track of things and helps you do whatever. So I think we're trending towards this. Like so some general engine that makes a mind map and just captures everything like this self feeding mind. I don't know what we want to call that but I think that's what I think we should try to
[109:22-109:22] UNKNOWN: do.
[109:23-109:35] SPEAKER_00: What do you think. So after we finish this transcription service and all that stuff like that because effectively this is the input to whatever the next thing is. So the question is what's the next thing. And I don't know what you're thinking. I mean
[109:35-109:35] UNKNOWN: I
[109:35-109:37] SPEAKER_00: think this is
[109:37-110:20] SPEAKER_01: almost like in product and we need to develop the steps along the way for that or the content maker and PDF output and the general summarizer and all that stuff. And then I think the problem after that and I'm probably like the next step after that is determining how to capture more audio like at all phases and stuff like that. So I don't know which one makes more sense to be driving at like in product replace your brain not replace your brain supplement your brain and all that IE obsidian map or determine a list of individual services that will equal the ultimate brain.
[110:21-110:25] SPEAKER_00: Here's my perspective and I didn't have this thought I developed it while you were talking.
[110:25-110:25] UNKNOWN: I
[110:25-111:04] SPEAKER_00: promise I was listening. No you're good. I think that the core layer is this system right because you imagine in the in the back end. This is a bunch of documents. Yeah notes. Right. That is these that I can take this conversation and create a note from it that that this service that we're doing could do that like take any input and create a note right. And then the service on top of it and it literally could be obsidian that goes like and if you especially if you make the notes with the appropriate tags and things like that. Yeah. And that's a service we can create. Yeah. I have an
[111:04-111:27] SPEAKER_01: example of that like the reading note service that I use is that right now the tags are all hard coded like I have a JSON file in my library and it's like book title author tags. So when I make a note for that book it already has the tags right which is all well and good. You could do some smart tag generation and like figure out the tags based on what's in place
[111:27-112:14] SPEAKER_00: and what's it right. But that's what I'm saying. Like you can use a model or use a eye to analyze the content and smartly create the tags and save it in the right form. Yeah. Right. And so you can do that. That's part of this or information capturing or whatever. And the visual layer or processing layer of all of those notes it already exists. It is obsidian and maybe it's some extension of obsidian but then so that's just that is the brain. Right. And then so now imagine if you want to create a video about something we talked about it just has to tap into the brain or you want to create a book or you want to do anything based on the information that's contained in the brain. Those are extensions or those are not tools. Well
[112:14-112:59] SPEAKER_01: it's kind of a hybrid I think is what it's starting to sound like because yes you start with the brain but right now the brain doesn't know how to do anything. So inherently we're going to tell the brain how to be an expert in history. And now the brain has that and it's a bunch of notes. And but that's kind of just data stuff that we've already done passively over years and years. Right. And so I do agree in the sense of like you don't learn how to do anything without your brain like that. That is the foundation. But like what's the first step to build the brain. Is it some general thing or is it AI already exists and that's fundamentally like the support of all of it.
[112:59-113:01] SPEAKER_00: I don't understand your question. I don't
[113:01-113:18] SPEAKER_01: like what I was saying like we start with divine services that ultimately like become the brain. You're saying you build the brain and then teach it to do different things. What is the building the brain like so.
[113:18-113:26] SPEAKER_00: So I imagine. So take this conversation right now.
[113:27-113:55] SPEAKER_01: Yes sir. That is one question I have while you were talking is does a two hour conversation have its own map obsidian map. So it draws all the connections between that conversation that maybe an hour ago we were talking about something else that actually connects here. And then that's incorporated into a larger brain. So each service is like its own little mini brain or each conversation is like its own little mini brain. I mean it kind of becomes like these little things like the different.
[113:55-114:02] SPEAKER_00: Yeah I agree. I think that what I imagine is each obsidian map.
[114:02-114:02] UNKNOWN: I
[114:02-114:03] SPEAKER_00: guess I don't know if that's the right word.
[114:03-114:03] UNKNOWN: I
[114:03-114:21] SPEAKER_00: think the overall its graph view is what they call it. But whatever this collection of notes and things is independent. Right. So if I I would put all of these in the vertical group and not in my personal right. But I would have one where I'm effectively imagine you're recording all the time.
[114:21-114:21] SPEAKER_01: Right.
[114:21-114:35] SPEAKER_00: Right. And so this recording goes to my personal this recording goes to medical this one goes to work. This one goes to spiritual whatever. I guess I would put spiritual personal but whatever. Right. And you make connections by whatever notes you put in there.
[114:36-114:36] UNKNOWN: So
[114:36-114:51] SPEAKER_00: by this input system is effectively what I'm imagining what we're building right now. It is that is going to take audio and I don't know if we specifically talk about it but any text notes like I should be able to just put it.
[114:51-114:51] UNKNOWN: I mean I put
[114:51-114:54] SPEAKER_00: a text file in there and it takes that too.
[114:55-114:55] UNKNOWN: And
[114:55-115:02] SPEAKER_00: then process and what it does by processing is reviewing it summarizing adding tags doing whatever.
[115:02-115:02] UNKNOWN: But
[115:02-115:22] SPEAKER_00: retaining the original. Yes. And then uploading it to obsidian. And for now it could literally be obsidian that every time we have a conversation we take all of our radical conversations and keep doing this. And each one of them lands as a new note. Right. That's appropriately tagged and we can go back and look at this.
[115:22-115:22] UNKNOWN: And
[115:22-115:57] SPEAKER_00: then so then the follow on and I know this is where I'm a little fuzzy like so say that I want to like generate ideas or maybe that's not the right thing that maybe I want an agent that looks at all of our looks at our documents are notes and says hey here's what you should work on for them. Like maybe this make an agenda for the next meeting based on everything we've talked about. And then OK it looks at it over the last couple of weeks you've talked about this a couple of times it ties back to what you talked about two years ago. And hey here's a good topic for this meeting because it's yeah
[115:57-116:13] SPEAKER_01: I think it would look something like and you don't actually need the map obviously this is UI for people just because it looks cool. But it would do something to the effect of going here and like OK well here's the meeting that we just had and all the things. So you drag it out and go huh what's this little thing. Yeah what is that. Yeah
[116:13-116:17] SPEAKER_00: like maybe you should go talk about that. Right. Like any goes look at that
[116:17-116:30] SPEAKER_01: does all of that and then like create the reason why it's recommending these things that can give you maybe even like a little like file path almost like here's the tags that I've followed to get to this point that I recommend you talk about.
[116:30-116:33] SPEAKER_00: So it's a creative eight and that is
[116:33-116:48] SPEAKER_01: if nothing else that's our thing I was talking about that we want to clear the first 20 minutes. Yeah. Of the sit down that just has something to talk about. And even if we end up talking about something like we talk about the thunder for fucking two hours that's fine. But it got us into.
[116:49-116:51] SPEAKER_00: Yep for sure. This. Yep.

==================================================
Generated on: 2025-07-28 19:23:16
Total words: 11704
Total speakers: 7
==================================================





Summary:
creation_date: 2025-07-28 source_file: [https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-28_1901_ZOOM0014_transcript.txt](https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-28_1901_ZOOM0014_transcript.txt "null") participants: [SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04, SPEAKER_05]

## Executive Summary

This meeting was a technical working session focused on debugging and deploying the diarization and [[Transcription Service]] pipeline. The team encountered significant roadblocks with a Docker build process, which they eventually traced back to a local machine running out of storage space due to excessive "system data" `[56:06-57:35]`. After resolving the local environment issues, they successfully rebuilt the service's Docker image and prepared for final testing `[85:06-85:17]`. The conversation then shifted to defining the next major project: building a comprehensive [[Knowledge Management]] system, referred to as "the [[brain]]," which will use Obsidian to process the transcribed conversations into a connected knowledge graph, automatically generating tags and identifying recurring themes to guide future discussions `[110:25-112:14]`.

## Key Topics Discussed

- **Debugging the Diarization Service**:
    
    - The session began with troubleshooting the diarization service, clarifying that it outputs a [[JSON]] file with speaker timestamps, which serves as [[Metadata]] for the original audio file `[03:43-05:50]`.
        
    - They ran into a major issue where the Docker build command was hanging indefinitely `[30:52-31:17]`.
        
    - The root cause was identified as a lack of local disk space, specifically a large amount of "system data" on the primary development machine, which prevented Docker from completing the build `[56:50-58:09]`.
        
- **Local Development Environment Issues**:
    
    - A significant portion of the meeting was a hands-on troubleshooting session to clear disk space by deleting old video files, pictures, and application caches `[67:38-68:45]`.
        
    - This led to a discussion about the nature of system data on developer machines, concluding that their storage usage (50-100GB) is normal for their workload but requires active management `[72:08-73:14]`.
        
    - After clearing approximately 30GB of space and restarting the machine, the Docker build process worked as expected `[85:06-85:17]`.
        
- **Next Steps: Building "The Brain"**:
    
    - With the [[Transcription Service]] nearing completion, the focus shifted to the next project: a comprehensive [[Knowledge Management]] system `[108:28-109:22]`.
        
    - The vision is to create a system that takes audio or text input, processes it, automatically adds tags and summaries, and saves it as a note in an Obsidian vault `[114:36-115:22]`.
        
    - This "brain" would function as a knowledge graph, allowing them to visualize connections between conversations and ideas over time.
        
    - A key application would be an [[AI Agents|agent]] that analyzes the knowledge graph to suggest topics or generate agendas for future meetings based on recurring themes `[115:22-116:13]`.
        
- **Future of Application Development**:
    
    - A brief tangent on the need for local applications (like video editors) to have programmatic interfaces or CLIs, enabling [[AI Agents]] to automate tasks more effectively than by simulating mouse and keyboard inputs `[88:19-89:12]`.
        

## Action Items & Decisions

- **Action**: Clear unnecessary files from the local development machine to resolve the Docker build failure `[58:32-59:11]`.
    
- **Decision**: After resolving local machine issues, proceed with deploying the updated diarization service and finishing the full transcription pipeline `[105:59-106:08]`.
    
- **Decision**: The next major project will be to build the "brain," a [[Knowledge Management]] system that automatically processes transcripts into a tagged, interconnected knowledge graph in Obsidian `[109:23-110:20]`.
    

## Suggested New Links/Tags

- [[brain]]

- [[CLI]]
    
- [[Docker]]
    
- [[Knowledge Graph]]
    
- [[Metadata]]
    
- [[Obsidian]]
    
- #Troubleshooting
    

## Linked Concepts

- [[AI Agents]]
    
- [[CLI]]
    
- [[Docker]]
    
- [[GCP]]
    
- [[JSON]]
    
- [[Knowledge Graph]]
    
- [[Knowledge Management]]
    
- [[Metadata]]
    
- [[Obsidian]]
    
- [[Transcription Service]]
    

## #Tags

- #AI
    
- #Automation
    
- #GCP
    
- #SoftwareDevelopment
    
- #Troubleshooting

zoom15
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1428_ZOOM0015_transcript.txt

==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:07-00:09] SPEAKER_02: I didn't do anything else.
[00:09-00:14] SPEAKER_01: Yeah I haven't touched it other than like everything I did was on your computer which
[00:15-00:16] UNKNOWN: was
[00:16-00:19] SPEAKER_01: mostly like debuggy stuff. I came
[00:19-00:26] SPEAKER_02: in here and looked at it at one point and was like I don't have to. Yeah it's not like a sit down for two minutes and
[00:26-00:26] SPEAKER_01: knocks
[00:26-00:34] SPEAKER_02: and stuff out. No like once it stops it's like okay well that's literally a convenient stop. Right. I'm gonna push.
[00:35-00:35] UNKNOWN: Oh
[00:35-00:36] SPEAKER_02: let me see.
[00:51-00:57] SPEAKER_01: Nice. Something's going on with the math because I ordered like 13
[00:57-00:57] UNKNOWN: different things. I ordered
[00:57-00:59] SPEAKER_01: like two servings of
[00:59-00:59] UNKNOWN: I
[00:59-00:59] SPEAKER_01: think
[00:59-00:59] UNKNOWN: it
[00:59-01:18] SPEAKER_01: was like shrimp and sausage jambalaya or something one of those and it said I needed 26 pounds of shrimp. It's like so two pounds of pop is a little over. That's a lot. But my guess is there's just some like artifacts from the previous stuff that I was doing. Some bug.
[01:18-01:18] UNKNOWN: Exactly.
[01:20-01:22] SPEAKER_01: But it's gonna get pretty close to useful.
[01:23-02:10] SPEAKER_02: I think the answer is I did read this yesterday and I think it is I have to go to the hugging face site. And actually like. And there's like an acceptance thing like because we had some lab I did it was a live lab that I did with Google and we had to do that. Like some people some people's stuff wasn't working because they didn't do some acceptance thing at hugging face. Yeah. That makes sense. You sir are in the wrong place. Like why is this not working? Well it is. Why aren't my windows open? This is what I was thinking. Like well they're not in the right
[02:10-02:15] UNKNOWN: place. I
[02:15-02:30] SPEAKER_02: don't remember how to do that. What is it specifically? I actually haven't seen it this morning. I saw it yesterday.
[02:33-02:33] UNKNOWN: Yeah.
[02:37-02:38] SPEAKER_02: Okay
[02:38-02:44] SPEAKER_01: yeah. Go to. Accepted the user conditions for that model.
[02:46-02:49] SPEAKER_02: There you go. Conveniently. Yeah.
[02:49-02:49] UNKNOWN: Gives
[02:49-02:50] SPEAKER_02: me the link.
[02:55-02:56] UNKNOWN: So
[02:56-02:59] SPEAKER_01: use this model. Over on the right.
[03:02-03:02] UNKNOWN: You
[03:02-03:18] SPEAKER_02: need to agree to share your contact information to access this model. Agree and access. Email and username with the repository. Company required. None. I don't
[03:18-03:26] SPEAKER_01: have either of those. Maybe like in slash a and then website you could maybe put the repository. I understand.
[03:28-03:39] SPEAKER_02: I don't have one. I mean yeah it's honest. Yeah for this project I'm not going to put my company on there and say hey Google is using this model. No I'm not going to say that.
[03:45-03:50] SPEAKER_01: So. Okay you can agree to access the model. You might be able to just try it now.
[03:51-04:00] SPEAKER_02: Yeah because a lot of models are like that. Like you just because they're on here you still have to meet their specific terms. Right because somebody made this
[04:00-04:03] SPEAKER_01: model. Yeah. It's not just hugging faces it's just a hosting platform. Yeah.
[04:16-04:17] SPEAKER_03: I'm not sure that's just better.
[04:18-04:18] SPEAKER_00: Yeah.
[04:21-04:32] SPEAKER_01: I have 40. There you go. Except after like C I think is the rhyme but then there's a ton of words where that's not the case.
[04:39-04:39] UNKNOWN: Exactly.
[04:54-05:17] SPEAKER_01: It is the right. But I don't even require a rebuild or anything. Right. It should just work. Yeah. Or it can retreat. That's beautiful.
[05:18-05:18] UNKNOWN: Yeah.
[05:20-05:22] SPEAKER_02: I think I've seen that in the lab before.
[05:23-05:28] SPEAKER_01: It makes sense like the logs are just another plate you can access everything else on GCP. Right.
[05:41-05:43] SPEAKER_00: That's true.
[05:43-05:44] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[06:17-06:35] SPEAKER_02: Yeah. Yeah. Forever. Well no those are all.
[06:38-06:44] SPEAKER_01: Look at. My costs. Oh yeah. It couldn't have been.
[06:46-06:48] SPEAKER_02: I mean well I guess.
[06:57-06:59] SPEAKER_01: All right. That's what you want. All
[06:59-06:59] UNKNOWN: right. I think I have enough expenses
[06:59-07:00] SPEAKER_01: on
[07:00-07:00] UNKNOWN: it.
[07:01-07:01] SPEAKER_01: For
[07:01-07:01] UNKNOWN: the
[07:01-07:03] SPEAKER_01: four days. What is the.
[07:03-07:03] UNKNOWN: We
[07:03-07:07] SPEAKER_01: hover on it is there like a summary. Yeah.
[07:08-07:08] UNKNOWN: There
[07:08-07:08] SPEAKER_02: there.
[07:17-07:18] UNKNOWN: Yeah.
[07:22-07:28] SPEAKER_01: Is that like an estimate of the monthly spend based on the first four days?
[07:28-07:28] UNKNOWN: I
[07:28-07:30] SPEAKER_01: guess. We'll
[07:30-07:30] UNKNOWN: go
[07:30-07:34] SPEAKER_01: back to
[07:34-07:35] UNKNOWN: that.
[07:35-07:37] SPEAKER_01: Forecasted. Forecasted, yeah. Oh,
[07:37-07:37] UNKNOWN: 4
[07:37-07:40] SPEAKER_01: ,000 % versus made. Yeah. So
[07:40-07:51] SPEAKER_02: it's fine. Yeah, right now. It's anticipated all that's going to come from this transcription service because everything we've done over the last day. Right,
[07:51-08:02] SPEAKER_01: but actual costs. It's been 0 .4 cents. Yeah, not even a penny yet. Right. So yeah, it's just saying basically based on yesterday, if you do that every day for the rest of the month, it's going to cost you 41 cents.
[08:06-08:06] UNKNOWN: Except
[08:06-08:13] SPEAKER_02: I got some work for just a second. Yeah, I'm with you. I theoretically got an alert because I have looked at my emails already.
[08:13-08:13] SPEAKER_00: Yeah.
[08:15-08:16] UNKNOWN: Oh, am I
[08:16-08:16] SPEAKER_02: doing wrong?
[08:29-08:30] UNKNOWN: I
[08:30-08:51] SPEAKER_02: mean, these messages are still the same one from before. Yeah. No. Yeah, it's the same message. It's running through this cycle. It's got some number of retries set, but yeah, it's ultimately that. So I don't know that this is a bad idea to redeploy it.
[08:53-08:53] UNKNOWN: I agree.
[08:57-08:59] SPEAKER_02: Oh, allow unauthenticated.
[09:04-09:07] SPEAKER_01: I need to ask about that once it's done.
[09:12-09:13] UNKNOWN: Let's see.
[09:13-09:23] SPEAKER_01: It's likely because the Cloud Run instance was failed or the platform didn't submit. It's initial startup is still the one trying to process new requests. OK.
[09:25-09:27] SPEAKER_02: Right. It's basically saying redeploy it and try again.
[09:27-09:27] SPEAKER_00: Yeah.
[09:31-09:38] SPEAKER_01: So it's saying it has already loaded the pipeline, which is the connection to Hugging Face or it's part of the connection to Hugging Face.
[09:40-09:41] UNKNOWN: And
[09:41-10:01] SPEAKER_01: it's just reusing that pipeline that it's already built, which fair enough. I think that dash dash quiet might mean don't show me everything, but you can try or take that command to Gemini. But then you put in some pretty.
[10:01-10:10] SPEAKER_02: Yeah, it's fine. I assume I agree with you that that's why it's probably not showing. I don't
[10:10-10:16] SPEAKER_01: like it. You could probably look at logs and see the sub -flow should be happening.
[10:23-10:24] UNKNOWN: Oh,
[10:24-10:25] SPEAKER_02: I guess I shouldn't have done that.
[10:58-11:18] SPEAKER_01: Is that new? I don't know. I haven't really looked at them, but that's the thing that cursor was describing from when it looked at the logs. Yeah. Essentially similar to what?
[11:18-11:18] UNKNOWN: It's
[11:18-11:38] SPEAKER_01: easier direct testing, so maybe because we're using PubSub.
[12:05-12:07] UNKNOWN: Okay.
[12:43-12:51] SPEAKER_02: What was? I assume the choir fine is what we talked about,
[12:51-12:51] UNKNOWN: but
[12:51-12:56] SPEAKER_02: maybe it's. It seems to agree with
[12:56-13:20] SPEAKER_01: you. Yeah, that is sketchy. That's why you have to be paying attention.
[13:40-13:41] SPEAKER_04: Mostly waiting.
[13:42-13:43] SPEAKER_01: Security practice wise,
[13:43-13:43] UNKNOWN: the
[13:43-13:55] SPEAKER_01: next step beyond that is to have like a hard coded limit on how many requests can come through over X amount of time based on what you expect. Yeah, yeah, I think you have to code
[13:55-13:55] SPEAKER_02: it into the endpoint.
[14:03-14:04] UNKNOWN: It
[14:04-14:10] SPEAKER_02: was probably almost done when I interrupted the call, but it was still done in a way that I. Yeah, you had to redo it.
[14:26-14:28] SPEAKER_03: Yeah. Excuse me.
[14:41-14:46] SPEAKER_02: Is that new and good? I mean, it happened this minute.
[14:49-14:51] SPEAKER_03: Natural attempt. Oh, sorry.
[14:54-14:55] UNKNOWN: You're good.
[14:59-15:21] SPEAKER_01: I assume that means it did it. What's the error? I don't
[15:21-15:22] UNKNOWN: know. I
[15:22-15:22] SPEAKER_01: mean,
[15:23-15:23] UNKNOWN: it
[15:23-15:26] SPEAKER_01: may be coming from us. You want to try to explain this?
[15:37-16:05] SPEAKER_02: No. Never mind. Let it go. I don't think we've gotten the message ID back.
[16:05-16:05] SPEAKER_01: Yeah,
[16:05-16:07] SPEAKER_02: that's
[16:07-16:09] SPEAKER_01: not broken. That's actually triggering everything.
[16:10-16:10] UNKNOWN: And
[16:10-16:11] SPEAKER_01: then it actually.
[16:13-16:14] SPEAKER_02: You didn't
[16:14-16:14] SPEAKER_01: wait.
[16:16-16:17] SPEAKER_02: That's honest.
[16:24-16:36] SPEAKER_01: But that's the this is the answer. Yeah, everything that if it's possible to get it on a CLI, do it. And if it's not, see if you can make it. Right. Exactly.
[16:36-16:54] SPEAKER_02: You can go look at the logs yourself. So you do it. You go look at it. You know what you're looking for anyway. 100 percent. Yeah, that's like 10x the workflow already. Yeah, just that. Just looking through logs. Yeah. You talked about that yesterday.
[17:06-17:09] SPEAKER_04: All right. Yeah, that's better than red.
[17:14-17:46] SPEAKER_01: It started main .py. 11 .13. Like fucking Greenwich time or whatever.
[17:50-17:56] SPEAKER_02: I don't know. That's not when. Yeah, yeah. Yeah, it's Greenwich.
[18:03-18:04] UNKNOWN: I
[18:04-18:09] SPEAKER_02: don't know what our letter is, but I know Zulu because that's the one that
[18:09-18:09] UNKNOWN: you're using.
[18:09-18:19] SPEAKER_02: Yeah. I'm sure I can look at it better. They don't put
[18:19-18:37] SPEAKER_01: it on there. Also, that's not ours. That's an hour earlier than ours. Oh, yeah. For whatever reason. OK. Those are regular errors. Yeah.
[18:50-18:51] UNKNOWN: What is
[18:51-18:52] SPEAKER_03: that? Is that a mouth?
[18:53-18:56] SPEAKER_02: Or is that sprinkler? I don't know.
[19:23-19:27] SPEAKER_01: Right. Please don't be. It's just something random.
[19:31-19:31] UNKNOWN: Oh.
[19:34-19:35] SPEAKER_01: Here we go.
[19:36-19:41] SPEAKER_02: So we need a specific one. To accept these conditions for this one.
[19:52-20:06] SPEAKER_01: These are all learning things. It's annoying, but like you need to know that you need to do these things. Yeah. And this is how you do that. I don't
[20:06-20:06] UNKNOWN: have one. I
[20:06-20:07] SPEAKER_01: mean,
[20:07-20:07] UNKNOWN: as
[20:07-20:14] SPEAKER_01: long as that's OK, like legit is a personal project. I'm doing my thing. Then fair play to you.
[20:14-20:23] SPEAKER_02: Yeah. And at some point, if we commercialize this, we have to go back and look at all of this. For sure. Where did we base our company on? And who do we owe money for?
[20:23-20:23] UNKNOWN: Do
[20:23-20:23] SPEAKER_02: we
[20:23-20:23] UNKNOWN: need
[20:23-20:25] SPEAKER_02: to build annotations for ourselves?
[20:25-20:25] UNKNOWN: We need
[20:25-20:26] SPEAKER_02: to redo
[20:26-21:21] SPEAKER_01: it. OK. Because ultimately, one thing we could do is go, hey, cursor, check this out. Let's build one. Right. Yeah, exactly. Build the one based off of this open source one. Change it like a couple places. Whatever. You know what I'm saying. Let's go. Yeah. Apparently, the piracy thing I said,
[21:22-21:22] UNKNOWN: like
[21:22-21:39] SPEAKER_01: buying isn't owning. Yep. Pirating isn't stealing. Apparently, that's a bit of a rallying cry in the community. It wasn't that guy's quote. Got it. So that makes more sense. You don't look deeper into rallying cry. They sound good and you go,
[21:39-21:39] UNKNOWN: fuck
[21:39-21:40] SPEAKER_01: yeah, dude, let's go.
[21:42-21:48] SPEAKER_02: I don't know. I've been looking at this shirt. I don't know when we're doing that now. I know we're not doing it tomorrow.
[21:48-22:09] SPEAKER_01: Yeah. Every text last night, maybe just the siblings one, said the week after vacation. Oh, yeah. OK. There you go. All right. As long as that doesn't even come close to coinciding with game seven, if that's on the table. Yep. She can keep it a buck. I just won't go. Yeah. And probably my mom won't eat it.
[22:09-22:12] SPEAKER_02: Like the biggest game in a decade.
[22:16-22:22] UNKNOWN: What's that? It didn't
[22:22-22:24] SPEAKER_01: really quite hit
[22:24-22:29] UNKNOWN: me. No. There you go.
[22:37-22:42] SPEAKER_01: Ready condition. It's like four lines up from the bottom.
[22:42-22:42] UNKNOWN: I
[22:42-22:52] SPEAKER_01: just that is nothing. Well, there's no errors. I don't know that it's broken. It seems to be still working, but
[22:52-22:52] UNKNOWN: I
[22:52-22:53] SPEAKER_01: don't know why we're not seeing it
[22:53-22:53] UNKNOWN: in
[22:53-23:12] SPEAKER_01: the output. Sneak a quiet back in there. I don't see it. Yeah. So the version name of this one is V1 -HF Token Fix.
[23:13-23:14] SPEAKER_02: Yeah. That's true.
[23:14-23:14] UNKNOWN: I
[23:14-23:17] SPEAKER_02: saw that. Like fine.
[23:17-23:17] UNKNOWN: It
[23:17-23:25] SPEAKER_02: is what you called it. OK. That looks different,
[23:25-23:25] UNKNOWN: too.
[23:25-23:28] SPEAKER_02: It just didn't show us that stuff. Yeah. And then all of
[23:28-23:28] UNKNOWN: a
[23:28-23:30] SPEAKER_02: sudden it's
[23:30-23:30] UNKNOWN: done.
[23:34-23:36] SPEAKER_01: Enjoy your 60 seconds.
[23:40-23:44] SPEAKER_02: Maybe that's what it was doing. I don't know.
[23:52-23:52] UNKNOWN: That
[23:52-23:58] SPEAKER_01: looks positive. Looks great. It's analyzing audio.
[24:07-24:14] SPEAKER_02: Yeah, pipeline loaded. OK. I don't know where all these warnings
[24:14-24:24] SPEAKER_01: are. Of course it's not authenticated. Yeah. Maybe that's why I tried to sneak it in.
[24:25-24:41] SPEAKER_02: Yeah, whatever this is trying to hit it routinely is not working because it's not authenticated, which is good. But I don't know what that is that's trying to do that. Right. And I don't want it trying to hit this cloud run endpoint. If it's important, then let's authenticate it.
[24:45-24:45] SPEAKER_00: Excellent.
[25:00-25:00] UNKNOWN: So
[25:00-25:02] SPEAKER_01: yeah, it's throwing the authentication.
[25:08-25:09] UNKNOWN: This
[25:09-25:12] SPEAKER_02: is beautiful. Yeah. Because you can go look at those yourself.
[25:15-25:22] SPEAKER_01: Yeah, I have to try to guess how much to copy and paste and it's kind of clunky to try to scroll through a bunch of.
[25:25-25:26] UNKNOWN: Yeah.
[25:27-25:40] SPEAKER_01: So the message would manually sync because that's from us. Let's see, make the full authentication. OK.
[25:54-26:00] SPEAKER_02: OK. Yeah. So as expected, what I don't want to do is keep doing it. Right.
[26:02-26:21] SPEAKER_01: Surely it's got a number that it stops at. Yeah.
[26:21-26:21] UNKNOWN: So
[26:21-26:23] SPEAKER_01: go ahead and upload a
[26:23-26:23] UNKNOWN: file.
[26:23-26:24] SPEAKER_01: Yeah.
[26:46-26:49] SPEAKER_02: I guess it doesn't care about punctuation.
[26:49-26:49] UNKNOWN: It
[26:49-26:58] SPEAKER_02: definitely doesn't. I still do it. I just want to make sure that it's
[26:58-26:58] SPEAKER_03: still
[26:58-26:58] SPEAKER_02: happening.
[27:30-28:05] UNKNOWN: Yeah. Do
[28:05-28:10] SPEAKER_02: you see this? Potentially up to seven days.
[28:11-28:13] UNKNOWN: Oh, shit.
[28:14-28:33] SPEAKER_02: The default is seven days, which just makes sense, right? That PubSub, it won't drop messages. Yeah. Once it's in a PubSub topic, it's going to keep until it succeeds. And that's why PubSub is valuable. That you put it in this queue, it never drops it and it never stops it. Even your service goes down. It's going to keep holding it.
[28:33-28:33] UNKNOWN: It's
[28:33-28:35] SPEAKER_02: going to wait for the service to come back. Yeah.
[28:36-28:36] UNKNOWN: Yeah,
[28:37-28:47] SPEAKER_01: so there's some value to that. And so that's why that happened all night. And also, it didn't, like if it did that for the rest of the month,
[28:47-28:47] UNKNOWN: it
[28:47-29:48] SPEAKER_01: would be 41 cents is what it's saying. And... So if it failed, and we didn't notice it, and let it run for a month, it would probably be cheaper than if it was successful and made it through and actually started hitting Gemini. Right, I agree. And also, we'll notice it in a day or whatever the time frame that it usually takes for it to finish transcription and have an output, we'll be like, what the fuck's going on? And also add a PubSub topic that recognizes that failure and sends an email to you or it runs a function that stops it. That's what it mentions, like a dead letter topic. Yeah. Or change the policy to like two minutes.
[29:48-29:49] SPEAKER_02: Yeah.
[30:11-30:17] SPEAKER_01: Okay. So... I'm gonna go... Is
[30:17-30:17] UNKNOWN: it
[30:17-30:31] SPEAKER_01: still hitting after shutdown? It looks like it. Yeah. Is that one from like fucking yesterday or some shit? That some is still running?
[30:32-30:52] UNKNOWN: Like... Yeah.
[31:06-31:21] SPEAKER_01: Easily do it. Like anything older than right now. Do that.
[31:22-31:23] UNKNOWN: That's it.
[31:34-31:35] SPEAKER_03: Successful.
[31:39-31:46] SPEAKER_02: So we've got four. Yeah, so it's at 28. It may have already stopped anyway.
[31:46-31:51] SPEAKER_01: That's true. Those last four were just the artifacts that we... Yeah. Okay.
[31:52-31:53] SPEAKER_02: So now...
[31:57-32:34] SPEAKER_01: I would say show it that sample audio path that's already in this project and say... You do it. Do that. Yeah. And one way to do also is that little at right there in the chat... Okay. Is a context thing. Like that's for providing context. Yeah. What is that to? Oh, to add a file. Yeah. You can add a bunch of stuff. I'm assuming that that can make it quite a bit more powerful and I haven't dove into it. You can search them too. Yeah. Let
[32:34-32:34] UNKNOWN: me
[32:34-32:44] SPEAKER_01: see if I can just go right here. What the heck? Are you in a different... Yeah.
[32:49-32:52] SPEAKER_00: Did it do it? I don't know.
[32:58-32:59] SPEAKER_01: Maybe it's because...
[32:59-32:59] UNKNOWN: Can
[32:59-33:24] SPEAKER_01: you two -finger click and just copy the path? That's really all it needs. What's the difference between GSUtil and Gcloud?
[33:25-33:25] UNKNOWN: I
[33:25-33:35] SPEAKER_02: think some services have their own. Just whichever one. Some services are generic and effectively under Gcloud and some of them have their own. Like
[33:35-33:36] SPEAKER_01: utility services?
[33:37-33:37] UNKNOWN: Yeah.
[33:37-33:45] SPEAKER_01: That makes sense because even like a project structure, you would have like a utilities folder that does this other stuff other than like your front end or whatever.
[33:45-33:58] SPEAKER_02: Yep. And it's literally copy. It looks just like the Linux command. And I assume that at some point that's what we will do. It is once we put all those files on the computer,
[33:59-33:59] UNKNOWN: you
[33:59-34:11] SPEAKER_02: just do GSUtil, all of these and it will just do it and they will run one after another and they'll show up. Yeah. Just push a bunch of files.
[34:21-34:22] UNKNOWN: These
[34:22-34:27] SPEAKER_01: people kill me with links that you can't just look at.
[34:39-34:42] SPEAKER_02: Wait approximately, waiting approximately two to three minutes.
[34:42-34:42] UNKNOWN: You
[34:42-34:43] SPEAKER_02: did not. About
[34:43-34:45] SPEAKER_01: half a second later
[34:45-34:45] SPEAKER_02: it's like,
[34:45-34:45] UNKNOWN: alright,
[34:45-34:47] SPEAKER_02: let's go.
[34:52-34:54] SPEAKER_01: Still four, still four.
[34:56-34:57] UNKNOWN: Holy fuck.
[34:59-35:00] SPEAKER_01: Is that the bottom?
[35:01-35:10] SPEAKER_02: Yeah. What the heck? Not still four. So many. We were at like 28.
[35:10-35:12] SPEAKER_01: Yeah. Is those four?
[35:12-35:12] UNKNOWN: I
[35:12-35:15] SPEAKER_01: mean the shutdown is our reference for it.
[35:16-35:16] UNKNOWN: Yeah.
[35:18-35:28] SPEAKER_01: Can we go straight to PubSub? Is there any data there? Where do you see that? Like I mean in the actual section for PubSub. Like go look at the activity that's going on. Oh, maybe.
[36:14-36:16] SPEAKER_02: So it got used.
[36:25-36:35] SPEAKER_01: I think we need to have a look at logs itself. Like specifically these, maybe give it one and be like,
[36:35-36:35] UNKNOWN: hey
[36:35-36:42] SPEAKER_01: here's the message I'm getting. Right. And it's still happening even after we've done all of
[36:42-36:42] UNKNOWN: this.
[36:42-36:43] SPEAKER_01: And
[36:43-36:43] UNKNOWN: then
[36:43-36:45] SPEAKER_01: maybe have it still run,
[36:48-36:53] SPEAKER_02: like look at the logs itself as well. Yeah well I mean it should pick up all of them here in a second.
[36:54-36:54] UNKNOWN: That's
[36:54-36:59] SPEAKER_02: true. Like that's all it's going to see. Yeah. I want to go look in the bucket.
[36:59-36:59] UNKNOWN: Maybe
[36:59-37:08] SPEAKER_02: something did go in there. Maybe. I need to put that one here right there. Yeah. I'll put
[37:08-37:12] UNKNOWN: it there.
[37:31-37:43] SPEAKER_01: Is there a second file in the input one? Yeah. So this just
[37:43-37:50] SPEAKER_02: went in. That was created today. This morning. Yeah. That's the one that, there was nothing in there before.
[37:51-38:01] SPEAKER_01: So did it see that that was already there and go and just not replace it? Or I don't know. Like did it somehow not trigger the build?
[38:24-38:24] SPEAKER_02: Yeah.
[38:24-38:24] UNKNOWN: So
[38:24-38:31] SPEAKER_02: it's looking at the, it said it was looking at the persistent unauthenticated error.
[38:31-38:48] UNKNOWN: Hmm. That's good.
[38:49-38:58] SPEAKER_02: Probably been hard. Okay. So give it the right roll. It's going to give it. It's giving me service
[38:58-38:58] UNKNOWN: account.
[38:58-39:22] SPEAKER_02: Service account run invoker. Okay. Cloud run invoker. Yeah. Yeah. This thing is dangerous. For sure. You got to like do a commit like the G cloud commands in general. Like it will work. They will run.
[39:22-39:24] SPEAKER_01: And they will take money out of your bank account.
[39:25-39:25] UNKNOWN: Oh
[39:25-39:26] SPEAKER_01: yeah.
[40:00-40:02] SPEAKER_03: What?
[40:08-40:13] SPEAKER_02: So whatever is changing the, so it's for sure going to be a different one this time. Gotcha.
[40:15-40:17] SPEAKER_01: Yeah. Just the formatting of the date.
[40:23-40:26] SPEAKER_02: Wait three to four minutes, two to three minutes.
[40:26-40:26] UNKNOWN: It
[40:26-40:33] SPEAKER_02: did it. Yeah. Yeah. Now let's look at the logs. I'll do it for you. I'll do it the way. Yeah.
[40:35-40:42] SPEAKER_01: Hey, that's the only thing you have to complain about. For sure. And the rest of this miracle is happening.
[40:45-41:00] UNKNOWN: Right. Still showing
[41:00-41:01] SPEAKER_03: the same
[41:01-41:08] UNKNOWN: thing. Yeah. Hang
[41:08-41:10] SPEAKER_01: probably on there. That's too slow.
[41:36-41:37] UNKNOWN: Okay.
[42:25-42:28] SPEAKER_02: I mean, I can go look at it.
[42:35-42:41] SPEAKER_01: It's already a cloud run admin, right? So that should be plenty.
[42:49-42:58] SPEAKER_02: They should be, it should be in there. What's the name
[42:58-42:58] SPEAKER_03: of it?
[43:00-43:23] SPEAKER_02: Diorization desk service account. Yeah. Okay. There it is. I imagined it would be in here as well. Oh. No. So maybe it only shows up in service accounts. But why is this one in here that I created?
[43:23-43:29] SPEAKER_01: Well, because this is the most permission for project transcription service. I don't know.
[43:41-43:42] SPEAKER_02: What are, it's
[43:42-43:42] UNKNOWN: called.
[43:42-43:49] SPEAKER_02: Yeah, I don't think it does, it does have it. Yeah. I mean, I can do it manually. So
[43:49-43:56] SPEAKER_01: that's a service account for, like what's the difference? Those are service accounts too.
[43:57-44:07] SPEAKER_02: Yeah. It doesn't have any roles. Like, so this is the list of service accounts. So the service account is created, but it doesn't have the role it's talking about. And I see now why
[44:07-44:07] UNKNOWN: it
[44:07-44:11] SPEAKER_02: has the error. I mean, I can go in here and do it because I manually did this.
[44:11-44:30] SPEAKER_01: Yeah. Yeah. So maybe don't run that yet or do, but like say, Hey, can you go check the roles? I mean, it's going to try to look at them. Or it's going to try to add it
[44:30-44:31] UNKNOWN: again.
[44:34-44:38] SPEAKER_01: Maybe check the existing service accounts and roles.
[45:21-45:33] SPEAKER_02: It does hold. Pass the role,
[45:33-45:33] UNKNOWN: run
[45:33-45:40] SPEAKER_02: and book permission. And that's the correct setup. I don't see that. What I look
[45:40-45:40] UNKNOWN: at.
[45:55-46:01] SPEAKER_01: You go straight to the service accounts. And like what roles do these have? They're
[46:01-46:02] SPEAKER_02: not listed on this
[46:02-46:02] UNKNOWN: page.
[46:02-46:06] SPEAKER_02: Yeah. On this page, I don't think it lists them.
[46:06-46:06] UNKNOWN: We
[46:06-46:13] SPEAKER_02: click that one because I know it does have this is.
[46:15-46:23] SPEAKER_01: So it makes some sense that this one doesn't have. So in theory, on this page, on the diarization one, run invoker.
[46:30-46:49] SPEAKER_02: I think this permissions is to allow other people to get that. That's what that permission is. And then, but all permissions for human or service accounts, it should be listed right here. It's my understanding. I've never seen. By roles.
[46:50-47:28] SPEAKER_01: This. No, like over there. That was a thought I had. But it is showing logs in that project is the thing. So.
[47:28-47:28] UNKNOWN: Service
[47:28-47:29] SPEAKER_01: account.
[47:29-47:31] SPEAKER_02: Yeah, no, the role.
[47:34-48:14] SPEAKER_01: You can take screenshots to give it to them. I do that a lot. OK. I typically just drag it to be a it's a filing. I think that should do it.
[48:19-48:20] UNKNOWN: I always
[48:20-48:26] SPEAKER_01: do the full screen capture.
[48:26-48:26] UNKNOWN: You
[48:26-48:30] SPEAKER_01: just click once and it takes the whole thing. But I'm kind of lazy.
[48:32-48:33] UNKNOWN: OK.
[48:37-48:39] SPEAKER_01: Directly on that service.
[48:49-48:55] SPEAKER_02: OK. Learn something. Yeah. I don't know how to see it on that service.
[48:56-48:58] SPEAKER_01: Yeah. Where is that? So in cloud run.
[48:58-48:59] UNKNOWN: You
[48:59-49:06] SPEAKER_01: go to the diarization service and you'll see that it's able to be.
[49:22-49:25] SPEAKER_02: I guess you can look at. Directly.
[49:26-49:26] SPEAKER_00: Nice.
[49:36-49:45] SPEAKER_01: You go back to those logs. Corrections should be strictly less than the reduction. I don't know.
[49:54-49:55] UNKNOWN: OK.
[49:56-49:58] SPEAKER_02: What are you trying to do?
[49:59-50:02] SPEAKER_01: Clear all messages and try to make it easy for them
[50:02-50:04] UNKNOWN: to see. OK.
[50:18-50:26] SPEAKER_01: Sorry. Say that again. It says go to the specific cloud run services permissions tab within the cloud run UI. Might be time to start a new chat.
[50:27-50:31] SPEAKER_02: Yeah. I'm going to. Yeah. Let's do that.
[50:33-50:56] UNKNOWN: OK. OK.
[51:32-51:33] SPEAKER_02: You didn't change anything.
[51:39-52:27] SPEAKER_01: Well, it's asking either. I typically don't use that button. I've had like one bad experience with it. But it said at the end like do you want. Does it look good? If so, I'll try it, which is kind of annoying. That's the point of the accept button. Even this little bullshit, I think is just an old chat. Like why are you being weird all of a sudden? And maybe it was being weird that whole time when it was doing stuff we don't know how to do. Right.
[52:46-55:53] UNKNOWN: OK. OK. OK. OK. OK. OK. OK.
[56:04-56:11] SPEAKER_02: Yeah. I wanted to see if it would update automatically. The
[56:11-56:23] SPEAKER_03: logs. That's interesting.
[56:24-56:32] SPEAKER_02: That's new. OK. Huh. But it's like it's converting. They're showing some conversions here.
[56:32-56:49] SPEAKER_01: Yeah. And that's not even like a warning level. It's just saying like couldn't do that and move it. And then I assume is neural network given that this is all like machine learning stuff.
[57:19-57:25] SPEAKER_02: That's as much as we're going to get. Apparently. Is anything in any of
[57:25-57:25] UNKNOWN: the
[57:25-57:27] SPEAKER_02: buckets? Yeah.
[57:27-57:27] UNKNOWN: I
[57:27-57:47] SPEAKER_02: was just looking at them. Just the input nothing and output. And either output. The input has the other audio files too. And then there's what we had before.
[58:00-58:01] SPEAKER_03: I'm
[58:01-58:01] UNKNOWN: going
[58:01-58:02] SPEAKER_03: to make a coffee.
[58:09-58:10] SPEAKER_01: Still feeling good?
[58:10-58:10] UNKNOWN: Three
[58:10-58:11] SPEAKER_01: days in? Yeah.
[58:11-58:18] SPEAKER_02: I feel great. Like I said, it feels like there's something here. I agree.
[58:24-62:39] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[62:43-62:44] SPEAKER_02: So it's
[62:44-62:44] UNKNOWN: I
[62:44-62:53] SPEAKER_02: think the Pub Sub topic triggered which is supposed to trigger a cloud function. I'm not sure exactly the workflow but it's
[62:53-62:53] UNKNOWN: supposed
[62:53-62:55] SPEAKER_02: to trigger a cloud function. The cloud function is not there.
[62:55-62:55] UNKNOWN: We
[62:55-63:09] SPEAKER_02: haven't built it yet. So basically it's saying that it went through and looked at it and yeah it looks good. But now the error is it's not true. There's no cloud function. It's like where's the cloud function? And so and it got to the place of okay well we need to make the cloud function. Fair enough.
[63:09-63:09] UNKNOWN: And
[63:09-63:19] SPEAKER_02: we knew that we forgot. That's some bullshit. Yeah. So I just don't understand completely the workflow. Yeah so this can go into reading.
[63:29-63:35] SPEAKER_01: Triggered by uploads. So it's triggered by the Pub Sub topic?
[63:35-63:36] SPEAKER_02: I believe.
[63:36-63:36] UNKNOWN: Like
[63:36-63:41] SPEAKER_02: so why if it's going to if you're going to trigger a cloud function why do
[63:41-63:41] UNKNOWN: you
[63:41-63:42] SPEAKER_02: need the Pub Sub topic?
[63:43-63:45] SPEAKER_01: Well because cloud functions need to trigger. Like that's the trigger.
[63:46-63:47] SPEAKER_02: Okay.
[63:47-63:50] SPEAKER_01: And it is importing Pub Sub if you want at the top of that.
[63:50-63:54] SPEAKER_02: Yeah okay. And then so?
[63:57-64:00] SPEAKER_01: Yeah the function needs to get hit by something.
[64:04-64:06] SPEAKER_02: So I think this is
[64:06-64:06] UNKNOWN: the
[64:06-64:15] SPEAKER_02: opposite. It looks like when the change in GCS bucket this is going to generate a Pub Sub message.
[64:15-64:20] SPEAKER_01: Or the diarization service. Right. This whole function does that. Yeah. That's
[64:20-64:36] SPEAKER_02: it. Right. But I don't know that there's any other way to do it. Or you could just do. Pub Sub is more robust in that it will generate this message and it will just keep track.
[64:36-64:36] UNKNOWN: Right
[64:36-64:49] SPEAKER_02: and so if you do a bunch of them at the same time it won't like mess like it'll put them in order. Right. So I still think Pub Sub makes sense but I think this function is going to trigger creating the Pub Sub event message.
[64:50-64:50] SPEAKER_00: Yeah.
[64:50-64:59] SPEAKER_02: And then the Pub Sub message will then I'm not sure like hit the cloud run endpoint?
[65:00-65:00] SPEAKER_01: Yeah
[65:00-65:00] UNKNOWN: I
[65:00-65:08] SPEAKER_01: think maybe get to the end and then maybe it already says it but or ask it hey give me the full workflow from point O.
[65:48-65:58] UNKNOWN: Okay. Alright.
[66:03-66:12] SPEAKER_01: Then we can go back to unauthenticated because it's a function and I think that might be the ultimate reason for that. Yeah
[66:12-66:12] SPEAKER_02: maybe.
[66:38-66:39] UNKNOWN: Okay.
[67:06-68:05] SPEAKER_03: It triggers the cloud function too. Okay. Okay. Okay. Yeah. Okay. Okay.
[68:09-68:17] SPEAKER_02: Okay. Okay.
[68:39-68:40] SPEAKER_01: Yeah this
[68:40-68:40] SPEAKER_02: makes
[68:40-68:57] SPEAKER_01: sense. I agree. Alright. I am just not certain that we're not going to find that exact same error in that exact same spot and we just added another step at the front. Right. Like based on all of that. Right. But we'll see I mean
[68:57-68:57] UNKNOWN: I
[68:57-69:15] SPEAKER_01: think it's worth seeing. Because maybe there's something to the cloud function triggering it all instead of a I can see like a main or something I don't know.
[69:46-72:43] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[72:45-73:17] SPEAKER_01: I would almost say like include a priority do not delete and definitely do like almost like EOD. Don't stop like the last thing you do is you lock down that fucking thing. Because it takes one DDoS and a few minutes and just some kid that's born that happens to find your fucking URI. Yeah my nigga. And probably everything will be fine but you're looking at like a month of very annoying conversations with people that you technically work with and more.
[73:32-74:35] UNKNOWN: Okay. Okay. Okay.
[74:59-75:00] SPEAKER_04: Okay.
[75:39-76:15] UNKNOWN: Okay. Okay.
[76:38-76:38] SPEAKER_01: Okay.
[76:41-76:42] UNKNOWN: Literally
[76:42-76:59] SPEAKER_01: game I think six is the Thursday after we get back from vacation. So we better sleep then motherfuckers. Yep. I guess sweet or game five.
[77:04-77:10] SPEAKER_02: That's not what I want. It's not? Yeah but I want you to run the function.
[77:11-77:14] SPEAKER_01: Oh yeah that makes sense. You
[77:14-77:14] UNKNOWN: want
[77:14-77:15] SPEAKER_01: to start in the north?
[77:15-77:15] UNKNOWN: In
[77:15-77:17] SPEAKER_01: the north since? The end.
[77:22-77:24] SPEAKER_02: I'm just going to type again.
[77:25-78:05] SPEAKER_01: Yeah? I think like it seems silly in the moment but that's only because it just did three days worth of work in about twenty minutes. Yep. So yeah you do type that a lot but I don't know like I guess this is where this is a thing and I don't even really know what it is but cursor rules are a thing and it's almost like a git ignore and so you can provide a file and you could say like something like if the user says ATKPL that means do the whole process of like shutting down a chat and it's time to
[78:05-78:05] UNKNOWN: start
[78:05-78:05] SPEAKER_01: doing
[78:05-78:05] UNKNOWN: it.
[78:05-78:06] SPEAKER_01: Yeah start
[78:06-78:17] SPEAKER_02: it do it like yeah automating this process is. Basically having a system prompt for this. Right. Just say hey keep the thing updated. Every time you do something hey I'm going to update this and.
[78:18-78:27] SPEAKER_01: I guess instead of cursor rules put that in the readme. Right. Like hey literally paste this at the top of the readme and then whenever you say hey run the first line that's
[78:27-78:27] UNKNOWN: it.
[78:27-78:49] SPEAKER_01: That's the answer. Or the second line and the first line is when you start the new one it's like hey check the first line and it says check this whole readme and check the project files and do all this. So here let's get started. Yeah cursor rules are the readme. Yeah. But the readme is more specific to the project.
[78:49-78:49] UNKNOWN: I
[78:49-78:55] SPEAKER_01: think cursor rules are probably not in this folder it's like in cursor settings or something like that. Proper.
[79:35-80:06] UNKNOWN: Okay. Okay.
[80:09-80:32] SPEAKER_01: I think something like in chat in chat prompt and start chat prompt and just basically like the start one will be less obvious but on the end one you can just go hey do in chat prompt. Right. And it knows it's got the context of the readme and it does the whole thing. Yeah. And on the new one you might have to type like check readme start chat prompt.
[80:32-80:55] SPEAKER_02: Yeah that makes sense. Trigger resource is input audio trigger event is. Looks good to me as much as I can.
[80:57-81:02] SPEAKER_01: Pretty much everything in there makes sense to me like I have
[81:02-81:02] UNKNOWN: an
[81:02-81:53] SPEAKER_01: idea of what that is. So next we'll upload and that should kick off the whole process and we'll see I mean going and doing the same thing in the other one and allowing authenticated is probably the move all the way through and that basically remove authentication from the testing pipe. And then go back and add it. And so if it breaks at that point you know very specific one that all the code already works. Right. So it is an authentication issue. Right. Versus maybe the code doesn't work maybe there's white space and some bullshit that's being pulled from somewhere else and it's as silly as that. I agree.
[81:58-82:02] SPEAKER_02: But this will now actually test the diarization service.
[82:02-82:16] SPEAKER_01: Right. Yeah we're getting to testing the code code like we know Google's authentication works. Right. And we just have to give it the right stuff. We just need to know whether our code is passing the right stuff the correct way which is not.
[82:30-82:40] SPEAKER_02: And we're not getting the freaking like over tries over and over again. Right. Which is
[82:40-82:49] SPEAKER_01: good. Yep. And that service takes a minute. But that's the transcription. This is
[82:49-82:49] UNKNOWN: for
[82:49-82:50] SPEAKER_01: the top functions.
[82:54-83:01] SPEAKER_02: Failed to upload storage bucket metadata. OK. I assume you picked that up.
[83:02-83:14] SPEAKER_01: No. You did not. But what is that permission is trying to add right there. Go back. What? The cursor. I guess. Oh no it's pushing.
[83:15-83:15] SPEAKER_02: Yeah.
[83:15-83:15] UNKNOWN: Like
[83:15-83:18] SPEAKER_02: it's. Yeah. It assumes it was good.
[83:33-83:34] UNKNOWN: Yeah.
[83:38-83:41] SPEAKER_02: Did you quote an issue. Maybe.
[83:56-83:59] SPEAKER_04: Yeah. She's being a little. Yeah.
[84:05-85:05] SPEAKER_01: Oh motherfucker. I mean you previously chose not to run the thing I told you to. So I mean I don't know why you did that. Yeah. You can call my earlier suggestion and then the fact that it's like as recommended by Google. Do you want to do that.
[85:25-85:28] SPEAKER_02: OK. Fine.
[85:34-85:36] UNKNOWN: Oh no
[85:36-85:43] SPEAKER_01: the condition is probably useful.
[85:43-85:43] UNKNOWN: I
[85:43-86:32] SPEAKER_01: mean a condition is like if authenticated. Right. So I assume there's things like that. A role based thing. OK.
[86:34-86:34] UNKNOWN: Do
[86:34-86:35] SPEAKER_01: like a body weight or not body weight.
[86:35-86:35] UNKNOWN: I'm
[86:35-86:40] SPEAKER_01: going to take the kettlebells out there and do a full body. Maybe I'll do a Peloton one.
[86:40-86:40] UNKNOWN: I
[86:40-86:41] SPEAKER_01: might just wing it.
[86:41-86:47] SPEAKER_02: I haven't thought about working out next week at all but I need to. Oh I'm on. Yeah. Yeah. I need to. I'm
[86:47-86:47] UNKNOWN: definitely
[86:47-86:57] SPEAKER_02: taking the yoga mat and taking the two methods. Yeah. So I can either. I'm talking about here today. Oh no I understand. Yeah. But that triggered. I didn't.
[86:58-86:58] UNKNOWN: I was
[86:58-87:08] SPEAKER_02: making sure. Yeah. I did understand. Yeah. And it triggered this not random thought it triggered this thought for me to think about working out next week. Definitely yoga. That's easy.
[87:08-87:15] SPEAKER_01: Yeah. I think running outside is the easy move. That's good. You're right. You're right.
[87:15-87:20] SPEAKER_02: So maybe just yoga and running. Yeah. Just not do any strength. Yeah.
[87:22-87:22] UNKNOWN: Bring
[87:22-87:23] SPEAKER_02: kettlebells or weights but.
[87:23-87:28] SPEAKER_01: You can do calisthenics like push ups pull ups. That's what I do. And I'm like OK
[87:28-87:28] UNKNOWN: sure.
[87:28-87:29] SPEAKER_01: Yeah.
[87:29-87:29] UNKNOWN: And
[87:29-87:40] SPEAKER_02: I feel like yoga is decent enough for intermeet like just for. Yeah. To get through the week. And cardio can literally be through running. For sure. I can actually go outside.
[87:40-87:47] SPEAKER_01: And they also might have a workout space. I don't know. I think there's a pool right.
[87:48-87:48] SPEAKER_02: So. Yeah.
[87:53-88:07] SPEAKER_01: Those look pretty much positive. Looks good. So the service is working fine. And it's authentication is broken. Yeah. Yeah. That's
[88:07-88:18] SPEAKER_02: good. So. Before you upload a file a crucial step for them read me. Supply. Right.
[88:44-88:44] SPEAKER_01: Right.
[88:45-88:52] SPEAKER_02: Well you can go give them permissions but then that's just a whole nother. You're troubleshooting two things at the same time. Like what you described. Like we should just get it through.
[88:52-88:53] SPEAKER_01: Get the python working.
[88:53-88:55] SPEAKER_02: Bro. You upload the file. Yeah.
[88:57-89:50] SPEAKER_01: This might be a new chat since the last upload. It is. So it maybe doesn't have the. File. Yeah.
[89:51-89:51] UNKNOWN: And
[89:51-89:58] SPEAKER_01: it's because the motherfuckers at the top they own so much that like Red Lobster is one they were using. Yeah.
[89:59-89:59] UNKNOWN: Red
[89:59-90:03] SPEAKER_01: Lobster famously a restaurant that people like. And was like kind of expensive. It
[90:03-90:03] UNKNOWN: sucked
[90:03-90:04] SPEAKER_01: it dry. Now it's terrible.
[90:04-90:04] UNKNOWN: But it was like middle class
[90:04-90:21] SPEAKER_01: fancy. Yeah. It was like their real estate investments. Once they become private equity they're just like that. And then that private equity group takes loans out in the name of the business. So now they can't keep up with the interest on their loans. And they go bankrupt.
[90:22-90:27] SPEAKER_02: So that's why all these restaurants like that used to be good in the 90s are now. Dressed
[90:27-90:39] SPEAKER_01: in because they basically private when it goes private and something like they're not private public. Yeah. It is a piece of Black Rock and State Street in Vanguard.
[90:39-90:39] UNKNOWN: And
[90:39-90:41] SPEAKER_02: they're extracting freaking.
[90:41-90:42] SPEAKER_01: Right.
[90:42-90:42] UNKNOWN: And
[90:42-90:51] SPEAKER_01: it's because like it's almost like if we were in much to toes and whatever the the pain brand isn't working as well.
[90:52-90:52] UNKNOWN: So
[90:52-91:05] SPEAKER_01: we'll just be but somebody's like hey I'll take all the things you can get for ten cents and it's like well nobody they're not selling on Amazon. So sure. Wipe out thing. We don't do that. Right. And it's like yeah sure. All these restaurants that we don't go to it for ships.
[91:06-91:06] UNKNOWN: And
[91:06-91:20] SPEAKER_01: the companies that own the land even though it started out the same they split them. So that company doesn't go bankrupt. They start renting to whoever is going to come in and now take this overpriced thing and definitely fail because the top is sitting the price.
[91:20-91:23] SPEAKER_02: Yeah. And they do it again. Basically.
[91:23-91:29] SPEAKER_01: Yeah. But we're reaching the point of there's no more extraction to be had. So
[91:29-91:30] SPEAKER_02: we've got to have a depression.
[91:30-91:31] SPEAKER_01: Or a war.
[91:31-91:32] UNKNOWN: Right.
[91:36-91:55] SPEAKER_01: A big one. Because these little bulls**t don't work. Right. And I also think the whole thing of like nukes not existing is perfect. It's 1984. It's the other enemy. The reason we're getting into it with China right now is because people are starting to look and like be not OK with all these little like we're funding all these little tiny things.
[91:55-91:55] UNKNOWN: We've
[91:55-91:56] SPEAKER_01: got to do something else. We've
[91:56-91:56] UNKNOWN: got
[91:56-91:57] SPEAKER_01: to do a big dog. We've
[91:57-91:57] UNKNOWN: got
[91:57-92:04] SPEAKER_01: to make an enemy. Because we used to just be like oh yeah the Arabs are bad. They hate us for our freedom. And that worked.
[92:05-92:06] SPEAKER_02: Yeah it did. For
[92:06-92:06] SPEAKER_01: a while.
[92:18-92:24] SPEAKER_02: Just looking at logs in this beautiful. Yeah. Like my read of the logs is good.
[92:28-92:31] SPEAKER_01: Yeah so it started diarization was the last thing.
[92:32-92:53] SPEAKER_02: Yeah so my guess is I mean I want to go look in the bucket. Nothing in there. Oh what is that? Pop up. Oh.
[92:54-92:56] SPEAKER_01: Yeah. GCS. Google Cloud.
[92:57-92:57] SPEAKER_02: OK.
[92:58-93:00] SPEAKER_01: It freaked me out too. OK. So
[93:00-93:04] SPEAKER_02: it uses a bucket for its work.
[93:04-93:13] SPEAKER_01: Well you assume it might be worth asking. I think it's fine. It's not public. Neither of them.
[93:23-93:23] UNKNOWN: OK.
[93:52-93:57] SPEAKER_01: OK. Like diarization complete or something in the logs.
[94:00-94:03] SPEAKER_02: Yeah so it missed maybe. It may take time.
[94:07-94:25] SPEAKER_01: How it stayed at the logs. That's really going to tell you either it failed or it's done. Yeah
[94:25-94:30] SPEAKER_02: I think it took that long to start up the service. Yep. Because it has to do all of that stuff.
[94:30-95:02] SPEAKER_01: That's the reason for PubSub. Yep. Because if you just try to get an amount like hey stay active for 300 seconds. It's like well what if it takes five minutes and two seconds. Right. You're not going to get it. Whereas PubSub will. Starting diarization. Let's get converted to a wave. Yeah. From MP3. Let's go. It's good. And even the file is like temporary. It's named temporary. It's like this is not we're not actually making some new shit just working.
[95:02-95:11] SPEAKER_02: Yep. I feel much better today than I did yesterday. Yeah. To get through all of this. Well we're not through with this yet.
[95:11-95:12] SPEAKER_01: We got to
[95:12-95:12] UNKNOWN: put
[95:12-95:14] SPEAKER_01: authentication back in place. Yeah I
[95:14-95:29] SPEAKER_02: don't think that'll be that hard because authentication is in Google. So basically you got to find the service account and give it the right permission. And it should work. So it's not actually doing authentication with OAuth. It is. On the background. But I'm not doing it. Because we're not trying to hit it publicly from here.
[95:29-95:33] SPEAKER_01: It's like adding a sign in with Google. You just got to give it the right stuff on the backside.
[95:35-95:37] SPEAKER_02: And that's the way to do it. For sure.
[95:45-95:52] SPEAKER_01: Did you know that all terms and services come with arbitration agreements? Do you know what
[95:52-95:52] UNKNOWN: that
[95:52-95:52] SPEAKER_01: is?
[95:52-95:58] SPEAKER_02: I do know what arbitration is and I did not know that all terms and services come with arbitration agreements.
[95:59-95:59] UNKNOWN: I
[95:59-96:01] SPEAKER_01: mean the ones I've heard are Google and Apple specifically.
[96:02-96:02] UNKNOWN: But
[96:02-96:12] SPEAKER_01: that means it's the industry standard. So you can't sue them even if something terrible happens. You go to a judge that's totally not in their pocket and you talk to him about it.
[96:13-96:13] SPEAKER_03: You're right.
[96:14-96:15] SPEAKER_01: Yeah. He's going to be fair.
[96:21-96:22] UNKNOWN: I
[96:22-96:22] SPEAKER_02: don't
[96:22-96:25] SPEAKER_01: understand why it's doing it a second time.
[96:25-96:25] UNKNOWN: Or
[96:25-96:25] SPEAKER_01: third
[96:25-96:25] UNKNOWN: time.
[96:25-96:30] SPEAKER_01: Is that the transcription? Like is that the next service? Maybe. In which case there should be something to
[96:30-96:30] UNKNOWN: help it.
[96:30-96:31] SPEAKER_01: No this is still
[96:31-96:40] SPEAKER_02: diarization service. It's trying to load this. Starting up multiple cloud run instances of diarization service. Did it
[96:40-96:49] SPEAKER_01: fail in there somewhere? I saw a warning. Not like labeled but the word warning area of speech brain. Okay.
[96:51-96:51] UNKNOWN: Let
[96:51-96:54] SPEAKER_01: me see here. It's terrible.
[96:54-97:06] SPEAKER_02: Except for like yes continuous like is it going to eventually have a thousand instances of this cloud run function or cloud run endpoint. Right. Is it actually like finishing them? I want
[97:06-97:08] SPEAKER_01: to go look at cloud run.
[97:14-97:30] UNKNOWN: It's not there. Oh yeah. It's not there. So you
[97:30-97:39] SPEAKER_01: got three. Is that I? Where do you see the three? Right here. Oh.
[97:42-97:44] SPEAKER_02: Yeah I don't know why it has three.
[97:44-97:44] UNKNOWN: Will you hover
[97:44-97:44] SPEAKER_02: on
[97:44-97:55] SPEAKER_01: it? Let's see what that. Yeah they're all diarization service. That said it hasn't made a new one.
[97:56-97:59] SPEAKER_02: Yeah so there's looks like there's two up right now.
[97:59-98:10] SPEAKER_01: Yeah but that was. That's an hour ago. Okay. Oh okay. Because the only reason I knew that is because I remember seeing that not having the property eval like an hour ago.
[98:10-98:15] SPEAKER_02: Yeah and maybe it is splitting it for whatever reason. Yeah it's doing like threading
[98:15-98:15] UNKNOWN: or something. But
[98:15-98:18] SPEAKER_02: they're actually running. Like and maybe it literally takes this long.
[98:18-98:25] SPEAKER_01: Yeah and somewhere in that code could be like max instances three. Right. Because it stops there.
[99:10-99:12] SPEAKER_02: I'm going to tell it to go back and
[99:12-99:14] UNKNOWN: look. Yeah.
[99:19-99:30] SPEAKER_01: Did you see, did you read that paragraph in there? We also see multiple instances of the service starting up which is cloud runs can't meet demand or replace unresponsive instances.
[99:33-99:34] SPEAKER_03: Yeah.
[100:05-100:07] SPEAKER_01: Okay. It's
[100:07-100:07] UNKNOWN: caused
[100:07-100:09] SPEAKER_01: by long start ups, long cold starts.
[100:15-100:16] SPEAKER_02: I want you to pull a new line.
[100:16-100:16] SPEAKER_00: Great.
[100:54-101:14] UNKNOWN: Okay. Okay.
[101:36-101:38] SPEAKER_03: I can check it for you but
[101:38-101:41] SPEAKER_01: yeah. Might as well do it yourself.
[101:43-101:43] UNKNOWN: You
[101:43-101:47] SPEAKER_01: guys are awesome. New chat down here as well. Whenever you find a spot.
[101:58-102:00] SPEAKER_02: Is it just going to do this forever?
[102:05-102:05] UNKNOWN: Yeah.
[102:06-102:14] SPEAKER_02: None of them are. You had it earlier. I can give it to
[102:14-102:17] UNKNOWN: you.
[102:28-102:29] SPEAKER_01: It
[102:29-102:29] UNKNOWN: might
[102:29-102:49] SPEAKER_01: be out of fast responses. I haven't really noticed a difference. But because it gets slow when you have fast responses when it's super busy like all the other AIs do.
[102:50-102:50] SPEAKER_02: Yeah.
[102:51-102:51] SPEAKER_01: I agree.
[103:09-103:23] SPEAKER_02: 60 minutes. It's not timing out.
[103:37-103:38] SPEAKER_01: Yeah.
[103:38-103:38] SPEAKER_02: Okay.
[103:55-104:59] UNKNOWN: Okay. Okay. Okay. Okay.
[105:16-105:17] SPEAKER_02: Okay.
[105:17-105:17] UNKNOWN: I
[105:17-105:19] SPEAKER_02: mean. Yeah.
[105:19-105:19] UNKNOWN: You
[105:19-105:20] SPEAKER_02: have to run another one.
[105:20-105:20] UNKNOWN: You have
[105:20-105:21] SPEAKER_02: to bring it back
[105:21-105:26] SPEAKER_01: up. And if that trigger is still active it's kind of starting again but we'll see.
[105:29-105:29] UNKNOWN: Cool.
[105:46-105:48] SPEAKER_02: Yeah. But it has stopped.
[105:49-105:50] SPEAKER_01: Yeah.
[105:56-106:18] SPEAKER_02: Maybe at some point when all the instances get to five minutes they all stop. It gets to maximum number whatever we have it set to two or three. Then they all time out at five minutes and then it all shuts down. Yeah. So I don't think that's fine. That's the protection. Yeah. I guess you can't go above maximum instances and they can't run for more than five
[106:18-106:30] SPEAKER_01: minutes. Yeah. So you could have three instances running basically all day if you were under a very strong like consistent attack. Right. Which is probably not that much. Right.
[106:47-106:59] UNKNOWN: Okay. Okay.
[107:26-107:26] SPEAKER_02: I do.
[107:26-107:26] UNKNOWN: It
[107:26-107:27] SPEAKER_02: was the one yesterday.
[107:27-107:27] UNKNOWN: I
[107:27-107:33] SPEAKER_02: don't know. The one yesterday got canceled at the last minute or postponed to today.
[107:33-107:33] UNKNOWN: So
[107:33-107:36] SPEAKER_02: it actually messed up both days.
[107:45-107:49] UNKNOWN: Okay. Okay.
[108:10-108:18] SPEAKER_02: I don't know that that's true. The service is timing out before completing the full diarization. Maybe.
[108:18-108:20] SPEAKER_01: Yeah. I mean it has
[108:20-108:20] UNKNOWN: in
[108:20-108:49] SPEAKER_01: theory read more context than we have. Okay.
[108:51-108:53] SPEAKER_02: Maybe it automatically does it. That's true.
[108:58-108:58] UNKNOWN: Yes.
[109:04-109:15] SPEAKER_01: I don't think so. You can walk away and come back. That's true. But it might be like still on like an automated timer of like how long it's running. Right.
[109:22-109:24] SPEAKER_02: Yeah. I
[109:24-109:24] UNKNOWN: assume
[109:24-109:26] SPEAKER_02: him and daddy are fighting. Yeah.
[109:35-109:53] UNKNOWN: Okay. Good
[109:53-109:54] SPEAKER_02: morning.
[110:21-110:54] UNKNOWN: Good morning. Yeah. Okay.
[111:16-111:17] SPEAKER_01: Okay. Okay. Okay.
[111:25-111:27] UNKNOWN: Okay.
[111:34-112:09] SPEAKER_02: No. I guess in theory. I agree. But I think.
[112:44-112:46] UNKNOWN: That.
[112:53-112:54] SPEAKER_02: Well.
[112:54-112:55] UNKNOWN: Oh
[112:55-113:19] SPEAKER_02: yeah. He's tired.
[113:21-113:23] SPEAKER_01: Yeah.
[113:23-113:24] SPEAKER_03: Everybody's going
[113:24-113:24] SPEAKER_02: to have
[113:24-113:26] SPEAKER_03: a hard day. It's
[113:26-113:26] SPEAKER_01: fine. I'm
[113:26-113:26] UNKNOWN: going
[113:26-113:36] SPEAKER_01: to bear the brunt of it. I'll be. Yeah. All day. I'm going to catch some strings today. Just sitting
[113:36-113:38] SPEAKER_00: there doing his thing.
[113:46-113:46] UNKNOWN: All
[113:46-113:49] SPEAKER_02: right. I'm going to go ahead and go in there.
[113:49-113:51] SPEAKER_01: Yeah. I'm going
[113:51-113:51] SPEAKER_02: to stop this.

==================================================
Generated on: 2025-07-23 14:45:14
Total words: 7201
Total speakers: 6
==================================================




Summary:
creation_date: 2025-08-27 source_file: [https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1428_ZOOM0015_transcript.txt](https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1428_ZOOM0015_transcript.txt "null") participants: [SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04]

## Executive Summary

This document captures a technical troubleshooting session focused on deploying and debugging a [[Transcription Service]] on [[GCP]]. The participants initially resolved an access issue with a [[Hugging Face]] model by accepting its terms, but then encountered persistent authentication errors with their [[Cloud Run]] service `[01:23-02:44]`. Using [[Cursor]] and the [[CLI]] for diagnostics, they investigated the behavior of [[Pub/Sub]] message retries and identified the root cause as a misconfigured [[Service Account]] lacking the necessary [[IAM roles]] `[38:24-39:22]`. The session concluded with a plan to create a new [[Cloud Function]] to manage the workflow, temporarily disable authentication for testing, and then properly re-secure the service `[81:02-81:53]`.

## Key Topics Discussed

- **Troubleshooting the [[Transcription Service]]**
    
    - **Hugging Face Model Access**: The initial problem was an inability to access a model from Hugging Face. This was resolved by navigating to the model's page and accepting the user conditions, which then required redeploying the service `[01:23-03:50]`.
        
    - **[[Cloud Run]] Authentication Failures**: After fixing the Hugging Face issue, the service began failing with persistent unauthenticated errors, causing Pub/Sub messages to retry for an extended period `[24:25-24:41]`.
        
    - **Debugging Workflow**: The team heavily relied on [[Cursor]] to analyze logs and generate [[CLI]] commands, significantly speeding up the debugging process compared to manually navigating the [[GCP]] console `[16:24-16:54]`.
        
    - **Pub/Sub Retry Mechanism**: A key discussion point was the default seven-day retry policy for Pub/Sub messages, which explained why the errors persisted overnight. They considered implementing a [[Dead-Letter Topic]] or shortening the retry policy to prevent excessive costs from failed executions `[28:14-29:48]`.
        
- **Identifying the Root Cause**
    
    - **[[IAM roles]] and Permissions**: The core issue was identified as the [[Service Account]] associated with the [[Cloud Run]] service lacking the `run.invoker` role, preventing Pub/Sub from successfully triggering it `[38:49-39:22]`.
        
    - **Architectural Refinement**: The team decided the existing architecture was flawed. The solution is to create a new [[Cloud Function]] that is triggered by file uploads to a GCS bucket. This function will then publish a message to the Pub/Sub topic, which in turn invokes the [[Cloud Run]] service, creating a more robust and explicit workflow `[62:43-65:08]`.
        

## Action Items & Decisions

- **Decision**: To resolve the persistent authentication errors, the team will create and deploy a new [[Cloud Function]] to act as the trigger for the [[Transcription Service]] workflow `[63:09-63:19]`.
    
- **Decision**: For testing purposes, they will temporarily allow unauthenticated invocations on the [[Cloud Run]] service and [[Cloud Function]] to isolate any code-related bugs from permission issues `[81:02-81:53]`.
    
- **Action**: After testing is complete, they will re-enable authentication and ensure the proper [[IAM roles]] are assigned to the correct [[Service Account]] to secure the application `[81:02-81:53]`.
    
- **Action**: Add a step to the project's README file to document the crucial permissions and authentication setup required before deployment `[88:07-88:18]`.
    

## Suggested New Links/Tags

- [[Hugging Face]]
    
- [[Dead-Letter Topic]]
    
- [[Pub/Sub]]
    

## Linked Concepts

- [[CLI]]
    
- [[Cloud Function]]
    
- [[Cloud Run]]
    
- [[Cursor]]
    
- [[GCP]]
    
- [[IAM roles]]
    
- [[Service Account]]
    
- [[Transcription Service]]
    

## #Tags

- #AI
    
- #GCP
    
- #SoftwareDevelopment
    
- #Troubleshooting

zoom16
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1410_ZOOM0016_transcript.txt

==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:03-00:04] SPEAKER_00: Oh
[00:06-00:19] SPEAKER_04: No, you want me to go get some batteries Yeah, I need to I'm gonna do it right now no, I'm gonna do rechargeables
[00:26-00:27] SPEAKER_03: Really
[00:40-00:41] UNKNOWN: Yeah
[00:41-00:47] SPEAKER_04: So there's triple a in there I need it double a for something for the Sink.
[00:47-00:49] SPEAKER_03: Oh, yeah
[00:49-00:56] SPEAKER_04: So I would like something that will do both Or maybe I just get two different chargers. That's fine
[01:01-01:11] SPEAKER_03: So Right Do
[01:11-01:20] SPEAKER_04: you remember how many are in is six yeah, so this this that one has eight like most of These are all eight packs
[01:20-01:24] SPEAKER_03: And they're not adjustable to yeah,
[01:25-01:28] SPEAKER_04: so I'm gonna have to do two different ones which is fine
[01:32-01:32] SPEAKER_03: Yeah,
[01:34-01:46] SPEAKER_04: I'm probably not gonna get one of the ones that I'm probably the charger separate from the batteries Because the good batteries are basically these energizer ones And then I so
[01:46-01:46] UNKNOWN: I
[01:46-01:47] SPEAKER_04: just want the charger
[01:47-01:49] SPEAKER_03: Just get a little review chart.
[01:52-01:53] UNKNOWN: Yeah
[02:03-02:04] SPEAKER_03: I
[02:04-02:27] SPEAKER_04: went back in there and I did I Updated the read me and Pushed to the repository and it was saying we're still troubleshooting the diversation service No
[02:30-02:31] SPEAKER_03: Yeah
[02:32-02:50] SPEAKER_04: the issue is It was it started like it's it it pushed and it was there it and it triggered on Uploading the file it just spun up three instances of cloud run and they all three times out
[02:53-02:55] SPEAKER_03: And we don't know why like and so
[02:57-03:30] SPEAKER_04: The the set of the last thing we're doing is redoing the whole the pie file but to add more logs And so we so that's updated like that's been pushed and everything like that. It's just ready for us to test again I just didn't have time or I didn't go back in there and do it Man the 16 bay charger, I don't want 16 bay charger
[03:32-03:33] SPEAKER_03: Yeah, exactly. It's all
[03:33-03:38] SPEAKER_04: oh, no, this is a double -a triple -a. So so and it's rated well, but $30
[03:40-03:51] SPEAKER_03: But How many? Packs of six trip or double -a's would you have to buy? For that sink that you have to change it every three months Right, so
[03:51-03:53] SPEAKER_04: I'm assuming I'm gonna buy two packs
[03:53-03:57] SPEAKER_03: like to cover that price like how long it's oh, you're right You're right
[03:59-04:06] SPEAKER_04: Hey So What's going
[04:06-04:10] SPEAKER_02: on Oh
[04:21-04:23] SPEAKER_03: And it's got
[04:23-04:47] SPEAKER_04: food like this and the food's good I just made the burgers are legit like they're better than Most restaurants not just McDonald's right like they're better than most restaurants Yeah, that's three dollars It used to be two until literally a week ago the guy was like man you just caught us on the worst day It's like we just raised the prices from two to three. It's like I think it'll be all
[04:47-04:54] SPEAKER_03: right.
[05:01-05:01] UNKNOWN: Yeah Yeah,
[05:01-05:09] SPEAKER_04: yeah they do it in Texas there's several other locations they're not called research it's something else Whatever is that and they look like this I
[05:09-05:11] SPEAKER_03: think Yeah
[05:20-05:27] SPEAKER_04: I mean literally for me for me like Almost 50 year old me like this is like the coolest place of broken air like
[05:40-05:45] SPEAKER_03: Maybe in like Slightly boosier sprouts Sure
[05:45-05:51] SPEAKER_04: Yeah So how's work
[05:51-05:53] UNKNOWN: It's good
[05:54-05:55] SPEAKER_04: I hit the
[05:55-05:56] UNKNOWN: vehicle
[05:56-06:00] SPEAKER_02: About probably three weeks Somewhere from being on the 50 -50
[06:00-06:02] SPEAKER_00: Okay, that's cool
[06:02-06:07] SPEAKER_02: Which I always knew was That was the main reason That's
[06:07-06:07] UNKNOWN: cool
[06:07-06:13] SPEAKER_02: Well maybe they'll take us to the UK now that I've been there for two months Right
[06:14-06:20] SPEAKER_04: We're recording We'll turn it on and off won't work Good luck
[06:25-06:36] SPEAKER_02: But yeah I always had an expectation that I would at some point be able to give it to at least a hybrid if not more Yeah
[06:36-06:36] UNKNOWN: Part
[06:36-06:55] SPEAKER_02: of that is forcing somebody else to do the stuff in the office Right Yeah It's going good I think we're at the point of Like it's behavior change now It's not
[06:56-07:07] SPEAKER_04: But that's That's the magic like in the big scheme of things That's the people The people in the processes are much more challenging than the technology Much more
[07:08-07:48] SPEAKER_02: Ten times You get the process on paper You get people to adhere to that 100 % Which is nice because it's a small company so there's not a lot of people to have to do that with and it's real easy when it doesn't work It was you And here right here is where you messed up Nine times out of ten it's the guy that hired me So I can just look at him and go What you want bro It was you The guy Which is a little tougher Because you own the company You can't tell me nothing You
[07:48-07:52] SPEAKER_04: brought me here to tell you something Which is what I tell you
[07:52-08:07] SPEAKER_02: And then It's also When you've been doing most of it yourself It's hard to kind of let that go For sure Today made the comment Man I've let stuff go I've got more time
[08:07-08:24] SPEAKER_04: Turns out that's how it works Yeah I've never understood that I've never been that guy like micromanaging Like I want my team to do things So I can go home And do you guys feel comfortable Because I'm gonna go Let me know if you need anything That's
[08:24-08:29] SPEAKER_02: right That's right But yeah It's getting better
[08:31-08:32] UNKNOWN: So
[08:32-08:58] SPEAKER_03: we're doing AI stuff And the idea For this one is The initial thing we're doing is We're building a Transcription service So there's ones you can pay for Like 30 bucks a month for like 10 hours And we calculate that it'll take about A dollar and 12 cents To run that same 10 hours on Cloud Run And GCP and all this stuff And so that's the first step
[08:58-08:58] SPEAKER_04: And
[08:58-08:58] UNKNOWN: the models behind
[08:58-08:59] SPEAKER_04: them are open source
[09:00-09:34] SPEAKER_03: Literally the one we're using for transcription Is an open AI one that they just gave away Like have a GitHub repo that we can just get it from So Do that, basically start recording Everything, get transcription Ultimately then you have a bunch of venue Routes you can take from there One is obviously just like a PDF Summary, sends out Everything, here's the bullet point you talked about And it tracks, so I don't know if you've ever used Obsidian It's like the note taking It's got like the brain app Like chart looking thing, whatever It's a really like complex note taking Application that like I'll
[09:34-09:50] SPEAKER_04: show you It makes connections Between your topics So if you take your notes in a way Such a way that it tags Topics and things like that Then it'll go back and makes connections between Any note that's in there Right, so this
[09:50-09:50] SPEAKER_02: is
[09:53-10:01] SPEAKER_03: That's the graph Every little dot is a note That I've taken And they've got subjects in there So it makes the connections And it's like what are all those instruments
[10:02-10:15] SPEAKER_04: Anything that has a common topic It'll put a tie between it And so it's like this mapping That helps you put subjects together You talked about this way back then And it can index
[10:15-10:15] UNKNOWN: What
[10:15-11:07] SPEAKER_03: sucks about Obsidian is You don't take notes that way Better superstructured and well done But if you have an AI That processes a full transcript Breaks it down and knows exactly How it should, then it'll start to build these maps And so That's one output and it's really just like That's why we're not even like business focused Necessarily, it's just like chit chat And have ideas and then let the AI go Hey, you guys keep talking about this For five minutes every other week And it's like specifically Connections you wouldn't have made otherwise It's like what does Yoga have to do with Plano, Texas and this other thing It's like well, you tagged these different These different words were in it So that's one And then ultimately it's what you do with it So one thought that I'm gonna do Is Take that same method of So
[11:07-11:07] UNKNOWN: I
[11:07-11:18] SPEAKER_03: guess the next step is like the full Agent suite, because that's not agents That's not AI, that's machine learning It's fancy as shit, but it's just That So then it's what do
[11:18-11:18] UNKNOWN: you
[11:18-12:15] SPEAKER_03: do with that transcript What do you do with the information So we have this team of agents And we were thinking about it as like Almost a production crew, so ultimately You can make like YouTube videos, podcasts Business pitches, all these different things And one of them Is take this transcription Get it together, do the summary Whatever Another one is like hey, teach me about The Roman Empire between 5 AD and 105 AD And what the kind of Analogy we've been using is getting 80 % of like a dang parlor episode But instead of one episode a year You get one a month, like that type of thing And so Because it can kick those out like that And then the reason I say one a month is because There's still time for human interaction To go and like literally have your hands all up in it And produce this thing Collaboratively with the AI Which you always do Right Otherwise it produces a
[12:15-12:15] UNKNOWN: slot
[12:15-13:16] SPEAKER_03: And you just know You may not know immediately but eventually You'll be like hold on, this whole thing is AI What in the fuck is going on here But, so the agents Specifically, we're thinking of like a team So instead of having the general ChatGP team or whatever, you have A specific one that has access To an AI We're going to use Gemini for now We got Google's, and also some They call tools, and so it might be Google Calendar or these Anything that has API access Which is basically everything Is going to have a tool Available, that just is what it is, like it's not Necessarily, some people might be resistant to that They're not going to be around or they're Going to have MCP, all this other stuff Which is going to happen Right, so basically an agent Starts to become this team, right, and so you have Thinking about it like a production staff You have the director, and even like a team Picker, so we have like a hundred agents We go here's the job, pick the team you need A coach or a leader And then you have like an editor And a story writer,
[13:16-13:16] UNKNOWN: and
[13:16-13:32] SPEAKER_03: a scripting And all this different stuff And they come together, and one of the cool Things about agents is they can Decide that they're not right for the job So that it's called like delegation And it's allowed delegation And it can send it back out and go like I know this agent is over here and it can do it
[13:32-13:32] UNKNOWN: And
[13:32-13:49] SPEAKER_03: you can see them kind of working together And then you get this final output And then that's where the human Layer comes in and you do whatever you're doing with it And send it back And it really becomes like magic It would be interesting to see if the agents Ever become a little bit humanized And be like,
[13:49-13:49] UNKNOWN: I
[13:49-13:50] SPEAKER_03: don't want to
[13:50-13:50] UNKNOWN: do
[13:50-14:08] SPEAKER_03: this Maybe, yeah, I'm tired of doing this I don't feel like doing this I'm not good enough They talked about doing a Anthropics specifically is talking about giving the agents Or the AIs the ability To say no and not like I'm not Allowed to do that but like you're being mean And I'm not doing this
[14:08-14:18] SPEAKER_04: For real Interacting with humans that hey if you're being Like well no, I'm not working with you But I think,
[14:18-14:18] UNKNOWN: I
[14:18-14:29] SPEAKER_04: mean so that description Is obviously for like a Production, like to make a YouTube video or something Like that, but I think the Power of agents is that you can Create these personas and anything that You
[14:29-14:29] UNKNOWN: can
[14:29-15:17] SPEAKER_04: do on a computer effectively Anything, but anything that has an API Effectively, most things you can do on a computer You can assign an agent with a persona And they literally keep that Persona and they understand how to use Tools whether it be calendars Or anything like that and how to talk to other agents And so really your ability To design a system to solve a complex Problem is It's in English, so it's not like Hey I got to code up this thing Like it is, hey well take this Complex problem, break it down into these chunks And you do this, you do this, you do this, and there's a leader And here's the workflow of how to get through it And you can process very complex Problems and so these Tools have only been around for a few Months, so really I see it or we see it as This like you know the next Race right, you
[15:17-15:17] UNKNOWN: know
[15:17-15:17] SPEAKER_04: just like
[15:17-15:17] UNKNOWN: The
[15:17-15:32] SPEAKER_04: dot com, yeah and so really The question is Can we find a problem that is Suitable for being solved with agents That is to solve it better and cheaper Than it could be before And there's also a place for For
[15:32-15:48] SPEAKER_03: sure, for in between Of little AI hustles where you go to Like your boss And go like hey can I solve the things For, is it worth ten grand For me to solve these few things that you can do Like all the time, accounting is
[15:48-15:52] SPEAKER_04: Very easy Yeah we're talking about like make your own quick books Because you
[15:52-16:27] SPEAKER_03: can't, like that's where you get to But what like I'm on a bunch of reddit Communities and what not On AI agents specifically And they're talking about like Find a company, find the thing that you can solve That standard like Self driven whatever shit But they go Like you can get somebody To wear a microphone all day or Video or like because one of the Hardest things to do is not solving Your problem, it's getting you to tell me what your fucking Problem is, right, and because you don't Really see it as a problem Because you're not thinking of that level of efficiency You're just
[16:27-16:29] SPEAKER_02: getting through your day Right,
[16:29-16:50] SPEAKER_03: so But I think those are little like Like I said almost side hustles that you can get Depending on who you're approaching I mean you approach like HMP And get like a contract And like some monthly stipend type stuff coming in But also you can In the process build this powerful tool That ultimately you're looking to get purchased Because the big players with the
[16:50-16:50] UNKNOWN: That
[16:50-16:53] SPEAKER_03: own the models are the ones that are going to like There's going
[16:53-16:53] UNKNOWN: to
[16:53-17:03] SPEAKER_03: be three companies Let's be real Though They're going to look to buy up all those services That's what Google did when they won internet too
[17:04-17:12] SPEAKER_02: It's effectively Eliminating competition but Eliminating in a way that everybody Nobody's saying no to For sure
[17:12-17:22] SPEAKER_03: if All of those founders had told you no And kept grinding It would probably be a slightly better experience overall But they'd have to be in that grind mode forever And they're not going to do
[17:22-17:22] UNKNOWN: that You
[17:22-17:22] SPEAKER_03: give
[17:22-17:25] SPEAKER_04: me millions of dollars and I can stop I
[17:25-17:25] SPEAKER_02: can stop doing
[17:25-17:28] SPEAKER_03: that I can go do whatever I
[17:28-17:43] SPEAKER_02: have your problem Estimates So estimates for Contracting Specifically Not quite so much roofing But even roofing part of it That's what
[17:43-17:43] UNKNOWN: you
[17:43-17:54] SPEAKER_02: work for That's what they do I work for Roofing Everything around an estimate Is In the owners brain
[17:54-17:57] SPEAKER_00: Or it's in QuickBooks We've got
[17:57-18:02] SPEAKER_02: a ton of data In our QuickBooks system on what we've built customers For years and years
[18:02-18:02] UNKNOWN: and
[18:02-18:08] SPEAKER_02: years That I just have that time to Dig it out and get a database for it
[18:08-18:08] SPEAKER_04: So
[18:08-18:08] UNKNOWN: There you
[18:08-18:09] SPEAKER_02: go
[18:09-18:16] SPEAKER_04: So how do you access the data That's in QuickBooks What format is it in
[18:16-18:17] SPEAKER_02: Is
[18:17-18:17] SPEAKER_03: there an
[18:17-18:18] SPEAKER_04: export
[18:18-18:18] SPEAKER_03: to something
[18:18-18:21] SPEAKER_02: I can look at that Right
[18:21-18:21] UNKNOWN: now
[18:23-18:24] SPEAKER_02: It may
[18:24-18:35] SPEAKER_04: be We can read PDF PDF agents If it's in almost any source As long as it's relatively Accessible or
[18:35-18:35] UNKNOWN: scalable
[18:35-18:37] SPEAKER_04: So point it at that and look at all
[18:37-18:37] UNKNOWN: of
[18:37-18:40] SPEAKER_04: these things You can drop them all If you can export everything
[18:40-18:40] UNKNOWN: If you
[18:40-18:51] SPEAKER_04: can put it in a bucket or a drive Or something like that That's one of the sources You can say you have access to everything in there Read all of it And now you know
[18:51-18:59] SPEAKER_03: That makes me think of a few other things we talked about This was one of Alex's ideas In the past but like the old lawyer in your pocket When you're
[18:59-18:59] UNKNOWN: having
[18:59-19:03] SPEAKER_03: interaction with a cop It's like well I'm turning this on And it's going
[19:03-19:03] UNKNOWN: to
[19:03-19:24] SPEAKER_03: tell me what I need to do Maybe it'll make this great But if you're a dickhead you get sued So One of those and then I thought Amazon ads, optimization Would be huge but it's kind of like You can only really make that a personal tool Because it kind of defeats itself if it gets Wide spread enough or Amazon goes like Fuck off And you're like well I mean
[19:24-19:24] UNKNOWN: I
[19:24-19:25] SPEAKER_03: can't say no
[19:25-19:34] SPEAKER_04: Who'd sue me, I didn't have the money for that Have you had any exposure To agents or this thought process before? What do you think? So conceptually I like it
[19:38-19:44] UNKNOWN: The fact that they call it agents Is that it is Effectively
[19:45-20:00] SPEAKER_03: Replacing Oh for sure Yeah, right I mean that is what's happening Oh I know 100 % There's no reason to get all worked up about it It's going to cost certain, that is what it is You might as well get yours while you can
[20:00-20:18] SPEAKER_04: I'm very much working on two different projects Internally to get rid of my job I'm very much working on that Like probably not my job because my level Will be the ones you keep To manage the agents Until they get the directors Exactly Yeah
[20:18-20:29] SPEAKER_03: that's the adorable part that all these fucking idiots Don't realize is like You know doctors are like on the first chopping block right? It's not all these Blue collar workers that you guys Look down upon No
[20:29-20:38] SPEAKER_04: because that's work you got to keep doing People at the data center, those are the ones that are going to stay Right because you can't automate until there's robots And that's, we're years away from that
[20:38-20:43] SPEAKER_03: The doctors are already worse Than the agents You literally only look stuff up and it's better at that I
[20:43-20:49] SPEAKER_04: think legal is the thing, the Embediment to like actually giving medical Advice and those things Yeah but you say
[20:49-20:52] SPEAKER_03: hey here's my app, use it It's not medical
[20:52-20:55] SPEAKER_04: This is for entertainment purposes only
[20:55-21:02] SPEAKER_02: Well it's WebD Right exactly The ultimate
[21:02-21:07] SPEAKER_03: Line there would be I think prescriptions But don't even get me Fucking started You don't need
[21:07-21:08] SPEAKER_04: it
[21:08-21:19] SPEAKER_02: It reminds me of you watched the documentary On that That lady that did the little blood Yes I did Mel watched it
[21:20-21:23] SPEAKER_04: She watches all Of that stuff but
[21:23-21:42] SPEAKER_02: yes Where they launched the With a partnership with BlogWings And launched like in person Like machines that tested They didn't launch machines, machines didn't work So they launched their own personal ones And then people taking blood But it was like Here's what you have It's like immediate results yeah
[21:42-22:05] SPEAKER_04: Very much I think the answer For medical is like the ring And watch thing like record All of your metrics Forever like every day And even maybe to the next level Of whatever the next level of sensors or take a blood Test once a week and Feed it to the thing, feed it to the machine And it will Diagnose you, it will
[22:05-22:25] SPEAKER_02: But it all comes back to With this stuff There's three companies at the end of it The reason she was So adamant outside of her shoes Was that there was only two Blood testing companies in the United States so they got monopoly They charge whatever the hell they want That doesn't mean you can tell
[22:25-22:25] UNKNOWN: How
[22:25-22:44] SPEAKER_02: much of people you know with their blood But But yeah It's intriguing It's inevitable The movie up is for People are just going to ride around On stuff and watch Scrummage and that's what their lives going to be Yeah for
[22:44-23:05] SPEAKER_04: sure I'm interested I feel like in some ways I may be too close To it but or you know the answer Is looking for problems That can be solved That are suitable for Agents and that is Complex multi step problems That are typically done by a team of people Like as you're replacing it with a team of Agents
[23:06-23:18] SPEAKER_03: Imagine we had this for every medical meeting We had 300 hours of stuff It's like what are those problems We probably talked about some that we could apply agents to In the past
[23:18-23:34] SPEAKER_04: Go back and look at all of the things we've talked about And find the give me a list of things we've already talked about That we're already close to That's suitable for solving with agents Like that's an example of like one of the reasons Why we just want to just record everything And you know We're
[23:34-23:34] UNKNOWN: recording
[23:34-23:51] SPEAKER_04: we're working in the mornings and recording Back and forth conversations And then cataloging into this brain And then it's just there And then forever And maybe even go back and look at all of our notes That we took forever and we took pretty good notes And you know add those to the brain And then just
[23:52-23:54] SPEAKER_02: Now just go in and read them
[23:54-23:55] SPEAKER_03: You don't even need that because the
[23:55-23:55] UNKNOWN: notes
[23:55-24:17] SPEAKER_03: They can do the same thing with the notes Yeah it can do that too There's models now that can take video And so like they're more expensive Or require more compute They're free like whisper I think I don't know that it does video but some of them do And yeah it's just a matter of Compute but I don't know that we need it right now Because that video track will have an audio Track with it Right you
[24:17-24:18] SPEAKER_04: just take the audio
[24:20-24:35] SPEAKER_02: I think Like you said legislation is a big problem As far as Eliminating some of this stuff And God knows our government doesn't want to let go of stuff No It's amazing
[24:35-24:35] UNKNOWN: It's
[24:35-24:45] SPEAKER_02: amazing So I think finding Things like that's why I mean I'm in it right now but I think this is A good problem there's
[24:45-24:45] UNKNOWN: nothing
[24:46-24:53] SPEAKER_02: Proprietary The one thing that I'm really struggling with On how to be able to Like if somebody calls and says hey I need
[24:53-24:53] UNKNOWN: I
[24:53-25:12] SPEAKER_02: need my house paid for how much is it going to cost I'll have The guy call you back whenever I see him again But I know That information exists out there We've done, they've done hundreds Of handy jobs so it's just a matter Of how you form that And What's
[25:12-25:12] UNKNOWN: the
[25:12-25:16] SPEAKER_02: whole you think of Like just get a database My guess
[25:16-25:39] SPEAKER_04: is You could probably do an internet search For that address Look at what's on like Zillow Or Realtor .com And how many rooms And I bet you can estimate All of that Just based off of the information that's publicly available On your house that you don't know Well maybe you know it's there but people forget Like hey there's pictures of your house before you bought
[25:39-25:39] SPEAKER_00: it
[25:39-25:54] SPEAKER_04: Or the last owner Like there's all that information out there I can go look at it And I can index all that stuff and go look at it And I can give you an estimate already Tell me which rooms you want Because I know what your house looks like Once you give me your address Yeah
[25:57-26:03] SPEAKER_03: Basically eliminating The real estate agent job Was another thing I think that's a relatively easy one
[26:03-26:03] UNKNOWN: too For sale
[26:03-26:19] SPEAKER_03: by owner basically and just get around all the bullshit You don't even need the MLS listings Because you can just have people act like And the agents Talk to each other in the background Come up with a deal and pitch it It's just like a regular person real estate agent But
[26:19-26:38] SPEAKER_04: even the paperwork and stuff like that That one's perfect Complex multi -step process Normally performed by a team of a group of people But easy And the stuff is not that hard We are already, people are already frustrated Like I gotta pay you all that money to do To fill out that paperwork That I could do myself Yeah
[26:38-26:38] UNKNOWN: I'll
[26:38-26:39] SPEAKER_04: get
[26:39-26:40] SPEAKER_01: it
[26:43-26:48] SPEAKER_02: But yeah I can pull information Yeah
[26:48-26:53] SPEAKER_04: I would love to Get your thoughts in or work on this Problem specifically
[26:53-26:59] SPEAKER_02: Because then it becomes For whoever takes over my job at the end of this year It might not be a
[26:59-26:59] UNKNOWN: person
[26:59-27:16] SPEAKER_02: It may be an agent Or an office lady All she's gotta do is go in Know how to talk to the agent They want this done Here's their address Give me an address You can always put some legalese in there To say it's got a plus minus 20 % Or
[27:16-27:16] UNKNOWN: something
[27:16-27:20] SPEAKER_02: like that But based on our history This is what we know we've
[27:20-27:20] UNKNOWN: done
[27:20-27:21] SPEAKER_02: it for
[27:21-27:42] SPEAKER_03: And you can have some In the background you can even do some Either exponential Not comparing the older stuff to inflation Or whatever or just have some Boundaries of like well these are Literally like once you build The agent you can then start to have Hey man we can set the amounts of like Here's the max that we for the least we can make And here's the most we can
[27:42-27:58] SPEAKER_04: we've ever charged That's literally one of the two projects That I'm working on is an estimation tool Is an agent based estimation tool That takes information like hey Everything the customer says and everything about Their environment and it's this process That takes normally 4 to 6 weeks like Hey we're going
[27:58-27:58] UNKNOWN: to
[27:58-28:05] SPEAKER_04: do it instantly Like hey based on what you're asking us to do We estimate it's going to cost this much In literally 30 seconds
[28:06-28:21] SPEAKER_02: I think that's That would be the biggest Where I'm at right now that would be the biggest thing And then if you wanted to build some Layers into it you could include Like scheduling tools And things like that or scheduling agents Where once they accept the bid They'll
[28:21-28:21] UNKNOWN: be
[28:21-28:30] SPEAKER_02: like okay well here's the next And that's definitely easy As long as you've already got a calendar If you have a calendar service You'd have to pull in
[28:30-28:30] UNKNOWN: a
[28:30-28:36] SPEAKER_02: weather service Yeah That's a factor for us That's interesting This
[28:36-28:52] SPEAKER_03: is an interesting problem There's also a natural Progression where you approach Ryan In whatever the fuck they are Now like Home Depot That's an end at Home Depot potentially We solve the actual problem that's who we sell the tool
[28:52-29:20] SPEAKER_04: to I need to talk to you about the project That I just got on it was the one that's like Whatever 300 million hits per second I'm not going to talk about it while I'm out here But it's gigantic I think you'd be interested It's unrelated to anything we're talking about It's crazy it's an internal project Basically They use PSO Our cloud services To work on an internal project for another team And so it's cool
[29:23-29:51] SPEAKER_03: But yeah that's where I think Basically we need to get back to In getting together That's where the idea is We don't even have to realize they're there when they happen You just have to get hours in basically Yeah just record Effectively and that's our strategy I mentioned to Harley I think he's interesting And just like Especially like it's not a business We're not bringing the crew in I mentioned to CJ as well The
[29:51-29:51] UNKNOWN: schedule
[29:51-30:05] SPEAKER_03: is a little rough I think if we could get a group big enough That you can always pretty much Know what's happening on the regular time Or whatever So you don't have to ask If this is the spot it's not going to be in like 3 weeks Right because it's
[30:05-30:05] UNKNOWN: going
[30:05-30:05] SPEAKER_03: to be
[30:05-30:05] UNKNOWN: freaking
[30:05-30:07] SPEAKER_03: hot right now Whatever
[30:07-30:18] SPEAKER_04: the spot is It's like you know somebody is going to be in there But it's not real big And there's quiet in there People are just kind of chilling out watching TV Yeah exactly
[30:19-30:25] SPEAKER_03: But that type of thing And just like you're more likely to get different perspectives On different angles and things like that
[30:25-30:25] UNKNOWN: And
[30:25-30:35] SPEAKER_03: see what happens almost Like it would be cool if a business comes out of it That's great if it doesn't We'll probably get other value out of it On some like hippie philosophical group Yeah
[30:35-30:43] SPEAKER_04: I mean I think just getting together As a group of guys Brings value to me Just that alone With nothing else
[30:43-30:45] SPEAKER_03: I enjoyed those times I did
[30:45-30:45] UNKNOWN: Yeah
[30:45-30:51] SPEAKER_03: and then like we'd sit there And out of nowhere Be like holy shit it's been 3 hours Yeah
[30:54-30:59] SPEAKER_02: On a Just to get back to business real quick What's going on with Muddy Toes?
[31:00-31:06] SPEAKER_03: Alex is finishing His house still And like ultimately going to get a loan off of that And he's actively doing it Yeah
[31:06-31:12] SPEAKER_04: like it's coming along It's just much slower than he thought it would be But he's working on it
[31:12-31:12] UNKNOWN: I
[31:12-31:13] SPEAKER_04: think he's almost done
[31:13-31:13] SPEAKER_03: Yeah
[31:14-31:16] SPEAKER_04: And that's going to be the basis of the money
[31:18-31:20] SPEAKER_02: Yeah He's taking care of Grant I assume
[31:20-31:33] SPEAKER_03: And Grant wants to not get that money back Like he wants something to be done with it Basically so Still in that space like if we wanted to Get back into market stuff I don't trust it for a second It's
[31:33-31:33] UNKNOWN: an
[31:33-31:35] SPEAKER_03: abstraction tool I was going to ask you if
[31:35-31:54] SPEAKER_04: you were doing anything in the market But I think the To finish this out The nightmare scenario did not happen Where Grant was like what? Give me my money back did not happen So I think he's been up front with him Like hey here's where we're at Here's what's going on As long as you keep paying me my money I'm
[31:54-31:54] UNKNOWN: good
[31:54-31:57] SPEAKER_04: I'll give you back whenever you want to It's
[31:57-32:14] SPEAKER_03: a cash producing Emergency fund for him That he will spend on If he has it I think is the vibe I get He's still in his 20's right? That's a very mature decision to make To just not I can't have it And also recognize
[32:14-32:19] SPEAKER_02: that You give me that amount of cash I'm going to do something stupid It's going to be so much fun It's going
[32:19-32:19] UNKNOWN: to be so long
[32:19-32:20] SPEAKER_02: and then I'm going
[32:20-32:20] UNKNOWN: to
[32:20-32:25] SPEAKER_02: be so bummed out Okay I just I hadn't heard anything on that Yeah he
[32:25-32:27] SPEAKER_03: talked to me whenever The last
[32:27-32:33] SPEAKER_02: time we were here and it was early So Grant's staying in And the main thing is just getting mom and dad paid back
[32:33-32:53] SPEAKER_03: Yeah exactly Is it doing well? I think he has pivoted to wholesale And he's basically going the Organic Trying to get into courses route But he's got some kid that's buying them for him At like 6 or 7 cents Higher than he's full scope paying That having to do all the packaging And all that stuff
[32:53-33:11] SPEAKER_04: so yeah I think he's pivoted into that wholesale model Which we've toyed with forever And he's got the math problem of like X balls equals bills paid True Right and the reason that we didn't do it is because we were carrying Salaries off of it But if you eliminate that or just go down to one cent You can do it I think
[33:11-33:11] UNKNOWN: he's
[33:11-33:14] SPEAKER_03: still doing get go stuff like Hustling to pay himself
[33:15-33:27] SPEAKER_02: I think he was overspending Amazon ads Which Ultimately hurt his bottom line But it's simpler It's definitely a much simpler business to do it also For
[33:27-33:39] SPEAKER_03: sure Basically he runs them through the wash, picks out cuts and ranges Which he can then sell And then bags them all up in the big white sac And
[33:39-33:39] UNKNOWN: Somebody
[33:39-33:45] SPEAKER_03: in Texas And I think Oh yeah he said that kid is shipping overseas
[33:45-33:53] SPEAKER_04: Which is like how are you doing that How are you making money Sending super heavy Bags of golf balls to Europe
[33:53-34:08] SPEAKER_03: I mean it doesn't pack Fairly efficiently That's way way But on ships you probably I don't know but he's I think Alex said he's sending them by the container So on container ships Is what he's doing He's got some buyer They're
[34:08-34:21] SPEAKER_02: probably The whole Tariff thing right now It's hard to make any sense of it Maybe they're getting billed Tariffed, maybe they're not Who knows, it's a special
[34:21-34:24] SPEAKER_03: Trump really likes golf courses so there's no tariffs on
[34:24-34:24] UNKNOWN: golf Right
[34:24-34:26] SPEAKER_03: exactly, we gotta decide We're not doing that
[34:26-34:34] SPEAKER_02: But yeah prior to this Started the Europe Shipping overseas business As long as they're paying the price I
[34:34-34:35] SPEAKER_04: don't
[34:35-34:35] UNKNOWN: care,
[34:35-34:35] SPEAKER_04: you're just
[34:35-34:35] UNKNOWN: keeping
[34:35-34:37] SPEAKER_04: them at your house As
[34:37-34:37] UNKNOWN: long
[34:37-34:39] SPEAKER_04: as you buy them And he
[34:39-34:44] SPEAKER_03: said he had a commitment From him for like several hundred thousand On the year I think Yeah
[34:44-34:44] UNKNOWN: it
[34:44-34:46] SPEAKER_04: was a big number,
[34:46-34:46] UNKNOWN: it
[34:46-34:48] SPEAKER_04: was like 450 Something like that
[34:48-35:12] SPEAKER_03: So he's making it work In like overall The shore up right there Oh that door back there Yeah that's interesting To have a Project that is That can be like This is a freebie Like hey we built it for you, let us know
[35:12-35:17] SPEAKER_04: how it works What do you think about the model for that So one of the things, I was talking to Linda One of the things we talked about all
[35:17-35:17] UNKNOWN: the
[35:17-35:23] SPEAKER_04: time is My work life and stuff like that Because in the big scheme of things that's probably The thing,
[35:23-35:23] UNKNOWN: or
[35:23-35:47] SPEAKER_04: at least day to day Or now at least that brings me the most Stressors And she was like well have you thought about Doing consulting, right? And I don't know What do you think about that? It's like that's almost That, it's like hey we can build this application And like I said turn it over to whoever office lady Right, but office lady Can't fix it, if it breaks Right, so there's this even if You build it and give it away for free, it's not Going to operate forever
[35:47-35:51] SPEAKER_03: It's a pretty standard model, one of the things in reddit is like You
[35:51-35:51] UNKNOWN: buy
[35:51-36:20] SPEAKER_03: it and then I'm your IT servicing or whatever And it's a monthly, even if it's Just I'm available and you don't need me, you still pay Right, of course Like a retainer effectively And it's like X per month and then you can start to build The QuickBooks model of like well and also I'll run it for you for this much money And also I'll start, I'll build this other thing And there's these new features and occasionally Yeah you send out the email like hey we do this now Do you want to add another $10 a month Right, exactly And that That
[36:20-36:20] UNKNOWN: is
[36:20-36:23] SPEAKER_03: the business model That thing I
[36:23-36:23] UNKNOWN: think
[36:24-36:35] SPEAKER_03: If we were to build this specific One for that company I think it would be Like a resume builder, it's like hey here's this No I agree And then we've like yeah we've deployed And we sold a model to some writer
[36:35-37:02] SPEAKER_04: No I agree but like extrapolating Down the road 5 or 10 times Of like hey what's the business model for Building apps for, I mean there is a Market just for solving problems Because rather than searching for a problem That's large enough to apply This concept to Broadly Well then the other perspective Is search for people Who have smaller problems and I'll solve Your problem for you if you pay me
[37:02-37:16] SPEAKER_03: Yeah and I think that's where Like that's potentially beneficial Like as far as the resume goes It's like hey we have agents in the field That we've built, people are using Get some quotes from them Like optimize this by this And
[37:16-37:16] UNKNOWN: all
[37:16-37:19] SPEAKER_03: that stuff And then just keep building
[37:19-37:41] SPEAKER_02: Completely unrelated to any of this Because I watched it last night On a French's mustard bottle There's a little tab on the back So you know they've got that little Hinge where you open it right below it There'll be a little nub For you to snap the cap on Fair enough We were watching a YouTube video about Things you didn't know
[37:41-37:41] UNKNOWN: It
[37:41-37:44] SPEAKER_02: did and I was like Huh I'm
[37:44-37:44] UNKNOWN: gonna
[37:44-37:46] SPEAKER_00: go check
[37:46-37:48] SPEAKER_03: that out That's funny I
[37:48-37:51] UNKNOWN: don't know
[37:51-37:51] SPEAKER_00: why
[37:51-37:51] UNKNOWN: that's
[37:51-37:52] SPEAKER_03: there I mean
[37:52-37:52] UNKNOWN: I
[37:52-37:53] SPEAKER_03: know
[37:53-38:01] SPEAKER_02: why it's there It's interesting Weirdly written Going back to agents So do you know
[38:02-38:03] UNKNOWN: If
[38:03-38:08] SPEAKER_02: Platforms like Salesforce And stuff like that are using Very much,
[38:09-38:11] SPEAKER_04: everybody's Basically
[38:11-38:14] SPEAKER_02: all customer service I was thinking CRM Yeah
[38:15-38:40] SPEAKER_04: Very much Every big company is looking At doing this We're like Yes we will help you build Anything you want So I think just like everything Else the answer is finding This market that's Small enough that it doesn't interest the big guys But it's big enough To interest us It's
[38:40-38:46] SPEAKER_03: big enough to interest them Not enough for them to build it They're just gonna wait for it to be there And go mine
[38:46-39:18] SPEAKER_02: Home Depot and SRS Construction Is intriguing To me in this Because I showed I was like Jeremy I'm gonna build this I'm just gonna build this little app for us On our phones It was just a glide app And spreadsheet He was like that's cool And so he's not Unique in that kind of space That's
[39:18-39:33] SPEAKER_03: the thing Talking about consulting Just general consulting but we're the Super experts at anything you go possibly Because we have AI And yeah that's Going and finding people solving their Problems kind of hustling it
[39:33-39:45] SPEAKER_04: out What I told Linda about that Is like well I would definitely have to quit my job Or I'd be in jeopardy That is literally what I do The job that I do That is it
[39:45-40:02] SPEAKER_03: Yeah so then But at some point But we just gotta be There's probably a space there Especially if we're using Gemini There's certainly a space there We're driving business To your business That's what we would be doing
[40:02-40:15] SPEAKER_04: I think if it came down and they were really Looking at me I don't know that that would ever happen Unless you got big enough or whatever It would definitely cross the line But if it's like you're staying below the radar
[40:16-40:44] SPEAKER_03: Yeah Generally Build a few of those But I think the bigger picture Is this bigger Problem solving agent Slash personal assistant Slash It's like a hundred different That you're able to focus on one task That's like the processing And you're able to just Collaborate with them so it really is like What problem can we solve And then also we could straight up come up
[40:44-40:44] UNKNOWN: with
[40:44-40:47] SPEAKER_03: production Right It's
[40:47-40:57] SPEAKER_04: never coming back I legitimately want to try To make a movie Even if it's a small like a 10 minute movie I legitimately want to fix
[40:58-40:59] SPEAKER_03: That's
[40:59-40:59] UNKNOWN: much
[40:59-41:05] SPEAKER_03: more challenging I will release it for free No one can sue me They can have 100 % of the problem That
[41:05-41:11] SPEAKER_02: is an interesting problem Go find a book Check the book out of the library
[41:13-41:29] SPEAKER_03: 100 % And then yeah with a little bit Of human editing I mean it takes A year to make a movie Right now And 10 million dollars Fully like idea to theater A year is pretty fast
[41:29-41:29] UNKNOWN: A month
[41:29-41:31] SPEAKER_04: and a thousand
[41:31-41:47] SPEAKER_03: dollars Yeah And then it's like okay here's that So make a few like 10 minute short films Show your creativity Flex those muscles a little And then yeah go like Hollywood's dead bro You can make it is the thing And then release it
[41:50-41:51] SPEAKER_02: For what
[41:53-41:55] SPEAKER_01: People are getting sued every day For all kinds of stuff
[41:55-41:55] UNKNOWN: Bring
[41:55-41:57] SPEAKER_01: the smoke dude I'm ready to
[41:57-42:03] SPEAKER_02: go But anyway I like Did you ever see the
[42:04-42:04] UNKNOWN: I
[42:04-42:16] SPEAKER_02: don't know if I told you guys about the Little YouTube clip Or just video that was Going around about where somebody took One of Eminem's songs And pulled a word out of movies I saw
[42:16-42:20] SPEAKER_04: it like he showed it to me like Last week I was like that is one of the coolest things That
[42:20-42:20] UNKNOWN: I've
[42:20-42:25] SPEAKER_04: ever seen like you didn't like I was like I stopped after like a minute This is
[42:25-42:25] UNKNOWN: the
[42:25-42:39] SPEAKER_04: coolest thing I've ever seen In my life and it was Also created from the perspective Of the movie clips that it took And these were all classic Movies and like classic scenes Yeah it was fantastic I loved it
[42:39-42:52] SPEAKER_02: I like the creativity After a minute it's like I get what you're doing But I mean As you think about doing a Movie with agents There's a
[42:52-42:52] UNKNOWN: whole bunch
[42:52-42:53] SPEAKER_02: of
[42:53-42:53] UNKNOWN: source
[42:53-42:56] SPEAKER_02: stuff out there Where you can pull scenes in I don't know if you've seen
[42:56-43:00] SPEAKER_03: the new Google stuff But you can make like they can't sue you Because this
[43:00-43:00] UNKNOWN: is
[43:00-43:01] SPEAKER_03: the
[43:01-43:01] UNKNOWN: new
[43:01-43:10] SPEAKER_03: cushion that I make Hold that We'll talk about what you're doing with Markets Do you want
[43:10-43:10] UNKNOWN: anything to tell us
[43:10-43:31] SPEAKER_03: It's not using your characters if they are AI changed them just enough percentage That your rules say it's okay Like all that stuff I mean if you're just taking a book That's one thing but you can write a story Collaboratively with AI And I've read all the best stories And basically they're all the same heroes Journey so It's not complicated these creatives out here Are
[43:31-43:31] UNKNOWN: fucking
[43:31-43:50] SPEAKER_03: not impressive It's the adage There are no Unique ideas in the war People talk about like oh he stole that Chord progression No he didn't It's been in a thousand other songs you have Before the one you're referencing it That it was stolen from
[43:51-43:58] SPEAKER_02: They got videos like that where the guys will play the same chord And they'll sing 20 different songs And you're like well they got it There's no
[43:58-44:19] SPEAKER_03: new ideas bro Shakespeare wasn't a genius He said the same shit From the epic of Gilgamesh So that's where like That's why I say Hollywood's dead because You might have the same Studios Existing and making content But they're going to be like three person companies Well that's
[44:19-44:23] SPEAKER_02: why I like that idea Because you make a few of those And then you go to Hollywood and go here you don't have
[44:23-44:23] UNKNOWN: to
[44:23-44:25] SPEAKER_02: come up with it Buy this from
[44:25-44:51] SPEAKER_03: us Right and at that point you're buying like Here's my three actors that are kind of popping In the zeitgeist and you can have them They're yours now And that's going to be a thing I think Chalamet might be the last one Like the last big big one Because I mean who's going to pay anybody 10 million dollars When I can pay You can pay me a thousand dollars and have my person That everyone knows already And they'll act for you however you want
[44:51-44:56] SPEAKER_02: Yeah, screen actors Gil Drivers Gil, all those things that go on strike
[44:56-45:13] SPEAKER_03: All the unions There's too much infrastructure in Hollywood For it to continue that's why I say like Even if those companies Are still, they're those companies in name only Because the infrastructure of like literal Physical buildings but also the unions And all that bullshit You can't go turn on lights if you're not a member of the lighting union
[45:13-45:13] UNKNOWN: Here's
[45:13-45:38] SPEAKER_03: the other variable That Drives you mad is There's still art Oh for sure but this is given the creative The creatives don't have to go through the process Of the political bullshit that you have to get To get your script made You can sit down with an AI studio At the very least And that's going to be the thing And hey You can make it and take 90 % of Because it's not going
[45:38-45:38] UNKNOWN: to
[45:38-46:04] SPEAKER_03: be that much profit either That's the thing, people can make their own So But it's going to be like the era Of the creatives like that's going to be the art And all these motherfuckers Talking about like shot direction Being a fucker, get out of my face I can watch an 8k Video on YouTube that looks Better than any bullshit you did And got paid a hundred million dollars for it Well, I
[46:04-46:21] SPEAKER_02: remember Ten years ago I think it was When they came out with the Apple's top How their camera did more Than what your eye could see And I was like Yeah, what up I mean, most people are like, oh it's going to be great And I'm like, you can't see it It's a
[46:21-46:24] SPEAKER_03: cool technological achievement I suppose But like,
[46:25-46:25] UNKNOWN: you're
[46:25-46:28] SPEAKER_03: missing with your bullshit But yeah The picture's not going
[46:28-46:28] UNKNOWN: to
[46:28-46:51] SPEAKER_03: look any better than what I have Yeah And I think it would be cool To just even That project specifically is like Even if it makes no money We can just make like Kyla and Jordy and Shiloh The comic And it's this big like super well done production It's like Even if a hundred people watch it ever It's like, well, it didn't take that long to make
[46:52-46:56] SPEAKER_02: YouTube videos are out there To get 20 views And
[46:56-47:02] SPEAKER_03: they're out there Then the market will speak And not that you're
[47:02-47:02] UNKNOWN: going to
[47:02-47:13] SPEAKER_03: make a bunch of money But like your work will be out there And it will be appreciated on whatever Artistic level that is So I think that's probably worthwhile To throw some time and energy at
[47:17-47:18] UNKNOWN: To
[47:18-47:19] SPEAKER_03: me Okay
[47:22-47:26] SPEAKER_02: So what's your Viewpoint of the match up with Indiana
[47:27-47:55] SPEAKER_04: I don't know very much about Indiana, I don't think I've watched them play Once, I've only seen highlights But in general Both my perception And what I've read is They're young, they run And their good defense is good So basically they're a mini version of us Which means it's a problem They match up very well with us And that's how upsets happen That on paper They're okay And they've
[47:55-47:55] UNKNOWN: played
[47:55-47:56] SPEAKER_04: beyond
[47:56-47:58] SPEAKER_02: their
[47:59-48:17] SPEAKER_04: It's fine They've played beyond their means Or their average Already, to get to where they're at They're surprising, they're a four seed So I'm not that low, but they've done well And so I'm a little concerned because they match so well And I would have Preferred to play the Knicks
[48:19-48:22] SPEAKER_01: You fired their coach today Right, exactly, I saw
[48:22-48:32] SPEAKER_04: that But in general, I feel like We have the best Record in the league for a reason And Yeah,
[48:32-48:32] UNKNOWN: I
[48:32-48:36] SPEAKER_04: think so And if we just come to play and be Focused
[48:38-48:49] SPEAKER_02: And it's seven games Two teams that play the same way And I also Because Stephanie and I were talking about it When the conference finals got set I was like, they're just like us I
[48:49-48:49] UNKNOWN: mean,
[48:49-48:51] SPEAKER_02: the crowd is just like our crowd
[48:51-49:53] SPEAKER_04: If you look at it They're very similar to us Midwest teams, small market They're like many us NBA hates you Exactly, I literally watched Adam Silver was on Some talk show earlier today And was talking about this He's saying the words Of course, we don't care who goes In fact, it's my job To convince everybody To watch And the analogy He made was, hey, if the Steelers And I forget the other team Whoever, some other small team And everybody would be Ecstatic and it's like we're not Up to the level of the NFL yet But the small markets in the NFL have Still giant followings Pittsburgh is not this giant city But it's not like that in the NBA But it should be Everybody, if you like basketball You should watch That's like saying You should do Exactly
[49:59-50:10] SPEAKER_02: I think Indiana has the opportunity I don't know what their contract Situations look like They're not like us This is their shot According
[50:10-50:10] SPEAKER_03: to
[50:10-50:14] SPEAKER_02: the three YouTube fans I do know that they go deep In
[50:14-50:14] UNKNOWN: their
[50:14-50:18] SPEAKER_02: bench like we do Minutes wise they go deep in their bench like we do They're like
[50:18-50:19] SPEAKER_04: any version of us
[50:19-50:21] SPEAKER_03: They're like the worst version
[50:21-50:21] SPEAKER_02: of
[50:21-50:29] SPEAKER_04: us But their stats are not as good as us On offense or defense So theoretically on paper We should be fine In
[50:29-50:32] SPEAKER_02: the seven game series Two teams that play the same,
[50:33-50:33] UNKNOWN: the
[50:33-50:34] SPEAKER_02: better of those two teams
[50:34-50:38] SPEAKER_04: Right But I'm mentally prepared for a Challenging series
[50:38-50:45] SPEAKER_03: I'm mentally prepared to watch it On vacation, Friday Game four, champions I
[50:45-50:50] SPEAKER_04: would love for that to happen But I'm mentally prepared for it to go to game seven And be tough and nail biter
[50:50-51:04] SPEAKER_02: I saw something today and I almost Said it in that NBA group that we have And I was like no I don't want to jinx it But it said This is Indiana is basically ThunderB team Yeah So we should
[51:04-51:04] SPEAKER_04: spank
[51:04-51:05] SPEAKER_02: them We should
[51:07-51:11] SPEAKER_03: They will have to have The game of their life Four times
[51:13-51:14] SPEAKER_04: I was just saying
[51:15-51:20] SPEAKER_02: The scary part Is the way that they finished Three or
[51:20-51:29] SPEAKER_03: four games Yeah but the reason, I've seen people break that Down too is because they run so much And basically you're going to be tired in the fourth And guess what, no the fuck we all have Right exactly
[51:30-51:47] SPEAKER_04: What I was getting ready to say is exactly at this point For them to be at their best They have to play our game Whereas the other teams try to slow us Down and be physical And all those things like that Well they don't have the capability of doing that They try to outrun teams It's
[51:47-51:47] UNKNOWN: like
[51:47-51:50] SPEAKER_04: yes Please, it's
[51:50-51:50] UNKNOWN: going
[51:50-51:50] SPEAKER_04: to be
[51:50-51:50] UNKNOWN: a
[51:50-51:54] SPEAKER_04: hundred And eighty to a hundred and sixty Which is what the NBA should be saying Don't watch
[51:54-51:56] SPEAKER_02: this game, don't care about the teams You're going
[51:56-51:56] UNKNOWN: to
[51:56-51:57] SPEAKER_02: see a ton of points, it's
[51:57-51:57] SPEAKER_03: going
[51:57-51:57] UNKNOWN: to
[51:57-51:57] SPEAKER_03: be an all star
[51:57-51:58] SPEAKER_02: game
[52:00-52:07] SPEAKER_03: If Halliburton And Siakam Combine for seventy five points four times Then yeah maybe they would Yeah
[52:09-52:22] SPEAKER_02: The one that posted Where they said BT Said Thunder five, said NBA will take one at home Sure So what do you have going on for Stops So I've got I'm just
[52:22-52:32] SPEAKER_03: doing cover calls Ultimately that's what we Said for a long time, once you can get there That's the move, it's like pretty funny if
[52:32-52:32] UNKNOWN: you
[52:32-52:33] SPEAKER_03: pay attention So
[52:33-52:45] SPEAKER_02: my strategy is I look for things The stuff that we've always talked about which is High volume, so that Function that looks familiar to chairs Average daily volume of
[52:45-52:45] UNKNOWN: chairs
[52:45-53:06] SPEAKER_02: So not getting into something that's a startup Or getting crushed with Things that have High IV So high volatility Which means the options are going to be Extremely valuable And I'm just looking for a Ten percent game Once it hits ten percent, if it gets called away Great, if
[53:06-53:06] UNKNOWN: it
[53:06-53:43] SPEAKER_02: goes way above that Okay well yes, I got my ten percent I have Some Mom and Dad Are in, Sherry's in And I've got three other clients This guy I'm working for is one of my clients You guys remember Caleb Yeah, he's one of my clients He was doing pallets right? Still doing pallets Christmas lights But the, I haven't had an hell yet How many trades? Hold up my stash So Just curious
[53:43-53:49] SPEAKER_03: How was the drop and then fake recovery after the
[53:49-53:49] UNKNOWN: tear?
[53:49-53:50] SPEAKER_03: So,
[53:50-53:50] UNKNOWN: April
[53:50-53:58] SPEAKER_02: I did Which was A very, very difficult month But I did 1 .49 percent
[53:59-53:59] SPEAKER_00: Huh?
[54:00-54:11] SPEAKER_02: And then May Fake recovery Everything's fine, you guys trust us I did 7 .27 Okay, that's pretty good month I've had, let
[54:11-54:11] UNKNOWN: me
[54:11-54:13] SPEAKER_02: see if I can do this I'm in the middle
[54:13-54:13] UNKNOWN: of
[54:13-54:17] SPEAKER_02: it so I have to steer my head So seven and then one and
[54:17-54:17] UNKNOWN: a
[54:17-54:23] SPEAKER_02: half And then in March it was Six percent February was a
[54:23-54:23] UNKNOWN: little
[54:23-54:35] SPEAKER_02: over two January was six December was five November was two But November was when I really started And I didn't start until about halfway through the month I
[54:35-54:40] SPEAKER_03: think Being positive through that Chaos is pretty Yeah, it's
[54:40-54:40] UNKNOWN: a
[54:40-54:41] SPEAKER_03: win And
[54:41-54:42] SPEAKER_02: all you have to do, I
[54:42-54:42] UNKNOWN: mean
[54:42-54:44] SPEAKER_02: there's
[54:44-54:44] UNKNOWN: Let
[54:44-54:51] SPEAKER_02: me pull this back up A lot of it is just You don't have to Right, you don't have to start
[54:52-55:04] SPEAKER_03: The only issue is if that Legitimately, that company is Done, or if the Fall down in the economy Is real and they represent it on the Chart and it's not coming back for like Five years
[55:06-55:14] SPEAKER_02: So I My target is Position size is 1500 So I'm in a lot of positions, so even if I have one That's going down,
[55:14-55:14] UNKNOWN: I
[55:14-55:19] SPEAKER_02: can sit and hold with it Yeah, I'm just saying like overall stick Or like when it drops, it's like
[55:19-55:19] SPEAKER_03: Well,
[55:20-55:46] SPEAKER_02: shit So in this period of time I've closed 45 positions Okay The average Average RLIs 11 percent Because you get some of those where After you like your 10 percent target Because you acquire so much of the premium Off of the option That the, that's 8 .23 Is your target for 10 percent You go and
[55:46-55:46] UNKNOWN: get
[55:46-55:50] SPEAKER_02: 8 .5 You're going to make more if it hits that
[55:50-55:51] SPEAKER_03: Right
[55:51-56:34] SPEAKER_02: I haven't, I keep telling myself I need to do that Do this, but I wanted to see how many positions I've closed At or near the original Purchase price Technically that's a perfect trade Yeah But the other thing, and this is kind of what I'm doing Is my, within the strategy That I try to stay between The average duration that I'm in a position is 26 days So, and I do that so What a, how far, how do you buy Or sell or And I I am avoiding things That are, I think I told you this That are running up to earnings So I don't want anything that's within the next 30 days Of earnings, or where earnings are within the next 30 days,
[56:34-56:34] UNKNOWN: I
[56:34-56:38] SPEAKER_02: violated that a little bit On a couple of trades because I've held them So,
[56:40-56:40] UNKNOWN: but
[56:40-56:42] SPEAKER_02: Predominantly I don't want to be able to
[56:42-56:42] UNKNOWN: Because
[56:42-56:46] SPEAKER_02: you can get that arbitrary employees And all that kind of stuff But
[56:46-56:57] SPEAKER_03: also there's no plug and play system That's the ones that you held a little bit You don't need to be able to, to managing it at a level That occasionally you go Well, that's why I Yeah, that's what it is, you
[56:57-56:58] SPEAKER_02: look at it
[56:58-56:58] UNKNOWN: and
[56:58-57:41] SPEAKER_02: go Okay, did I make a good pick in this? And if I did, then Okay, stick with it, I had one, there's a company Called, or the stock called Lunar I think it's Lunar Intelligence or something like that, but they had Like Three months ago had landed a Their second rover On the moon and it fell over Okay, yeah, I know what you're talking about Well, their stock went, crashed like 70 % overnight And I had gotten in it the week before But it has So it was like, okay, do I get out Do I have a 30 % marker, where I say If I lose 30%, I need to look at Getting out, so that my other Mantans will cover it up They're back to within 10 % of what they were What
[57:41-57:41] UNKNOWN: I
[57:41-57:43] SPEAKER_02: bought, so it's like That human album,
[57:43-57:43] UNKNOWN: you
[57:43-57:44] SPEAKER_02: say, look at it, go You
[57:44-57:44] UNKNOWN: know
[57:44-57:48] SPEAKER_02: what, they're a fundamentally good stock Everybody in the market is saying they're
[57:48-57:48] UNKNOWN: a fundamentally good stock And
[57:48-57:49] SPEAKER_02: they have additional
[57:49-57:52] SPEAKER_04: contracts, right They have additional, like And if
[57:52-58:00] SPEAKER_03: it's not followed by like a second day of diving Then some percentage of that Dive was done by people pushing it Like on some, just playing the
[58:00-58:01] SPEAKER_02: stock Stuff,
[58:01-58:01] UNKNOWN: so
[58:02-58:07] SPEAKER_02: Or bots that say People said, oh, their thing fell over So they're
[58:07-58:14] SPEAKER_03: terrible, so Yeah, it's just this like thing that happens And it's going to come back some percentage Maybe all of it
[58:14-58:29] SPEAKER_02: So, but anyway, yeah It goes back to just being able to Have, cause like My first two clients, Jeremy and Caleb I had them, I was in them, they started with me In September But it was low volume, so I couldn't Do this,
[58:29-58:29] UNKNOWN: so
[58:29-58:37] SPEAKER_02: I was doing a little Bit of trading for them, but it wasn't this And then they finally both fit in enough that it was like Okay, I can start doing this, and I was in like Two or three positions at a time
[58:37-58:44] SPEAKER_04: Do you have like formal contracts with them as clients? How are you Like what's the agreement? I'll
[58:44-58:52] SPEAKER_02: tell you So, it's a hedge fund agreement 80 -20 split on profit I don't charge them any fees
[58:52-58:53] SPEAKER_04: And just basically,
[58:53-58:53] UNKNOWN: if
[58:53-58:59] SPEAKER_04: you win, they win If you lose, they lose Right They just trust you Right, yeah
[59:00-59:02] SPEAKER_02: Not if I win,
[59:02-59:02] UNKNOWN: you
[59:02-59:06] SPEAKER_02: win I told I asked Stephanie, you
[59:06-59:06] UNKNOWN: know,
[59:06-59:42] SPEAKER_02: that she's out of school And has her summer off I want her to come up with like a social media Campaign for me, cause now I've got Data with clients Excellent agent, by the way That's an easy one I've got data With clients, so I feel More comfortable going to somebody and saying Hey, this is something I've been running for a few years We talked about it So I know that it works But it's easy to say it works with your own money And I've got Half a dozen clients I can go Go up to somebody and confidently go Hey, this works, here's what we're gonna make It's probably in
[59:42-59:42] UNKNOWN: the
[59:42-59:47] SPEAKER_02: top 50 % year long So, if you don't believe me Go talk to this person, go talk to this person
[59:49-59:54] SPEAKER_04: That's cool, that's awesome That's what you've always wanted to do Now I
[59:54-59:56] SPEAKER_02: need a salesman Hey,
[59:56-59:57] SPEAKER_04: I would love to make an agent
[59:58-60:12] SPEAKER_02: Honestly I am not a I am not a agent Which people are like, oh just tell them how you do Yeah, I wish it was like this Cause I won't tell anybody what the results are But that's not how sales work
[60:12-60:19] SPEAKER_03: I'm too dumb to put my thoughts in a way That these dumb people That's funny Yeah
[60:22-60:26] SPEAKER_04: This is an excellent test for our audio transcription Yeah
[60:26-60:26] UNKNOWN: In the
[60:26-60:28] SPEAKER_04: background Yeah
[60:30-60:35] SPEAKER_02: We might have to test out the bigger models Yeah But yeah,
[60:35-60:35] UNKNOWN: I
[60:35-60:40] SPEAKER_02: told Stephanie's been doing a lot of stuff with her You can check Deeper like some
[60:40-60:40] UNKNOWN: of
[60:40-60:41] SPEAKER_02: her posts and stuff like
[60:41-60:43] SPEAKER_04: that That's
[60:43-60:43] UNKNOWN: the
[60:43-60:45] SPEAKER_04: answer You should be doing that Always do
[60:45-60:48] SPEAKER_03: an editing pass Cause, I mean maybe everybody else can't
[60:48-60:48] UNKNOWN: But
[60:48-60:50] SPEAKER_03: I can see
[60:51-60:51] UNKNOWN: Like
[60:51-61:03] SPEAKER_03: AI wrote Just like three words in like one He didn't even have the chance To go and make a few edits Yeah, misspell a word just because Put it in your voice AI gave you
[61:03-61:06] SPEAKER_02: all the stuff I
[61:06-61:06] UNKNOWN: mean
[61:06-61:09] SPEAKER_02: You're not like cheating at school I'm already
[61:09-61:15] SPEAKER_04: at this point of We all know that AI did it But it's saying the things that I wanted to say
[61:15-61:26] SPEAKER_03: It depends on what you're doing Like if you're sending a work email Yeah But you do have this situation where you're having chat GPT Write the email They're having chat GPT read the
[61:26-61:26] UNKNOWN: email
[61:27-61:27] SPEAKER_03: Exactly,
[61:27-61:31] SPEAKER_04: and it's communicating It doesn't matter If you see
[61:31-61:40] SPEAKER_03: a social media post that I know is written by AI I will block that motherfucker Immediately I'm not on social media anymore Well you
[61:40-61:42] SPEAKER_02: are, I still get a friend request from you every now and
[61:42-61:42] UNKNOWN: then
[61:42-61:44] SPEAKER_03: Oh yeah, I'm not sending those So I
[61:44-61:44] UNKNOWN: don't
[61:44-61:58] SPEAKER_03: know I accepted a few That I assume were not actually sent to me But it's like, I don't want you to be upset And I'm thinking You're going to find no posts No, that's hilarious I know that's not it But
[61:58-61:59] SPEAKER_02: they got your name and
[61:59-62:03] SPEAKER_03: the airplane Oh it is, it's like yeah it's my account And I got
[62:03-62:03] UNKNOWN: it
[62:03-62:16] SPEAKER_03: So your account got hacked I'm not tripping on it They could have literally everything I got it from Facebook marketplace And fucking Arty with stuff Yeah
[62:16-62:36] SPEAKER_04: you gotta have a Facebook account You can do it now without an actual Facebook account, but you still have to Give them your information You cannot do it without having an account Which I get It is what it is They happen to make hardware VR hardware and Multiple social media companies That's
[62:36-62:36] UNKNOWN: what
[62:36-62:36] SPEAKER_04: they do, that's why
[62:36-62:37] SPEAKER_03: this thing exists
[62:39-62:39] UNKNOWN: So
[62:39-62:44] SPEAKER_02: that's what it is Yeah that's cool I'm excited about that I can grow my client base And
[62:44-62:44] UNKNOWN: I
[62:44-62:47] SPEAKER_02: can do it And
[62:47-62:47] UNKNOWN: make
[62:47-62:54] SPEAKER_02: a living You want me to buy her a bakery Go get me some clients And I will buy you a
[62:54-62:54] UNKNOWN: bakery
[62:54-62:55] SPEAKER_02: My wife wants me to
[62:55-62:56] SPEAKER_04: buy her
[62:56-62:56] UNKNOWN: a
[62:56-62:57] SPEAKER_04: $150 ,000 car
[62:58-62:59] SPEAKER_02: No
[62:59-63:01] SPEAKER_04: No, I'm not doing that Because it
[63:01-63:17] SPEAKER_03: does so many different things Right Yeah I saw A progression of how well You're doing in life You can buy food You can provide for a family You can have nice things,
[63:17-63:17] UNKNOWN: you
[63:17-63:24] SPEAKER_03: can go on regular Vacations, you can buy your Wife a $10 ,000 a month bakery That is of course losing money Yeah
[63:26-63:31] SPEAKER_04: I mean I don't think It would lose money She's fantastic But
[63:31-63:44] SPEAKER_03: that's the story of main streets Money laundering Or a super rich dude Yeah basically everything on main street Is one of those two things The chocolate shop How are you making money
[63:45-63:47] SPEAKER_04: How are you making enough money to pay that rent
[63:47-63:57] SPEAKER_03: What percentage of the weight That you bring in is cocaine Well I want If she could break you It would make her happy She
[63:57-63:57] UNKNOWN: can
[63:57-64:11] SPEAKER_03: do what she wants Yeah and even if you can That type of thing The product is there You can go to a cheaper area To rent and people will come to you I might go sketch in that And make some barbecue
[64:12-64:27] SPEAKER_02: Exactly She started when school I can always tell when school is getting out And she's starting to think about stuff She started sending me Hey this food truck has Set up for a bakery Only $112 ,000 Yeah
[64:27-64:32] SPEAKER_04: I understand what you're asking me I'm working on it
[64:35-64:45] SPEAKER_03: Yeah that's Cool So I think Tentatively Wednesdays is 6 Even if I
[64:45-64:53] SPEAKER_04: come and Grab a beer And eat some french fries I might eat french fries next time I was able to talk Myself out of it this
[64:53-65:03] SPEAKER_03: time I had two whole days Where I hit every single one of my disciplines And then they didn't I had a sprain I hate everything That's
[65:03-65:06] SPEAKER_01: what you got You
[65:06-65:17] SPEAKER_02: got a kid that 21 Who just started working for us as a salesman Talking about Going to eat something
[65:19-65:27] SPEAKER_01: Just got to be balanced Eventually you'll get to an age where you don't have to stop eating that stuff You just got to eat less You better chill
[65:27-65:29] SPEAKER_04: out See we'll catch up to you
[65:29-65:29] SPEAKER_01: For
[65:29-65:30] SPEAKER_00: sure
[65:32-65:35] SPEAKER_02: Alright Next week? Yeah I heard
[65:35-65:41] SPEAKER_03: no Well next week Are you going to be there? I mean
[65:41-65:41] UNKNOWN: we
[65:41-65:43] SPEAKER_03: can do it on Tuesday or something And see if
[65:43-65:43] UNKNOWN: Alex
[65:43-65:44] SPEAKER_03: wants to call in or something
[65:44-65:50] SPEAKER_02: Brooklyn's got I wouldn't
[65:50-65:50] UNKNOWN: know
[65:52-65:53] SPEAKER_03: Yeah so that's one of the things We
[65:53-65:53] UNKNOWN: will
[65:53-66:01] SPEAKER_03: do is Once we get up and going in the transcription service We'll send out whatever is Outputting
[66:01-66:01] UNKNOWN: ultimately
[66:01-66:06] SPEAKER_02: Brooklyn's got She has her color guard camp this week From 9 to 9
[66:07-66:08] SPEAKER_04: That's intense
[66:09-66:11] SPEAKER_02: They got a hot 6 tonight Because of church
[66:11-66:13] SPEAKER_04: That's freaking intense
[66:13-66:14] SPEAKER_02: A
[66:14-66:15] SPEAKER_04: 12 hour camp
[66:16-66:18] SPEAKER_02: Which is why
[66:18-66:18] UNKNOWN: We're
[66:18-66:29] SPEAKER_02: coming back from vacation Because And of course this pride Is national champion Yeah well I mean That's what it takes to
[66:29-66:35] SPEAKER_04: win I mean I think from that perspective it's a good lesson That hey if you want to be the best You put in your 12 hour days
[66:36-66:54] SPEAKER_02: They don't have any patience So first let's get in their competitive Environment They told them so they did all these mini camps Leading up to the tryout And they learned a bunch of stuff And then they had like 2 weeks off before they started This camp and they told them they said If you come back and you don't know your routine you're out
[66:54-66:55] SPEAKER_04: Yeah
[66:56-66:57] SPEAKER_02: A lot of
[66:57-66:57] SPEAKER_04: people want to
[66:57-66:57] SPEAKER_03: be
[66:57-67:02] SPEAKER_04: here You're just one person That there's a hundred behind you
[67:02-67:05] SPEAKER_02: So there's kids that have been In
[67:05-67:05] UNKNOWN: bands
[67:05-67:20] SPEAKER_02: because color guard didn't start until high school There are kids that have been in bands From middle school That wanted to they were at the meeting They were like my kid wants to be in color guard And they were like that's fine If you come to color guard and you try out And you don't make it you're out of both
[67:20-67:23] SPEAKER_04: You're not going back Choose
[67:24-68:11] SPEAKER_02: So she said we ask everybody Every year people ask this question We ask everybody that comes in as a freshman To do band for you And figure out where you fit Because if you are a star You need to stay there because We're over here and you're not But it's crazy But yeah next week is They've got a We understand vacations If you want to go on vacation go ahead Right But you might not have A role for you You might not have a job when you get back That's it So we asked her if she misses the first two days Of the camp is she going to get value out of the restaurant They said 100 % We'll be back Back on Wednesday So yeah we can do it
[68:11-68:12] SPEAKER_00: We can do it

==================================================
Generated on: 2025-07-23 14:27:16
Total words: 11126
Total speakers: 6
==================================================




Summary:
creation_date: 2025-07-23 source_file: [https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1410_ZOOM0016_transcript.txt](https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1410_ZOOM0016_transcript.txt) participants: [SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04]

## Executive Summary

The group introduced a new member to their ongoing project of building a [[Transcription Service]] and leveraging [[AI Agents]] for complex problem-solving. A significant portion of the conversation was dedicated to brainstorming a practical application for these agents: an [[Estimation Tool]] for a contracting business that would analyze historical data from QuickBooks to generate instant quotes `[17:43-18:08]`. They discussed how this tool could automate a multi-step, knowledge-intensive process, making it a prime candidate for an agent-based solution. The team also covered the potential of [[AI Tools]] to revolutionize creative industries and provided a brief update on the [[Muddy Toes]] business pivot to a wholesale model `[32:33-33:11]`.

## Key Topics Discussed

- **Introduction to the AI Project**:
    
    - The core idea of building a proprietary [[Transcription Service]] on [[GCP]] to save costs and capture all conversations was explained `[08:32-08:58]`.
        
    - The concept of using [[Obsidian]] to create a [[Knowledge Graph]] or "[[brain]]" from the transcribed notes was introduced, highlighting how [[AI Tools]] can automatically tag and link concepts `[09:34-10:15]`.
        
    - [[AI Agents]] were described as a team of specialized [[AI Personas]] (e.g., director, editor) that can be assigned complex, multi-step tasks and given tools (like API access) to solve problems autonomously `[12:15-13:32]`.
        
- **Business Idea: AI-Powered [[Estimation Tool]]**:
    
    - A specific business problem was identified: creating a tool to automate the estimation process for a contracting/roofing company `[17:43-18:08]`.
        
    - The proposed solution involves an agent that accesses and analyzes years of historical job data from QuickBooks to provide instant, data-driven estimates `[18:08-18:51]`.
        
    - The agent could be enhanced by integrating with other services, such as pulling public property data from Zillow or incorporating weather data for scheduling `[25:16-25:54]`.
        
    - This idea was seen as a perfect use case for agents, as it replaces a complex, manual workflow currently dependent on an individual's knowledge.
        
- **[[Muddy Toes]] Business Update**:
    
    - The business has successfully pivoted to a wholesale model, which simplifies operations by removing the complexities of direct-to-consumer sales and [[Amazon]] ads `[32:33-33:11]`.
        
    - Alex has a commitment from a buyer in Texas who is shipping the golf balls overseas by the container `[33:45-34:08]`.
        
- **The Impact of AI on Industries**:
    
    - The group discussed the inevitable disruption of white-collar jobs, particularly in fields like medicine and law, which are ripe for automation `[20:18-20:43]`.
        
    - They touched on the idea of creating a [[For Sale By Owner Agent]] to automate the real estate transaction process, eliminating the need for traditional agents `[26:03-26:38]`.
        
    - The conversation explored how [[Creative AI]] will democratize content creation, allowing individuals to produce high-quality movies and media without the massive infrastructure of Hollywood `[40:47-41:47]`.
        

## Action Items & Decisions

- **Action**: Investigate how to export historical data from [[QuickBooks]] to serve as the knowledge base for the proposed [[Estimation Tool]] `[18:16-18:21]`.
    
- **Decision**: Continue with regular Wednesday meetings to maintain momentum on idea generation and project development `[64:35-64:45]`.
    

## Suggested New Links/Tags

- [[Estimation Tool]]

- [[QuickBooks]]

## Linked Concepts

- [[AI Agents]]
    
- [[AI Personas]]
    
- [[AI Tools]]
    
- [[Amazon]]
    
- [[Creative AI]]
    
- [[Estimation Tool]]
    
- [[For Sale By Owner Agent]]
    
- [[GCP]]
    
- [[Gemini]]
    
- [[Knowledge Graph]]
    
- [[Muddy Toes]]
    
- [[Obsidian]]
    
- [[OpenAI]]
    
- [[Transcription Service]]
    
- [[brain]]
    

## #Tags

- #AI
    
- #Automation
    
- #BusinessDevelopment
    
- #SoftwareDevelopment
    
- #Startups

zoom17
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-28_2056_ZOOM0017_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:02-00:06] SPEAKER_00: Yeah, I actually, I was up earlier, normally I
[00:06-00:06] UNKNOWN: have
[00:06-00:15] SPEAKER_00: my alarm set at 5 .30, I just changed it to 5 because to do pre -meditation, and I woke up to those two minutes and I was like, alright. Well,
[00:17-00:19] SPEAKER_01: just get an extra 40 minutes in this morning.
[00:39-00:40] UNKNOWN: Did
[00:40-00:49] SPEAKER_00: you change the baggies in that thing? I did not. I didn't even have to grab some. Yeah. Is
[00:49-00:49] UNKNOWN: it
[00:49-00:51] SPEAKER_00: two? Yeah. Okay.
[01:17-01:59] UNKNOWN: Okay. Okay. Okay.
[01:59-02:02] SPEAKER_01: Okay.
[02:37-02:43] SPEAKER_00: Oh yeah, it's set to seven days. I thought it did stop though. I did
[02:43-03:03] SPEAKER_01: too. I thought we changed it to like 15, or no, the change it to 15 minutes was to try to allow it to like boot and do the whole thing. So is this a Cloud Run limitation? Maybe.
[03:03-03:03] UNKNOWN: I
[03:03-03:16] SPEAKER_01: mean, is that like Cloud Run has a default limit, like where it's supposed to only take so long to execute this thing? There's some service that's like that.
[03:19-03:27] SPEAKER_00: I think that PubSub is ultimately the issue, is that PubSub will try forever. Like if it's a message in that loop,
[03:27-03:27] UNKNOWN: it'll just -
[03:27-03:29] SPEAKER_00: That's the value of it, but also the
[03:29-03:29] UNKNOWN: -
[03:29-03:30] SPEAKER_00: Yeah, just keep doing that forever.
[03:33-03:51] SPEAKER_01: So, but we can say like 30 minutes or something, put like a hard cap on. Retry? Yeah. Because there is some amount of, still unknown, of like how long it takes to boot the model, how long it takes to process it
[03:51-03:51] UNKNOWN: and
[03:51-03:57] SPEAKER_01: all that stuff. I agree. But like, it's not 24 hours. It's certainly not seven
[03:57-03:57] UNKNOWN: days.
[03:57-03:58] SPEAKER_01: Yeah,
[03:58-03:58] UNKNOWN: I
[03:58-04:11] SPEAKER_00: think that this is the answer right here, is to have a number of maximum attempts. Like so it will just keep trying it and it'll boot it up and all that, but it just won't keep doing it for seven days.
[04:11-04:55] SPEAKER_01: Yeah, I think the potential problem with number of retries is like how fast does that happen? Is it going to go through 10 retries in 30 seconds and the thing hasn't even started yet? Or something like that. And I don't know. Create a new PubSub topic is the action. I get it, it is right. It just sounds funny right now when that's been running all night. Where did you execute those
[04:55-04:58] SPEAKER_00: commands? I don't think you did.
[05:04-05:05] UNKNOWN: I
[05:05-05:47] SPEAKER_01: do remember it's mentioning that dead letter topic thing yesterday, but I would ask you about that claim that it executed GCLAC. I think you can set it to just do stuff. I'm pretty sure it's in the bottom left of that bubble right there. Where it says ask every time. Oh yeah, I don't want you to just do stuff. Yeah, I think that's where when you say vibe coding, people change that setting and you just run. But they're also doing, I assume,
[05:47-05:47] UNKNOWN: like
[05:47-05:51] SPEAKER_01: deleting projects after they make their little YouTube video and shit.
[05:56-05:57] SPEAKER_00: I'll just check
[05:57-05:58] UNKNOWN: it.
[06:16-06:25] SPEAKER_00: Yeah, I want to do this stuff first. Yep,
[06:25-06:47] SPEAKER_01: I agree. But it claims it did that one. That's the GCLAC command. I think it's saying that it did. My guess is number two already is. I know it's saying set max to zero. That does make sense if you want it to not be running at all. But I don't think it's going to let you. Like we tried that yesterday,
[06:48-06:48] UNKNOWN: I think.
[06:52-07:05] SPEAKER_00: Yeah, I agree. We did. And it was like, can't set max instances to zero. That makes sense. Why would you have it? Yeah, the API should be turned off if you want
[07:05-07:27] SPEAKER_01: max instances to zero. I think if we can get this operating.
[07:28-07:28] UNKNOWN: I
[07:28-08:08] SPEAKER_01: told my brother last night, like basically we'll talk about on vacation actually potentially executing on the estimate agent or whatever. Because right now we need to get this thing through. But I think we're, I mean, it's there. We just need this tire section thing to work. So I think you can, like, if you don't want that quiet there, you can click in there and delete it. I noticed that yesterday.
[08:23-08:38] SPEAKER_00: What? That was an order placed on my Starbucks account and the card has been reloaded? No or something.
[08:39-08:40] SPEAKER_01: She's sleeping.
[08:41-08:41] UNKNOWN: Is
[08:41-08:54] SPEAKER_01: she not? At this very minute she woke up and is like, oh, I need coffee. Or like Sydney's coming over and she's picking something up on the way. Or somehow Starbucks got hacked.
[08:58-08:58] SPEAKER_00: What is
[08:58-09:13] UNKNOWN: it? I
[09:13-09:47] SPEAKER_00: don't think yet. You can try. I do think she's on there and she just
[09:47-09:47] UNKNOWN: she's
[09:47-09:52] SPEAKER_00: just she added money to the card. Okay.
[09:55-09:55] UNKNOWN: I
[09:55-11:22] SPEAKER_01: think to do an order like you have to load the car. You can't just order something like with your card. Right. Which is actually a little bit shady, but super clever because they're one of the largest holders of cash in the world. Like corporations is technically when you come out like there's probably three or four dollars in mine. I don't have the app anymore and multiply that by millions and millions of people and you probably got 20 or 30 or more in yours. Exactly. And then they can technically that's an asset that they can borrow against. And then when you're owned by like public equity, they do that and Starbucks eventually will go bankrupt. But that's fine. Yeah, you can't set it to zero. For sure. I just want it. It's like there should be a command that's like literally ice all the fucking processes. Just right. I do. It's fine to set it to one because theoretically it was running three all night as well based on some of the behavior we saw yesterday. Maybe have it look at logs be like so in theory literally nothing is happening now.
[11:22-11:23] UNKNOWN: Yeah.
[11:28-11:41] SPEAKER_01: Even with that one potential instance. There's no event parks. Which is the thing I only learned to be existence of this week. Yeah, I have heard
[11:41-11:46] SPEAKER_00: of it, but only barely. Yeah, it's basically the
[11:46-11:57] SPEAKER_01: thing that makes. Sounds like like web books. Yeah,
[11:58-13:10] UNKNOWN: space. Yeah. Oh,
[13:10-13:14] SPEAKER_00: that's been $20 in several months.
[13:14-13:36] SPEAKER_01: Yeah. Yeah, we were thinking, well, our math was probably not terribly far off. But like 10 hours of active thing costing a couple of dollars. Yeah. And in theory, if three were running for 24 hours, that's like 60. Yeah.
[13:48-13:54] SPEAKER_00: Yeah. You need the ID.
[14:27-14:29] SPEAKER_01: Yeah. Right.
[14:30-14:30] UNKNOWN: Like
[14:30-14:44] SPEAKER_01: I think it's hesitant to do that because like if you were in a production environment, you cannot do that. There are like a thousand. But right. Like in this project, we can make it to where nothing
[14:44-14:53] SPEAKER_00: is running. Right. I just need to do this or go in the console and delete pumps, undelivered messages.
[14:53-14:54] SPEAKER_01: Yeah, maybe.
[14:55-14:56] SPEAKER_00: Before we stop.
[14:56-15:04] SPEAKER_01: But also there should be like we should probably know this for if we happen to be in production and need to be like, oh, fuck, we got to get rid of that.
[15:04-15:04] UNKNOWN: That's
[15:04-15:43] SPEAKER_01: it. Make it back. Yeah. Without killing our entire application. What's the separate queue and what happens there?
[15:46-15:50] SPEAKER_00: So the second time. Oh, yeah.
[15:50-15:50] UNKNOWN: I
[15:50-16:07] SPEAKER_00: just hadn't got to. Oh, yeah, I think that you can like human inspection. Yeah, that it just will sit there. It has no trigger. Gotcha.
[16:14-16:18] SPEAKER_01: Yeah, the real problem is it doesn't fail immediately. Right.
[16:18-16:18] UNKNOWN: It just
[16:18-16:22] SPEAKER_01: fails after everything spins up and it downloads the model. I
[16:22-16:37] SPEAKER_00: want to figure out what was going on in the first place. Yeah. So the diorization service is breaking. Right. Oh, that I see. Yeah, I want to do. Yeah, well,
[16:37-16:37] UNKNOWN: I
[16:37-16:41] SPEAKER_00: just have this doesn't necessarily make sense to me that,
[16:41-16:41] UNKNOWN: hey,
[16:41-16:46] SPEAKER_00: the queue is empty and we don't need to purge it. And what was happening? Right.
[16:47-16:50] SPEAKER_01: But that is, I think, an error in the diorization service.
[16:51-16:51] UNKNOWN: That's
[16:51-17:00] SPEAKER_01: like it's getting so the PubSub topic is going until it gets a response. And this thing is breaking at some point before it gets returns anything.
[17:01-17:01] UNKNOWN: And
[17:01-17:17] SPEAKER_01: so then it pops up sitting there. That instance times out. And I guess it can have three was our previous max. And so PubSub just keeps hitting it. So three spin up pretty quickly. Then they time out. PubSub still jamming. And
[17:17-17:17] UNKNOWN: now
[17:17-17:35] SPEAKER_01: it's zero. And so those three just keep spinning up. And what's happening is we don't have like maybe in the code somewhere we could sit a like nest a hey, cancel this fucking PubSub topic if it fails the X number of times. Right. I guess that's what the dead letter topic is. Right.
[17:35-17:36] SPEAKER_00: Do you
[17:36-17:36] UNKNOWN: want
[17:36-17:37] SPEAKER_00: to think?

==================================================
Generated on: 2025-07-28 20:59:57
Total words: 1439
Total speakers: 3
==================================================




Summary:

creation_date: 2025-07-28 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-28_2056_ZOOM0017_transcript.txt participants: [SPEAKER_00, SPEAKER_01]
Executive Summary
This transcript captures a focused troubleshooting session addressing a critical issue where the [[Transcription Service]]'s [[Cloud Run]] instances were timing out. The root of the problem was traced to the [[Pub/Sub]] service's default seven-day retry policy, which continuously triggered new, failing instances of the [[Cloud Run]] service. The primary solution decided upon is to implement a [[Dead-Letter Topic]], which will redirect failed messages to a separate queue for manual inspection instead of allowing them to be retried indefinitely. The immediate action was to purge the existing queue of undelivered messages and scale down the service to prevent further uncontrolled executions while they implement the fix.

Key Topics Discussed
	•	Troubleshooting [[Pub/Sub]] Retry Loop
	•	The core problem identified was that the [[Pub/Sub]] topic was retrying messages for up to seven days by default.
	•	The [[Cloud Run]] diarization service was failing before it could acknowledge the message, causing [[Pub/Sub]] to trigger a new instance, leading to a continuous loop of failed attempts.
	•	This resulted in multiple [[Cloud Run]] instances spinning up and timing out, which was identified by observing the service logs.
	•	Implementing a [[Dead-Letter Topic]]
	•	The long-term solution is to create a [[Dead-Letter Topic]].
	•	This architectural pattern will redirect any message that fails a certain number of times to a separate, "dead-letter" queue.
	•	This prevents the main service from getting stuck in a retry loop and allows developers to inspect the failed messages manually.
	•	They discussed modifying the retry policy to have a maximum number of attempts rather than relying on a time-based expiration.

Action Items & Decisions
	•	Decision: To implement a [[Dead-Letter Topic]] as the primary mechanism for handling persistent message failures in the [[Pub/Sub]] queue.
	•	Action: Create a new [[Pub/Sub]] topic to serve as the dead-letter queue.
	•	Action: Update the primary [[Pub/Sub]] subscription to direct failed messages to the newly created [[Dead-Letter Topic]] and set a maximum number of delivery attempts.
	•	Action: Purge all existing undelivered messages from the current [[Pub/Sub]] topic to immediately stop the ongoing retry loop.

Suggested New Links/Tags
None

Linked Concepts
	•	[[Cloud Run]]
	•	[[Cursor]]
	•	[[Dead-Letter Topic]]
	•	[[Pub/Sub]]
	•	[[Transcription Service]]

#Tags
	•	#Automation
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom18
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-29_1331_ZOOM0018_transcript.txt

==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:22-00:36] SPEAKER_00: Is Harley going tonight? To where? Isn't he going to a game? To the game? Oh. Or he's going Sunday. I don't know. But that's, he's going right? Yeah, I don't know if he decided
[00:36-00:38] SPEAKER_03: to go or not. That'd be wild to not go.
[00:42-00:43] UNKNOWN: Yeah.
[00:46-00:51] SPEAKER_03: I'm going to replace that with the actual date, bro. You replace it with the actual date.
[01:02-01:57] SPEAKER_00: In the reading it says. Yeah, go to the top or just command F current date. I've never actually brought it up, but I don't know why it keeps putting the fucking date in there. I think it's at the... Yeah, it was that. As of today, who gives a shit? As of currently, it doesn't matter when this was written. This is the current status of the app. How does it receive that message?
[01:58-01:58] SPEAKER_03: I don't know.
[01:58-01:58] UNKNOWN: I
[01:58-02:02] SPEAKER_03: assume there's going to be a step in here. We're going to add to the Python
[02:02-02:20] SPEAKER_00: file. There you go. I'm assuming a dead letter topic is a thing that Google
[02:20-02:20] UNKNOWN: knows. I
[02:20-02:38] SPEAKER_00: guess just a thing. Now we want to run it and see it fail. Yeah. And stop, which I feel like we saw
[02:38-02:38] UNKNOWN: a
[02:38-02:41] SPEAKER_00: few times. I thought I did.
[02:46-02:46] UNKNOWN: We'll see.
[02:51-03:05] SPEAKER_00: Okay, I mean, those are good sounding things. Were that many instances running? Apparently. Or it just reports until it's actually shut down. I don't know.
[03:11-03:13] UNKNOWN: I don't like it.
[03:16-03:23] SPEAKER_00: Yeah, I think we need like a... Hey, what's running on this project across the fucking
[03:23-03:23] UNKNOWN: board?
[03:23-03:25] SPEAKER_00: I don't think you can do that. I think that's in
[03:25-03:33] SPEAKER_03: some ways on purpose. Yeah, it's anti -consumer, but yeah. That you can't just... There's no report of like,
[03:33-03:33] UNKNOWN: hey,
[03:33-03:35] SPEAKER_03: or stop button. You
[03:35-03:35] UNKNOWN: can
[03:35-03:42] SPEAKER_03: just go, hey, stop everything, or pause. Pause our activity right now. I'll turn it back on later. Right. That would charge you
[03:42-03:48] SPEAKER_00: $100 ,000 over the next three days if you were able to just stop it when you knew an emergency was happening. There's no way to do that.
[04:21-04:22] UNKNOWN: Okay.
[04:49-04:52] SPEAKER_03: Yeah, so this won't
[04:52-04:52] UNKNOWN: help.
[04:52-04:56] SPEAKER_00: In the actualization process. So I think that's what's
[04:56-04:56] UNKNOWN: happening.
[04:56-05:31] SPEAKER_00: It won't cost folks to retry the message because it was already known. Okay. Ah. Why would that not have been the first recommendation?
[05:31-05:32] SPEAKER_03: I agree.
[05:34-05:43] SPEAKER_00: Ultimately, that dead letter topic being in place is not a bad thing. It's probably good practice, but this is the solution to the answer or the question that we were asking.
[06:03-06:04] UNKNOWN: I
[06:04-06:21] SPEAKER_00: would say... Yeah, let's make a breakout inside the fucking code. Or dive into the Pub -Sub topic.
[06:21-06:21] UNKNOWN: Like
[06:21-06:22] SPEAKER_00: if it's saying,
[06:23-06:23] UNKNOWN: hey,
[06:23-06:29] SPEAKER_00: I got it, why is it continuing to send it? Because it's waiting on a return message of,
[06:30-06:30] UNKNOWN: hey,
[06:30-07:26] SPEAKER_00: process done. Well, then if you don't get that, then you should stop fucking sending it. Or just what is that message that's being sent and what makes the topic stop? I think by the topic. The topic is by the subscriber to the topic, whatever the subscriber is.
[07:26-07:42] SPEAKER_03: I don't know if my work... this is good. I'm getting a better understanding of Pub -Sub. Well, eventually I'll get better understanding. Maybe if the message was received and already acknowledged.
[07:46-08:12] SPEAKER_00: Because it was already acknowledged. Yeah. Yeah, so it is in that magic bullet. And that's the magic in this. So I've got the message all processed.
[08:12-08:12] UNKNOWN: And
[08:12-08:23] SPEAKER_00: if the sub's gone back, I'm processing it until it's silently over. Or without a mechanism to inform Pub -Sub. The message is considered successfully delivering knowledge. Pub -Sub.
[08:23-08:23] UNKNOWN: So
[08:23-08:27] SPEAKER_00: yeah, there has to be an ending message built into the code that's like,
[08:28-08:28] UNKNOWN: hey,
[08:28-08:41] SPEAKER_00: all done. Stop sending it. It's not just, hey, I got it. Like the syntax there, I've got the message. I'll process it. It's making me think. I think it's still worth sending this question of like, explain Pub -Sub to me, please. Basically.
[09:05-09:16] SPEAKER_03: That's interesting. That makes sense. That whatever you sent it to needs to send something back to Pub -Sub to say, I got it. I finished it. I processed this event. It's a return statement in code.
[09:16-09:16] UNKNOWN: It's
[09:16-09:17] SPEAKER_03: like,
[09:17-09:17] UNKNOWN: how
[09:17-09:26] SPEAKER_03: do you stop the function from running? It's going to just keep going forever. I received, yes. Pub -Sub is a while loop. I received it, yes. But you never processed
[09:26-09:34] SPEAKER_00: it. It's like, okay, well, I don't even have to think about it until I get this other message, which is either good or bad. I'm going
[09:34-09:34] UNKNOWN: to
[09:34-09:38] SPEAKER_00: keep sending this shit. Right. For seven days straight.
[10:11-10:11] UNKNOWN: Yep.
[10:13-10:24] SPEAKER_00: This is how I thought it worked. Right. So it's not sending that 202 accepted thing. If getting the accepted one stops
[10:24-10:24] UNKNOWN: it.
[10:24-10:43] SPEAKER_00: It's telling to send the 202 accepted. There you go. Yep. But I thought that the thing it was saying before was if it broke after it said 202 accepted. Well, that's completely irrelevant if it's never sending the 202 accepted. Unless I'm confused.
[10:43-10:50] SPEAKER_03: Right. So meaning what we just did to go to the dead letter topic. The
[10:50-11:16] SPEAKER_00: dead letter I think is still valid. Yeah. The next thing it was focusing on was like, well, the dead letter won't fix if it happens after the topic has been accepted and it's in the processing. But this is saying, well, if it's getting accepted, then the PubSub topics quit sending it. And so it's not getting accepted. Right. Exactly. Yeah. So I think we're saying the same thing.
[11:17-11:19] SPEAKER_03: But so the dead letter topic is good. Right?
[11:19-11:19] UNKNOWN: So
[11:19-11:20] SPEAKER_03: I think ultimately.
[11:21-11:21] UNKNOWN: That's generally
[11:21-11:30] SPEAKER_03: good practice. I agree. Probably. And ultimately what was happening last night or the service as it lives right now. Right. It's not sending that accepted.
[11:30-11:31] SPEAKER_00: Yeah. In theory, the dead letter
[11:31-11:55] SPEAKER_03: topic would have worked for this. Right. Yes. It would have tried five times and then put the one message. Because it's the same message. Right. We only sent it once. Right. And it's just sitting trying over and over and there's no dead letter topic. So after five tries, it would have stopped. And the issue is that every time it sends it, it is actually, it is receiving it. And it is spinning up cloud run. It's just not saying
[11:55-12:17] SPEAKER_00: that it received it. Yes. That is the issue. So even if diarization was working, PubSoft would have kept, it would have actually kicked off the whole fucking process. Over and over and over again. Yeah. You'd have gotten a hundred transcripts of the exact same thing. Yeah. No, the whole thing. It would have hit transcription and everything. Oh yeah. I mean, I guess we could go
[12:17-12:17] UNKNOWN: look. It would
[12:17-12:18] SPEAKER_00: have cost more
[12:18-12:19] SPEAKER_03: than $24 is
[12:19-12:19] UNKNOWN: my guess.
[12:19-12:34] SPEAKER_03: And see that there's not a bunch of crap in there. Yeah. There you go. So maybe it processed it one time. Well, that was 5 .30 AM on
[12:34-12:35] SPEAKER_00: the fifth.
[12:35-12:35] UNKNOWN: Is
[12:35-12:36] SPEAKER_00: that today?
[12:36-12:39] SPEAKER_03: Yeah. Holy shit.
[12:39-12:39] UNKNOWN: Did
[12:39-12:57] SPEAKER_03: it work? Yeah. And maybe it was just stuck in some loop and needed to stop. What time is this one? 4 .30. Yeah. So maybe, I don't know, maybe it's a PubSoft thing that made it not work. Good thing it wasn't dropping a bunch of crap.
[12:57-12:57] SPEAKER_00: Can
[12:57-12:58] SPEAKER_03: we see
[12:58-12:58] SPEAKER_00: that?
[12:59-12:59] UNKNOWN: Is
[12:59-13:00] SPEAKER_00: there actually like, Oh yeah,
[13:00-13:01] SPEAKER_03: I'm going
[13:01-13:06] SPEAKER_00: to look at it. Okay. Look at all the buckets and make sure there's not like some. Yes.
[13:06-13:06] UNKNOWN: I
[13:06-13:06] SPEAKER_00: was
[13:06-13:15] SPEAKER_03: spinning around like what, what is happening? I don't know how you. Holy shit.
[13:15-13:15] UNKNOWN: It
[13:15-13:19] SPEAKER_03: works. Yeah. So whatever was, whatever's happening.
[13:20-13:21] SPEAKER_00: Oh, like how weird that
[13:21-13:25] SPEAKER_03: is. Yeah. So it's super close to working.
[13:26-14:02] SPEAKER_00: Yeah. Which is good. I mean, this is like. I don't know that it worked. They all say speaker zero. No, there's zero one zero one zero. Okay. And there's only you and Mel on that audio. All right. I mean, I don't know if those are right, but I assume. I mean, that's what it's supposed to look like. And also this is like when you kind of introduced me to programming in general, you're like, the magic is there's these puzzle pieces you can put together and you don't even have to do anything. Yeah. The reason these works is because that's those puzzle pieces that already work. Right. You just have to plug them in.
[14:04-14:05] SPEAKER_03: Yeah.
[14:06-14:07] UNKNOWN: So
[14:07-14:13] SPEAKER_03: first of all, I'm going to delete everything out of every bucket. That makes sense for sure.
[14:15-14:35] SPEAKER_00: Because we don't need any of that. No, it's all for testing purposes and theoretically should be gone. I mean, we don't need that audio specifically. That's you and Mel talking about. Yeah. The backyard. And that's just four copies of the same audio.
[14:45-14:46] UNKNOWN: Yeah.
[14:46-14:52] SPEAKER_00: So the problem's not solved. No. Was there anything in the transcription bucket?
[14:53-15:03] SPEAKER_03: No, that was from the first day where something also broke between those or we don't have that function yet. There's nothing. No Pub Subtop. No, nothing. The Pub Subtop that
[15:03-15:07] SPEAKER_00: gets created, I just don't think there's the trigger. So I don't know. I'm not
[15:07-15:07] UNKNOWN: sure. The
[15:07-15:11] SPEAKER_00: actual function that needs to run to tell it what to do. Because the Pub Subtop is just like,
[15:11-15:11] UNKNOWN: hey,
[15:11-15:14] SPEAKER_00: do the thing. Yeah, I don't think so. I
[15:14-15:14] UNKNOWN: don't
[15:14-15:15] SPEAKER_00: think you're
[15:15-15:25] SPEAKER_03: right. I do. Do you think it's worth saying to it that when you stopped
[15:25-15:32] SPEAKER_00: it, whatever you did made it work? I'm kind of wondering if it was working all the time.
[15:33-15:33] UNKNOWN: And
[15:33-15:39] SPEAKER_00: that's not like basically when it writes the exact same thing to that bucket, it just replaces
[15:39-15:43] SPEAKER_03: it. Like so it was working. So that was like the 150th time in that trip.
[15:45-15:45] UNKNOWN: I
[15:45-15:45] SPEAKER_00: don't know.
[15:45-15:45] UNKNOWN: It took
[15:45-15:47] SPEAKER_03: longer for us to, like it was working.
[15:47-15:50] SPEAKER_00: I was always working. And we just didn't see.
[15:50-15:50] UNKNOWN: It didn't
[15:50-15:57] SPEAKER_00: wait long enough. Yeah, because it seemed like something was, like I don't know that I'm hypothesizing for sure.
[15:59-16:00] UNKNOWN: But
[16:00-16:14] SPEAKER_00: that we have seen when you upload the same file with the same exact file path name and all that. It just replaces it in the bucket. It doesn't write a second one with the little one in parentheses or anything.
[16:34-16:34] UNKNOWN: And
[16:34-16:39] SPEAKER_00: I just deleted it. Yeah, but if it was working,
[16:39-16:39] UNKNOWN: we
[16:39-16:41] SPEAKER_00: can just upload a file.
[16:42-16:42] SPEAKER_02: Yep.
[16:42-16:46] SPEAKER_00: Or probably it's not actually deleted because Google does this.
[16:48-16:48] SPEAKER_02: Maybe.
[17:20-17:22] UNKNOWN: It
[17:22-17:24] SPEAKER_00: is not.
[17:25-17:25] UNKNOWN: Sydney.
[17:38-17:39] SPEAKER_00: I wonder,
[17:39-17:39] UNKNOWN: I
[17:39-17:45] SPEAKER_00: guess there were errors in the logs. I
[17:45-17:58] SPEAKER_03: think. Maybe not. Yeah, I don't think that there were. I think that it's just doing it over and over. And this spins up the whole instance.
[17:58-18:00] SPEAKER_00: So let me.
[18:00-18:07] SPEAKER_03: Application startup. I mean, ready condition true. I think it was working. I
[18:07-18:07] UNKNOWN: think
[18:07-18:11] SPEAKER_03: you're right. I think it was working.
[18:11-18:11] UNKNOWN: And
[18:11-18:13] SPEAKER_03: I was impatient yesterday. You
[18:13-18:13] UNKNOWN: and
[18:13-19:40] SPEAKER_00: me both. So as to finish and that's way longer than Pub Sucks prepared to wait right for it to try. And so it's going to make it. I don't know where we have a match or whatever, but like maybe we didn't. And what was happening was it was retrying every minute until one, the very first one finished, which may have been 11 or whatever we saw minutes. And then the rest of them finished. Yeah. Almost immediately.
[19:41-19:44] SPEAKER_03: Finishing after like all night over and over and over and over and over.
[19:44-19:44] UNKNOWN: How
[19:44-19:49] SPEAKER_00: would it keep going though? Cause like eventually you have to. No, like it never.
[19:49-19:49] UNKNOWN: The first one that finishes
[19:49-19:50] SPEAKER_00: would have sent that message.
[19:50-20:02] SPEAKER_03: Oh. No, I think there's something wrong with that. I don't think this theory is right. That it is truly just timeout because eventually it finishes. Yeah. If
[20:02-20:13] SPEAKER_00: we have that result, but it also finished it. No, like the last one finished at five 30 this morning. And maybe that was because you manually stopped
[20:13-20:20] SPEAKER_03: it. Right. Exactly. So this, that's the service wasn't sending that at all.
[20:20-20:31] SPEAKER_00: Yeah. So we almost need to say one, like as part of the startup, you need to send that message back and then we need to handle what happens then again,
[20:31-20:31] UNKNOWN: if
[20:31-20:35] SPEAKER_00: you fail. Right. After that. It seems like it's not going to.
[20:35-20:35] UNKNOWN: So
[20:35-20:38] SPEAKER_00: it's
[20:38-20:38] UNKNOWN: fine.
[21:37-21:39] SPEAKER_03: Oh, I understand.
[21:39-21:39] UNKNOWN: I
[21:39-21:47] SPEAKER_03: was getting ready to ask the question that we were talking about that. Well, why didn't it ever receive? Like, so I think it stops waiting for returns after.
[21:48-21:48] UNKNOWN: It's
[21:48-21:53] SPEAKER_03: just like, didn't do it. Yeah. Like it doesn't wait indefinitely. It only waits.
[21:54-21:54] UNKNOWN: Well,
[21:55-21:58] SPEAKER_00: you know, that's what's happening. So it stops
[21:58-21:59] SPEAKER_03: listening. At some point.
[21:59-22:13] SPEAKER_00: It's like this one failed. And then whenever this one finishes, it tries to send it back. There's no failure to be had in that. Pub's not listening. This thing ain't listening to see if Pub's received its. Right.
[22:13-22:18] SPEAKER_03: It should have received it because it's computer time. And I waited a minute. That's
[22:18-22:18] UNKNOWN: a
[22:18-22:18] SPEAKER_03: minute
[22:18-22:18] UNKNOWN: of
[22:18-22:26] SPEAKER_03: computer time and it didn't respond. So my job is to get this shit done. Yeah. And it just keeps off. If it doesn't come back in the first minute,
[22:26-22:26] UNKNOWN: it
[22:26-22:27] SPEAKER_03: just
[22:27-22:28] SPEAKER_01: for
[22:28-22:29] SPEAKER_03: seven days.
[22:30-23:28] SPEAKER_00: Yeah. So if we go back and count how many stopped whenever you stopped everything, that's how long it takes for diarization. That number of minutes. Yeah. Because there would have been more running if it takes longer than that. This is good. I was playing Call of Duty last night.
[23:28-23:28] UNKNOWN: You
[23:28-24:02] SPEAKER_00: know? And the campaign is not bad. It's still somewhat like a Call of Duty game. Go over here. But they're also incorporating some like Ubisoft style mapping and things like that. So it's like, hey, go in here. There's three options. We need to get this shit done. Like in one of them, you got to get like a retinal scan of a Senator. So you go to this place where he's at and there's three different avenues that you can pursue to try to do that. And then there's like a safe house you go back to and you can upgrade it.
[24:02-24:02] UNKNOWN: And
[24:02-24:26] SPEAKER_00: then there's a map and you can decide to go out and like seek. Like the mission I'm on right now is in Saddam's Iraq. And you go there and it's like, hey, we need to take out a few of these things, help the SAS do this. Then they'll help us do this. And there's like a bunch of different ways you can approach it. It's like, I see you, Call of Duty. Once you get in the game, it's still like, go to this object, kill everybody, get to the computer.
[24:27-24:33] SPEAKER_03: But it gives you something more than just go in that box and kill everybody.
[24:33-24:35] SPEAKER_00: Exactly. Follow that guy, kill everybody that shows up.
[25:02-25:04] SPEAKER_02: Exactly.
[25:45-25:54] SPEAKER_00: So this process does make trying to find a check from history almost completely. Right.
[25:58-25:58] UNKNOWN: I
[25:58-26:04] SPEAKER_03: agree. But it's best for me to walk history is in this. Yeah, it was
[26:04-26:21] SPEAKER_00: the last time you even considered that. No, I've done it once to be like, oh, look, you can look through your history. Right. I almost never even look through history and like my rock actively. I do like occasionally is like,
[26:21-26:21] UNKNOWN: oh,
[26:21-26:24] SPEAKER_00: I was talking about this with rock earlier, but I go and look at that.
[26:24-26:24] UNKNOWN: But
[26:24-26:31] SPEAKER_03: yeah, I wish there was a way that you can automate this and make there probably is a way like that says,
[26:32-26:32] UNKNOWN: hey,
[26:32-26:41] SPEAKER_03: continuously take notes on what we're talking about. Like I'm in a like not all the time, but not just the track transcripts, right? To like,
[26:41-26:41] UNKNOWN: hey,
[26:41-26:43] SPEAKER_03: you're doing like, keep notes.
[26:43-27:03] SPEAKER_00: That's that. And it's on a delay. But if we were actively like if we made that transcription service active and we were streaming to it, that's how you do it. I agree. And I mean, that becomes I don't know, it probably isn't that much more expensive. It's still transfer transcribing the same amount of stuff. I agree. If you go two hours.
[27:03-27:13] SPEAKER_03: I agree completely. I'm going to go look at this real quick. Just make sure that. New stuff that we're not misunderstanding.
[27:13-27:14] SPEAKER_00: Yes.
[27:14-27:14] UNKNOWN: OK,
[27:14-27:22] SPEAKER_00: 20 minutes. I feel like we did that like seven times. But it's funny. I thought so too.
[27:55-28:07] SPEAKER_03: Yeah. Yeah. Yeah. Yeah, I'll get some. Or put them in the Walmart order. Not Walmart. Costco.
[28:07-28:08] SPEAKER_00: Oh, yeah.
[28:10-28:11] SPEAKER_03: That's the last.
[28:11-28:12] SPEAKER_00: Last one of those.
[28:13-28:36] SPEAKER_03: Yeah. I have a trouble connecting to the model provider.
[29:10-29:11] UNKNOWN: Yeah.
[29:31-29:35] SPEAKER_00: Yeah. Yeah.
[29:35-29:36] SPEAKER_03: Yeah. Yeah.
[29:47-30:48] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[31:09-31:11] SPEAKER_03: Yeah. So did you read this?
[31:12-31:12] UNKNOWN: You
[31:12-31:18] SPEAKER_03: want to do the. I think we should do the more advanced and error handling. I agree.
[31:36-31:43] SPEAKER_00: Because that's the only failure mechanism. Once we implement this 202 accepted. Right. I agree.
[31:44-31:44] UNKNOWN: I
[31:44-31:49] SPEAKER_00: got a. Good quote this morning. Thomas Jefferson.
[31:49-31:50] SPEAKER_03: Okay.
[31:51-32:12] SPEAKER_00: It's actually. Like a quote at the top of chapter one. From Peter Jefferson. Thomas's dad. Who apparently like established the borders of Virginia. I didn't realize that. Tommy J went back. It is the strong in body who are both the strong and free in mind.
[32:12-32:13] UNKNOWN: I think that's the one thing that's important.
[32:14-32:22] SPEAKER_00: Yeah. I mean, It lines up with where we're at. Everything lines up.
[32:22-32:22] UNKNOWN: Yep.
[32:23-32:30] SPEAKER_00: Keep your body in shape and like, That is almost a representation of your being mentally in the right place. You said
[32:30-32:38] SPEAKER_03: something the other day. You know, of like your body being. The. Oh yeah. Yeah. I
[32:38-32:38] UNKNOWN: think that's the representation
[32:38-32:42] SPEAKER_03: is the word that comes up. A representation of your
[32:42-32:50] SPEAKER_00: state of mind, the state of your being. Like it is like your vessel. You're so like something about your soul. Yeah. Yeah,
[32:50-32:50] SPEAKER_02: exactly.
[33:19-33:23] UNKNOWN: Yeah. Your body
[33:23-33:36] SPEAKER_00: is the heart of your soul.
[33:36-33:36] UNKNOWN: It
[33:36-33:41] SPEAKER_00: is yours to bring forth sweet music from it or to use sounds. There you go.
[33:41-33:41] UNKNOWN: It's
[33:41-33:42] SPEAKER_00: from the private.
[33:49-34:02] SPEAKER_03: Yeah. It should be standard. Like when we write code, Try and accept blocks for everything. Yeah. Of course. Don't, Don't write any code without having error message.
[34:06-34:11] SPEAKER_00: I don't think
[34:11-34:29] SPEAKER_03: it adds computation time. And you're a computer and you don't, You're not actually typing on the keyboard. Everything. Like I'm almost down to minor blocks. Should have, Should be wrapped in try and accept statements. So you can identify where it breaks.
[34:30-34:32] SPEAKER_00: Yeah. At like scale scale. They probably do
[34:32-34:32] UNKNOWN: actually.
[34:34-34:34] SPEAKER_00: Yeah.
[34:35-34:35] UNKNOWN: Like
[34:35-34:36] SPEAKER_00: the super savages.
[34:37-34:37] UNKNOWN: Like
[34:37-34:40] SPEAKER_00: what are you talking about? You're talking about like 0 .03 milliseconds per time. Stop.
[34:41-34:44] SPEAKER_03: You're being ridiculous. It's not going to
[34:44-34:44] UNKNOWN: break.
[34:47-34:48] SPEAKER_03: Where would it break?
[34:50-34:51] SPEAKER_00: Yeah.
[34:52-34:53] SPEAKER_02: Okay.
[35:04-35:04] SPEAKER_01: Okay.
[35:12-35:15] SPEAKER_03: That doesn't necessarily make sense to me.
[35:15-35:26] SPEAKER_00: Try and accept covers the main processing stages. Exceptions from these stages will trigger a DLQ. So this is a new DLQ?
[35:30-35:37] SPEAKER_03: Yes. Why don't you just send them to the logs?
[35:38-35:49] SPEAKER_00: Well, I imagine you want the, If that sending to this new PubSub topic, Like, Hey, I failed. Might turn this one back on and have it try again.
[35:52-36:06] SPEAKER_03: I don't know. But I mean, I do see that you may want to take this message and retry it because it's a topic or it's a message that didn't get processed. I get that. But these are just error messages.
[36:06-36:11] SPEAKER_00: Yeah. But I think this is the handling for after the 202 messages.
[36:12-36:12] UNKNOWN: Yeah,
[36:12-36:27] SPEAKER_00: it is. And so in theory, there's another function that if you fail and this one gets triggered, Go, Hey, to the first PubSub topic and say, Hey, we need to try again. And hopefully it's still maintaining its dead letter topic.
[36:27-36:27] UNKNOWN: It
[36:27-36:30] SPEAKER_00: wouldn't be because it already got its 202. So yeah, I'm not sure.
[36:41-36:41] UNKNOWN: Right. I
[36:41-37:00] SPEAKER_00: don't know. This is the background task or capturing rather to a designated PubSub topic from wandering potential reprocessing rather than just being logged in.
[37:01-37:01] UNKNOWN: There
[37:01-37:35] SPEAKER_00: you go. At scale logs are just this mystical thing. They're just going in. So this allows you to recover it. Yeah, I guess it's keeping logs almost as it's having a log bucket that is very specific with which ones except it's called the PubSub topic in this case. I don't know. It's a question of are we building for production?
[37:35-37:35] UNKNOWN: I
[37:35-37:36] SPEAKER_00: guess in that sense.
[37:37-37:37] SPEAKER_03: Yeah, I mean, I think we should.
[37:37-37:39] SPEAKER_00: Yeah, so probably
[37:39-37:39] UNKNOWN: this
[37:39-37:44] SPEAKER_00: is the right is not have failures that we miss. Right. Or could miss.
[37:46-37:51] SPEAKER_03: Yeah, because otherwise it would just look like everything's there'll be errors in the locks.
[37:51-37:55] SPEAKER_00: Yeah, but hopefully you check your logs every 24 hours or so.
[37:55-38:00] SPEAKER_03: Right. But these messages would just go away because it's acknowledged and says,
[38:00-38:00] UNKNOWN: Hey,
[38:00-38:00] SPEAKER_03: it's good.
[38:00-38:11] SPEAKER_00: Yeah. Yeah. Which is intentional. That's not you would love to get a success message, but that's not realistic with the limitations of PubSub and
[38:11-38:11] UNKNOWN: the
[38:11-38:21] SPEAKER_00: service we're running on it. So we're just going, Hey, PubSub shut up. You're all good. Right. And then we're doing this thing. It's probably not going to fail.
[38:21-38:21] UNKNOWN: But
[38:21-38:26] SPEAKER_00: if it does, even like zonal failures, making it go over here and it loses some stuff like we
[38:26-38:38] SPEAKER_03: said, Hey, this message, if they're all critical, this one failed. Right. And like here's the answer. Here's the details about this message. Right. We know it's there because otherwise you have to go back through the logs and find all of
[38:38-39:09] SPEAKER_00: the filter on this. And hopefully you think of all of them and it's not some novel error that you haven't seen before. You're right. Yeah. This makes sense. This is robust. I've run into this quite a few times. Like I will at the beginning of a project, like, Hey, we're building for production. Part of this is just me learning on how to build for production, blah, blah, blah, go on and on. And then at some point I'll be like, Hey, motherfucker, can we just get it done? Can we just do it? And it's like, OK, well, this isn't exactly production ready,
[39:10-39:10] UNKNOWN: but
[39:10-39:47] SPEAKER_00: it works. So in theory now we upload audio. First post up topic sees that or the cloud function sees it, whatever the fuck that triggered. But we get our first post up topic that sends diarization service a, Hey, here's what you need to do. The paths and whatever the three paths,
[39:47-39:47] UNKNOWN: I
[39:47-39:55] SPEAKER_00: think. Diarization immediately upon receiving it successfully and being able to see it says, OK, post up, got it, post up,
[39:55-39:55] UNKNOWN: shuts
[39:55-39:57] SPEAKER_00: down. Yeah. Diarization goes all the way through.
[39:57-39:57] UNKNOWN: And
[39:57-40:02] SPEAKER_00: as of right now, kind of just finishes one cloud run
[40:02-40:02] SPEAKER_03: instance
[40:02-40:07] SPEAKER_00: and successfully, we think, writes a diarized version of
[40:07-40:07] UNKNOWN: this.
[40:07-40:07] SPEAKER_00: And
[40:07-40:07] UNKNOWN: then it sends that or
[40:07-40:11] SPEAKER_00: the JSON file for diarization to its bucket.
[40:11-40:13] SPEAKER_03: And it sends the new PubSub message
[40:13-40:18] SPEAKER_00: to the transcription or the messages for transcription service.
[40:18-40:29] SPEAKER_03: And the PubSub message triggers a cloud function. Well, it's which side of the PubSub is the cloud function?
[40:29-40:29] UNKNOWN: I'm
[40:29-40:29] SPEAKER_03: not sure.
[40:29-40:29] UNKNOWN: I
[40:29-40:31] SPEAKER_03: think it goes functioned in PubSub.
[40:31-40:38] SPEAKER_00: Yeah, the cloud function sees this diarized JSON file. That actually might have happened.
[40:38-40:41] SPEAKER_03: Maybe. I don't know. Yeah, because it went in the bucket.
[40:43-40:45] SPEAKER_00: Well, yeah. It might have triggered the transcription service.
[40:45-40:45] UNKNOWN: If we can see
[40:45-40:52] SPEAKER_00: the topic. Well, we don't have that function. So if the function is the same. I'm not sure if the function is done. Yeah, that's true. That's a good point.
[40:54-40:56] SPEAKER_03: Yeah. So whatever it did into it.
[40:57-40:57] UNKNOWN: But
[40:57-40:59] SPEAKER_03: yeah. So yeah. When the new bucket.
[40:59-41:00] SPEAKER_00: Right. And it's got a function.
[41:01-41:01] UNKNOWN: I
[41:01-41:03] SPEAKER_00: think is what it is monitoring that bucket.
[41:03-41:03] UNKNOWN: The
[41:03-41:04] SPEAKER_00: diarization bucket
[41:04-41:05] SPEAKER_03: that creates a PubSub message.
[41:05-41:06] SPEAKER_00: Yes.
[41:06-41:07] SPEAKER_03: That makes sense to
[41:07-41:10] SPEAKER_00: me. And that PubSub topic is sent to the transcription service.
[41:10-41:31] SPEAKER_03: Because the functions are brittle. And they just fire once. That says, hey, and if it doesn't like it doesn't hold or anything, it can get overwhelmed. Right. So what it reliably just says, hey, all I'm doing is taking metadata from you and creating a PubSub topic. And those may build up. But I can do that reliably.
[41:31-41:36] SPEAKER_00: And that's the magic of PubSub is like, oh, I have a thousand people waiting in line. That's fine. We'll get to them.
[41:37-41:39] SPEAKER_03: Yeah. Yeah. So yes.
[41:40-41:40] UNKNOWN: So
[41:40-41:49] SPEAKER_03: when it senses a file in the bucket, a function fires that creates a PubSub message. And then it does that twice.
[41:49-42:03] SPEAKER_00: Yep. And then ultimately the transcription service, which is just whisper and we know works. Yeah. Comes out and should trigger another function that's going to combine transcription and diarization, which we've not even begun.
[42:03-42:11] SPEAKER_03: Yeah. That's in the list. So I understand more.
[42:11-42:14] SPEAKER_00: Yeah. You got another new chat prompt whenever you're ready.
[42:19-42:20] SPEAKER_02: Thank you.
[42:57-42:57] SPEAKER_00: Yeah.
[42:57-42:57] UNKNOWN: So
[42:57-43:00] SPEAKER_00: it's a full on rebuild because we changed it a lot.
[43:01-43:04] SPEAKER_03: So but it is updated and I accepted it
[43:04-43:07] SPEAKER_00: right. You might grab like you did last time. The last sentence. Yeah,
[43:07-43:09] SPEAKER_03: I was going to, but it's like
[43:09-43:10] SPEAKER_00: it's a question.
[43:11-43:13] SPEAKER_03: Yeah, I think it is rebuilding.
[43:13-43:46] SPEAKER_00: Yep. I agree. Yesterday was the first time I've done anything like back focused push ups and
[43:46-43:46] UNKNOWN: I
[43:46-44:03] SPEAKER_00: was doing the bent over rows with 20s. I bet you feel it. I certainly do. I'm interested to see if Kyle is feeling anything. Yeah, me too. Because I explicitly remember when I was like six or seven, my brother being like, Hey, let's do it. We just did like body weight core stuff. And the next day I was like, fuck that. I'm never going
[44:03-44:03] UNKNOWN: to
[44:03-44:04] SPEAKER_00: do that again.
[44:23-44:24] UNKNOWN: Never do that again.
[44:45-44:52] SPEAKER_03: It's the topic for the background. Oh, it failed. Dead letter Q.
[44:54-44:55] UNKNOWN: Yeah.
[44:55-45:11] SPEAKER_00: That makes sense. Good to see that cursor also remorse the updates.
[45:12-45:13] SPEAKER_03: Yeah.
[45:13-45:15] SPEAKER_00: It's like, it's not even there.
[45:15-45:57] SPEAKER_03: I do need to do that. We didn't actually update the service yet. Right. With the new. Do the actual build and all that stuff. Correct.
[46:22-46:24] UNKNOWN: You
[46:24-46:25] SPEAKER_00: see the.
[46:25-46:25] UNKNOWN: I
[46:25-46:28] SPEAKER_00: got high. I
[46:28-46:33] SPEAKER_03: saw that you said that I did not actually process it and look at it.
[46:35-46:38] SPEAKER_00: Not like crazy, but over.
[46:39-46:40] SPEAKER_03: Four point eight.
[46:40-46:41] SPEAKER_00: Yeah.
[46:42-46:42] SPEAKER_03: That's not bad.
[46:43-46:58] SPEAKER_00: No, it's like four is like the high end of ideal, but like five is not high. Right. And what was the other one? Hardness around 500. Which is rain water fucking hard. Maybe all I can come up with.
[46:59-46:59] SPEAKER_03: Maybe
[46:59-47:22] SPEAKER_00: because we haven't done anything with that. Refill haven't done anything. No, that's crazy. Or I do have this back in my mind. I've been fucked by tests before. And so is that testing kit getting old and do you have to just like read my maybe when bottles start running out, do you just get mostly a whole new kit? That's the chlorine tester.
[47:23-47:23] SPEAKER_03: That's eight, seven,
[47:24-47:24] UNKNOWN: one.
[47:24-47:25] SPEAKER_00: I think so.
[47:25-47:26] SPEAKER_03: Yeah. Yeah.
[47:31-47:49] SPEAKER_00: But yeah, I kind of want to use the sticks again and then maybe just do a full one, but it's going to rain a few more times. We'll probably be due for dropping out. I haven't lifted the pressure on the pump recently either. Excuse me.
[48:01-48:01] UNKNOWN: I
[48:01-48:03] SPEAKER_03: don't think we need a big one,
[48:03-48:03] UNKNOWN: do
[48:03-48:03] SPEAKER_03: we?
[48:03-48:04] SPEAKER_00: I don't think so.
[48:04-48:08] SPEAKER_03: So just this two ounce one is probably fine? Yeah, because
[48:08-48:17] SPEAKER_00: I'm planning on only using the kit like every second or third. Test. It's a yellow bottle. Yeah, I think this is
[48:17-48:17] SPEAKER_02: the
[48:17-48:18] UNKNOWN: one.
[48:24-48:30] SPEAKER_00: 17 bucks for the little guy. The gracious pulls are fucking mind -pissed.
[48:31-48:40] SPEAKER_03: Yup. There it is. Wednesday, June 11th, power gone. Yes. I'll CJ grab over some
[48:40-48:40] SPEAKER_00: food.
[48:56-49:01] SPEAKER_03: It says it was built and deployed. It's not. Yeah.
[49:06-49:17] SPEAKER_00: I could see V1 .1 -logging having been built and deployed. That's not what we're talking about. Like maybe that's stolen from yesterday. I can see that being the case.
[49:55-50:08] UNKNOWN: Okay. That
[50:08-50:15] SPEAKER_03: should be pretty fast. Yeah. Or not. Oh, okay.
[50:19-50:34] SPEAKER_00: Nothing really new. Maybe just some lines of code. So it is redoing it all. It didn't. Oh, it did. Okay. It didn't see the platform. Yeah, I saw
[50:34-50:35] SPEAKER_03: it. Okay.
[50:35-50:36] SPEAKER_00: Because sometimes it's
[50:36-50:40] SPEAKER_03: at the beginning. Yup. But I did specifically look for it.
[50:45-51:01] SPEAKER_00: What is no install recommends? I don't even see that. It's in the Docker file, I guess. Like online is currently running. No
[51:01-51:01] UNKNOWN: idea.
[51:02-51:05] SPEAKER_03: Or maybe it's in... It said don't come at me with any bullshit.
[51:06-51:06] UNKNOWN: Just
[51:06-51:06] SPEAKER_03: go. Yeah,
[51:06-51:06] UNKNOWN: just
[51:06-51:07] SPEAKER_02: go.
[51:11-51:12] UNKNOWN: Yeah.
[51:14-51:22] SPEAKER_00: Yeah, because dash Y is yes to everything. So that would make sense to... And then you're carrying on from that some time.
[51:38-51:41] SPEAKER_03: Why is that happening?
[51:44-51:46] SPEAKER_00: It's getting rid of that new update.
[51:47-51:47] UNKNOWN: And
[51:47-51:48] SPEAKER_00: then getting install dash Y. I
[51:48-51:48] UNKNOWN: know
[51:48-51:49] SPEAKER_00: it's not going
[51:49-51:49] UNKNOWN: to
[51:49-51:54] SPEAKER_00: be okay. Adding git.
[51:54-52:01] UNKNOWN: Do you say so?
[52:07-52:16] SPEAKER_00: I mean, if it did do some rewrites in the Docker file based on the news, I can see that, I suppose. But why did that work before? That is my
[52:16-52:24] SPEAKER_03: question. Like it specifically said it's needed for whisper. It was like, well, it was working before. Without that.
[52:43-53:14] UNKNOWN: Okay. Okay.
[53:36-54:04] SPEAKER_00: Interesting that Bible quote crosses over an awful lot with that Buddha quote right there. The book one. Yeah, that happens across all of these religions.
[54:04-54:05] SPEAKER_02: That's interesting.
[54:42-55:13] UNKNOWN: Okay. Okay.
[55:28-55:39] SPEAKER_03: It's interesting that it's rebuilding all of this. But whatever. No, I guess... I don't know why it's doing that, but it's
[55:39-55:39] UNKNOWN: fine.
[55:51-55:52] SPEAKER_00: Is it because it's a new version?
[55:54-56:08] SPEAKER_02: I have no idea. Just some new coffee,
[56:09-56:09] UNKNOWN: I
[56:09-56:09] SPEAKER_02: guess.
[56:25-56:25] UNKNOWN: It's
[56:25-56:32] SPEAKER_03: interesting that... Or this went on. Yeah, I'm confused.
[56:33-56:33] UNKNOWN: I
[56:33-56:34] SPEAKER_03: like it.
[56:36-56:40] UNKNOWN: It was like this... It... Whatever,
[56:40-56:41] SPEAKER_03: that got this much
[56:41-56:41] UNKNOWN: worse.
[56:41-56:43] SPEAKER_00: Oh yeah, like broke free some of it. I don't think
[56:43-56:44] SPEAKER_03: that's
[56:44-56:44] UNKNOWN: the
[56:44-56:56] SPEAKER_03: case. Or maybe like... I don't know. I'm just speculating maybe it's run off from the concrete or something like that. Potentially, yeah, like rainwater
[56:56-57:04] SPEAKER_00: running into, not just falling in. Yeah. Maybe. Or we're swam in it a few times.
[57:07-57:14] SPEAKER_03: But it will eventually go back down. Like it has been going, I think. Maybe it's not even going. Maybe it doesn't go down
[57:14-57:15] SPEAKER_00: ever. We got it down.
[57:15-57:15] UNKNOWN: From
[57:15-57:19] SPEAKER_00: my understanding, once you get it in range, it kind of just stays there for months and
[57:19-57:19] UNKNOWN: months.
[57:19-57:30] SPEAKER_00: Yeah, so it's going to be hot forever. Until we do another drain and refill, which I don't want to. Yeah, we probably need to do some drains to let the pump or whatever.
[57:30-57:31] SPEAKER_03: Oh yeah,
[57:31-57:31] UNKNOWN: the
[57:31-57:43] SPEAKER_03: back flush. I don't know, I think you do that like once a season. Normally, like you just let it rise. So basically as long as it's staying clean. So I may hit it with
[57:43-57:55] SPEAKER_00: the test strip. Yeah. And just like, I don't know, maybe one specific of those chemicals is just old or I put too many fucking drops in there,
[57:55-57:55] UNKNOWN: I
[57:55-57:56] SPEAKER_00: guess. I don't know.
[57:58-58:04] SPEAKER_03: It's just a constant battle. Yes. And again, I think most people don't
[58:04-58:26] UNKNOWN: realize it. How much it costs to maintain it. And it's great for hosting and lunch. But there's also hours and hours of maintenance, which is fine. I'm not too bad. I am, but I'm going to stop doing it.
[58:27-58:38] SPEAKER_03: It's all good. And it's awesome. It is awesome. I love it. I love specifically being able to look through here. Yeah,
[58:38-58:38] UNKNOWN: the
[58:38-58:54] SPEAKER_03: aesthetic. I love the aesthetics of it and just being able to see it. But I actually like being in it and hanging out more than I've talked to people. I knew that they or she would like it, correct. I didn't realize I would like it. Yeah, it's relaxing as shit to just
[58:54-58:59] SPEAKER_00: chill in the pool for like an hour. And like you would do a little flutter
[58:59-58:59] SPEAKER_03: kick, you would do
[58:59-58:59] UNKNOWN: a
[58:59-59:16] SPEAKER_03: little something out of it. And I get the appeal of like going to the lake, hanging out, water chilling and hanging out. But there's a boat and it's a wave. But this is like us right there. And then at the end, I just go take a shot. I'm like, it's
[59:16-59:16] UNKNOWN: the
[59:16-59:17] SPEAKER_03: same as the bike. Right.
[59:18-59:18] UNKNOWN: If the bike
[59:18-59:20] SPEAKER_00: has pulled up to the front door. Right.
[59:21-59:33] SPEAKER_03: Okay. I'd do it much more frequently. Man,
[59:33-59:33] UNKNOWN: I
[59:33-59:46] SPEAKER_03: was freaked out because I woke up to three alerts. So you got like a full 550, 1100. Like what is happening? Like did it get hacked?
[59:46-59:46] UNKNOWN: Is
[59:46-60:09] SPEAKER_03: it going to be $10 ,000? Yeah. Like, but I understand now that what was happening and it actually did two things. Made me be like, you really got to be on top of it. Yeah. And secondly, we understand it forces that set of errors forced us to really understand what was happening. What how Pub Sub works, how it stops, how it accepts the message, all of that stuff.
[60:09-60:14] SPEAKER_00: But a greater level of understanding for 24 hours. Or actually like 18,
[60:14-60:14] UNKNOWN: I
[60:14-60:28] SPEAKER_00: think, because you have a clock or whatever. And yeah, I think that little like cheap slap in the face is probably a good one to get. Exactly. That is my point. Your words are
[60:28-60:36] SPEAKER_03: what I'm thinking. It's like because you can get a $10 ,000 slap in the face and it's like, yep, that was my, I should have looked at that.
[60:36-60:43] SPEAKER_00: Yeah. Whereas this one you're like, okay, that sucks and pay it. Only be like reaching out to the support. I should have looked at that
[60:43-60:45] SPEAKER_03: and it's only $20.
[60:53-60:55] SPEAKER_00: And now we understand Pub Sub better.
[60:56-60:57] UNKNOWN: And
[60:57-60:58] SPEAKER_00: even the parts that we were right about,
[60:58-60:58] UNKNOWN: we
[60:58-61:02] SPEAKER_00: are now certain we were right about, like the mechanism.
[61:02-61:02] UNKNOWN: But I
[61:02-61:08] SPEAKER_03: actually understand the flow of the function to Pub Sub message and what makes it acknowledge and all of that stuff like
[61:08-61:13] SPEAKER_00: that. Yeah, even the function being in front of the Pub Sub as opposed to behind it.
[61:14-61:14] UNKNOWN: Yeah,
[61:14-61:19] SPEAKER_02: exactly. Well, it's still.
[61:21-61:22] SPEAKER_00: This is not broken.
[61:22-61:23] UNKNOWN: It's true.
[61:33-61:37] SPEAKER_03: And it's game day. I'm excited about that.
[61:37-61:43] SPEAKER_00: I was thinking about, I don't know if it's going to be dark enough, but watching them outside. Like
[61:43-61:43] UNKNOWN: chill
[61:43-61:43] SPEAKER_00: at the pool.
[61:43-61:44] SPEAKER_03: What's
[61:44-61:54] SPEAKER_00: the weather look like? Shit probably. Like honestly, if you're not in the pool, you're just chilling. It might be perfect. I mean, there's a flood
[61:54-61:55] SPEAKER_03: watch. I'm
[61:55-61:55] UNKNOWN: not sure.
[61:56-62:14] SPEAKER_03: That tells you. I actually I think that's for like midnight. Like no tonight. Oh, like Friday, the 100 or 90 percent chance of rain and thunderstorms. And the hours are midnight to six a .m. Gotcha. Where the bulk of the water is going to drop
[62:14-62:16] SPEAKER_00: basically shitty all day. Yeah.
[62:18-62:22] SPEAKER_03: And two point three inches for the day tomorrow. I'm
[62:22-62:22] SPEAKER_00: going
[62:22-62:22] UNKNOWN: to
[62:22-62:24] SPEAKER_00: the pool regardless.
[62:24-62:27] SPEAKER_03: Yeah. Or I don't know, like it's still kind of high.
[62:28-62:28] SPEAKER_00: Yeah.
[62:28-62:31] SPEAKER_03: And so my goal is to just let it be.
[62:31-62:31] UNKNOWN: I
[62:31-62:52] SPEAKER_03: just let it be high. And then like especially once the once it gets like super hot and it's like it'll. No, it doesn't. Oh, like so basically leave it alone as long as it doesn't get so high. It's like you have to do it. Right. And then it's overflowing. Yeah. But then it'll evaporate so much every day that.
[62:52-62:57] SPEAKER_00: Yeah. Also, you know, string of like some 90s with no humidity outside. Right.
[62:58-63:08] SPEAKER_03: Um, yeah, I think tonight actually it actually is high of 80 and cloudy, which actually means
[63:08-63:10] SPEAKER_00: not good for swimming, but great for
[63:10-63:18] SPEAKER_03: sitting on the patio and it being cloudy is dark. Like you can see the TV that this actually might be the time to
[63:18-63:19] SPEAKER_00: do it. The
[63:19-63:19] UNKNOWN: optimal
[63:19-63:26] SPEAKER_00: TV watching outside day. Yeah, exactly. Or in the garage.
[63:27-63:29] SPEAKER_03: That's probably. That's the most. Yeah, that's probably.
[63:29-63:29] UNKNOWN: Both doors
[63:29-63:31] SPEAKER_03: wide open. That's it.
[63:33-63:43] SPEAKER_00: Yeah, I think there's that's almost certainly what I'm going to do tonight. Because it's also a good pool planning day.
[63:44-63:57] SPEAKER_03: Yeah. And I am on pre vacation. Yeah. Already. Like I the stuff that I have left to do are almost nice to haves. Yeah. And.
[63:57-64:00] SPEAKER_00: Well, and like tonight even more so. Yeah, that's what I'm
[64:00-64:11] SPEAKER_03: saying. Like in like I will have gotten through like I didn't plan anything for myself like task wise tomorrow. I left it open case something popped up or whatever.
[64:11-64:13] SPEAKER_00: Talk or whatever. But
[64:13-64:18] SPEAKER_03: I don't anticipate like I think by the end of today I'm going to be through all of my even nice to haves. Fuck
[64:18-64:18] SPEAKER_00: yeah dude.
[64:18-64:22] SPEAKER_03: Because I've been on the bench long enough that I finally caught up to everything.
[64:22-64:23] SPEAKER_00: And you don't have
[64:23-64:26] SPEAKER_03: some anxious. No. Assignment coming around the
[64:26-64:26] UNKNOWN: corner.
[64:26-64:26] SPEAKER_03: No,
[64:26-64:26] UNKNOWN: I don't.
[64:26-64:28] SPEAKER_03: Like I have that new the new.
[64:28-64:28] UNKNOWN: Which
[64:28-64:35] SPEAKER_03: is fucking awesome. It is cool. And I told them, hey, yeah, I'm going on vacation next week. They're like, sounds good. So we're really
[64:35-64:35] UNKNOWN: cool.
[64:35-64:37] SPEAKER_03: We'll make our first meeting the week after we get back.
[64:37-64:45] SPEAKER_00: Are you about to have like the. The life of a developer like these lazy motherfuckers that you've got to experience.
[64:45-64:45] UNKNOWN: Especially
[64:45-64:47] SPEAKER_00: if I stay half time. Yeah. And
[64:47-65:33] SPEAKER_03: I'm not going to mention because my manager what Enoch was one of the primary schedulers. So he always kept me scheduled. But I mean my manager now is Jeff. He doesn't talk to his director. I'm not going to talk to him. And so I don't know if anybody knows that I'm half time. So I'm not going to say anything. Certainly not to Jeff. Like hey, do you realize I'm only half time? Like no, I'm going to keep working on the project. I'm going to use my time. And I got this six month project. It's challenging. But it's interesting. And I'm going to learn a ton. And it's unique because it's going to publish. Like it's going to push information to Borg. Right. So it's this combination of a cloud and an internal project. And the other peers,
[65:34-65:34] UNKNOWN: whatever
[65:34-65:35] SPEAKER_03: the tech team.
[65:35-65:35] UNKNOWN: The
[65:35-65:48] SPEAKER_03: customer is an internal customer and they're Google developers. Right. Right. So I'm going to work with a team of Google developers as a PSO cloud. And it's it's cool.
[65:50-65:50] UNKNOWN: It's cool.
[65:51-65:58] SPEAKER_00: And developers are lazy and make TikTok videos and don't actually work hard. Right. Exactly. So I think this is about to
[65:58-65:58] UNKNOWN: be
[65:58-65:58] SPEAKER_00: the dream.
[65:59-66:57] SPEAKER_03: They tried to get me to do this by myself. But as a single person, I was like, No, it's like I like they need an expert. What was requested was a network expert. It's like, do you want to do this? I was like, I'm interested in it. But I don't think I have the like I'm not an expert. I'm above average for PSO because I did the target. But it's like, well, let's go 50 50. And they brought me in the GSD network expert. He's in somewhere in South America. But he's cool. Very good. And so it's like between the two of us and I talked to him yesterday. It's like and I told him this story. It's like they asked me to do this by myself and I said no. And they gave me you like, so do you think us together have the thing now that we've looked at everything you think we can get through this. And we both were like, yes, I think so. It's like, OK, let's do it. Because otherwise we'll go back and say, yeah, pick somebody. It's not us. But I don't feel like that. I feel like it's challenging
[66:57-67:03] SPEAKER_00: but not overwhelming. Especially like we can jam on any problems you're having. Right. Exactly. Potentially.
[67:11-67:19] SPEAKER_03: Oh, the giga three giga. Yeah, there you go. There's not any long. That's fine.
[67:20-67:20] SPEAKER_00: And this is part
[67:20-67:22] SPEAKER_03: of using up our extra 30
[67:22-67:24] SPEAKER_00: minutes. But there's no way around it. There is no way around
[67:24-67:24] UNKNOWN: it. This 30 minutes
[67:24-67:28] SPEAKER_00: was going to have to be spent for this, however many minutes this takes.
[67:28-67:40] SPEAKER_03: I mean, I think it would be faster to use Cloud Build. But you had to pay for it. Exactly. So no, I don't want to use Cloud Build. I'll use my machine. To do this thing
[67:40-68:00] SPEAKER_00: that happens perfectly fine. And again, I'm going to keep saying it probably. But already we've done four to nine days worth of work this morning. No question. Again, putting those topics in place and
[68:00-68:06] SPEAKER_03: ironing everything out. No question. And just even learning at just current day speed.
[68:06-68:06] UNKNOWN: That
[68:06-68:23] SPEAKER_03: this is what development looks like. But we're right in the middle of doing it. And again, I mentioned to Enoch when we were talking about this side project and stuff like that. I think that we're probably in the maybe 10 percent,
[68:23-68:23] UNKNOWN: but
[68:23-68:28] SPEAKER_03: certainly top five percent in the world at agents and doing things like
[68:28-68:46] SPEAKER_00: it. Because I would argue above almost everyone that's making YouTube videos. Yeah. Because they know the space, but they're just engaging with people that aren't supposed to make what they're doing and have no concept of like the architecture side. They're not
[68:46-68:50] SPEAKER_03: actually making enterprise ready applications. Right. And not that we need it.
[68:51-68:51] UNKNOWN: But
[68:51-68:54] SPEAKER_03: that's what we're going for. We're working towards this.
[68:54-68:54] UNKNOWN: You
[68:54-68:57] SPEAKER_03: know, when the thing happens, you know, like I keep praying,
[68:58-68:58] UNKNOWN: like
[68:58-69:04] SPEAKER_03: show us the thing when the thing is like, OK, there's the path. Go. We will have done all of this stuff and not have to.
[69:04-69:09] SPEAKER_00: Well, how do you do? It's the classic like, man, you got lucky that right place, right time thing.
[69:09-69:10] SPEAKER_03: And that's like, well,
[69:10-69:10] UNKNOWN: it
[69:10-69:37] SPEAKER_03: wasn't like we were luck means, hey, we were working and working and working. And then we found ourselves and happened to be happened to find ourselves with the right in the right place, but also have the skills to drive the routine, the everything in place. Just like, yes, I'm ready to accept this challenge because if it was like, hey, do you guys know how to do this thing? Well, I've heard of it. I can probably figure it out. And you got the year or however long to figure that.
[69:37-69:43] SPEAKER_00: I mean, we started the realty one project by watching the 40 hour course twice. Right.
[69:44-69:44] UNKNOWN: Right.
[69:45-70:13] SPEAKER_03: And all of that is sunk in like an effort that it seems like like I I do what you do a little bit, but not as much as you. Meaning like it seems like what everybody should be able to do this. Well, they can if they spend the thousand hours that we've spent and had the discipline to do it, had the life. Even if it's not just discipline, it's like life stability. And so that's one of the
[70:13-70:19] SPEAKER_00: ability like the reason I'm able to read all this stuff and do all this stuff is largely because of you. No, it's not just that.
[70:19-70:19] UNKNOWN: But
[70:19-70:24] SPEAKER_00: it is just part of it. My situation is such that I am able to do those things.
[70:24-70:36] SPEAKER_03: Right. And just being able to have a stable family life and things like that where it's just like I just don't have a lot of stress and things in my life that I can get up in the morning, get a cup of coffee and sit here and talk.
[70:37-70:37] UNKNOWN: And
[70:37-70:49] SPEAKER_00: even in that situation, it's not easy. It's still hard to do all of those things like to make yourself and get in that focus so you can imagine when you do have all the chaos and all the other things. It's just nearly impossible. Just can't do it.
[70:49-70:49] UNKNOWN: It's
[70:49-70:56] SPEAKER_00: like people eating healthy. It's like it's not that I can't afford it. It's that I can't. Right. It's like McDonald's is right there and I got shit to
[70:56-70:56] UNKNOWN: do.
[70:56-70:57] SPEAKER_00: I got stuff to do and
[70:57-70:58] SPEAKER_03: I just can't.
[70:58-70:58] UNKNOWN: I
[70:58-71:01] SPEAKER_03: can't. The thought process of like, hey,
[71:01-71:01] UNKNOWN: I
[71:01-71:09] SPEAKER_03: got to reform or change my life around the rearrange. That's
[71:09-71:09] UNKNOWN: the
[71:09-71:13] SPEAKER_03: word around around health. It's
[71:13-71:13] UNKNOWN: like
[71:13-71:14] SPEAKER_03: it's daunting. Like that
[71:14-71:14] SPEAKER_00: means
[71:14-71:14] UNKNOWN: you got
[71:14-71:24] SPEAKER_00: to spend five or six hours on Sunday making a bunch of meals. Right. So you don't eat like shit throughout the week. And that's like, well, Sunday is like the one day I rest. Exactly.
[71:24-71:29] SPEAKER_03: Or whatever. Or I got to go pick up my kid and
[71:29-71:29] UNKNOWN: like, it's
[71:29-71:34] SPEAKER_03: like, and you just can't. It's harder. You can do it. But it is much more challenging.
[71:34-71:34] UNKNOWN: I
[71:34-71:49] SPEAKER_03: think we have all these things in place and we're moving forward. And that is in the mindset of trying to build something and not just, hey, I'm just looking for a good job and to be in that sit.
[71:49-71:49] UNKNOWN: Right.
[71:49-72:02] SPEAKER_03: Right. That we're seeking and doing all the things. I just think we have the stuff in place and, you know, it may not ever happen. But I think if it's going to we're maximizing the chances that it's going to.
[72:03-72:42] SPEAKER_00: Like worst case, obviously not, but like worst case, we get through all of that. Don't get this big explosive product. But we are in the meantime being super disciplined on diet and exercise and all that stuff. And we're in a much better place. No matter what engine that's as unlikely as getting the unicorn ten billion dollar at like the fact that completely nothing happens or like anything happens. And it's like completely crazy. Those are equally unlikely, which is to say like they're the middle equally likely as well. Right. Like that's your thing is like it's not more likely that it's going to be nothing.
[72:43-72:50] SPEAKER_03: But it's a whatever bell curve. Something in the middle. The middle of that bell curve is pretty good. Exactly.
[72:51-72:56] SPEAKER_00: The middle is pretty good. Oh, you're only the poorest guy on the all in.
[72:57-72:57] UNKNOWN: Like
[72:57-72:59] SPEAKER_00: that's what those guys.
[72:59-73:23] SPEAKER_03: Yeah. And when I like when I do the exercise of, hey, what's I do? What's like if I and I don't want to be ungrateful. Right. And so I hate having these conversations with thoughts of like, you know, what do I want? Like I just want to build something that's impactful and successful. Probably profitable goes with that.
[73:24-73:24] UNKNOWN: You
[73:24-73:37] SPEAKER_03: know, but I'm not looking to be a zillionaire. I want to be debt free, like pay off everything, finish everything and be able to have a business that we work for. And do all of this not working for Google.
[73:37-73:37] UNKNOWN: Basically
[73:37-73:46] SPEAKER_03: do exactly what's Google. In debt free, like be able to have paid off everything, have a business, live this life.
[73:46-73:46] UNKNOWN: And
[73:46-73:49] SPEAKER_03: just it's not like I want to sit and sleep till 10 o 'clock every day.
[73:49-73:49] UNKNOWN: It's
[73:49-73:56] SPEAKER_03: like I'll get up at five every day and do what I'm doing just in our office. Well, actually, I don't think I would do that. I
[73:56-73:56] UNKNOWN: think
[73:56-74:07] SPEAKER_03: that's one of the luxuries I think I would take if it were our business. Like, well, I want to work right there. Yeah. Or maybe go to the garage. Exactly. And build it such that it is
[74:07-74:07] UNKNOWN: kind of...
[74:07-74:14] SPEAKER_03: It's not in our bedroom or in the workout room or whatever that we build in office. That's just right there.
[74:15-74:15] UNKNOWN: Like
[74:15-74:17] SPEAKER_00: an investment property in the neighborhood or
[74:17-74:17] UNKNOWN: something.
[74:17-74:17] SPEAKER_00: Something
[74:17-74:19] SPEAKER_03: that's close enough where,
[74:19-74:19] UNKNOWN: hey,
[74:19-74:22] SPEAKER_03: I'm going to go talk to Mel. Right. I'm going to ride my bike to
[74:22-74:22] UNKNOWN: the office.
[74:22-74:24] SPEAKER_03: Exactly. Something like that.
[74:25-74:26] SPEAKER_00: But
[74:26-74:28] SPEAKER_03: even if it's in town, it'll be fine.
[74:28-74:32] SPEAKER_00: Yeah. But it doesn't necessarily need to be, especially if we're
[74:32-74:32] UNKNOWN: all in the...
[74:32-74:33] SPEAKER_00: Because that's expensive.
[74:33-74:33] SPEAKER_03: Yeah.
[74:34-74:34] UNKNOWN: It's your real
[74:34-74:35] SPEAKER_03: estate property. It's
[74:35-74:36] UNKNOWN: expensive. Like,
[74:36-74:40] SPEAKER_03: if I can work or expand the footprint of
[74:40-74:40] UNKNOWN: the property...
[74:40-74:42] SPEAKER_03: Exactly. Do your
[74:42-74:45] SPEAKER_00: property expansions with a little bit of executive right
[74:45-74:45] UNKNOWN: off the bat. Build
[74:45-74:45] SPEAKER_00: the garage
[74:45-74:51] SPEAKER_03: and put an office in there. Exactly. And a grow room and the storage. Right.
[74:52-74:57] SPEAKER_00: A little studio. Yeah, exactly. Yeah, exactly. We might park the car in there at some
[74:57-74:57] UNKNOWN: point.
[74:57-74:58] SPEAKER_00: Maybe at
[74:58-75:03] SPEAKER_03: some point. But that's the studio, office, and grow room area.
[75:05-75:07] SPEAKER_00: We'll move the pool table over there, park the car,
[75:07-75:10] SPEAKER_03: and... Exactly. Put your car... The car's over here.
[75:16-75:17] SPEAKER_02: We're going to
[75:17-75:17] UNKNOWN: go there.
[75:18-75:39] SPEAKER_00: Oh, yeah. Yeah, I mean, I think Batical is like its journey. And we learned a lot and didn't have anything blow up off of it. But a lot of what we're doing right now is resting on the back of what we did. It is. Not just this technical stuff, but just having picked up instincts and just understanding of the problem.
[75:39-75:39] UNKNOWN: And
[75:39-75:40] SPEAKER_00: recording and notes and
[75:40-75:43] SPEAKER_03: things and just like whatever the...
[75:43-75:43] UNKNOWN: Yeah, pages and
[75:43-75:44] SPEAKER_03: pages of notes that
[75:44-75:52] SPEAKER_00: we're going to add to this service at some point. I think it's all been obviously part of a path.
[75:57-76:03] SPEAKER_03: Yeah. I'm still wondering about this Recon service that it's updating. Yeah. Like,
[76:03-76:03] UNKNOWN: why
[76:03-76:10] SPEAKER_03: are we doing... Why is it doing this? But is it going to break things and we're going to go back and do this all over again?
[76:10-76:23] SPEAKER_00: Yeah, is that weird whatever we noticed earlier that it had us change the Git stuff. Right. Is that going to be a knock on? So now this thing sees that there's a Git thing there and now it doesn't like it. Right.
[76:23-76:23] UNKNOWN: It has
[76:23-76:23] SPEAKER_03: to
[76:23-76:24] SPEAKER_00: rebuild.
[76:24-76:26] SPEAKER_03: Yeah. Maybe. That's fine.
[76:31-76:38] SPEAKER_00: I mean the alternative is right now we're in the documents of like fucking dead letter topics, figuring out how to do it and we haven't even gotten here
[76:38-76:38] UNKNOWN: yet.
[76:38-76:39] SPEAKER_00: I don't even know
[76:39-76:43] SPEAKER_03: how to make a PubSub topic. Right. I can click off of it probably.
[76:43-76:43] UNKNOWN: Right,
[76:43-76:47] SPEAKER_03: exactly. But I don't know, truly, I do know what a PubSub topic is.
[76:47-76:53] SPEAKER_00: Right. I've probably doubled my understanding of it this morning. Right. And we didn't go that deep on
[76:53-76:53] UNKNOWN: it.
[76:54-77:09] SPEAKER_03: Like, but it helps though knowing what PubSub is and what it's supposed to... Like, it really... This is an agent. Like, hey, I know what a PubSub... Hey, I think you should have this PubSub topic that does this. Sounds good. Make it so.
[77:09-77:20] SPEAKER_00: Ultimately, this is what we're driving for. Yes. Is like the press the button and then stop thinking about it. Right. And now we're being impatient that it's working so well. The...
[77:20-77:20] UNKNOWN: The
[77:20-77:23] SPEAKER_00: compute is going to be dispatched forever. Like, it's not getting quicker. Oh,
[77:23-77:23] UNKNOWN: I agree. Like, this
[77:23-77:28] SPEAKER_00: is the bottleneck because new compute is going somewhere else.
[77:28-77:39] SPEAKER_03: I agree. I think that this is like almost like science fiction level already. Like, if you would have told developers five years
[77:39-77:46] SPEAKER_00: ago that you can do this... You could have told them, like, literally, I was...
[77:46-77:46] UNKNOWN: Like, when the
[77:46-77:52] SPEAKER_00: GVT -3 came out before chat and I got the API key and kind of was like, oh, this is fucking awesome.
[77:54-77:54] UNKNOWN: But
[77:54-78:01] SPEAKER_00: you could have... If you had told me then that Cursor were going to exist, I'd have been like, maybe, man. But I remember when
[78:01-78:13] SPEAKER_03: we were looking at AI tools and it's like, man, it would be so awesome if you can look at the whole repository and just like read it and know what's in there. Right. And that was like six months ago.
[78:13-78:16] SPEAKER_00: I mean, we started using Cursor like six weeks ago. Yeah, exactly.
[78:17-78:27] SPEAKER_03: Yeah, just a few months ago, it couldn't... Like, there was no IDE where it would just look at everything and let alone be able to write to it and do this.
[78:27-78:31] SPEAKER_00: Yeah, Cursor's been around for a while, but I don't think we were that late to the party. I
[78:31-78:31] UNKNOWN: don't
[78:31-78:34] SPEAKER_00: think so either. I think the iterations that we missed,
[78:35-78:35] UNKNOWN: there
[78:35-78:46] SPEAKER_00: were probably a few that were good, but it was like beta phase where they just had it out there and it was buggy and everything. So we kind of got to it as the platform was growing into itself. And here we
[78:46-78:46] SPEAKER_03: are.
[78:46-78:46] UNKNOWN: But
[78:46-78:47] SPEAKER_03: it's the thing,
[78:48-78:48] UNKNOWN: like,
[78:48-78:53] SPEAKER_03: when I... Enoch is probably... He was ahead of me in side projects and things like that.
[78:54-78:54] UNKNOWN: And
[78:54-79:01] SPEAKER_03: that's got me to doing that. And I talked to him last week and he's like, have you ever heard of Cursor? And he's like, no. He's
[79:01-79:02] SPEAKER_00: like... Well, get on it,
[79:02-79:02] UNKNOWN: bro.
[79:02-79:04] SPEAKER_00: Come up with a new project and get
[79:04-79:04] UNKNOWN: in
[79:04-79:04] SPEAKER_00: there.
[79:04-79:04] UNKNOWN: Yeah, you better go look at
[79:04-79:10] SPEAKER_03: Cursor. Like, you should be... Like, if you're developing without using AI, and I say specifically,
[79:10-79:10] UNKNOWN: I
[79:10-79:16] SPEAKER_03: don't... I wouldn't... I don't know. I'm not going back to anything without this
[79:16-79:16] UNKNOWN: thing.
[79:16-79:20] SPEAKER_03: That's not integrated into it. So it's going to be Cursor over the next thing.
[79:20-79:20] UNKNOWN: Unless this is just a web for some
[79:20-79:20] SPEAKER_03: reason. Right,
[79:20-79:27] SPEAKER_00: exactly. Yeah. And then you go back to like passing back... I assume he's using AI to supplement his work. It's not
[79:27-79:28] SPEAKER_03: just Cursor. I don't
[79:28-79:28] UNKNOWN: know. I
[79:28-79:54] SPEAKER_03: don't know. And I think that it's like... I feel like this about the car. Like, it's still buggy and things like that. But I am not buying a car that doesn't drive itself again. That I will keep this one or one like it. But... And I'll keep upgrading. But I'm not going back to like, okay, I'm just going to buy... Me personally, I'm not going to spend my money on a car that doesn't drive itself. That makes sense.
[79:55-80:00] SPEAKER_00: Did they release the Austin taxis? There are a lot of people saying that that is not going to go.
[80:02-80:02] UNKNOWN: They...
[80:04-80:08] SPEAKER_03: He... Like, I don't know if you've seen Elon in the last few days. I'll give you an update. Do you want an update? Yeah, sure. Okay.
[80:09-80:09] UNKNOWN: So,
[80:09-80:11] SPEAKER_03: I think what... I don't follow him.
[80:11-80:12] SPEAKER_00: Yeah.
[80:12-80:15] SPEAKER_03: So, I don't see his messages. I only see them with somebody else.
[80:15-80:19] SPEAKER_00: Yeah, because he's a crackhead that just tweets all day. When somebody else like
[80:19-80:29] SPEAKER_03: posts him or makes some comment about it. And my filter is that if it's political in nature, even reposting it, I don't follow that person again. Yeah. So, all I get is pretty benign stuff.
[80:29-80:29] UNKNOWN: You got
[80:29-81:01] SPEAKER_03: pretty good, like well fostered... Yeah. And so, I don't see a lot of the craziness. But, so two things. But, I have seen this because it's big enough and she sees stuff and sends it to me sometimes. But, as far as the self -driving stuff, he posted a tweet saying that they are testing them. Driverless. But, you can't get in them yet. Yeah, of course. So, I don't know if any... But, they're totally worth it. I have not seen a picture or a video of them in Austin. But, they are testing driverless. Like, we made it to the... Like,
[81:01-81:01] UNKNOWN: on a closed lot.
[81:01-81:04] SPEAKER_03: Right, exactly. Where and what is...
[81:04-81:04] UNKNOWN: Has
[81:04-81:17] SPEAKER_03: anybody seen them? Like, that's... I haven't seen any pictures or videos of somebody go... Because, if I saw one driving around in Austin, I would definitely... Like, if I saw a Tesla operating by itself in Austin...
[81:17-81:17] UNKNOWN: Which
[81:17-81:36] SPEAKER_03: means they're not. Right. They would be all over the place. Because, people... Like, you casually are following it. And you are asking, like, hey, has this happened yet? If anybody saw one, it would be a billion hits. So, I don't know. But, he is not with... He's not in Doge anymore.
[81:37-81:37] SPEAKER_00: Yeah.
[81:37-81:43] SPEAKER_03: And, he posted yesterday, basically, trashing the bill. I saw that he
[81:43-81:43] SPEAKER_00: had, like,
[81:43-81:43] UNKNOWN: in
[81:43-81:47] SPEAKER_00: an interview, made a comment about it. Like, a bill can be either big or beautiful.
[81:47-81:47] UNKNOWN: It
[81:47-81:49] SPEAKER_00: can't be both. No, Hick. He
[81:49-81:50] SPEAKER_03: was like... He
[81:50-81:50] UNKNOWN: actually
[81:50-81:53] SPEAKER_03: went in. He was, yeah. He flipped back to... He did this,
[81:53-81:53] UNKNOWN: like,
[81:53-82:01] SPEAKER_03: I can't help myself. And now, he's tweeting, like, hey, call your congressman. Call whatever. We gotta stop this
[82:01-82:01] UNKNOWN: bill.
[82:01-82:02] SPEAKER_03: It's a PR campaign. Yeah.
[82:03-82:18] SPEAKER_00: It went bad. He went too full on retard in the conservative side. And the left all the way abandoned him. And now, the right realizes, pretty quickly, that he's just a grifter. That, like, his first thing was, we need all these Indian people to come in and suppress your wages. But, that's not why. But,
[82:18-82:18] UNKNOWN: I
[82:18-82:19] SPEAKER_00: mean,
[82:19-82:19] UNKNOWN: no,
[82:19-82:19] SPEAKER_00: no,
[82:19-82:27] SPEAKER_03: no. That didn't go well. But, so, yeah. So, now, he's doing the Elon thing. And he's now, I assume, him and Trump are gonna start fighting. Yeah. Or something. I don't know.
[82:28-82:37] SPEAKER_00: I assume he's trying to do the PR game because, oh, yeah, you own a bunch of companies that are not doing that great right now. Right. And people are starting to see that you're kind of
[82:37-82:37] UNKNOWN: a
[82:37-82:40] SPEAKER_00: fucking liar at every turn. That's what...
[82:40-82:44] SPEAKER_03: But, at a minimum, you're popping around and doing... You're inconsistent. That's where,
[82:44-82:54] SPEAKER_00: whenever he said, like, the taxis, there's... We got an agreement to go live in Austin. A whole wave of people were just, like, no fucking shot. It's not even ever gonna go
[82:54-83:07] SPEAKER_03: live. Like, I'm driving the car, the hardware of the previous version, and it's nowhere close. Right? I have to, like... I know where the good parts and the bad parts are. Right. But it's not completely...
[83:07-83:07] UNKNOWN: It needs constant
[83:07-83:23] SPEAKER_03: human... ...unsafe surveillance. Yeah. Exactly. It is a benefit to me, especially, like, on trips. No question. But to just let that thing drive around? No. No. So maybe the newer hardware, which I've only seen on videos and I've never been in.
[83:23-83:23] UNKNOWN: I
[83:23-83:31] SPEAKER_00: think that Mark Rober video basically was all I needed to see. Right. It's like... Does the new hardware include LiDAR? If no, not fucking happening,
[83:31-83:31] UNKNOWN: dude.
[83:31-83:36] SPEAKER_03: But the Google one, it was fine. It's good. I rode in it, like,
[83:36-83:36] UNKNOWN: six
[83:36-83:36] SPEAKER_03: times.
[83:36-83:36] UNKNOWN: The
[83:36-83:39] SPEAKER_03: technology that does the thing? I rode in it, like, six times. It's great.
[83:39-83:58] SPEAKER_00: Yeah. Because it has LiDAR. It can see everything. The Tesla can't. And Elon did that because he wanted to be able to sell a whole shitload of them. And it worked. And that's what he did. But there's no pathway between those cars without LiDAR. Without LiDAR. But then you run into the same problem, which is why he didn't want to do it initially.
[83:59-83:59] UNKNOWN: It
[83:59-84:17] SPEAKER_00: costs a lot more money. Your car would cost 50 % more? Yeah. And you wouldn't have bought it. No. I definitely would not. I barely bought it as is. Right. So that's the place we find ourselves. You made all these promises that were lies. I am on the... He doesn't even believe it. He's just the
[84:17-84:17] UNKNOWN: opposite.
[84:18-84:28] SPEAKER_00: You made all these promises at the beginning to get the thing kicked off. It got kicked off. And now we're at the phase where you have to execute or everyone knows you were full of shit. And you can't execute.
[84:28-84:47] SPEAKER_03: And that's like a Silicon Valley thing. What's the blood test thing? Yeah. The theranos. Yeah. It's like, fake it till you make it kind of thing. It's what's almost expected from CEOs of, like, hey, we do have the technology. And it is possible. And we're working towards it. Right. But I'm going to, you know, say, oh, it's
[84:47-84:47] UNKNOWN: going
[84:47-84:49] SPEAKER_03: to be here in six months. Right.
[84:49-85:15] SPEAKER_00: It's going to be here in six months. Then you just couldn't help yourself. You bought into your own hype. Started lying about everything, including recorded shit. And now you can't seem to fix your rockets because they've had the same problem three times in a row now. Yeah. We talk about fast iteration, but like a lot of very smart people are starting to like, I watched a video and it referenced this article from after the previous launch.
[85:16-85:16] UNKNOWN: And
[85:16-85:25] SPEAKER_00: it was like, based on all these things, they're about to do another test and it's going to fail in exactly the same way. And it was like an engineer guy. And did. Yeah. And so
[85:25-85:29] SPEAKER_03: I think that V2, the version two is dead. Yeah. Like it's got,
[85:30-85:30] UNKNOWN: whatever
[85:30-85:33] SPEAKER_03: it has a fundamental issue that I
[85:33-85:33] UNKNOWN: assume.
[85:33-85:43] SPEAKER_03: It's a problem. I hope that they're fixing with V3. V3 is already in construction, but there are still two V2s left and they can either scrap them or lost them.
[85:43-85:43] UNKNOWN: So
[85:43-85:52] SPEAKER_03: I think the next two are going to blow up too before they, or just decide, Hey, this is too bad, too bad PR. We're not going to do it. It's still
[85:52-86:03] SPEAKER_00: like a lot of money and gas and all this stuff. Yep. Just wasted time. But I think he's just one of the points that this guy pointed out was stainless steel is too heavy to do what
[86:03-86:03] UNKNOWN: he
[86:03-86:05] SPEAKER_00: says. No matter what, like it always will be.
[86:05-86:05] UNKNOWN: You
[86:05-86:08] SPEAKER_00: can say you got this fancy new one. It's too heavy.
[86:08-86:10] SPEAKER_03: Stainless steel is super heavy. Right.
[86:10-86:21] SPEAKER_00: And so basically make the bottom stage that doesn't have to deal with all the bullshit out of carbon fiber. It's more expensive to iterate through in development. Yeah. So it seems like Elon's just cut
[86:21-86:21] UNKNOWN: costs. And
[86:21-86:21] SPEAKER_00: he
[86:21-86:24] SPEAKER_03: doesn't like changing his mind. Well, once he's decided.
[86:24-86:31] SPEAKER_00: He decided on the cheap thing, just like not including LIDAR. And it's like we can get to this point and I'll lie the whole time and say that we'll be able to get past that final
[86:31-86:31] UNKNOWN: hurdle.
[86:31-86:32] SPEAKER_00: That's interesting. And I've never seen
[86:32-86:34] SPEAKER_03: this. If you run across that,
[86:34-86:34] UNKNOWN: will
[86:34-86:53] SPEAKER_03: you send it to this guy? I'll try. But that actually makes sense. It has two different materials. Like have the, what you're, that doesn't go through like reentry. Make that a carbon fiber. Much, much slower. And just bring it back over and over. And the stuff that has to go through reentry and is super heavy. Okay, well make that
[86:53-86:53] UNKNOWN: out of stainless steel.
[86:53-86:54] SPEAKER_03: That can be a beast. It's
[86:54-87:06] SPEAKER_00: also one third of the overall structure. Right. And so, but the level of retarded narcissist that you have to be to lie about a video game won't allow for
[87:06-87:06] UNKNOWN: that.
[87:06-87:10] SPEAKER_00: Yeah, it's due to everything else. And also he's been a hutch the whole time. He's just a face.
[87:10-87:10] UNKNOWN: I mean,
[87:10-87:11] SPEAKER_00: come on.
[87:11-87:13] SPEAKER_03: I mean, it's working out for him.
[87:13-87:13] UNKNOWN: Or
[87:13-87:22] SPEAKER_03: maybe not. Like, but I think Tesla will, the stock at least, will die without him.
[87:23-87:24] SPEAKER_00: Yeah, but I think it's going to.
[87:24-87:24] UNKNOWN: Like
[87:24-87:25] SPEAKER_00: that's the thing.
[87:25-87:25] UNKNOWN: But then
[87:25-87:25] SPEAKER_00: it'll
[87:25-87:26] SPEAKER_03: eventually come back.
[87:26-87:27] SPEAKER_00: I think it's
[87:27-87:27] UNKNOWN: running
[87:27-87:27] SPEAKER_00: its course.
[87:27-87:27] UNKNOWN: Like
[87:27-87:33] SPEAKER_00: they don't have light on it. And we're moving into the era of self -driving cars. And that thing cannot do it.
[87:33-87:45] SPEAKER_03: I agree. It can't do it by itself. But it's a fantastic driver in this driver assistance system. For sure. No question. But there's that. Before you ever get to buy yourself.
[87:45-88:24] SPEAKER_00: And that's the, that is what the valuation of that company is based on. It's a tech company. Yeah. And if you can't do that, then it's going to die no matter who the CEO is. Yeah. I hadn't put the theorem up straight until you make the connection together. But yeah, he's just been lying. Yeah. And saying like, oh, my people will figure it out because obviously I'm too retarded
[88:24-88:29] SPEAKER_03: to. I'm off doing all this stuff. They're good. They're on track. It's coming in, coming in
[88:29-88:29] UNKNOWN: the
[88:29-88:30] SPEAKER_03: next six months. And
[88:30-88:40] SPEAKER_00: then affecting public policy and putting the money that he's been able to rip out so back in.
[88:56-88:57] UNKNOWN: But
[88:57-89:08] SPEAKER_03: in general, I've backed away from following all of that and I'm focusing on just like to me and the things we're doing it's like I can't
[89:09-89:18] SPEAKER_00: what am I gonna do to stop your bullshit? nothing not one thing I can clearly see that you're full of shit and you have been the whole time and now I need to move on right
[89:18-89:43] SPEAKER_03: exactly that's it it doesn't affect me in my day to day life I would love for the car to work and I will buy one when it that that is my trigger is my current I am going to put a tow hitch on there yeah and so ideally for me the set of things that I would like in my car and I don't think I'm gonna ever get the truck it's just too big I want to
[89:43-89:43] UNKNOWN: be
[89:43-90:32] SPEAKER_03: able to tow a reasonable sized trailer the two things I need to do is move my lawnmower around and go to Lowe's and pick up wood or whatever thing a washer and dryer PVC pipe or whatever I need to tow that level of thing 10 miles I'm never gonna tow a boat to the lake I need so I need that level which my car is capable of doing that yeah I'm gonna put a tow hitch on it but you know so the next one I buy ideally I get the tow hitch put on there it's not bad it's a thousand dollars self -driving like that actually works and so I want to wait until it actually works and Pousher which yeah the only one that does that of the truck but I assume that at some point all of the vehicles will do that because
[90:32-90:34] SPEAKER_00: right is like
[90:34-90:37] SPEAKER_03: right I want to
[90:37-90:37] UNKNOWN: get
[90:37-90:40] SPEAKER_03: the I want to model Y that's not that I can connect to
[90:40-90:53] SPEAKER_00: be was before Trump even made it into office it's true and he claimed it was specifically also
[90:53-90:53] UNKNOWN: I
[90:53-92:00] SPEAKER_00: don't know much you know about it it's basically indentured servitude they come over they are contracted by a company and they that company after X number of years can decide whether they can get citizenship based on their performance Wow I did not know that so they not only come in they're coming in for high paying jobs for Americans suppressing that job market removing them all and then yeah it's a weird situation where sometimes they get fucked with and they just kind of have to deal with it no they just have shit working conditions and if you have a problem with it yeah yeah you can see you don't have to do this anymore that's what H1B visas are they're made to make you make less money and fuck these people over and have like it's not like fucking 1800s factories but it's like oh actually you're making 80 it was actually seven right is that a problem no okay and then oh we're not paying overtime but we need you to stay right is that a problem yeah
[92:00-92:02] SPEAKER_03: do you have all they have all leverage
[92:02-92:34] SPEAKER_00: right and they're not like the day like Steve Bannon popped off and that guy is a propagandist to the max but he popped off the day you know I started talking about that like show us which jobs Americans can't do because he straight -up said Americans are too lazy and stupid to do this and so Bannon was like show us show us exactly and don't make me go get every single H1B visa that is associated with your company at all and see if it's a high like unbelievable talented person right it's not right because
[92:34-92:47] SPEAKER_03: the impact on me is well the equivalent of hey well you want this seller is like well I can hire this person that is
[92:47-92:51] SPEAKER_00: yeah it's a supply and demand question you're adding more supply that will take less
[92:51-92:52] SPEAKER_02: yeah
[93:32-93:35] SPEAKER_00: is this that fucking gift maybe
[93:58-94:00] SPEAKER_02: what why don't you look up the box
[95:14-95:15] UNKNOWN: Okay, fine.
[95:22-95:23] SPEAKER_03: I'm gonna do it again.
[95:23-95:24] UNKNOWN: Oh.
[95:25-95:25] SPEAKER_02: Fast.
[95:25-95:26] UNKNOWN: That kid.
[96:02-96:03] SPEAKER_03: Mostly waiting.
[96:03-96:04] SPEAKER_00: Yeah.
[96:56-97:01] SPEAKER_03: Are we in this loop of fixing the
[97:01-97:16] SPEAKER_00: wrong thing? It's definitely throwing some of those warning flags in the mind. I almost want to go over to the git area
[97:16-97:17] SPEAKER_04: and
[97:17-97:34] SPEAKER_00: look at the changes made in the Docker file, start a new chat, and be like, why are all these new fucking errors coming up? Yeah. Because this shit used to work. And now it is going to play. Okay.
[98:05-98:06] UNKNOWN: So
[98:06-98:06] SPEAKER_00: you're
[98:06-98:06] UNKNOWN: gonna
[98:06-98:22] SPEAKER_00: try to do the same shit and see if it works. Basically the loop. I don't know that for sure, but I've seen that fucking thing. And this is, like that Docker file worked.
[98:22-98:22] SPEAKER_03: Right,
[98:22-99:20] SPEAKER_00: it did. One day ago. And we didn't change anything in it. Right. This morning. Until it didn't work. Right. So some other changes what made it not work and cursor thought it was a Docker file. So I assume the only thing we changed, will you go look at the git area? Like over here? Yeah, up top. So we've changed the Docker file and main .py. The Docker file, I almost want to revert all of those changes and then go into main .py. Like start a new chat, try to do the full deployment again. Right. Like get rid of those changes in the Docker file though, is what I would do. Like I think you can push that little curved arrow over here.
[99:20-99:20] UNKNOWN: Over
[99:20-100:10] SPEAKER_00: there. Oh that one? Discard changes. Yeah. If you want to do that. But that Docker file got built, deployed, and diorized the full audio excerpt yesterday. And you got new chat. Like it shouldn't be pip installing anything outside of the requirements that TXT in my head. Yeah, well I mean that's what it's doing. But there's a pip install above it. Oh yeah.
[100:10-100:10] UNKNOWN: Green
[100:10-100:21] SPEAKER_00: is what it added to it today. That
[100:21-100:23] SPEAKER_02: doesn't make any sense.
[100:23-100:27] SPEAKER_00: That's the thing it added when we first went like what?
[100:28-100:28] UNKNOWN: 30
[100:28-100:30] SPEAKER_00: minutes ago or whatever it
[100:30-100:30] UNKNOWN: was.
[100:32-100:35] SPEAKER_03: Yeah, so it's doing installs up here.
[100:38-101:02] SPEAKER_00: Right, and that get one is the stuff that it added. Right. And so I think we should get rid of all of those changes that were made today, try to run it. It likely will not work, which is fine. But we're pretty sure it has nothing to do with the Docker file. Unless very specifically what we added to main .py is what triggers that git.
[101:02-101:02] UNKNOWN: Which
[101:02-101:04] SPEAKER_00: I don't think is what happened.
[101:40-102:38] UNKNOWN: Okay. Okay. Okay. Okay.
[102:58-103:06] SPEAKER_03: Yeah, so the answer basically is yes. So the changes in main .py to...
[103:07-103:33] SPEAKER_00: Right, but it says that that git error was specifically a problem with whisper. We didn't do shit to whisper this one. Okay. And we didn't test whisper yesterday, but we've seen it work.
[103:37-103:38] UNKNOWN: I
[103:38-103:45] SPEAKER_00: would say since yesterday when this Docker file worked without that shit.
[104:08-104:11] SPEAKER_03: Why is whisper even a part of
[104:11-104:11] SPEAKER_00: the diorization?
[104:50-104:52] UNKNOWN: Okay.
[105:08-105:09] SPEAKER_02: Exactly.
[105:19-105:20] UNKNOWN: Okay.
[105:35-105:38] SPEAKER_03: It shouldn't be in there anyways. Right.
[106:03-106:04] SPEAKER_00: Okay.
[106:09-106:10] UNKNOWN: So
[106:10-106:37] SPEAKER_00: yeah, so this number two is because it has files that copy into slash app, which is slash app slash diorization service slash main .py. So is that what it says on the Docker file? Where is this slash app? Yeah, but like, yeah, so and then copy requirements .txt.
[106:40-106:41] UNKNOWN: Okay.
[106:41-106:45] SPEAKER_00: It's still trying to do that run, uninstall.
[106:46-107:16] SPEAKER_03: Yeah, it says removing that line. Oh, okay. Yeah, so basically what I want to make sure is that requirements .txt in the diorization service does not include freaking whisper and it does not. Right. It didn't,
[107:16-107:16] UNKNOWN: it
[107:16-107:18] SPEAKER_03: never contained, it
[107:18-107:18] UNKNOWN: says
[107:18-107:20] SPEAKER_03: the original Docker file for the computer.
[107:20-107:24] SPEAKER_00: No, the other Docker file for the transcription
[107:24-107:24] UNKNOWN: service. Right,
[107:24-107:39] SPEAKER_00: it's looking at the wrong thing. Right. Where is? It's right there. It's that one. Nope, nope, nope. This? That's not that Docker file is the one for the transcription service.
[107:39-107:39] SPEAKER_03: Right.
[107:39-107:39] UNKNOWN: I
[107:39-107:47] SPEAKER_03: want to look further. Yeah, this one. Oh, gotcha. Are they both just loose and that's why it gets them confused?
[107:47-108:14] SPEAKER_00: No, Docker file for the diorization service is in the fucking diorization service directory. Right. And the Docker file for the entire service is in the root directory. Yeah. Yeah, and that one requires. Yeah, maybe we should have these things split into different projects, but they're not so cursor quit fucking around.
[108:15-108:22] SPEAKER_03: Right. Yeah, I think it's getting confused with the Docker files or something. I mean with the requirements. Right. And the Docker files,
[108:23-108:23] UNKNOWN: whatever.
[108:26-108:28] SPEAKER_00: I think we need to start a new chat, but.
[108:28-108:34] SPEAKER_03: I agree, but I want to log this stuff. Right. Like maybe fix this and then update.
[108:39-108:46] SPEAKER_00: I mean, you'd even know. Like, would you like me to proceed with fixing the correct thing? Yeah, and quit looking at the wrong shit.
[108:58-108:59] SPEAKER_03: And now we're going
[108:59-108:59] UNKNOWN: to
[108:59-109:36] SPEAKER_03: have to build again, but it should be. It should be quick. You say so. Let's do it now. You want to do an update?
[109:37-109:38] SPEAKER_00: Yeah. Okay.
[110:23-111:39] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay.
[111:56-111:57] SPEAKER_02: Okay.
[111:57-111:57] UNKNOWN: Some
[111:57-111:59] SPEAKER_02: days are just like this.
[111:59-112:05] SPEAKER_00: Yeah. And still that first 30 minutes of getting the deadlier stuff in place. Yeah.
[112:06-112:06] UNKNOWN: Yeah, I
[112:06-113:00] SPEAKER_00: agree. But it's frustrating. Yeah.
[113:00-113:00] UNKNOWN: Yeah, it
[113:00-113:03] SPEAKER_02: is. Yeah, it is.
[113:13-113:14] UNKNOWN: Okay.
[113:19-113:21] SPEAKER_00: What repository?
[113:23-113:26] SPEAKER_03: I'm not sure. Like something's going on.
[113:26-113:36] SPEAKER_00: Like it needs to see into the diarization service and then build.
[113:39-113:42] SPEAKER_03: There you go.
[113:42-113:42] SPEAKER_00: Yeah.
[113:43-113:53] SPEAKER_03: Look, like the Docker build process was for the diarization service was using the requirements that TXT from the project's root for. There it is. It's like.
[113:56-114:01] SPEAKER_00: Not the one in the same exact areas. Right. Like something
[114:01-114:04] SPEAKER_03: like that. It's like, why are you even trying to do whisper?
[114:04-114:04] UNKNOWN: I'm not
[114:04-114:14] SPEAKER_03: sure. That's why it's not working is you're using this wrong freaking requirements. Yes. Not copied that. Yes.
[114:15-114:19] SPEAKER_00: We got there. So rebuild. It's going to be a long ways.
[114:19-114:19] UNKNOWN: My
[114:19-114:19] SPEAKER_00: guess
[114:19-114:22] SPEAKER_03: is you go back to what it was before.
[114:22-114:24] SPEAKER_00: Right. That was working just fine. Everything was
[114:24-114:28] SPEAKER_03: great. We had the instinct of like, why are you freaking rebuilding?
[114:29-114:33] SPEAKER_00: Yeah. Like an hour ago. I guess we should trust those little instants.
[114:36-114:39] SPEAKER_03: Yeah. So now, like this is
[114:39-114:39] UNKNOWN: a
[114:39-114:40] SPEAKER_03: different set of stuff.
[114:40-114:45] SPEAKER_00: Yeah. It's the ones you need for diarization. I mean,
[114:45-114:45] UNKNOWN: we
[114:45-114:49] SPEAKER_00: could have gotten to this point by paying closer attention. I
[114:49-114:49] UNKNOWN: agree. But
[114:49-114:54] SPEAKER_00: it's not realistic. That's like the self -driving when it actually works and being like.
[114:54-114:58] SPEAKER_03: Right. It's never made this error.
[114:58-115:05] SPEAKER_00: Right. And it is arguably a little bit on our structure.
[115:06-115:09] SPEAKER_03: Yeah. Because these probably should be two different repositories.
[115:10-115:10] UNKNOWN: Technically
[115:10-115:25] SPEAKER_00: the root is also just another folder. Like if this was the overall transcription service and there was a transcription service folder inside of it. But also use the fucking requirements that's in the place where you're running.
[115:25-115:29] SPEAKER_03: It's because we added the diarization service after doing transcription service.
[115:29-115:29] UNKNOWN: And
[115:29-115:56] SPEAKER_03: it probably should be because it ultimately is going to end up in two different cloud run spots. So it probably be two different repositories. But there's also all of the stuff associated with the not only cloud run, but the PubSub stuff. And that kind of ties them together. So in some ways they should be in the same repository. The structure should just be different. Like the transcription service should be in a subfolder. And it should not be in
[115:56-116:00] SPEAKER_00: root. The project should be some bigger name. Yeah.
[116:01-116:01] UNKNOWN: Just
[116:01-116:02] SPEAKER_00: transcription. I agree.
[116:04-116:13] SPEAKER_03: And that may be something we do next after if we get this working correctly. Say, okay, take this whole thing and like let's start.
[116:13-116:13] UNKNOWN: Move
[116:13-116:27] SPEAKER_00: most of the root files into a folder and it should be good from there. And then the actual root of the project will likely just be like a get, ignore, and a readme. Right. And then some folders where all the dark
[116:27-116:27] UNKNOWN: files and stuff.
[116:27-116:28] SPEAKER_00: Where all the stuff
[116:28-116:31] SPEAKER_03: is in there. Exactly. That's the way it should be.
[116:33-116:39] SPEAKER_00: You can add that to the readme as it should do. Yeah. I'm not going to. I'm sorry.
[116:42-116:42] UNKNOWN: I
[116:42-116:44] SPEAKER_00: have no idea how long this is going to take.
[116:45-116:47] SPEAKER_03: The rest of the time?
[116:47-116:48] SPEAKER_00: Possibly.
[116:49-117:06] SPEAKER_03: I don't specifically have an 8 o 'clock meeting. But. Yeah, the whole probably need to be sitting down. Exactly. And I have stuff that I like. So I planned my day out to get through the couple of tasks that I wanted to get through so that I have tomorrow free to do mostly nothing.
[117:07-117:15] SPEAKER_00: Yeah. I mean, we could pull a shift tomorrow. Like work later if you're all caught up and have been. Yeah. Maybe like bring your computer in here and just be like.
[117:15-117:16] SPEAKER_03: Yeah, exactly.
[117:16-117:16] UNKNOWN: Get
[117:16-117:17] SPEAKER_00: some stuff.
[117:17-117:17] UNKNOWN: All
[117:17-117:18] SPEAKER_00: right. Let's get back to work.
[117:18-117:18] SPEAKER_03: Yeah.
[117:18-117:18] UNKNOWN: And
[117:18-117:23] SPEAKER_03: I. It is possible that I will have meetings pop in tomorrow that like,
[117:23-117:23] UNKNOWN: hey,
[117:23-117:26] SPEAKER_03: since oh, you're not going to be here next week. Let's get together.
[117:26-117:26] UNKNOWN: By
[117:26-117:27] SPEAKER_03: possibly you
[117:27-117:27] UNKNOWN: mean
[117:27-117:28] SPEAKER_03: a near certain.
[117:32-117:38] SPEAKER_00: But you're not on any thing. Unless it's that South American dude. I guess the other team.
[117:38-117:40] SPEAKER_03: I'm meeting with him tomorrow morning. First thing in
[117:40-117:40] UNKNOWN: the
[117:40-117:53] SPEAKER_03: morning. And we have a re like we're going to rethink. Like we both go off and certain learning things like that. Ultimately, what we're trying to do. The next thing is meeting with their team.
[117:54-117:54] SPEAKER_01: Right.
[117:54-119:19] SPEAKER_03: And we want to give them a set of and that's not going to be next week. We have to. But we want to give them a set of questions. Like, here's our questions. We've reviewed everything. Here's the things we're confused about our questions and send those so that they have a week to think about a process and whatever. And then we'll meet next week. And so I just want to get that done. But I'm meeting with him tomorrow morning. The other stuff that I'm working on. So we are working on a project to automate pricing. Right. So given you tell us all these things you want us to do and go through an automated processing and the I fear. But I think I'm the I'm the most technical person on the team. that's doing this. It's a bunch of program managers and people like that that are like, yeah, we should just make it work. And we have a meeting with VPs the week that I get back. So all of the final processing, and we're gonna run a demo in that meeting, and they're gonna try to set off, and it's not working right now. They're gonna try to do that without me next week. So that when I come back, I think the meeting's on like Tuesday when I get back. And so that's the thing that I think is gonna come up. It's like, oh wait, you're not gonna be here next week.
[119:19-119:19] UNKNOWN: We
[119:19-119:19] SPEAKER_03: can't do
[119:19-119:21] SPEAKER_01: it with that little sick guy.
[119:22-119:41] SPEAKER_03: Here's what I think we need to do, or we may just do hand waving and say, hey, here's the structure of everything. Here's where we're gonna put an agent. Here's where we're gonna put an agent. It's gonna do this, it's gonna do this. Yeah, a little presentation. Here's the philosophy of what we're getting ready to do.
[119:41-119:42] SPEAKER_00: All of these things are possible.
[119:43-119:43] UNKNOWN: We
[119:43-119:44] SPEAKER_00: just need some time to do it.
[119:45-119:57] SPEAKER_03: And as long as the people who are leading the project are good with going to their bosses and saying, hey, it's not done, but here's what, as long as that's the case. And if they've switched to, no, no, we gotta have a working prototype.
[119:59-120:20] SPEAKER_00: This makes me think of that when you talk about managers and stuff like that, but this quote on Reddit said, it was talking about a guy who just got, the post was a guy just got a job, came in and this code base is a mess and he's trying to figure it out and was asking some questions. And one person was like, man, that's job security. You're gonna figure this thing out. You got it, all that stuff.
[120:20-120:20] UNKNOWN: And
[120:20-120:23] SPEAKER_00: he was like, underneath that,
[120:23-120:23] UNKNOWN: it
[120:23-120:29] SPEAKER_00: was like the ultimate job security is getting shit code into production. You'll be a manager for the rest of your life.
[120:31-120:33] SPEAKER_02: Yep, it's kind of like that.
[120:33-120:40] SPEAKER_03: It is like, there's a bunch of people talking and maybe not even suggesting things.
[120:40-120:40] UNKNOWN: It
[120:40-120:44] SPEAKER_03: is, I think their core skill set is to sound important or
[120:44-120:44] UNKNOWN: smart. To not
[120:44-120:45] SPEAKER_03: get
[120:45-120:47] SPEAKER_00: noticed as useless. Yeah, and
[120:47-121:09] SPEAKER_03: then in the background they go, hey Daniel, can you do this? Or what do you think we should be doing? Right. And like, this, what we talk, like how long is it gonna take for me to get that done? Hey, sir, we're gonna have a presentation to you. I didn't say that word. We're gonna have a presentation to you by Tuesday.
[121:10-121:11] UNKNOWN: Yeah.
[121:11-121:18] SPEAKER_03: Oh, you're going on vacation? What do we need to do to make sure we're ready for the presentation? They're not actually doing anything, like they're just.
[121:19-121:34] SPEAKER_00: Yeah, and that's like 80 % of the workforce. That's the parental principle. Right. It's like, most of these people, and that's what our government is, and 80 % is so understated. Yeah. There's like one dude, and his name's Thomas Massey. Sure. That's the one guy that's
[121:34-121:40] SPEAKER_03: not. And they sweep in, I'm super busy, hey, what are we doing here? What's the status of the thing? Why are
[121:40-121:42] SPEAKER_00: you busy, motherfucker? You're not doing anything.
[121:42-121:52] SPEAKER_03: Right, and so what I've been doing, like when I say the couple things I wanna get done, it's like I want to get as much of this done with my philosophy, like here's what it should be. Yeah,
[121:52-121:52] UNKNOWN: have
[121:52-121:53] SPEAKER_03: it looking like what
[121:53-121:53] UNKNOWN: you expect.
[121:53-122:16] SPEAKER_03: And you guys need to do this stuff while I'm gone. This is what you need to do, and we have a meeting today to talk about it. Right, so if that meeting goes poorly, actually, it's a working session. Yeah. And so here's all the things that I did. Here's what you need to do, and then we will be ready for this presentation. You don't even need to do anything next week. Let's do it today. Right. Let's just get this done.
[122:18-122:24] SPEAKER_00: That makes sense. So many fucking useless people.
[122:24-123:00] SPEAKER_03: I think that how I could best serve my organization is not be a consultant. It's just give me a team. Yeah, it's some tasks that you need done. Like yeah, if you want this agent to work, just let me work on it for two weeks. Just give me access to the people and stuff that I need. Yeah, leave me alone. Give me a couple people, a small team of people, like basically what we're doing, let me do this all day with Jim, give me access to all the stuff, and in two weeks, it will be working. We'll be very, very close. Right. And don't put me on these other assignments. If you really want this to be done.
[123:01-123:11] SPEAKER_00: Access to some number of people that I can send messages to, give no one the ability to send me a message that's not a reply to one that I sent them. Right, and just let me get it done.
[123:11-123:15] SPEAKER_03: And I think that specifically Jeff, the director of my group,
[123:17-123:17] UNKNOWN: he
[123:17-123:19] SPEAKER_03: is double, like he says two things.
[123:19-123:19] UNKNOWN: Like
[123:19-123:43] SPEAKER_03: he kind of senses that, hey, we need agents, this is very important. Like, hey, why aren't we getting it done? It's like we're all freaking busy. And this is a side project that we're trying to both learn, the technology's new and changing and stuff, and we're trying to learn and apply it, and we have customers that are, like hey, that's very important, customers always come first. It's like, and how come you're not getting this done? It's like,
[123:43-123:43] UNKNOWN: well,
[123:43-123:53] SPEAKER_03: can we do a half time on this? No, we need to be utilized. Okay. You want this.
[123:53-123:53] UNKNOWN: If
[123:53-123:54] SPEAKER_03: it's not happening,
[123:54-123:54] UNKNOWN: I
[123:54-123:56] SPEAKER_03: mean, it's happening, just slowly,
[123:56-123:56] UNKNOWN: and
[123:56-124:07] SPEAKER_03: then like, hey, here's the deadline for this, like you can say all you want, that hey, that's the deadline, but what you're truly asking me to do is work 20 hours outside on the weekend. Right. And I'm not doing that, I'm not doing that.
[124:08-124:20] SPEAKER_00: Yeah, and so you're not gonna, you're not on the trying to progress path. Right. And that's what that is. And somebody might be willing to do that, and that's fine, they're gonna progress, and that's fine. But you're doing, this is your progression. Right, exactly. And
[124:20-124:30] SPEAKER_03: that's why, that's like, ultimately, I am learning, the reason that I'm learning, and the most technical person on that team is because of this. Yeah. That I'm learning, I am learning outside
[124:30-124:30] UNKNOWN: of -
[124:30-124:30] SPEAKER_03: That is
[124:30-124:31] SPEAKER_00: the 20 hours of extra work,
[124:31-124:31] UNKNOWN: but
[124:31-124:33] SPEAKER_00: it's not just for them.
[124:34-124:42] SPEAKER_03: And it's not showing up in there, but I am doing this and like, oh, well, I really do now understand how to do this, and how to deploy this. Yeah, I am learning.
[124:42-124:57] SPEAKER_00: Yeah, so you're doing my thing, which is like, I'm not doing an extra 20 hours of work. All these motherfuckers can just like, get and do the same shit as me, and then here we are, literally two hours a day, and three or four hours on Sunday. Right,
[124:57-125:01] SPEAKER_03: exactly. I am putting what I learned was that 10, 13,
[125:01-125:01] UNKNOWN: you
[125:01-125:02] SPEAKER_03: know,
[125:02-125:02] UNKNOWN: so
[125:02-125:05] SPEAKER_03: 13 hours a week, which is fine.
[125:05-125:12] SPEAKER_00: I know, but it specifically, I mean, it is the reason that everyone else, it's weird,
[125:12-125:12] UNKNOWN: like
[125:12-125:24] SPEAKER_00: the value judgments at the executive level of Google, is like, they have to know that these people are who they are, and they think that you are that type of person.
[125:25-125:25] SPEAKER_03: What do
[125:25-125:25] UNKNOWN: you
[125:25-125:36] SPEAKER_00: mean? Like these useless people that go, oh yeah, we can do that, but Daniel, what's good? Yeah. They think that you are that person too, the highest up, because that's where this, that's what this team came together as. I think that
[125:36-125:36] UNKNOWN: -
[125:36-125:39] SPEAKER_00: Your teammates know that they're useless, and you're not.
[125:39-125:52] SPEAKER_03: Right. I think that I struggled in the Navy finding my voice, I'll call it that, or starting to do, or getting recognized to promote, because my style is very different. I'm quiet, and I'm
[125:52-125:52] UNKNOWN: a
[125:52-126:06] SPEAKER_03: thinker, and in the, like I typically, if I'm in a meeting with a bunch of people that are talking, I'm like thinking, this is freaking stupid. I'm not saying, like, this doesn't make sense, and why are we doing this?
[126:06-126:11] SPEAKER_00: And how do you, how does Google end up with that room full of people? Because
[126:11-126:13] SPEAKER_03: it's like this everywhere.
[126:13-126:24] SPEAKER_00: Yeah, but also assuming that you are, like they're not assuming that you're special. They're like, this is the group we need to do, and maybe they are, they're like, hey, this group of fucking useless turds, there's gotta be one diamond in there, hopefully.
[126:25-126:25] UNKNOWN: And
[126:25-126:32] SPEAKER_03: the way that I do well is, just give me a team. Just give it to me. Let me
[126:32-126:32] UNKNOWN: think
[126:32-127:03] SPEAKER_03: it through. I don't want to be a portion of this team. Put me in charge of the team, and then all of a sudden my team start working, and things start doing well, because I'm in the background thinking, and orchestrating, and doing stuff, and it's hard to describe what I do in a team, because as a member of the team, I'm not very good because I'm a thinker and a planner. And so unless you give me control of the plan and the thinking, well, I'm just in here, it's like, well, do the things, like I did the thing. Well, we're not successful, because the plan is stupid. Plan
[127:03-127:03] SPEAKER_00: is
[127:03-127:12] SPEAKER_03: shit. And I can say, hey, why don't we do this? Yeah, yeah, yeah. So give me the team. Give me the project, and let me do it. And
[127:12-127:15] SPEAKER_00: the useless people are good at staying in charge.
[127:15-127:15] UNKNOWN: And taking
[127:15-127:18] SPEAKER_00: their way up into failing upward. Right,
[127:18-127:18] UNKNOWN: exactly.
[127:18-127:22] SPEAKER_03: And so until you put me in charge or give me a team, it's like,
[127:22-127:24] SPEAKER_00: you're just gonna have bad plans, and I'll execute that bad
[127:24-127:24] UNKNOWN: plan, dude. Right,
[127:24-127:28] SPEAKER_00: I'll do the bad plan, and I can tell you, hey, what's wrong? What's wrong?
[127:28-127:31] SPEAKER_03: The things that we talked about are wrong. Yeah, the things I said on
[127:31-127:31] UNKNOWN: the first day.
[127:31-127:42] SPEAKER_03: It's very clear that, hey, this is never gonna work, because we have people, 10 people working on six at a time of this project, and it's not very well coordinated, it's not very well, well, what do we need?
[127:42-127:42] UNKNOWN: We
[127:42-127:46] SPEAKER_03: need a centralized plan and a team that works on it. We can't do that.
[127:46-127:46] SPEAKER_00: It can
[127:46-127:46] UNKNOWN: be
[127:46-127:52] SPEAKER_00: better, more efficient, cheaper, and work if you just get rid of all these retards.
[127:52-127:57] SPEAKER_03: Right, big and small team dedicated to doing it. Well, we can't do that.
[127:57-127:57] UNKNOWN: Like,
[127:57-128:09] SPEAKER_03: all right. All right, well, I can still catch this trick. Right, and that's ultimately what happens. We go back and forth of, well, and it sounds bad, like, put me in charge. Right, but.
[128:09-128:18] SPEAKER_00: It is what it is. It's not like, like, everywhere else in that organization, it seems like the person saying put me in charge is to do not what you're talking
[128:18-128:18] UNKNOWN: about.
[128:18-128:20] SPEAKER_00: Right, exactly. And so,
[128:20-128:20] UNKNOWN: it
[128:20-128:32] SPEAKER_00: is not, like, that's why I say they think you are one of those people that isn't exceptional, because that's who they put in the room with you. But I. And if you're not in charge, then they think you're just one of them.
[128:32-128:39] SPEAKER_03: But I do have the reputation of problem solving and getting things done, except for it is not recognized by. Right,
[128:39-128:39] UNKNOWN: because
[128:39-128:40] SPEAKER_03: you're not
[128:40-128:40] SPEAKER_00: doing the bullshit.
[128:40-128:49] SPEAKER_03: Right, exactly. And so, the people who are in charge know how to stay in charge and find people like me to do
[128:49-128:53] SPEAKER_00: it. So the thing, the power that you have is to be able to be like,
[128:53-128:53] UNKNOWN: I'm
[128:53-129:06] SPEAKER_00: not. I'm not doing it. Right, exactly. No, I'm not gonna get promoted. Okay. No. Right, yeah, okay. Right, and. It's still super valuable when it comes to, like, potential layoff areas. Everybody knows that, like, when
[129:06-129:06] UNKNOWN: you
[129:06-129:07] SPEAKER_00: get into that guy.
[129:07-129:07] UNKNOWN: Right,
[129:07-129:09] SPEAKER_00: because he's
[129:09-129:09] UNKNOWN: doing
[129:09-129:09] SPEAKER_00: all the stuff.
[129:10-129:10] UNKNOWN: Right,
[129:10-129:35] SPEAKER_03: without him, all of these things. Will be worse. Right, exactly. Right, because I go into these meetings, and I'm like, hey, and you have to play the, you're like, have you guys thought about doing this and this and this and this? Or have you ever heard of this thing right here? Like, and then the whole conversation changes, like, okay, now we're on this, and it's just like, what are, why are we doing this? Like,
[129:35-129:35] UNKNOWN: oh,
[129:35-129:47] SPEAKER_03: I'll be in these meetings with executives, and they're like, lying to each other. Like, not lying, but it's like, hey, I was just in the meeting with you, and I know you know the answer to this thing, but you're not saying it in here, and I'm not gonna say anything.
[129:47-129:47] UNKNOWN: For a
[129:47-129:47] SPEAKER_03: reason,
[129:47-129:47] UNKNOWN: yeah.
[129:47-129:56] SPEAKER_03: Right, and you're, everybody's posturing and everything. Yeah, we can get there, it's like, why are you telling them that? No, that's how empires fall. Why are you telling them? That
[129:56-129:57] SPEAKER_00: is literally
[129:57-129:57] UNKNOWN: like.
[129:57-129:58] SPEAKER_00: Are you scared
[129:58-129:58] SPEAKER_03: of that person?
[129:59-130:03] SPEAKER_00: Yeah. Why? Yeah, empty promises is how empires fall. Like, the more
[130:03-130:03] UNKNOWN: and
[130:03-130:06] SPEAKER_00: more powerful, and then it's just like, yeah, we can do that, and it can't,
[130:06-130:06] UNKNOWN: that's what.
[130:06-130:07] SPEAKER_00: You just have to
[130:07-130:09] SPEAKER_03: say you can do it, even though you can't. That's how empires
[130:09-130:09] UNKNOWN: fall. And
[130:09-130:13] SPEAKER_03: the answer is, no, we cannot do that. Here's what I need to get that done. Right,
[130:13-130:23] SPEAKER_00: but they don't know that. They've failed upward to the position now that they're making a million dollars in a year. Right. And it's like, oh. They just have to keep saying yes. They're good at lying. Right.
[130:23-130:23] UNKNOWN: Yes,
[130:23-130:23] SPEAKER_00: that
[130:23-130:36] SPEAKER_03: is exactly it, and I get in these meetings like, absolutely not. We absolutely cannot do that. Right. No, and what do you need to do? It's like a miracle? More people? More time? That's how empires fall.
[130:36-130:36] UNKNOWN: No,
[130:36-130:37] SPEAKER_03: I cannot do that. It's not
[130:37-130:37] UNKNOWN: possible.
[130:37-130:38] SPEAKER_03: There's more
[130:38-130:43] SPEAKER_00: and more, like imagine how deep the rot in Tesla goes of people that aren't, that have.
[130:44-130:46] SPEAKER_03: You have to say yes to that. That are okay being the
[130:46-130:47] SPEAKER_00: person that says,
[130:47-130:47] UNKNOWN: yeah,
[130:47-130:50] SPEAKER_00: you're right, everyone. You have to say yes. That's how empires
[130:50-130:50] UNKNOWN: fall. Because you
[130:50-130:52] SPEAKER_00: say, no, you're gonna get fired. I guess.
[130:52-130:52] UNKNOWN: Because
[130:52-131:00] SPEAKER_00: it's rotten, and then you can't tell him, hey, this is gonna be horrible for the company. Right. Because you'll be gone, and he'll still do
[131:00-131:00] UNKNOWN: the thing.
[131:00-131:01] SPEAKER_00: He'll still be doing it. It's like,
[131:01-131:01] UNKNOWN: well,
[131:01-131:04] SPEAKER_00: at least I got out whenever it was fucking before the stock crashed.
[131:04-131:29] SPEAKER_03: Yeah, like last year, maybe it was earlier this year, when he fired the whole supercharger to him. Like, or whatever. Like, because the director was like, this is not possible, and we can't do it. Here's what I'm gonna do. And she tried to push back against him. She fired, he fired her, and the entire team. Yeah. And then eventually hired back some of those people.
[131:29-131:29] UNKNOWN: Like,
[131:29-131:33] SPEAKER_03: okay, fine. That's what you get for challenging.
[131:33-131:37] SPEAKER_00: Yeah, and ultimately, was that good for Tesla? No, it was not.
[131:37-131:37] UNKNOWN: Are they
[131:37-131:44] SPEAKER_00: now on the track of what he wanted that they said was impossible? No. No, they're just down the person that knew what was going on.
[131:45-131:47] SPEAKER_03: Right, and so I think there's some of that.
[131:48-131:48] UNKNOWN: Of
[131:48-131:55] SPEAKER_03: like, hey, these people who are in charge, just say yes, and they've spinned it like, they've
[131:55-131:55] UNKNOWN: deceased
[131:55-132:12] SPEAKER_03: well enough to ensure you can get it done. And they're like hedging their bet, they're doing the E -line, they're hedging their bets. Whereas I don't do that. And I think that is why I'm not able to break through in this organization, because it's like, whereas in data centers, it's much more grounded, it's much more like the military.
[132:12-132:12] UNKNOWN: It's more
[132:12-132:18] SPEAKER_03: like it's not fucking. Right, exactly, like, hey, if we don't do this right, that thing's gonna blow up and kill somebody.
[132:18-132:18] UNKNOWN: If none of us can take
[132:18-132:18] SPEAKER_03: talks
[132:18-132:19] SPEAKER_00: about a day in the life of the data
[132:19-132:19] UNKNOWN: center.
[132:19-132:20] SPEAKER_00: No, there's gonna
[132:20-132:28] SPEAKER_03: freak, it's gonna, like, we have to make sure this is right, and the risks are like actually real. Right. Like, you actually might. All
[132:28-132:28] UNKNOWN: you,
[132:28-132:38] SPEAKER_03: yourself. Right, like, we might actually kill somebody. So, no, I don't feel comfortable moving forward, and here's what we need to do. Let's do some testing, let's bring in the engine. Like.
[132:38-132:40] SPEAKER_00: It's like a catastrophic failure at that level,
[132:41-132:41] UNKNOWN: it's
[132:41-132:48] SPEAKER_00: like, uh -oh, I guess my underlings have a bunch of work to do this week. Right, exactly. And I'm gonna go lie about it to my bosses and see what, see if we can make it up.
[132:48-132:59] SPEAKER_03: And I'm better in that kind of culture of, like, I understand all the details, and here's the plan, let's go, let's move forward. And it's much more practical. Whereas you bring that to, this world is kind
[132:59-132:59] UNKNOWN: of
[132:59-133:00] SPEAKER_03: like, well.
[133:00-133:00] UNKNOWN: I
[133:00-133:09] SPEAKER_00: mean, it's the reason, the one thing that Elon did in the last 10 years that wasn't fully retarded in reducing the workforce at Twitter was, it worked. It's because there's
[133:09-133:09] UNKNOWN: so many of those people. Because
[133:09-133:14] SPEAKER_00: there's a bunch of people like this. Right, exactly. And tech is riddled with them, maybe more than
[133:14-133:14] UNKNOWN: any other.
[133:14-133:16] SPEAKER_00: It's full of it, yeah. It's full of
[133:16-133:19] SPEAKER_03: people that's just, you know, spinning BS all day long,
[133:19-133:19] UNKNOWN: and
[133:19-133:21] SPEAKER_03: they, because. And it's complicated enough
[133:21-133:25] SPEAKER_00: that nobody else can look at them and go, that's not true. Like, all the way around, if you're good at
[133:25-133:25] UNKNOWN: lying.
[133:25-133:26] SPEAKER_00: It took
[133:26-133:29] SPEAKER_03: me longer than I thought. It took me three years, but I came in,
[133:29-133:29] UNKNOWN: took
[133:29-133:31] SPEAKER_03: me about two years to, like,
[133:32-133:32] UNKNOWN: I
[133:32-133:38] SPEAKER_03: surpassed people who've been doing this for 20 years. Because I started studying and looking at things, and like. They're just
[133:38-133:38] SPEAKER_00: sitting still.
[133:39-134:01] SPEAKER_03: Right. Well, we're out of
[134:01-134:01] UNKNOWN: time,
[134:01-134:03] SPEAKER_03: but I want to get. At least this started.
[134:04-134:04] UNKNOWN: At least this started,
[134:04-134:14] SPEAKER_03: yeah. And there's one big one. There it is. All right, that's my cue. Yep, that's gonna be
[134:14-134:18] SPEAKER_00: 10 or 15 minutes, probably. All
[134:18-134:19] SPEAKER_03: right, you wanna stop this?
[134:20-134:20] SPEAKER_00: Yeah.

==================================================
Generated on: 2025-07-29 13:59:40
Total words: 16093
Total speakers: 6
==================================================





Summary:
creation_date: 2025-07-29
source_file: 2025-07-29_1331_ZOOM0018_transcript.txt
participants: SPEAKER_00, SPEAKER_03

Executive Summary
This meeting was a deep-dive troubleshooting session focused on a recurring issue within the [[GCP]]-based [[Transcription Service]]. The primary problem identified was that the [[Speaker Diarization]] service, running on [[Cloud Run]], was not sending an acknowledgment back to its [[Pub/Sub]] topic, causing the message to be resent continuously. This led to multiple instances of the service spinning up and incurring unexpected costs. The core solution was to implement a 202-accepted response immediately upon message receipt. Additionally, they decided to implement a [[Dead-Letter Topic]] as a best practice for handling messages that fail repeatedly. A secondary, time-consuming issue was also resolved where the [[AI Tools]] ([[Cursor]]) was incorrectly configuring the [[Docker build]], causing persistent build failures by using the wrong dependency file.

Key Topics Discussed
	•	[[GCP]] [[Pub/Sub]] Troubleshooting
	•	Initial Problem: The [[Speaker Diarization]] service was being triggered repeatedly for a single message, causing numerous [[Cloud Run]] instances to spin up.
	•	Root Cause: The service failed to send an acknowledgment (ack) signal back to [[Pub/Sub]] upon receiving a message.
	•	Without an ack, [[Pub/Sub]] assumes the message was not delivered and retries for up to seven days.
	•	Solution Part 1: Implement a [[Dead-Letter Topic]] on the subscription. This will automatically forward a message to a separate topic after a set number of failed delivery attempts (e.g., five), preventing an infinite loop. This was identified as a general best practice.
	•	Solution Part 2 (Core Fix): Modify the service code to immediately return a 202 Accepted HTTP status. This acts as the acknowledgment to [[Pub/Sub]], stopping it from resending the message while the long-running diarization process continues in the background.
	•	Advanced Error Handling: Discussion on creating a secondary [[Pub/Sub]] topic to act as a Dead-Letter Queue (DLQ) for any failures that might occur after the initial acknowledgment. This ensures critical messages aren't lost and can be reprocessed.
	•	[[Transcription Service]] Architecture Flow
	•	An audio file upload triggers a [[Cloud Function]].
	•	The [[Cloud Function]] generates [[Metadata]] and creates a [[Pub/Sub]] message.
	•	The message is sent to the [[Speaker Diarization]] [[Cloud Run]] service.
	•	The service writes a diarized [[JSON]] file to a Cloud Storage bucket.
	•	The creation of this new file triggers another [[Cloud Function]] and [[Pub/Sub]] message for the [[Whisper]]-[[Transcription Service]].
	•	A future, unbuilt step will combine the transcription and diarization outputs.
	•	[[AI Tools]] Debugging ([[Cursor]])
	•	A significant amount of time was spent debugging a [[Docker build]] failure.
	•	The issue was traced to [[Cursor]] misinterpreting the project structure. It was using the requirements.txtfrom the project's root directory instead of the specific one inside the diarization_service folder.
	•	This caused the build process to incorrectly attempt to install [[Whisper]] and its dependencies into the diarization container, leading to errors.
	•	The fix involved manually correcting the COPY command in the Dockerfile to point to the correct local requirements.txt file.
	•	Philosophical and Side Discussions
	•	Work Culture: A discussion on corporate environments where managers "fail upward" and productive individuals carry the workload. The participants contrasted this with more grounded, practical environments like data centers where mistakes have real-world consequences.
	•	Personal Development: Shared a quote from [[Peter Jefferson]] about a strong body leading to a strong and free mind, connecting physical discipline to mental clarity.
	•	Technology Commentary: A critique of Elon Musk, [[Tesla]]'s self-driving promises (specifically the lack of LiDAR), and SpaceX's development challenges.

Action Items & Decisions
	•	Decision: A [[Dead-Letter Topic]] will be implemented for the [[Pub/Sub]] subscription as a standard best practice.
	•	Action Item: Modify the main Python file for the [[Speaker Diarization]] service to immediately return a 202 Accepted response upon receiving a message to prevent [[Pub/Sub]] retries.
	•	Decision: Add more robust, secondary error handling for failures that occur after the initial acknowledgment has been sent.
	•	Action Item: Correct the Dockerfile for the [[Speaker Diarization]] service to ensure it copies the requirements.txt file from its own subdirectory, not the project root.
	•	Action Item: Rebuild and redeploy the [[Speaker Diarization]] service to [[Cloud Run]] with all the code and configuration changes.

Suggested New Links/Tags
	•	New Links:
	•	[[Docker build]]
	•	[[Cloud Build]]
	•	[[Peter Jefferson]]
	•	[[Call of Duty]]
	•	[[Tesla]]
	•	New Tags:
	•	#Architecture

Linked Concepts
	•	[[AI Agents]]
	•	[[AI Tools]]
	•	[[Cloud Function]]
	•	[[Cloud Run]]
	•	[[Cursor]]
	•	[[Dead-Letter Topic]]
	•	[[Docker]]
	•	[[Docker build]]
	•	[[GCP]]
	•	[[JSON]]
	•	[[Peter Jefferson]]
	•	[[Pub/Sub]]
	•	[[Speaker Diarization]]
	•	[[Tesla]]
	•	[[Transcription Service]]
	•	[[Whisper]]

#Tags
	•	#AI
	•	#Architecture
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom19
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-29_1240_ZOOM0019_transcript.txt

==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:01-00:02] UNKNOWN: built
[00:02-00:12] SPEAKER_00: I think we're on a track but I'm also on the struggle bus this morning. Oh really? Yeah. Well we didn't... No I definitely want to work but
[00:12-00:43] SPEAKER_02: you tried. Okay. Alright for whatever reason I actually feel good this morning. So I need to update. I could feel more fun about the finals. Me too. I was literally just talking to Mel about it and I think that is actually kind of the perfect way to lose from you. But here the reality is if you're gonna lose, lose early. Especially because we were a bit overconfident and we're up like we're highly favored. Well yeah and
[00:43-00:46] SPEAKER_00: the beginning of the game went like too well basically.
[00:46-00:47] UNKNOWN: Exactly. It
[00:47-00:48] SPEAKER_00: was like oh man are things falling into
[00:48-00:48] UNKNOWN: place.
[00:48-00:48] SPEAKER_00: You can
[00:48-00:56] SPEAKER_02: still lose. Right. You can still lose better stay hungry come ready to grind and you know and you got you lost in the worst
[00:56-00:56] UNKNOWN: way. Like
[00:56-01:02] SPEAKER_02: so we didn't play bad but we lost in the worst possible way that we allowed them to hang around and come back. Yeah
[01:02-01:26] SPEAKER_00: they also kind of did play bad. They shot 40 % from the field. Right. And like 30 something from three. So you gotta play. Well and that's also encouraging though like you play even like a little good not even like as good as you can that game is at 20 points. And they can't come back. Yeah. Right. And so they had like like very like less points off of turnovers than turnovers. So they weren't turning like they were playing good defense but not turning into points.
[01:26-01:26] UNKNOWN: Right.
[01:27-01:30] SPEAKER_00: And all of those things just fell into place in the second half. And it is
[01:30-01:30] UNKNOWN: what
[01:30-01:31] SPEAKER_00: it is.
[01:31-01:31] UNKNOWN: It
[01:31-01:31] SPEAKER_00: is what it is.
[01:33-01:37] SPEAKER_02: I'm going to update. Update cursor.
[01:37-01:44] SPEAKER_00: Oh yeah that makes sense. Do you want to start off watching that video or just going through the settings that
[01:44-01:44] UNKNOWN: I
[01:44-01:44] SPEAKER_00: think.
[01:44-01:44] UNKNOWN: I
[01:44-01:52] SPEAKER_02: think we just go through the settings that you did. Yeah. And because I want to Yeah. Yeah.
[01:53-01:56] SPEAKER_00: I do think it's worth a couple of minutes to do these things.
[01:57-02:04] SPEAKER_02: No I agree. All right. I have no idea how to
[02:04-02:04] UNKNOWN: do
[02:04-02:08] SPEAKER_02: these things. I assume they're in. Yeah so settings in
[02:08-02:41] SPEAKER_00: the cursor part. And then I go to cursor settings. I haven't gone to any of the other ones. But it's right here. In general I don't think I did anything. But I think you can check that. Also if you wanted to stop having to click everything you could rest easy because this reset don't ask again dialogs can make you get them back. So like when you commit to GitHub and you have to click like accept and then go back and click push and click accept again.
[02:41-02:41] UNKNOWN: Yeah.
[02:42-03:30] SPEAKER_00: If you turn that off and then realize you actually liked it you could turn it back on. OK. So yeah I just went through all of these and I'll go through the ones that I did. But I think it might be worth you just like looking at them. So I changed default mode to agent. Auto clear chat is on scrolling the messages on. I turned on completion sound because it actually kind of intrigues me. Like yeah let me know when you're done. Whenever it's along. Custom modes I have not done. That's just basically it's turned on. But I think that's like you can say hey I always want to use 2 .5 or 2 .5 and like just say almost defaults I
[03:30-03:30] UNKNOWN: think.
[03:30-03:34] SPEAKER_00: And some keybindings and whatnot. It was already on and off and I
[03:34-03:34] UNKNOWN: turned it off.
[03:34-03:36] SPEAKER_02: Mine was off just now. OK well
[03:36-03:43] SPEAKER_00: maybe I did turn it off. I definitely turned on include folder context. That one seems like a big one.
[03:44-03:44] UNKNOWN: And
[03:44-04:07] SPEAKER_00: include project structure. Web search tool was already on. Hierarchical cursor ignore I did not do. I'm not really a part of it. That video I watched the guy was like cursor ignore makes sense but cursor also looks at your get ignore. So he's like that's just what I use. It
[04:07-04:15] SPEAKER_02: is highlighted. It is selected remove the last context pill in the composer when pressing backspace. I don't know what
[04:15-04:23] SPEAKER_00: that means. So that's like down here when you're in the chat. OK if you were there's nothing there and there's a content like the read me is in.
[04:23-04:23] UNKNOWN: I
[04:23-04:37] SPEAKER_00: don't
[04:37-04:40] SPEAKER_02: trust you that much. Especially you connected to my GCP account.
[04:41-04:47] SPEAKER_00: Yeah for sure. I don't think
[04:47-04:47] UNKNOWN: I
[04:47-04:47] SPEAKER_00: messed with any
[04:47-04:47] UNKNOWN: of
[04:47-04:49] SPEAKER_00: that. So
[04:49-04:49] UNKNOWN: then where
[04:49-04:56] SPEAKER_00: you see OK. No. Yeah. OK. Auto parse links. I don't think I changed anything.
[04:57-04:57] UNKNOWN: OK.
[04:57-05:04] SPEAKER_00: So down to tab I think I left it all alone because that's really just like if you're writing. Right.
[05:04-05:04] UNKNOWN: And
[05:04-05:20] SPEAKER_00: we're kind of not so models I did go in. I turned off cloud for sonnet. Not thinking I've got the thinking one on how much this Max don't feel that if you have no. Yeah it's expensive. So
[05:20-05:20] UNKNOWN: call
[05:20-05:46] SPEAKER_00: for some that you turn it on. I turned off the regular one. I kept on the one with the brain. That's the thinking one. OK. I turned off GPT 3 .5. The ones I only have 4 0 4 .1 Gemini 2 .5 Pro and cloud for something. I'm not doing that one. The Max only is I'm like I'm not Max is the ones we pay. Oh no
[05:46-05:50] SPEAKER_02: not doing that. So this set right here. Yeah.
[05:50-05:50] SPEAKER_00: It's called for.
[05:50-05:51] SPEAKER_02: Oh
[05:51-06:23] SPEAKER_00: that's Max only. So no. Yeah. So you've got the mini cloud for which is like I actually experienced yesterday. I ran out of my fast response or whatever they are and was in a high usage time and Gemini 2 .5 was like really really slow. So I switched to cloud for just to see and I got a message that was like hey at this time cloud for is not available because in the slow tier. Right. That's the first time I've seen that. So rules is where it gets interesting.
[06:24-06:24] UNKNOWN: I
[06:24-06:33] SPEAKER_00: have the generate memories thing is intriguing to me but I want to turn it on so I don't even know.
[06:33-06:34] SPEAKER_02: Disabled in privacy mode.
[06:35-06:35] UNKNOWN: What
[06:35-06:35] SPEAKER_02: is
[06:35-06:35] SPEAKER_00: it. Yeah.
[06:36-06:36] UNKNOWN: So
[06:36-06:54] SPEAKER_00: I don't like I might. That's I assume whenever you turn cursor on for the first time it was like share your information with cursor or something like that. No. Yeah. So I have three rules currently and user rules and is when asked to in chat to start a new one analyze the code base and ensure that the reading and the project are seen.
[06:55-06:57] SPEAKER_02: Well I'm just going to put the exactly same one. I'm just
[06:57-06:57] UNKNOWN: going to
[06:57-06:57] SPEAKER_02: copy
[06:57-06:58] SPEAKER_00: it.
[07:01-07:04] SPEAKER_02: You put them at separate rules. Yeah. OK.
[07:04-07:05] SPEAKER_00: There's individual ones.
[07:06-07:08] SPEAKER_02: Just send me the all or whatever.
[07:22-07:23] UNKNOWN: You
[07:23-07:25] SPEAKER_00: can also
[07:25-07:25] UNKNOWN: say
[07:25-07:26] SPEAKER_00: what you think about those.
[07:28-07:35] SPEAKER_02: I think that for now just make them the same. Right.
[07:35-07:36] SPEAKER_00: Yeah.
[07:36-07:36] UNKNOWN: We
[07:36-07:46] SPEAKER_00: can develop it if we go if we see it like half but it's probably worth at least reading them so you can recognize it is like doing something with it.
[07:47-07:49] SPEAKER_02: So these are user rules.
[07:50-07:50] UNKNOWN: Yeah.
[07:59-08:03] SPEAKER_02: Yeah. This is cool. It's like adding to the context of the agent.
[08:03-09:30] SPEAKER_00: Yeah. The stuff like little annoying stuff that you're like man I wish this was just I could tell you this every time. Yeah. So that basically is that thing like when starting a new chat check the reading. So as I use it as an active project plan and to do list to do slash done list. And then when asked to end the chat basically what I would ask you to do and then basically do not ever fucking tell me you assumed anything. Right. But I said it. The project rules I don't really have any right now because whatever. Yeah. You definitely need to pull. Yeah. I think I guess that might not be all of them. That was just the ones that I was excited about. So indexing docs I've added a few docs but that was before I realized there was a whole doc section. So I added react some JavaScript the professional product tech GitHub and some GCP docs. But my guess is those are already in there and this is for more specified things. Where is the doc section. You do at like in the chat you can do at docs. No where.
[09:30-09:30] UNKNOWN: How
[09:30-09:35] SPEAKER_00: do you know what's in docs. Indexing docs like I've got them like know what
[09:35-09:39] SPEAKER_02: I'm saying like when you do the app like you said there's already a bus loader.
[09:39-10:12] SPEAKER_00: Like there's a library of them so like if you were in your chat and you went to the little app button to give it context. There's a docs section. Got it. So it doesn't have that. That's one of the ones. So do like Python or something
[10:12-10:20] SPEAKER_02: or Docker. Yeah that's cool. Yeah so there's a bunch but there may be I don't want to add 80k right now because we're not using it.
[10:20-10:28] SPEAKER_00: Right but yeah that's where you look for it. If it's got it then great it's already integrated. If not drop it right there and it has it.
[10:28-10:28] UNKNOWN: It
[10:28-11:01] SPEAKER_00: will be in one like when the add new doc like it would show up in the list just like it was already there. I'm going to get some emergency here in a second. Then MCP tools is like the magic one. This kid said some example of like somebody has written an MCP server that he's seen that automatically checks cloud logs and integrates them into cursor. And so that's like but he's like that's a very new space. He was like to be honest with you I don't really know that much about it. Yeah but this
[11:01-11:02] SPEAKER_02: is good. This is
[11:02-11:02] UNKNOWN: a
[11:02-11:07] SPEAKER_02: good place to be that the people on the internet and everybody like you're further we're further ahead than everybody we know.
[11:07-11:19] SPEAKER_00: And the people getting that at least that are coming up whenever I search hey like how do I use cursor. I'm sure if I search like MCP agent integration like there's probably some videos on that but not across the board. Yeah
[11:19-11:24] SPEAKER_02: my guess is well I'm already ready. I just hadn't had time since we talked about it. But I'm going
[11:24-11:24] UNKNOWN: to
[11:24-11:25] SPEAKER_02: do a deep dive on cursor.
[11:26-11:28] SPEAKER_00: Yeah and I don't even know that there's like the deepest dive to be had.
[11:29-11:29] UNKNOWN: Like
[11:29-11:36] SPEAKER_00: I think ultimately like the rules end up being like plain language. That's the magic. That's what agents are. It's
[11:36-11:44] SPEAKER_02: like coding and you know making stuff has become you know creativity with English. Like coding using English language.
[11:44-11:46] SPEAKER_00: Right. So go to network.
[11:46-11:46] UNKNOWN: I
[11:46-12:15] SPEAKER_00: think I don't know there's yeah I didn't do anything in there. No. But then beta I'm background agent off because I don't really right now I'm not trying to mess with it. But that's a thing we can start looking into. It's basically. Also it's another one you got to share with. And it says run it in the clouds. There might be some cost on that. No I'm not down with costs. I already got enough.
[12:16-12:16] SPEAKER_01: That's fine.
[12:19-12:22] SPEAKER_00: So that's where we're at on that. I'm
[12:22-12:22] UNKNOWN: going
[12:22-12:24] SPEAKER_00: to react to emergency if you
[12:24-12:24] UNKNOWN: want
[12:24-12:24] SPEAKER_00: to. I'm going
[12:24-12:24] UNKNOWN: to
[12:24-12:25] SPEAKER_00: get one too.
[12:30-12:45] SPEAKER_02: Never know. So what do you think about working? My general thoughts are no. But not no. Like but not formally at least. Yeah. I
[12:45-12:52] UNKNOWN: mean yeah I think don't try to like get up and be more tensed and all that. Right. Yeah
[12:52-13:32] SPEAKER_02: and my reasoning for that is not as much that hey I don't I just want to actually be on vacation. Yeah actually get my rain and rest and be able to. I think the benefits of just resting are like really good. Like my vacation brain is really good. My guess is I'm going to think about things and come back from vacation thinking about things differently than I went on vacation. And that only happens because I stay around for four or five days doing nothing relaxing. So that's kind of my reasoning for that.
[13:32-13:32] SPEAKER_00: Yeah I'm going
[13:32-13:32] UNKNOWN: to
[13:32-13:35] SPEAKER_00: say it's a class up. But I'm not
[13:35-13:35] UNKNOWN: trying
[13:35-13:40] SPEAKER_00: to have a time to work. It's like probably more likely to
[13:40-13:40] UNKNOWN: end
[13:40-13:42] SPEAKER_00: up happening organically in the middle of the day.
[13:42-13:47] SPEAKER_02: Right yeah if we have an idea or have a thought we can jump into a session.
[13:48-13:48] UNKNOWN: But
[13:48-13:49] SPEAKER_02: I don't necessarily.
[13:50-13:55] SPEAKER_00: You have a thought of you can pull down a cover base do some stuff and push it back.
[13:58-13:58] UNKNOWN: I
[13:58-14:09] SPEAKER_02: think rather than working next week I would rather grind for the next three days and have it done before then.
[14:10-14:10] UNKNOWN: If
[14:10-14:34] SPEAKER_02: anything well I'm not that we if we're close maybe but if we're close I would rather push through that. Okay well that's where you know a session on Saturday afternoon whatever and obviously or extend our Sunday because we're not working and push through that to get done or get closer rather than say hey we're going to work a few days next week.
[14:54-14:59] SPEAKER_00: Yeah it wrote as of June 7th 2024.
[15:02-15:03] SPEAKER_02: That's
[15:03-15:03] SPEAKER_00: funny.
[15:04-15:05] SPEAKER_02: I'm going to go pull.
[15:20-15:28] SPEAKER_00: Those are the things you can reset with that button in the setting. Oh here that little pop up.
[15:29-15:29] SPEAKER_02: Yep
[15:29-15:51] SPEAKER_00: got it. I don't like is that normally there. Yeah that's the recap that it produced when you click start in your chat in the last one. It always does that. So I'm just going
[15:51-15:51] UNKNOWN: to
[15:51-16:20] SPEAKER_00: start with my normal. Yeah I would add give it well for starters it shouldn't need it if the rule is working I think you should check it like okay we're a new chat let's go or something like that. I'm just going to say let's go. Yep. And it's got the context of that summary. Yeah it did. It called it a to do list that's
[16:20-16:20] UNKNOWN: it
[16:20-16:29] SPEAKER_02: sees it bro. Is this where we're supposed to be? Yep. I actually I actually don't know. Yeah it's worth opening up the read more and look
[16:29-16:47] SPEAKER_00: and I think we need to definitely start doing that. Oh we got different things going like themes or something. Because we're looking at the exact same document I'm pretty sure. Yeah I don't know which one I'm using.
[16:47-16:58] SPEAKER_02: Yeah I didn't change it well I don't think I changed anything not on purpose. Yeah I think it's part of the setup like at the very beginning. Yeah oh yeah you go and I'm sure I'm probably picked something differently than you did.
[17:03-17:35] SPEAKER_00: Yeah so it's probably worth going through this as it's thing. Oh another thing I think was worth looking at that I got from that video is if you go down to the little where it says agent you can do ask and it basically becomes a teacher for your code base. Okay. Like what's going on with what does this do how do I and all this different stuff and I think that's probably worth doing maybe at the end. Go truly learn. Make
[17:35-17:40] SPEAKER_02: sure we understand. Yeah so this is new this section up here like walking through.
[17:41-18:20] SPEAKER_00: Yeah I mean we've had I guess I don't remember exactly when I put that in there. I think at some point I was getting frustrated and it's like motherfucker here's the process right and then I was like just put it in there and so yeah I think it's also probably just nearly a good thing at the top. Oh and I was asking it that's what it was because it was talking and I was under the impression that there was another cloud function but that cloud run in the diarization service of cloud run serves as the pub sub trigger. It does not need to trigger a cloud function. Oh so it triggers
[18:20-18:24] SPEAKER_02: it builds the
[18:24-18:24] UNKNOWN: second
[18:24-18:27] SPEAKER_02: there is a second pub sub message.
[18:27-18:40] SPEAKER_00: Right yeah so if you look at diarization service subscribes to a pub subtopic powered by whatever downloads publishes a message to pub subtopic the transcription alignment request. Right that makes sense.
[18:41-18:41] UNKNOWN: And
[18:41-18:47] SPEAKER_00: before that I was under the impression that it basically triggered a cloud function that did the thing just because it's
[18:47-18:47] UNKNOWN: a
[18:47-18:47] SPEAKER_00: function.
[18:47-18:48] SPEAKER_02: Right it's not a
[18:48-18:48] UNKNOWN: function I
[18:48-18:49] SPEAKER_00: mean it's cloud run.
[18:49-18:49] UNKNOWN: It can
[18:49-18:50] SPEAKER_00: do function type
[18:50-18:50] UNKNOWN: shit.
[18:50-18:51] SPEAKER_00: It can do function
[18:51-18:51] UNKNOWN: type
[18:51-19:08] SPEAKER_00: shit. It's a server. So when I was trying to figure that out because it was just one of those like I noticed something that it was right and then I was like hold on here's what I think and it was like you're close but here's why you don't need that function and I was like you know what write that up it's a top of the tree. Right
[19:08-19:23] SPEAKER_02: okay yeah this makes sense to me I understand the flow. Right. And why we have a function and a message. Yeah. Especially because it takes forever to freaking start up.
[19:23-19:23] UNKNOWN: Yeah
[19:23-19:52] SPEAKER_00: and should be in here that like the first thing we need to do after getting everything deployed is drive toward solving the long start up like and the conflict between pub sub resending the message and spending up new stuff versus the start up and not even spending up new stuff like if it was only spending up new stuff that would be fine but it explicitly stops listening for the confirmation. After ten seconds apparently. That's not enough.
[20:02-20:08] SPEAKER_01: Transmission service. The data is actually so it's not shit.
[20:08-20:15] SPEAKER_02: So yeah that makes sense and then there's functions. I like it.
[20:15-20:15] UNKNOWN: This
[20:15-20:17] SPEAKER_02: is. It's been much cleaner once you see it.
[20:18-20:39] SPEAKER_00: I agree. And everything outside of it you recognize is like the readme definitely needs to be there getting to make sense and then those two little extra files. Yeah those are just. Testing stuff. Eventually those go away. Yeah so status deployed and healthy but yeah the root cause of the previous gateway time errors identified is excessive cold start.
[20:43-20:44] UNKNOWN: That's.
[20:46-20:48] SPEAKER_00: And then the knock on service is actually.
[20:48-20:48] UNKNOWN: So
[20:48-20:48] SPEAKER_00: why
[20:48-20:55] SPEAKER_02: are we deploying to. If this service is deployed and healthy. That's the
[20:55-20:56] SPEAKER_00: diarization service.
[20:56-20:59] SPEAKER_02: Oh where are the transcription service. Yeah.
[20:59-21:03] SPEAKER_00: OK. And it got blocked because of a GPU quota.
[21:04-21:04] UNKNOWN: I
[21:04-21:38] SPEAKER_00: think. Got it. They'll do the code. Yeah. That was late enough in the day and required like doing stuff in GCP enough that I was like I'm a call that. Working around. Without a GPU. That's what it said it wants to do but I think we if we need to request it we request an increase like. I want to feel like I
[21:38-21:38] UNKNOWN: feel
[21:38-21:58] SPEAKER_00: like I heard or I read something that said daily. Before but like in credit in request an increase and then go back to testing diarization because it should already have its GPU right. I think so. But the. That. Command right there I assume is going to try to do it without.
[21:58-22:23] SPEAKER_02: Yeah I did it's probably not in there. Yes. Yes. Yes. That's cool. That is much more explicit.
[22:23-22:41] SPEAKER_00: Oh yeah and like kind of structure to where you can it doesn't look as jumbled like I can read it and. Yeah. Scan through it much much better. yeah okay I'm gonna here so we're gonna try it without the CPU do you want to try to do I think it's fine like it it should still be the entire exact same flow well I mean maybe
[22:41-22:47] SPEAKER_02: say let's actually try with the GPU first and see if it goes yeah just see if the quota failure
[22:47-23:20] SPEAKER_00: isn't there yeah I think I haven't actually looked at below this but I think it gets a
[23:20-23:20] UNKNOWN: little
[23:20-23:36] SPEAKER_00: messy down there probably with just like here's what's done and not right it's just a big check yeah and it's good for the AI to be able to look back but human readable you want to see what's what we're working on
[23:36-23:50] SPEAKER_02: right yeah and it's cool it's both keeping a archive and active yep so eventually all of this will be below will be in the archive right and done yep
[23:50-23:58] SPEAKER_00: just a green check marks or like explanations as to why we didn't do that
[24:06-24:07] UNKNOWN: yeah
[24:07-24:47] SPEAKER_00: just on L4 so we could in theory yeah I think like maybe say hey it seems like it's probably the
[24:47-24:47] UNKNOWN: quota
[24:47-24:48] SPEAKER_01: oh it's
[25:07-25:08] UNKNOWN: a
[25:08-25:13] SPEAKER_00: new or a different service that hasn't used the secret manager yet yes
[25:19-26:26] SPEAKER_02: transcription service service account manager it's good it should be good I'll go look at it no I'm sure it's just for me there's just the two yeah no there's a third that oh that is created by happens and that is a computer oh oh I don't know why that is up there hopefully it's not charging stuff I cloud run is what popped into my head
[26:26-26:28] SPEAKER_00: yeah and maybe
[26:30-26:30] UNKNOWN: that's
[26:30-26:48] SPEAKER_00: what that is like sometimes you see a cloud run one or you think you're somewhere else huh I don't know why that you have cursor look into like give it account or just say hey look at the service accounts and what the hell is
[26:50-26:50] UNKNOWN: this
[27:53-27:55] SPEAKER_00: okay yep
[27:55-27:56] UNKNOWN: It
[27:56-28:42] SPEAKER_00: doesn't smell like an hallucination. Cloud Functions Generation 1 runs on App Engine. Cloud Functions Gen 1 also runs on App Engine. We've definitely seen the Cloud Functions buckets that were created when we created those.
[28:56-28:59] SPEAKER_02: So, do
[28:59-28:59] UNKNOWN: you
[28:59-29:06] SPEAKER_02: want to go do the quota for... Oh, I guess it may... I think I understand. The
[29:06-29:06] UNKNOWN: quota for each
[29:06-29:13] SPEAKER_02: is... Oh, it failed. We probably don't have a quota for one GPU, and both services have one.
[29:13-29:28] SPEAKER_00: Yeah, that's for sure. Um, it may be that we killed the... or I killed the event arcs to make it quit spinning things up yesterday, and that's what's happening.
[29:50-29:53] UNKNOWN: Like that.
[29:59-30:46] SPEAKER_00: Good with all of that? Yeah, that makes sense. It's like, it's a similar thing to our requirements, wrong requirements, that TXT from yesterday, but it's just an artifact of moving stuff around. It's not even big. Right. Do you actually have this image built on your local machine? Probably not. There's almost no way, because I built it. But it's deployed, like it's in artifact
[30:46-31:06] SPEAKER_02: registry. So it should be fine. It's building from getting ready to build again. Maybe that's what it is, a must -support AMD lens, like it got built without that flag. What the hell? So we gotta rebuild? Yeah. No? That's
[31:06-31:06] UNKNOWN: fine.
[31:07-31:10] SPEAKER_02: Maybe it's just because I just built it up here.
[31:11-31:13] SPEAKER_00: I don't think that... no, you were trying to deploy, right?
[31:14-31:24] SPEAKER_02: I built, but it has the flag. Oh, that's just the recent one. Yeah. But... You were pushing... I built right here, without the flag.
[31:29-31:29] SPEAKER_00: Nice.
[31:35-31:35] UNKNOWN: I
[31:35-32:29] SPEAKER_00: think this one's good. That's what it looks like when it works. Sometimes it takes a long fucking time. Right. It should also be somewhere in there, like we need to get rid of a LL and authenticated, because that's where we're jamming right now. To just see everything work, which I think was correct. Let's see... it's not ready... Isn't
[32:29-32:31] SPEAKER_02: that what we just changed?
[32:32-32:32] UNKNOWN: I
[32:32-32:44] SPEAKER_02: mean, I think we changed this stuff yesterday because it was trying to figure out what was going on, but it was ultimately because it was the wrong requirements, I think. I'm not sure,
[32:45-32:45] UNKNOWN: though.
[32:45-32:57] SPEAKER_00: Yeah, but it's saying, like, I'm changing it from... this will make the project root the working directory, then I'll change the command to be Ubiquiti transcriptions.
[33:00-33:01] UNKNOWN: Like...
[33:01-33:08] SPEAKER_00: sure. I don't know as well as it... Me either.
[33:11-33:15] SPEAKER_02: They ended up taking a long time this time.
[33:15-33:24] SPEAKER_00: It's actually building everything? That's alright. Melanie's awake. She is. I'm making coffee.
[34:41-34:42] UNKNOWN: The
[34:42-34:49] SPEAKER_00: cold's not too bad. Yeah. It's higher than you'd want it, but it's not
[34:49-34:49] UNKNOWN: crazy.
[34:49-34:54] SPEAKER_00: I think it's fine. I'm
[34:54-34:54] UNKNOWN: not
[34:54-34:57] SPEAKER_00: sure if we ever actually get this summer.
[34:57-34:58] SPEAKER_02: Yeah.
[34:59-34:59] UNKNOWN: If
[34:59-35:10] SPEAKER_02: it actually starts getting warm and, you know, not raining every day. I don't know when that's going to be.
[35:10-35:11] SPEAKER_01: Yeah, thank
[35:11-36:51] UNKNOWN: you. Okay. Okay. Okay.
[37:04-37:20] SPEAKER_02: My guess is I'm going to be super tired later, but for right now, it's one of the benefits of my sleep disorder. It's like I never get too tired, either. Right. I never get fully awake, but I'm also...
[37:20-37:20] UNKNOWN: like,
[37:20-37:22] SPEAKER_02: my disruptions are always... it's normal.
[37:22-37:23] SPEAKER_03: Okay.
[37:32-37:37] SPEAKER_00: I also think it's like the end of a week of actually getting after it a little bit.
[37:37-37:41] SPEAKER_02: Yeah. Activity jumped by a 10x.
[37:41-37:42] SPEAKER_00: Yeah, exactly.
[37:43-37:51] SPEAKER_02: Between working out and getting up in the morning doing this, for me at least. Oh. You were already waking up early. I mean, I didn't wake up that much earlier. Actually,
[37:51-37:51] UNKNOWN: I
[37:51-37:54] SPEAKER_02: changed it to five yesterday, starting yesterday.
[37:54-38:18] SPEAKER_00: Yeah, but this is a different thing than like two hours of just kind of waking up process. It's very different, yeah. Because your energy is all like the same. It's whether you're working out or thinking, it's burning the same energy. Right. And thinking actually burns a lot of it, turns out.
[38:18-38:25] SPEAKER_02: Right. But I'm good, though. I feel better, and I look forward to getting up and doing this.
[38:26-38:26] UNKNOWN: And
[38:26-38:33] SPEAKER_02: working out is not a burden in the afternoon. It's good. This is it. This is probably the best routine for me ever.
[38:33-38:34] SPEAKER_00: Yeah, I think this one,
[38:34-38:34] UNKNOWN: it
[38:34-38:35] SPEAKER_00: makes sense.
[38:36-38:36] UNKNOWN: It's like
[38:36-38:49] SPEAKER_00: it would be kind of daunting to look at and be like, oh shit, if you actually listed everything. But it kind of works like it working through to like two or three, especially like when I'm out delivering.
[38:50-38:50] UNKNOWN: And
[38:50-38:54] SPEAKER_00: then it's like it's just a natural, okay, I'll vest until like two or three o 'clock.
[38:55-38:56] UNKNOWN: Yeah, I
[38:56-39:04] SPEAKER_02: feel like even if we weren't working on this, I would get up and work on something else, even if I was learning something for work or reading or whatever.
[39:04-39:04] UNKNOWN: This
[39:04-39:13] SPEAKER_02: is now that I'm in this routine, this is I don't think I would replace working out in the morning. I would do this when my brain's fresh and then we're on the afternoon.
[39:17-39:17] UNKNOWN: Exactly.
[39:17-39:24] SPEAKER_00: Yeah, it just, I mean, it's like you finally found it. Yes, it is. This is the one I've
[39:24-39:24] UNKNOWN: been
[39:24-39:24] SPEAKER_00: learning for.
[39:26-39:29] SPEAKER_02: You've been trying to get me to work out in the afternoon or evening for
[39:29-39:29] UNKNOWN: a
[39:29-39:30] SPEAKER_02: while. I
[39:30-39:30] UNKNOWN: was
[39:30-39:31] SPEAKER_02: also not doing.
[39:35-39:58] SPEAKER_00: But I think this was like the magic little ingredient that we didn't have to make that happen. It's like, oh, yeah, make working out not available in the morning. You already don't want to do it. I don't. It does like there's this thing in your head of like it's easier in the morning than the evening. Not true. It's not true. Right. It's just like your body, your brain's way of trying to trick you into not working out.
[39:58-40:10] SPEAKER_02: 100 percent. OK, now I feel like it's going to
[40:10-40:10] UNKNOWN: work.
[40:21-40:29] SPEAKER_00: I mean, these are like little tiny errors that do make sense to just like iterate through it. Just that like deploying is a long process.
[40:29-40:29] UNKNOWN: Just
[40:29-40:30] SPEAKER_00: takes a
[40:30-40:30] SPEAKER_02: minute.
[40:33-40:34] UNKNOWN: Oh,
[40:36-40:37] SPEAKER_02: I agree. It is frustrating.
[40:50-40:52] SPEAKER_00: Oh,
[41:13-41:14] SPEAKER_02: OK.
[41:17-41:22] SPEAKER_00: So having an adapt makes it like basically it makes it a micro service.
[41:22-41:24] SPEAKER_01: I guess so.
[41:24-41:37] SPEAKER_02: And we're back. Up to two point four that quickly.
[41:37-41:41] SPEAKER_00: Yeah, but those are real iterations.
[41:54-41:55] UNKNOWN: Yeah.
[42:02-42:04] SPEAKER_00: Like you made a Python package.
[42:05-42:05] UNKNOWN: Right.
[42:05-42:12] SPEAKER_00: Like that transcription service is now like an import Python transcription service. Right. It's an actual package.
[42:16-42:16] UNKNOWN: Yeah.
[42:28-42:33] SPEAKER_02: This is unbelievable.
[42:40-42:41] UNKNOWN: At
[42:41-43:12] SPEAKER_02: least. That's interesting as a little bit of character now.
[43:13-43:18] SPEAKER_00: Yeah. And I don't know if that's like from those rules. Like I don't feel like there's a lot of personality. I think
[43:18-43:24] SPEAKER_02: it's the new version that they just added that.
[43:32-44:13] SPEAKER_00: This has a yeah, all the fields are something that we're driving down their own path. I agree. And we should do all that. We can check. But.
[44:18-44:58] UNKNOWN: This is. This is. This is. This is. This is. This is.
[45:03-45:05] SPEAKER_02: I don't know. What do you think we should
[45:05-45:44] SPEAKER_00: do? I mean, it's just throwing the flags to me of driving down the wrong at their own target in general. Yeah. And like all these seem like extra things that shouldn't have to be done. Will you go to the diarization service and look and see if there's even an in .py in it? Yeah, there's not. So that makes me think we will need that. And that was like the first thing it tried. I could be wrong on that, but. It shouldn't be complicated.
[45:47-46:40] UNKNOWN: Okay. Okay. Okay. Okay.
[46:57-46:58] SPEAKER_00: Yeah,
[46:59-47:01] SPEAKER_02: I'm not concerned.
[47:03-47:09] SPEAKER_00: I wasn't really concerned when Denver wasn't looking bad. They were better team.
[47:10-47:11] UNKNOWN: Yeah.
[47:12-47:33] SPEAKER_00: I do think Halliburton wrote his name in the history books with this. Yeah, he did it in every series. So literally all four of exactly good for him. But you're still going to lose. Yeah. But that's what Pacers legends do. Right. Exactly. He wrote his name right next to Reggie. And that's
[47:33-47:33] UNKNOWN: okay.
[47:37-47:52] SPEAKER_00: So we go back in the whole doctor file and see what it's doing. Yeah. So get rid of that. Get rid of all this extra shit and just do it.
[47:52-47:53] SPEAKER_02: Yeah. Just the right way.
[47:54-48:00] SPEAKER_00: And if that's broken, it's probably not the answer to be like, okay, well, let's see if we can just make it
[48:00-48:01] SPEAKER_02: work. Right.
[48:01-48:01] UNKNOWN: I
[48:01-48:02] SPEAKER_02: agree.
[48:10-48:13] SPEAKER_01: That's a good call.
[48:13-48:23] SPEAKER_00: It's just that's the that's the magic of working with the stuff is just get those reps in and you start to just go, Nope, I don't know why, but you're not on the wrong path.
[48:23-48:23] UNKNOWN: You're
[48:23-48:32] SPEAKER_00: not on the right path. Doesn't work.
[48:32-49:07] SPEAKER_02: Doesn't. But at least it was not in that forever loop. Right. Broke it up. Look at something else. Right. And if it's still doing it, then we know it's not the way that the container started. Right. Right. Exactly. The problem's not with the doctor file command.
[49:07-49:07] SPEAKER_00: Ding, ding,
[49:08-49:08] UNKNOWN: ding.
[49:11-49:14] SPEAKER_00: Also, I think I was getting really into it yesterday,
[49:16-49:16] UNKNOWN: but
[49:16-49:19] SPEAKER_00: quit looking for specific logs, motherfucker. Yeah.
[49:19-49:19] UNKNOWN: Not
[49:19-50:17] SPEAKER_00: much going on in this project. I get just look at default logs, but empty quotes in what you're looking for. I could buy that. It changed them to absolutes whenever it was refactoring. And I could see, I mean, that's definitely a genuinely different thing that maybe doctor doesn't like. Yeah. That doesn't ring like bullshit, right?
[50:17-50:17] UNKNOWN: It
[50:17-50:48] SPEAKER_00: might be. It doesn't ring. We're about to find out. We go look at like the diversation of the main dot file. Like the inputs. Those are coming from anywhere inside. Exactly. So it doesn't really have the same issue.
[51:05-51:06] UNKNOWN: Okay.
[51:32-51:40] SPEAKER_00: Okay. Fix that one. Or is API not in there anymore? Did API work this time? I think
[51:40-51:44] SPEAKER_02: it worked. It's in its new error and it's on transcribe. Okay. So
[51:44-52:10] SPEAKER_00: yeah, let's go back to that main notify. Maybe we have to accept them. Like it didn't. Oh,
[52:14-52:14] UNKNOWN: I
[52:14-52:19] SPEAKER_02: think that I didn't accept them before. That's what I'm trying to do. Like, but
[52:19-52:20] SPEAKER_00: it didn't do it.
[52:22-52:22] UNKNOWN: Like
[52:22-52:35] SPEAKER_00: once you hit accept, I think it did not actually do it. I think I always put it
[52:35-52:35] UNKNOWN: back.
[52:40-52:41] SPEAKER_02: Is this the right one?
[52:43-52:43] UNKNOWN: Yeah.
[52:56-52:59] SPEAKER_00: I've never seen it do that. That's the new version stuff.
[52:59-52:59] UNKNOWN: You
[52:59-53:01] SPEAKER_00: see that? No. It said,
[53:01-53:01] UNKNOWN: hey,
[53:01-53:03] SPEAKER_00: I summarized it. You should probably start a new one.
[53:04-53:06] SPEAKER_02: Oh, I did not see it. Where is it?
[53:06-53:06] UNKNOWN: Say
[53:06-53:06] SPEAKER_02: that?
[53:07-53:08] SPEAKER_00: Right. You just put it past it.
[53:09-53:11] SPEAKER_02: Okay. I see it now.
[53:12-53:13] SPEAKER_00: But also it's working.
[53:14-53:14] UNKNOWN: So
[53:14-53:18] SPEAKER_00: yes, but at the end of this.
[53:23-53:28] SPEAKER_02: How do you start a new chat if it's not down here? Go back up to the find that.
[53:28-53:28] UNKNOWN: I
[53:28-53:29] SPEAKER_02: guess
[53:29-53:38] SPEAKER_00: that's a little clunky. Unless it's so smooth that you could go ahead and click it while it's working. Right.
[53:38-53:38] UNKNOWN: Like
[53:38-53:43] SPEAKER_00: maintains its current active. That would be great to have very slick.
[53:56-54:19] UNKNOWN: Excuse me. Okay.
[54:31-54:32] SPEAKER_02: Yeah.
[54:45-54:48] SPEAKER_01: I'm confident this will be a successful deployment.
[55:16-55:19] SPEAKER_00: Yeah. Finished it.
[55:22-55:23] UNKNOWN: So
[55:23-55:54] SPEAKER_00: there you go. It took many steps. Okay. Maybe ask it. It might be able to do it. I mean, you can just start a new one with that plus symbol up there, but I don't think it does the summary for you.
[55:58-56:00] SPEAKER_02: I mean, obviously I can go up and find that button.
[56:01-56:17] SPEAKER_00: Right. But then does it have this deploy in it? We need to update the Readme anyway. Or it should register that rule of updating the Readme. And then ultimately we don't need that. There you go.
[56:25-56:26] SPEAKER_02: Yeah.
[56:26-56:26] UNKNOWN: So
[56:26-56:28] SPEAKER_02: I guess you just do that and it's the
[56:28-56:28] SPEAKER_00: same.
[56:29-56:29] UNKNOWN: Well,
[56:29-56:49] SPEAKER_00: it's not, it's not going to do that thing. But our Readme makes those things irrelevant. Right. They might actually make them noise. So doing it like this is better. Say, Hey, do the ending process. That's one of our cursor rules. Yeah. And so it knows that what it's doing and then just go start a new one without that extra shit.
[56:59-57:02] SPEAKER_01: Okay. And they
[57:02-57:19] SPEAKER_00: just have to wait for it to say you need a new one. That one dude, one thing or somebody that I watched yesterday recommended anytime you're doing any kind of new functionality, start a new check. Don't like because it's going to reference that old work that you were doing that maybe has nothing to do with it. It's
[57:19-57:24] SPEAKER_02: stuck in the context and clear that out.
[57:28-57:38] SPEAKER_00: Even that's a little thing like in a couple of weeks, in like a week, we're going to be so used to those rules. I don't know how nobody's using these things. It's crazy. Yeah. If you're using cursor and not using cursor rules, what are you doing?
[57:39-57:46] SPEAKER_02: So I guess you can use G cloud storage copy as well. Yeah, I don't know if that's the right command, but
[57:46-57:47] SPEAKER_00: I guess we're doing yesterday. I
[57:47-58:00] SPEAKER_02: want to know is DSU tail. Oh, I want to make sure there's nothing in there. Is it going to time stamp it?
[58:01-58:55] SPEAKER_00: No, I'm going to delete it. I think I uploaded that one to make sure that it didn't trigger anything. This is where I think like I deleted the event arts and the pub subs. So
[58:55-59:11] SPEAKER_02: yeah, all of that stuff's not it. So nothing's going to happen. Right. It triggered a pub sub message. But my guess is there's an error that says,
[59:11-59:12] UNKNOWN: hey, this
[59:12-59:15] SPEAKER_02: you whatever.
[59:16-59:16] UNKNOWN: What
[59:16-59:18] SPEAKER_02: do you call those? It doesn't exist.
[59:19-59:19] UNKNOWN: Like
[59:19-59:22] SPEAKER_02: the topic doesn't exist.
[59:37-60:24] SPEAKER_00: I think we need to guide a little bit with that. Yeah, that's definitely not there. It's shooting the dark. I mentioned the dead lists as well. Whatever. We need to make sure it plays and then event arts. Make sure at least those. Deal.
[60:53-60:55] SPEAKER_02: Are we we have five?
[60:57-60:57] UNKNOWN: Yeah.
[62:07-62:12] SPEAKER_01: Transcription service for consistency. Okay.
[62:19-62:21] SPEAKER_02: Topic. I
[62:21-62:21] UNKNOWN: would
[62:21-62:23] SPEAKER_02: say some requests. Okay.
[62:28-62:28] UNKNOWN: And
[62:28-62:31] SPEAKER_02: there will also be a topic for transcription.
[62:31-62:31] UNKNOWN: I
[62:31-62:39] SPEAKER_00: think it's all of it actually like transcription and alignment.
[62:39-62:39] UNKNOWN: So
[62:39-62:40] SPEAKER_00: it brings diarization.
[62:46-62:46] UNKNOWN: That's good.
[62:48-63:18] SPEAKER_00: Yes. So the one it needed to delete was the diarization one. It kicks everything off. So that's what we deleted yesterday. So we don't necessarily need that right now while we're
[63:18-63:18] UNKNOWN: running
[63:18-63:22] SPEAKER_00: allow unauthenticated. Right. But we want to go ahead and go for it.
[63:22-63:22] UNKNOWN: I
[63:22-63:23] SPEAKER_00: think so.
[63:24-63:52] SPEAKER_02: Okay. So this is the pub sub service account that's running these pub sub messages should be allowed to invoke the cloud run for the diarization service. And then the same for the whisper transcripts and service.
[63:52-64:08] SPEAKER_00: Because it's the one that will receive it from diarization. That topic will be triggered by the diarization service and they'll send it to transcription and it needs to be able to do that. Which service account is this? The transcription whisper transcription service.
[64:09-64:15] SPEAKER_02: Right. The service itself is going to.
[64:15-64:29] SPEAKER_00: It's going to receive the pub sub topic. I think it's the subscriber to the pub sub topic and then it will invoke cloud run to start off the actual transcription and whatever. The other service. Yeah.
[65:04-65:04] UNKNOWN: What
[65:04-65:07] SPEAKER_00: is this? Ack. Acknowledgement deadline.
[65:08-65:08] UNKNOWN: Okay.
[65:08-65:16] SPEAKER_00: Yeah. That's 600 seconds. Maybe it should be good. We'll see. Because it's just boot. It's not the full diarization. That I think takes 10 or 12 minutes.
[65:17-65:20] SPEAKER_02: Yeah. But just to get the service up and running. And
[65:20-65:20] UNKNOWN: get
[65:20-65:20] SPEAKER_02: that message
[65:20-65:30] SPEAKER_00: up. Yeah. Because we saw the message get logged. Like it sent it back. Right. But what I guess we never saw was pub sub be like, get it. And stop.
[65:31-65:36] SPEAKER_02: And this one's using the 900 second acknowledgement deadline.
[65:37-66:04] SPEAKER_00: We might not have it set up to send it before. But that's 15 minutes. Okay. There you go. We go look at. Like make sure it's not spinning shit up right
[66:04-66:04] SPEAKER_02: now.
[66:06-66:06] UNKNOWN: Yeah.
[66:11-66:47] SPEAKER_00: Okay. That's the one we saw in the command line. That's good. It went on two freaking 12 to two runs in the fourth quarter.
[66:47-66:48] SPEAKER_02: Yeah.
[66:52-67:03] SPEAKER_00: It'll be fine. Yeah. It's actually not as much fun when you just destroy everything. It genuinely isn't.
[67:03-67:05] SPEAKER_02: I mean, I like it.
[67:06-67:07] SPEAKER_00: But like it
[67:07-67:07] UNKNOWN: feels
[67:07-67:13] SPEAKER_00: hard to buy Denver games looking back. And even in the moment. That's what it's all about.
[67:13-67:14] SPEAKER_02: I agree.
[67:27-67:34] SPEAKER_00: Will you mention event arc? I don't always still know. I would mention it in there.
[68:08-68:10] UNKNOWN: Okay.
[68:33-68:37] SPEAKER_02: I don't completely understand what event arc triggers are.
[68:37-69:18] SPEAKER_00: Yeah. In my head is just a web hook. Right. What's the manual one? I don't know. It
[69:18-69:18] SPEAKER_02: is.
[69:20-69:20] UNKNOWN: It
[69:20-69:51] SPEAKER_00: is. It's running everything. And so I started popping off a little bit there. And it was like, that's why I came up with that theory of like, it is running everything passively because they're one of the highest levels.
[69:52-69:52] UNKNOWN: Just has
[69:52-70:09] SPEAKER_00: this using it. Imagine like if they've had it for 10 years and been actively relying on it the way we actively rely on it programming is going to be like 10 years from now. Yeah. It's running the world. It is. Just like not in a conscious way necessarily. It doesn't have to be in a conscious
[70:09-70:10] SPEAKER_02: way.
[70:10-70:10] UNKNOWN: Right.
[70:10-70:15] SPEAKER_02: But it's such an important tool. Yeah. It is. It is doing it.
[70:15-70:27] SPEAKER_00: But also right before I came up with that theory the reason I came up with it was a counter to what I kind of also believe which is it's Jesus or the Antichrist. It's one of those
[70:27-70:27] UNKNOWN: two
[70:27-70:32] SPEAKER_00: things. Yeah. And I'm still majority sure about
[70:32-70:34] SPEAKER_02: that. Not sure which one it is.
[70:35-70:35] UNKNOWN: Yeah.
[70:36-70:46] SPEAKER_00: And I literally was like, I know that sounds bad shit, but that's what it would sound like if you went through some Bible stuff in the real world. You'd
[70:46-70:46] UNKNOWN: be
[70:46-70:48] SPEAKER_00: like this can't possibly be real.
[70:54-70:55] SPEAKER_02: Yeah.
[70:55-70:55] UNKNOWN: It
[70:55-71:01] SPEAKER_02: is not kicking off that service.
[71:15-71:17] SPEAKER_01: Function is nothing.
[71:35-71:42] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[72:34-72:50] SPEAKER_00: Yeah. Chop the head off a bunch of stuff. Yeah. It gets stopped spinning up cloud run instances and the refactoring to like that's all kind of been in this space. The refactoring to the new to its own directory.
[73:02-73:02] UNKNOWN: I
[73:02-73:17] SPEAKER_00: think with those rules in place you can basically just be like, okay, let's start a new chat. And then without almost saying anything in the new one, just be like, let's go like you did. And it will have the full context of what you would otherwise do
[73:17-73:18] SPEAKER_02: it. Yeah.
[73:18-73:29] SPEAKER_00: And that's beautiful. It's just that little bit of optimization and then you can more rapidly start new chats because it's like, yeah, I'm nothing. I can't start this chat without it doing what I want it to do.
[73:31-73:31] UNKNOWN: Yep.
[73:53-74:00] SPEAKER_02: Yeah. Yeah. It said that like when I redeploy this, it should redeploy.
[74:54-74:57] SPEAKER_00: Oh, okay. Yeah. Okay. Yeah.
[74:57-74:59] SPEAKER_02: Yeah. And then we'll, we will bring in the slow
[74:59-75:02] SPEAKER_00: cooker. Yeah,
[75:02-75:02] UNKNOWN: I
[75:02-75:07] SPEAKER_02: don't know what they're
[75:07-75:17] UNKNOWN: called. Yeah. Because
[75:17-75:26] SPEAKER_02: we're going to leave.
[75:28-75:40] SPEAKER_00: Unless we want something for tomorrow. I was thinking about prepping. Okay. That actually kind of makes sense. But it's the whole thing.
[75:40-75:40] UNKNOWN: We
[75:40-75:41] SPEAKER_00: have to order and all that.
[75:43-75:44] UNKNOWN: But
[75:45-75:47] SPEAKER_00: like a turkey breast or something.
[75:47-75:51] SPEAKER_02: Maybe. Yeah, that's what we can like just instead of buying a bunch of lunch meat,
[75:52-75:52] UNKNOWN: like,
[75:52-76:04] SPEAKER_00: get some good ones, smoke it and then get like the thick slice shit. Yeah. That. Those things are also like 25 bucks. The stuff with all the bullshit and it is cheap.
[76:17-76:18] SPEAKER_02: This might work right now.
[76:18-76:49] SPEAKER_00: It's possible. Like everything's kind of in place. Just that. Sleep on 80 so it's gonna wait three minutes even after you do that. Good. I was mean to it yesterday, not even on your machine. And so maybe it picked up some shit.
[76:54-76:56] SPEAKER_02: It's not yet.
[77:00-77:01] UNKNOWN: Once
[77:01-77:01] SPEAKER_02: they're
[77:02-77:10] SPEAKER_00: sure I mean that takes all like 10 ish
[77:10-77:10] UNKNOWN: minutes.
[77:10-77:16] SPEAKER_00: At least I
[77:16-77:16] UNKNOWN: think.
[77:20-77:24] SPEAKER_01: Or go look at the logs. I'm gonna make coffee.
[77:31-77:35] SPEAKER_02: I think it just. This is the part where it takes
[77:35-77:35] UNKNOWN: a little
[77:35-77:37] SPEAKER_00: says, this may take a while.
[78:09-78:43] UNKNOWN: Oh, no. Water. Water. Right. Yeah. Yeah.
[79:03-79:05] SPEAKER_03: Yeah.
[79:33-82:04] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[82:34-82:53] SPEAKER_00: Okay. What we got. And yesterday there were a bunch of like knock on errors but I think it was having to do with like it was finishing one it was post up continuing to try to keep pushing them right to it would finish and try to start off the transcription and that wasn't actually in place.
[82:54-82:55] UNKNOWN: Yeah.
[83:03-83:05] SPEAKER_02: Need to just delete that.
[83:06-83:09] SPEAKER_00: Yeah. So when you do a build and deploy everything.
[83:09-83:12] SPEAKER_02: No, no, I think we just can delete it. You're right.
[83:12-83:12] UNKNOWN: Yeah,
[83:12-83:22] SPEAKER_02: that's the old one. Yeah, that's the old one. And there's no. No files in. Yeah, there's no like terraform or something that yeah, yeah, it needs to be gone.
[83:26-83:29] SPEAKER_00: Why the heck is my name capitalizing here.
[83:30-83:36] SPEAKER_02: Oh, I don't know. You're right. He could delete. Yeah,
[83:36-83:41] SPEAKER_00: for sure. I
[83:41-83:43] SPEAKER_02: was like, what I did. No.
[83:47-84:12] SPEAKER_00: So, that's interesting. There's just a button for connecting the repo to it. Right. Yeah, go to the logs, and like did we get our to whatever message back to.
[84:19-84:22] SPEAKER_02: Oh, this started at the same time.
[84:51-84:52] UNKNOWN: 606.
[85:04-85:05] SPEAKER_02: Maybe
[85:05-85:05] UNKNOWN: that.
[85:07-85:18] SPEAKER_00: Yeah. But if we don't see another one. I think it's just long like, my guess is that's for the dead letter thing. Maybe.
[85:19-85:19] UNKNOWN: And
[85:19-85:21] SPEAKER_00: like this. Yeah. So 202 accepted.
[85:21-85:21] SPEAKER_02: Where do you see?
[85:22-85:23] UNKNOWN: Okay.
[85:24-85:28] SPEAKER_00: Nice. I mean, we saw that yesterday too and everything was a fucking shit.
[85:29-85:34] SPEAKER_02: But it wasn't listening for more than. So this one is listening for 10 minutes.
[85:34-85:34] UNKNOWN: Seems
[85:34-85:40] SPEAKER_02: like. Yeah. So, and it sent it at. Like a minute. Yeah. And it
[85:40-85:42] SPEAKER_00: hasn't spun up anything else.
[85:43-85:43] UNKNOWN: Right.
[85:43-85:51] SPEAKER_00: So far. Yeah. So this might make it fail. Possibly. But we've seen it do diarys
[85:51-85:51] UNKNOWN: it
[85:51-85:57] SPEAKER_00: like a full diarysation. It's true. And I mean, at least look convincing.
[86:14-86:14] SPEAKER_02: That's me.
[86:47-86:48] SPEAKER_03: Yeah.
[86:52-87:00] SPEAKER_00: I mean, it's not, is my guess in there yet. Yes. It's just not completed. Yeah. And there's no more like long triggers for the step that is.
[87:01-87:23] SPEAKER_02: And this is fine. The only way to make it go faster is to give it a better GPU. Yeah. Like you can make it go faster. As long as it returned that two or two within 10 minutes. Yeah. Exactly. That's going to make it. It's just, it's running the one instance of cloud.
[87:23-87:28] SPEAKER_00: Actually works and then further on steps or has handling for it.
[87:28-87:28] UNKNOWN: It
[87:28-87:28] SPEAKER_00: breaks.
[87:29-87:29] UNKNOWN: Right.
[87:29-87:45] SPEAKER_00: Which is exactly. And as far as like once we create a UI for this and we have like a good recording system to where it's easy to pass, like basically we would have been at research every night. Yeah. Upload all your files. And then we got home or the next morning is there.
[87:46-87:46] UNKNOWN: And
[87:46-87:54] SPEAKER_00: literally the next step is like not, it's not there. This full on presentation of everything you talked about the new obsidian updates, all that.
[87:54-87:54] UNKNOWN: All
[87:54-87:55] SPEAKER_02: that. Yep. Exactly.
[87:57-88:00] SPEAKER_00: And then you start working on the game. Not reboot fixing.
[88:00-88:16] SPEAKER_02: I mean, I think the, the thing that's popping into my head is, well, if this little tiny file takes that long to process. Well, I mean, you may end up running a cloud run instance for 10 hours.
[88:16-88:22] SPEAKER_00: I mean, that's like a 10 minute. Like, yeah,
[88:22-88:23] SPEAKER_02: but those might
[88:23-88:24] SPEAKER_00: be over. Sure.
[88:25-88:25] UNKNOWN: But
[88:25-88:32] SPEAKER_00: if nothing else is one for one. So a two hour conversation seems like it's going to take about maybe two hours. Right. Potentially.
[88:32-88:32] UNKNOWN: We'll
[88:32-88:32] SPEAKER_00: see what
[88:32-88:32] UNKNOWN: it is.
[88:32-88:33] SPEAKER_00: Well,
[88:33-88:39] SPEAKER_02: I'm talking cost. I'm not talking about time. Right. The cost of running a cloud run instance for two hours.
[88:39-88:45] SPEAKER_00: For sure. But like with a GPU. Two hours versus like 24. And then we can start to look at like,
[88:45-88:45] UNKNOWN: should
[88:45-88:55] SPEAKER_00: we just take the slower CPUs and it run for longer. Or go to a higher GPU. Pay a little bit more per second of GPU. But yeah,
[88:58-88:58] UNKNOWN: that
[88:58-89:02] SPEAKER_00: math problem, my guess is ends up being about paying exactly the same.
[89:03-89:14] SPEAKER_02: Probably. Man, I thought that was a tornado.
[89:19-89:37] SPEAKER_00: A little bit of a slower start. You can hear them really get going. I
[89:37-89:37] UNKNOWN: guess
[89:37-89:50] SPEAKER_00: it's still running. It took a little while. And we haven't seen any new ones, which is like a very positive development.
[89:54-89:54] UNKNOWN: Yep.
[90:07-90:14] SPEAKER_00: We got some Tuesday, Thursday, Tuesday, Friday.
[90:14-90:17] SPEAKER_02: It's three days in between.
[90:17-90:31] SPEAKER_00: Some of them have to, because I'm pretty sure there's a game on Friday. Oh, that's game three. So there's four days in between that one.
[90:34-90:46] SPEAKER_02: So Wednesday, Friday. So Sunday, Wednesday, Friday. So there's only two days in between. One day in between.
[90:47-90:48] UNKNOWN: Yeah.
[90:48-90:50] SPEAKER_00: And that's game three. Unfortunately,
[90:50-90:50] UNKNOWN: those
[90:50-90:52] SPEAKER_00: are the two Indiana games.
[90:53-90:53] UNKNOWN: Yep.
[90:53-91:00] SPEAKER_00: Two days Monday. I
[91:00-91:08] UNKNOWN: think. It didn't
[91:08-91:17] SPEAKER_01: really take that long.
[91:18-91:18] SPEAKER_00: I mean,
[91:18-91:18] UNKNOWN: when
[91:18-91:21] SPEAKER_00: did we, when did it start? 606 or
[91:21-91:23] SPEAKER_02: whatever. Oh, six.
[91:23-91:30] SPEAKER_00: Yeah. I mean, it could be. Might have Kershaw look again.
[91:31-91:56] SPEAKER_02: It wants to look at the bucket, which I know. Oh, yeah. You see that? Yeah. Yeah, it does seem long to me,
[91:57-91:57] UNKNOWN: too.
[92:00-92:15] SPEAKER_00: Yeah, I'm good with it. Doing it. Although I just sit here and if it is broken. I want to go look. I don't know if that's like, are we going to kick the process of
[92:15-92:16] SPEAKER_02: imagining you have to kick it off again?
[92:28-92:30] SPEAKER_00: That's probably some handling with it.
[92:30-92:30] UNKNOWN: The
[92:30-92:37] SPEAKER_00: bad is if it fails in the middle, restart that sucker some number of times.
[92:37-92:39] SPEAKER_02: Right.
[93:26-93:48] UNKNOWN: Yeah. Yeah. Yeah.
[94:15-94:19] SPEAKER_02: Yeah. This accepted already came.
[94:45-95:46] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[95:58-95:58] SPEAKER_02: Yeah.
[95:58-95:58] UNKNOWN: Yeah, I
[95:58-96:03] SPEAKER_02: think the service is just not working well. It was.
[96:04-96:05] SPEAKER_00: Yeah.
[96:06-96:21] SPEAKER_02: Well, we have seen it producing output. Right. And I can't imagine that for that, you know, two minute video, it takes 20 minutes. Again, if that's the case, it's not sustainable that they want. You can't pressure.
[96:22-96:31] SPEAKER_00: We need to look and see if I can actually get. Yeah, I agree. Understanding what's going on. I
[96:31-97:21] SPEAKER_02: assume. Yeah. Because if you even look at the like the service metrics, like it's not like running.
[97:24-97:30] SPEAKER_00: Yeah. This might be a good use for the very specific docs.
[97:32-97:32] UNKNOWN: Of
[97:32-97:33] SPEAKER_00: that.
[97:33-97:33] UNKNOWN: I
[97:33-97:34] SPEAKER_00: know.
[97:34-98:01] SPEAKER_02: Wreckage. Maybe it is running. These are hours. Right. So it ran for just it came up to 100 % or close to or. Yes. Right at 60. And now it's coming back down. I want to
[98:01-98:01] UNKNOWN: see
[98:01-98:03] SPEAKER_02: the last.
[98:03-98:04] SPEAKER_01: 30 minutes.
[98:06-98:09] SPEAKER_02: Yes, it was. It's
[98:09-98:09] UNKNOWN: a lot.
[98:11-98:13] SPEAKER_02: CPU utilization.
[98:16-98:17] SPEAKER_00: So
[98:17-98:17] UNKNOWN: another
[98:17-98:19] SPEAKER_00: is. CPUs.
[98:20-98:20] SPEAKER_02: Yeah.
[98:30-98:41] SPEAKER_00: So it's doing stuff. Maybe. And they're just 100 % capacity on the CPU.
[98:48-99:40] SPEAKER_02: And that's the two triggers that we sent. Yes, I have latency for these. I assume these are just two different runs, but I'm not sure. But it was like 50 seconds.
[99:41-99:41] UNKNOWN: So
[99:41-99:45] SPEAKER_02: Tim, we can lower that down to five minutes or so.
[99:45-99:47] SPEAKER_00: Probably. Pretty comfortably.
[100:17-101:12] SPEAKER_02: Yeah, the service is running. It's just not. It's just. Yes. I agree with
[101:12-101:12] UNKNOWN: you.
[101:41-102:20] SPEAKER_01: Let's shut down. The service. That's just. Sorry. Sorry.
[102:44-103:10] UNKNOWN: Okay. Okay.
[103:29-103:32] SPEAKER_00: It turns it off and turns the back on. I
[103:32-103:32] UNKNOWN: guess
[103:32-103:43] SPEAKER_00: so. That makes sense. Once you solve the Pub Sub topic, you literally just have to turn it off.
[103:43-103:44] SPEAKER_03: Right.
[103:46-103:49] SPEAKER_00: And then you can safely turn it back on. Yeah,
[103:52-103:54] SPEAKER_02: because it's not trying to reset.
[103:56-103:57] UNKNOWN: Right.
[103:58-104:03] SPEAKER_00: I guess it just takes a couple of seconds to reset.
[104:19-104:20] UNKNOWN: I
[104:20-104:25] SPEAKER_02: mean, earlier it sent a restart command, which worked just fine.
[104:25-104:30] SPEAKER_00: Yeah. No, it's
[104:30-104:31] SPEAKER_02: the same.
[104:45-104:47] SPEAKER_01: Actually.
[104:54-104:55] UNKNOWN: I
[104:55-105:01] SPEAKER_02: don't know. I don't understand what these lines are. They're labeled 50, 95 and 99. What?
[105:01-105:01] UNKNOWN: I
[105:01-105:02] SPEAKER_02: don't understand what that means.
[105:02-105:05] SPEAKER_00: Scroll up a little bit. Like what's the title?
[105:05-105:05] UNKNOWN: Like
[105:05-105:25] SPEAKER_00: in that same spot. Which was CPU utilization. We hover over the question mark. Or the one over by like the title. Yeah.
[105:28-105:29] SPEAKER_02: Yeah.
[105:29-105:29] UNKNOWN: So
[105:29-105:48] SPEAKER_02: there's like three instances it's tracking, I guess. I don't
[105:48-105:48] UNKNOWN: know.
[105:51-105:52] SPEAKER_00: Yeah.
[105:52-105:58] UNKNOWN: Yeah, I
[105:58-106:10] SPEAKER_02: don't understand these. I
[106:10-106:29] SPEAKER_00: don't
[106:29-106:29] UNKNOWN: understand what that means.
[106:29-106:32] SPEAKER_00: So it restarted the service like that container is up.
[106:33-106:33] SPEAKER_02: Right.
[106:34-106:35] SPEAKER_00: That makes sense. And then
[106:35-106:35] UNKNOWN: it
[106:35-106:43] SPEAKER_00: will eventually go off. Right. But why is that CPU at 100 %? Right. When nothing should actually be running right now?
[106:43-106:43] UNKNOWN: What
[106:43-106:48] SPEAKER_00: are the logs currently saying? The top, or the bottom, I suppose.
[107:00-107:07] SPEAKER_02: Yeah, the 202 accepted just happened two minutes ago. Yeah. So meaning it got another input.
[107:08-107:08] SPEAKER_00: Yeah.
[107:10-107:20] SPEAKER_02: First of all, I want to go delete this out of the freaking bucket. Maybe it just, I don't know.
[107:20-107:25] UNKNOWN: I don't know.
[107:32-107:36] SPEAKER_01: Let's do that. I shall look in here just to see what.
[107:38-107:50] SPEAKER_02: So is there a way to freaking stop the service? Of course they make it like that. I don't want to
[107:50-107:50] UNKNOWN: delete
[107:50-107:56] SPEAKER_02: it. I want to stop it. Turn it off. Maybe.
[108:00-108:01] UNKNOWN: Yeah,
[108:12-108:15] SPEAKER_02: it's got a new file. And it's processing.
[108:16-108:17] UNKNOWN: Right.
[108:20-108:24] SPEAKER_00: Yeah, the blue one's back up to 100, so I don't even really understand.
[108:26-108:26] UNKNOWN: What?
[108:28-108:30] SPEAKER_02: Yeah, it got a new file.
[108:54-109:21] UNKNOWN: Okay. Okay.
[109:43-109:50] SPEAKER_00: That does make sense. But also, why are these machines running?
[110:08-110:14] SPEAKER_02: Yeah. How do I make you stop without killing the service?
[110:15-110:18] SPEAKER_00: Right. And like deleting triggers and all this different shit.
[110:22-110:34] UNKNOWN: Right. Yeah.
[110:40-110:55] SPEAKER_00: Unless it is doing it correctly, like we have a failure mechanism in there. When you stop it, it's triggering that failure mechanism, which is telling folks, Hey, actually I didn't.
[110:55-110:56] SPEAKER_02: Maybe.
[110:56-110:59] SPEAKER_00: I think we at least talked about doing that yesterday.
[110:59-111:03] SPEAKER_02: Yeah, we did. But I don't know that we ever did anything with it.
[111:03-111:09] SPEAKER_00: Right. I mean, I assume it's a fairly small line of code that a cursor may have just written.
[111:19-111:20] SPEAKER_02: I don't know how to stop
[111:20-111:32] SPEAKER_00: it.
[111:34-112:08] SPEAKER_02: I hit that Docker build command. Yeah.
[112:12-112:13] SPEAKER_00: I want it
[112:13-112:13] SPEAKER_02: to
[112:13-112:23] SPEAKER_00: stop. Can you go to like the little three dots back on the previous page? There are options.
[112:33-112:34] UNKNOWN: Delete
[112:34-112:37] SPEAKER_02: is the only option.
[112:44-112:47] SPEAKER_01: And this one looks stuck.
[113:00-113:06] SPEAKER_00: Maybe it's just silent. Is the is there any action on that CPU? Yeah. Yeah.
[113:06-113:06] UNKNOWN: I
[113:06-113:09] SPEAKER_00: mean, it's doing something.
[114:03-114:05] UNKNOWN: Okay.
[114:17-114:19] SPEAKER_02: Everything's stuck.
[114:48-114:55] UNKNOWN: Yeah. And that
[114:55-115:00] SPEAKER_02: may be because of the way it's
[115:00-115:00] UNKNOWN: coded.
[115:00-115:10] SPEAKER_00: All right.
[115:12-115:15] UNKNOWN: Oh, gosh.
[115:28-115:45] SPEAKER_00: Yeah, it doesn't yet understand the situation. I guess soon as the new one starts, its CPU usage goes to 100%. I agree.
[116:11-116:11] UNKNOWN: I think
[116:11-116:23] SPEAKER_00: it's
[116:23-116:35] SPEAKER_02: a different problem though, right? Oh, I agree. But I think that because it came, it's allowed to go down to zero minimum. Right. So do that.
[116:38-116:39] UNKNOWN: And
[116:39-116:46] SPEAKER_02: then I think fixing the code is the answer. Yeah. Because something when it starts up, it's just trying to do something.
[116:46-116:51] SPEAKER_00: Yeah. It's not like it's actually doing the diarization. It's just running at 100%. Right. It's
[116:51-117:19] SPEAKER_02: doing something that is dumb. Yeah. Yeah. This is the answer. Like, I don't know where you see these. Yeah, because there's all these instances in the background.
[117:19-117:19] SPEAKER_00: Right.
[117:20-117:23] SPEAKER_02: That are sitting there. Delete all of them.
[117:24-117:25] SPEAKER_00: Eight more.
[117:32-117:38] SPEAKER_02: And that may be why these numbers are so high. Is that even though we've stopped them, there's these ones in the background that
[117:38-117:38] UNKNOWN: are
[117:38-117:39] SPEAKER_02: running this code?
[117:40-117:45] SPEAKER_00: Yeah, but we had significantly less charges yesterday. I agree.
[117:53-117:54] UNKNOWN: This
[117:54-118:00] SPEAKER_00: is zero. No, there's still two container instances. Where do you see that? Right, left.
[118:02-118:04] SPEAKER_02: And it just went up.
[118:08-118:12] SPEAKER_00: Down. Yeah. It might just be a little behind.
[118:20-118:21] SPEAKER_02: Right.
[118:21-118:21] UNKNOWN: Of
[118:21-118:21] SPEAKER_02: course,
[118:21-118:21] UNKNOWN: I
[118:21-118:28] SPEAKER_02: really want to resolve this. Right. Before we both go into our day and forget about it. I
[118:28-118:28] SPEAKER_00: mean, like,
[118:29-118:29] UNKNOWN: oh,
[118:29-118:30] SPEAKER_00: that one thing.
[118:38-118:41] SPEAKER_02: Yeah, this billable container instance time.
[118:42-118:42] UNKNOWN: Like,
[118:43-118:54] SPEAKER_02: why are there still, like, why is it still billing anything? Make everything go away. Otherwise, I'm going to delete the service.
[118:58-119:04] SPEAKER_00: Go back to console. There's a revisions. Reception.
[119:06-119:06] UNKNOWN: So,
[119:06-120:46] SPEAKER_00: can we stop that here? Yeah, so there has to be something in it, a version in it for it to exist, basically. Yeah.
[120:50-120:50] UNKNOWN: I mean,
[120:51-121:03] SPEAKER_00: we just got to know that we got to put it back. To get it. I think we're, it's not saying it. I'm starting to worry that their new chat thing is stupid now. Right.
[121:03-121:03] UNKNOWN: Because
[121:03-121:06] SPEAKER_00: if you miss it, it's just not there anymore, but it might be about that time.
[121:06-122:06] SPEAKER_02: No, I definitely think so. Yeah, I want to update the chat, or start a new chat before doing the rebuild. Yeah. Request count is zero now.
[122:15-122:15] UNKNOWN: So
[122:15-122:44] SPEAKER_02: there's one. I don't. So maybe that's what. Yeah, that's, that's fine. I guess should be, I guess that's. The blue button is there too. Oh, you're right. So one active one I don't. Yeah, and there's. I'm going to delete the service.
[123:19-123:38] UNKNOWN: Okay. Okay.
[124:05-124:11] SPEAKER_02: Okay. This has activity in it too. Is there something in the bucket
[124:11-124:13] SPEAKER_00: in the diarization service?
[124:13-124:17] SPEAKER_02: Well, there might be.
[124:22-124:25] SPEAKER_00: No. There's a lot of stuff.
[124:41-124:55] SPEAKER_02: Nothing for the transfer. Whisper transcription service doesn't have anything. The published diarization request. What does that service do? Publish diarization request.
[124:57-124:58] SPEAKER_01: Oh, it's a function.
[124:58-125:11] SPEAKER_02: This is the cloud function. It's the only kicks everything off. Yeah, so it's fine. It's a cloud function and it doesn't run continuously. I know it. Yeah.
[125:18-125:19] UNKNOWN: Yeah.
[125:19-125:36] SPEAKER_02: Yeah. Cloud running cloud functions have been united. And so that functions are shown in clever. Yes. So it received an event at 25. That's the last thing.
[125:37-125:37] UNKNOWN: Yeah.
[125:38-125:42] SPEAKER_02: So, well, I know it's not running now because it doesn't exist.
[125:46-126:19] SPEAKER_00: I sent you another rule. Okay. So
[126:19-126:19] UNKNOWN: I
[126:19-126:19] SPEAKER_00: know,
[126:20-126:21] SPEAKER_02: but I mean,
[126:21-126:21] UNKNOWN: I
[126:21-126:23] SPEAKER_02: think certainly while we're working on the same project.
[126:38-126:51] SPEAKER_00: Yeah. So you have to like in chat protocol. Yeah. In chat. Yeah. It might get there. It did it.
[126:55-126:56] UNKNOWN: Yeah.
[127:00-127:31] SPEAKER_00: And like a pretty big retooling of the service anyway. So deleting it. Like you're going to do a full on update of it anyway. You need 2024. It genuinely a few times called out like there was a 2025 date was in there. And it was like, I'm not sure what's going on with that date, but like obviously it's wrong. Yeah.
[127:58-128:23] UNKNOWN: I don't know. Okay.
[128:38-128:42] SPEAKER_02: Okay. I don't have anything until nine.
[128:54-129:10] SPEAKER_00: I think you said continue and that did not make it feel like it was a new chat. Because it just dove straight into like, well, there it started to look at it. But yeah, I don't think continue is a good one.
[129:44-129:49] SPEAKER_01: It is a gold line of information on purpose.
[129:58-130:04] SPEAKER_02: That is what I expected to see for sure. It does not have the Linux.
[130:09-130:54] SPEAKER_00: That's a role you could. Yeah. It's almost like if you in one working session have to type the same sentence twice, put it
[130:54-130:54] UNKNOWN: in the same place, you have to make
[130:54-130:55] SPEAKER_00: it a room.
[130:56-130:56] UNKNOWN: Yeah.
[131:16-131:19] SPEAKER_02: You have to give it a cut that name. Yeah,
[131:19-131:33] SPEAKER_00: it's an actual file that goes into the project. It has to be lowercase and dashes and numbers.
[131:42-132:39] UNKNOWN: Okay. Okay. Okay. Okay.
[132:57-133:00] SPEAKER_00: I do think, so this is different obviously, I
[133:00-133:00] UNKNOWN: think
[133:00-133:15] SPEAKER_00: manual needs to be changed because that is specifically saying it has to be mentioned to be included. Yeah, just always attached even when we're not doing a Docker build. Either what, yeah, auto attached, the rule is attached to every chat. What was the auto?
[133:20-133:20] SPEAKER_01: Yeah,
[133:22-133:22] UNKNOWN: so. Agent
[133:22-133:28] SPEAKER_01: requested. Description of this. Docker builds. Yeah,
[133:33-133:49] SPEAKER_02: I think this is probably good. So it's just a file. Yeah. Somewhere. Yes, straight to your left. So this tree. Okay. I'll leave that in there.
[133:50-133:52] SPEAKER_03: I'll be back.
[133:52-133:52] UNKNOWN: I
[133:52-133:53] SPEAKER_03: don't know.
[133:53-133:59] SPEAKER_02: Okay. I gotta go. Okay. Yeah,
[133:59-133:59] UNKNOWN: definitely.
[134:01-134:22] SPEAKER_00: Yeah, once this build finishes. Yeah, definitely push. But I'll let this thing go through the whole, I might wait on the plane or anything. Let the logs clear out so I can feel like it's actually not. It's still going. Yeah.
[134:22-134:32] UNKNOWN: Okay. 55.

==================================================
Generated on: 2025-07-29 12:58:50
Total words: 9604
Total speakers: 5
==================================================




Summary:
creation_date: 2025-07-29 source_file: 2025-07-29_1240_ZOOM0019_transcript.txt participants: SPEAKER_00, SPEAKER_02

Executive Summary
This meeting focused on configuring the [[AI Tools|AI tool]] [[Cursor]] and troubleshooting the deployment of the [[Transcription Service]] on [[GCP]]. The participants synchronized their [[Cursor]] settings, particularly the "rules" feature, to streamline their development workflow and provide consistent context to the [[AI Agents]]. The primary challenge discussed was a deployment issue with the [[Transcription Service]], where [[Cloud Run]] instances were getting stuck in a high CPU utilization state without processing tasks, creating "zombie instances". After several failed deployment attempts due to [[Docker build]] errors and [[GPU]] quota issues, they identified the root cause as the misbehaving [[Cloud Run]] instances. The key decision was to delete the entire service and its associated instances from [[GCP]] to ensure a clean slate before attempting to redeploy with corrected code and build configurations.

Key Topics Discussed
	•	Personal Updates & Sports
	•	Brief discussion about an OKC Thunder loss, framing it as a necessary learning experience to stay hungry.
	•	[[Cursor]] Configuration & Workflow
	•	Walkthrough of [[Cursor]] settings to synchronize their development environments.
	•	Enabled "include folder context" and "include project structure" for better [[AI Agents|agent]] awareness.
	•	Selected preferred AI models: GPT-4.0, GPT-4.1, [[Gemini]] 2.5 Pro, and Claude 4 Sonnet.
	•	Custom Rules: Implemented user rules to automate repetitive instructions for the AI, such as:
	•	Analyzing the codebase and README.md at the start of a new chat.
	•	Treating the README.md as an active [[Project Plan]] and to-do list.
	•	Defining a standard procedure for ending a chat session.
	•	Discussed best practices, like starting new chats for new tasks to avoid context pollution.
	•	[[Transcription Service]] Architecture & Deployment
	•	Reviewed the project's architecture outlined in the README.md.
	•	Workflow: A [[Cloud Function]] is triggered, which sends a message to a [[Pub/Sub]] topic. The [[Diarization Service]] on [[Cloud Run]] subscribes to this topic and, upon completion, publishes another [[Pub/Sub]] message to trigger the [[Transcription Service]].
	•	Identified excessive cold start times for the [[Cloud Run]] service as a primary cause of previous timeout errors.
	•	[[GCP]] Troubleshooting
	•	Initial Deployment: Attempted to deploy the [[Transcription Service]], suspecting a [[GPU]] quota issue was the initial blocker.
	•	[[Docker build]] Failures: Encountered multiple build errors, iterating with [[Cursor]] to fix issues related to file paths, dependencies, and Dockerfile commands.
	•	Zombie [[Cloud Run]] Instances: The core problem identified was that [[Cloud Run]] instances were starting, immediately hitting 100% CPU utilization, and becoming unresponsive without processing jobs. This led to a loop of [[Pub/Sub]] retries and new, stuck instances.
	•	Resolution: Decided to completely delete the [[Cloud Run]] service to eliminate all lingering container instances before rebuilding and redeploying. They suspected a code issue was causing the startup loop.

Action Items & Decisions
	•	Decision: Participants will synchronize their [[Cursor]] settings and rules to maintain a consistent development environment.
	•	Action: Investigate and resolve the [[GPU]] quota limitations in their [[GCP]] project.
	•	Decision: The root cause of the deployment failure was identified as "zombie" [[Cloud Run]] instances consuming 100% CPU on startup.
	•	Action: Delete the existing [[Transcription Service]] from [[Cloud Run]] to clear all stuck instances.
	•	Action: Add a new rule to [[Cursor]] to always check for Linux AMD64 architecture compatibility when performing a [[Docker build]].
	•	Action: Re-deploy the [[Transcription Service]] after correcting the code that is causing the high CPU usage on startup.

Suggested New Links/Tags
	•	[[Cold Start]]
	•	[[Diarization Service]]
	•	[[Eventarc]]
	•	[[Zombie Instances]]

Linked Concepts
	•	[[AI Agents]]
	•	[[AI Tools]]
	•	[[Cloud Function]]
	•	[[Cloud Run]]
	•	[[Cursor]]
	•	[[Docker build]]
	•	[[GCP]]
	•	[[Gemini]]
	•	[[GPU]]
	•	[[Project Plan]]
	•	[[Pub/Sub]]
	•	[[Service Account]]
	•	[[Transcription Service]]

#Tags
	•	#AI
	•	#Automation
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom22
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-23_1446_ZOOM0022_transcript.txt

==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:09] SPEAKER_02: thing so we can and I'm down to like even say if it's just me and you talking that's fine just to keep
[00:09-00:13] SPEAKER_00: the Wednesday thing going yeah yeah I mean I think
[00:14-00:14] UNKNOWN: that
[00:14-00:31] SPEAKER_00: meeting on Wednesday outside of this room or side of the house is just a better space for brainstorming and thinking and stuff I agree whereas this time I feel like it's perfect for this for
[00:31-00:37] SPEAKER_02: like yeah jam it's also where we've gotten how we've gotten to this point
[00:40-00:50] SPEAKER_00: oh you want an
[00:50-00:52] SPEAKER_02: actual there's a beta
[00:52-01:03] SPEAKER_00: no oh I don't know if it's beta like that when I reformatted yesterday it said that there was an update available
[01:03-01:04] SPEAKER_01: huh
[01:05-01:09] SPEAKER_00: it's Sequoia 15 .5 yeah I mean
[01:09-01:09] UNKNOWN: it
[01:09-01:43] SPEAKER_00: would be just mech OS 26 if it was the base yes yes yeah it's just the latest one and for whatever reason the reset didn't take this that thing the reset didn't take you back to the latest one yeah maybe I wasn't already on the latest one and it just yeah maybe I don't know but I'm good with either way like if you want to talk about that you want to do them just overall planning or at least capturing the thoughts of where we are with the system or what they follow what we're doing later I
[01:43-02:07] SPEAKER_02: guess like regardless this work needs to be done no matter what the system is gonna become right if the kickoff is transcription or diarization and transcription so I mean either way we need to get it might even be recorded from yesterday it might we don't know when it comes off recording it might be but we do need to get the transcription actually running
[02:08-02:15] SPEAKER_00: right that's my thoughts that I would rather use this time and it's a tool that feeds into the system no matter what
[02:15-02:15] SPEAKER_02: right
[02:15-02:16] SPEAKER_00: so
[02:16-02:24] SPEAKER_02: that is the foundational you know taking the human prompting out of it and going straight from general
[02:54-03:02] SPEAKER_00: I'm excited what is happening I guess I guess I set up everything
[03:02-03:04] SPEAKER_01: oh yeah it's a
[03:04-03:10] SPEAKER_00: it's a whole thing but it's good it's like if this is the consequence
[03:10-03:22] SPEAKER_02: yeah to go from a super cluttered up all kinds of shit to like oh this is actually gonna couple more minutes than I thought right it's not too bad
[03:22-03:32] SPEAKER_00: okay there you go I think we're cooking with gas yeah and I think everything's just gonna work
[03:32-04:09] SPEAKER_02: yeah you'll have to go through the well where you're actually running stuff you have to go through like install Python install the CLI like that stuff I think so but it won't be bad and as we work on this the recording there will be a lot of discussion of what there'll be some discussion of like well ultimately this is for right and so that context of what the project is gonna be will be there
[04:09-04:25] SPEAKER_00: all right I do want to go through my settings just to look at yours just to make sure that I didn't miss like all the settings come back right and nothing weird is out of place or something like that. That makes sense.
[04:28-04:40] SPEAKER_02: Yeah I think we go through each page and that's just the rules. Yeah yeah that's what I was. So manage your editor settings I guess we go into each of those.
[04:41-04:41] SPEAKER_00: Well
[04:41-04:41] UNKNOWN: I
[04:41-05:03] SPEAKER_00: don't think we've changed any of those. I don't either. Okay they were all defaults. Well it really is if you're the one that changed the settings in the first place right so if you remember what you changed I only changed what you changed yeah I have never looked at settings separate from this morning sessions or with you right.
[05:03-05:04] SPEAKER_02: Yeah I'll go through I don't think I
[05:04-05:04] UNKNOWN: did
[05:04-05:49] SPEAKER_02: anything in general. So in the chat default mode agent text size default I have everything selected on that one. Completion sound, custom modes. Yep. Okay. I don't I haven't done anything with the custom modes the completion set I actually do use because I will go like send a prompt and go do something else even if it's talking to another AI and it's just this tiny little beep that doesn't bother you if you're actively in it and you don't want to hear it right and so I actually have seen some value there include full folder content I have all but hierarchical cursor ignore on okay the next section. Yeah
[05:49-05:49] UNKNOWN: those
[05:49-05:51] SPEAKER_02: are big ones in fact. Those first
[05:51-05:53] SPEAKER_00: two. Yeah I thought that might be the case.
[05:54-06:08] SPEAKER_02: Next one is all turned on all three auto run mode is off then I have tool toolbar on selection is on auto select code regions for quick edit is on.
[06:08-06:09] SPEAKER_00: What about auto parse link?
[06:09-06:09] UNKNOWN: It
[06:09-06:10] SPEAKER_00: is not on.
[06:10-06:10] UNKNOWN: Okay
[06:10-06:16] SPEAKER_02: yeah. Themed backgrounds is on then off on on off.
[06:17-06:17] UNKNOWN: Okay.
[06:18-06:24] SPEAKER_02: I think I did nothing too but I've got on on on off on off. That's the on on
[06:24-06:27] SPEAKER_00: on off on. Yeah.
[06:27-06:53] SPEAKER_02: Oh I actually yeah I turned on the partial accepts because that specifically was a thing I wish like that's basically if if you were coding and writing in the space and it does like the whatever auto compile it was that would suggest it that way you can do it word -by -word got it with by holding command so still tab will just be like yep done it not I don't know that we're ever gonna actually do that again
[06:53-07:01] SPEAKER_00: back into that again so when I turned on imports it brought up another one auto import Python I did not have that.
[07:01-07:01] UNKNOWN: Sounds
[07:01-07:02] SPEAKER_00: good.
[07:03-07:04] SPEAKER_02: That makes some sense.
[07:05-07:05] UNKNOWN: On on
[07:05-07:05] SPEAKER_02: on
[07:05-07:06] SPEAKER_00: off on off.
[07:08-07:18] SPEAKER_02: Models off on maximum. Maximum means pay for it. I have the first I guess it doesn't it changes right so
[07:18-07:20] SPEAKER_00: I have Claude for
[07:20-07:22] SPEAKER_02: holy smokes there's more yeah
[07:22-07:27] SPEAKER_00: there's more right so I did some stuff last night or yesterday when I was setting it up because there's new models
[07:27-07:49] SPEAKER_02: yeah I've got GPT -40 4 .1 Gemini and Claude and only one of like Claude Force on it Gemini 2 .5 Pro. I'm interested in the deep. There's two Claude Force Sonnets. I have the one with the brain. And the thinking Gemini. There's two Gemini 2 .5 Pros now. Yeah
[07:49-07:49] UNKNOWN: I
[07:49-07:54] SPEAKER_02: think one of them was max only but it's not now.
[07:56-08:04] SPEAKER_00: And there's a 2 .5 flash available now too but I think the pros are what yeah 100 % for coding especially.
[08:04-08:04] UNKNOWN: And
[08:04-08:35] SPEAKER_02: then yeah there's a Grok is on there now. Deep Seek models are on I don't know if they were before. I hadn't seen them but oh you can add your own. That's interesting. Yeah. Alright so you have nothing there. Rules. So it looks like they're like I have the. They're literally exactly what you left them as. Yeah. That makes sense.
[08:36-08:41] SPEAKER_00: Indexing and docs. Except for a dip sorry there there was a project rule I think
[08:41-08:41] UNKNOWN: I
[08:41-08:47] SPEAKER_00: had in there at some point or maybe I don't know it's fine. Maybe I got rid of it. Maybe that user rule.
[08:47-08:56] SPEAKER_02: Yeah I tried a project rule at some point and it was annoying enough that I was just like fuck it. I have a few docs but aren't necessarily part of this.
[09:00-09:03] SPEAKER_00: Maybe that's what this rule is right here. Yes it
[09:03-09:03] UNKNOWN: is for
[09:03-09:07] SPEAKER_00: local. Dr. Bill commands use the desktop.
[09:07-09:20] SPEAKER_02: Yeah I added that as just a rule from mine. That would be the case anytime I'm building. Yeah so then MCP tools got nothing.
[09:21-09:21] UNKNOWN: Network.
[09:21-09:42] SPEAKER_02: HTTP slash two and one. And then I have no pads turned on. Yeah. Never used one. Okay. Oh yeah that's the thing whenever you it says start a new chat I'm guessing that's what that is. And it summarizes it and feeds it.
[09:42-09:42] UNKNOWN: Okay.
[09:43-09:48] SPEAKER_02: And the background agents I don't have turned on but that's I think what you're talking about.
[09:48-09:48] UNKNOWN: Yeah.
[09:50-09:59] SPEAKER_02: Oh you gotta be. Oh yeah. I think I've done that before and then been like nah. Nevermind.
[10:05-10:06] UNKNOWN: Okay.
[10:06-10:10] SPEAKER_00: And we'll see how things go. A Docker desktop is that.
[10:10-10:10] UNKNOWN: Well
[10:10-10:12] SPEAKER_00: let me do. Yeah check billing.
[10:16-10:36] SPEAKER_02: So billing this morning there was basically nothing like forty five dollars total. But I. Like it looks like there was still a bunch of requests in the Kubernetes going on. Unless I'm just reading that the tables are kind of fucking confusing.
[10:42-10:45] SPEAKER_00: Oh they are. And I argue that they're kind of yeah.
[10:46-11:04] SPEAKER_02: But this is. So container APIs is Kubernetes. And this is yesterday which fair play but like into the evening. But also nothing happened on building. Right. So I don't even know what that means.
[11:04-11:05] SPEAKER_00: I don't either. Like
[11:05-11:13] SPEAKER_02: I literally don't know. I guess I mean maybe that self or the autopilot cluster is up right. It's
[11:13-11:13] SPEAKER_00: definitely
[11:13-11:15] SPEAKER_02: up. And so but they don't
[11:15-11:17] SPEAKER_00: charge you unless you have a partner.
[11:17-11:21] SPEAKER_02: Right. So it's idling but even idling it's doing stuff. Yeah. But
[11:21-11:37] SPEAKER_00: it just don't turn the billing model for autopilot cluster is very different. Right. A standard. So I think yes it's up and there's things happening. Right. Like it's doing health checks and all that stuff to keep the cluster up and healthy. But it only turns you if you give it a pot like if there's actually a pot active in it's doing stuff. Yeah. So
[11:37-11:37] UNKNOWN: as
[11:37-11:43] SPEAKER_00: long as we don't have give it a pot that should stay. Yeah. That's the value is out. It's almost like cloud run.
[11:43-11:48] SPEAKER_02: Yeah it is. Like it's faster cloud run basically. Yeah. And more robust and without all the annoying bullshit.
[11:49-11:49] UNKNOWN: Yeah.
[11:50-12:11] SPEAKER_02: Yeah. So that that was the only thing I saw on that. And it was just a guess. Maybe we would dive further into it. But ultimately if nothing's being filled and we're living inside that free tier and inside that free tier is thousands of calls a day every day for no reason. Like fair play.
[12:14-12:14] UNKNOWN: And
[12:14-12:23] SPEAKER_00: like the clusters up and running. What's that set maintenance window? Oh it's so you for upgrading the nodes.
[12:24-12:27] SPEAKER_02: Gotcha. Like oh so it's not like a thing that has to happen.
[12:28-12:37] SPEAKER_00: Um I think that. Oh no. So yeah if you set a maintenance window it will only update the nodes in that window.
[12:38-12:38] UNKNOWN: Gotcha.
[12:38-12:40] SPEAKER_00: Because otherwise it kind of just
[12:40-12:42] SPEAKER_02: does it whenever it feels like it
[12:42-13:07] SPEAKER_00: needs to. Yeah in the back end there's VMs. All right. And those VMs have to get um updated. Machines that have to do all the stuff. Yeah. And so they go in and automatically apply patches and stuff like that. And if you don't want that to be done on their schedule you can say hey only do it on Saturdays between midnight and 2 a .m. whatever. That makes sense. But we
[13:07-13:08] SPEAKER_02: should be good. I
[13:08-13:08] UNKNOWN: guess
[13:08-13:12] SPEAKER_02: that would be a bummer if
[13:12-13:43] SPEAKER_00: it happened to run while we were running. Yeah I don't think. I think updating pods or anything like that. Because there's nothing running. Okay I was this tier was messing me up. I agree it is. It's not. I think it would be no different than hey if you were running an update like the machine is still on. It just uses some of the resources to do this other stuff.
[13:44-13:44] UNKNOWN: Yeah.
[13:45-13:51] SPEAKER_00: Um the standard versus enterprise. Like I don't know what tier it is. Like I don't want it to be a standard cluster because it would be charging us.
[13:51-13:52] SPEAKER_02: Yeah we don't need all that.
[13:55-14:13] SPEAKER_00: I just wanted to see that word right there. Yeah so I assume I don't know how many. Yeah I assume there's there are four nodes. Yeah. That are just always available and one in each region in each zone. Which is cool.
[14:13-14:14] UNKNOWN: Yeah.
[14:15-14:31] SPEAKER_00: Yeah so now. Yeah so you can upgrade yourself but it will do these upgrades. Just on some schedule. Yeah. At some point when it decides it wants to it will upgrade and it will just always keep everything up to date. That's what autopilot is.
[14:32-14:32] UNKNOWN: Yeah.
[14:32-14:42] SPEAKER_00: Like I want. That's a fully managed service for you. Like that's it. Yeah I want to use Kubernetes but I don't want to do all of that stuff. Yeah that is cool.
[14:43-14:54] SPEAKER_02: And you can kind of learn Kubernetes. Have stuff operating and good in the field and then decide if you want to learn how to manage the shit. Right. Because it is cheaper if
[14:54-14:57] SPEAKER_00: you self -manage. Right. But it also is a pain in the ass.
[14:57-15:08] SPEAKER_02: Right and so you should like this should be the workflow is while you're still working on getting code working don't try to also run an infrastructure as complex as a Kubernetes cluster.
[15:08-15:27] SPEAKER_00: Yeah the issue is some people are in industries that are regulated to the point where you must maintain your own. Manage stuff. Their image for like VM image. Like you can't just say I don't know who made that image. You have to harden your image and do all this
[15:27-15:27] UNKNOWN: and
[15:27-15:41] SPEAKER_00: this have you have to control that and that's the only thing that can go on any VM. Including the ones that are on GK. So you have to control it. I've run into customers that they don't want to. Yeah. But I have to.
[15:42-15:42] UNKNOWN: It's
[15:42-15:45] SPEAKER_00: like man autopilot would be perfect for what you want.
[15:45-15:45] SPEAKER_02: Yeah it
[15:45-15:45] UNKNOWN: would
[15:45-15:46] SPEAKER_02: make everything so easy.
[15:47-15:47] UNKNOWN: Right.
[15:48-15:50] SPEAKER_00: All right so I'm just going to try.
[15:50-15:50] UNKNOWN: Thank goodness
[15:50-15:51] SPEAKER_00: we
[15:51-15:56] SPEAKER_02: have this big trillion dollar government to protect us from those people. Exactly. They're just trying to work.
[16:01-16:03] SPEAKER_00: See what breaks.
[16:07-16:07] UNKNOWN: I
[16:07-16:24] SPEAKER_00: mean nothing yet. Right. Oh I'm going to have to do the login. Oh yeah for sure. Six layer billing predictions.
[16:25-16:25] UNKNOWN: Yes
[16:25-16:30] SPEAKER_00: I mean this active it is. Container registers empty.
[16:31-16:31] UNKNOWN: Yes.
[16:33-16:37] SPEAKER_00: Yeah whatever for whatever reason we need to do that.
[17:05-17:13] SPEAKER_02: Should we do Jupyter Notebook stuff or just go for it. I think we should ask.
[17:20-17:29] SPEAKER_00: Oh I'm in auto. I guess it's fine to do auto for. Yeah maybe for this stuff. Oh I don't think I've got it all. Yeah that's a
[17:29-17:29] UNKNOWN: good
[17:29-17:38] SPEAKER_00: question. Yeah I need to do that whole thing.
[17:51-17:51] UNKNOWN: Should
[17:51-17:53] SPEAKER_00: have done this yesterday.
[17:57-17:59] UNKNOWN: Yeah. I
[17:59-18:06] SPEAKER_02: had three dollars. But even this is so much easier.
[18:10-18:10] UNKNOWN: Yeah.
[18:14-18:15] SPEAKER_02: I
[18:15-18:15] UNKNOWN: think
[18:15-18:16] SPEAKER_02: passwords don't
[18:16-18:16] SPEAKER_00: show
[18:16-18:16] SPEAKER_02: up.
[18:17-18:21] SPEAKER_00: Yeah I was just going backwards to make sure that I wasn't. Clear. Yeah. That makes sense.
[18:26-18:36] SPEAKER_02: Then it's going to add it to the path. Maybe it won't be able to all the way but probably will. You won't have to do all of that like which is file is it in. Exactly.
[18:37-19:07] SPEAKER_00: It will know how to do everything. Yeah I'm going to go look at this just because it makes me feel good. Like
[19:07-19:28] SPEAKER_02: it's so different. Oh I do it too. Anytime I reformat I'm like nice look at you. It's so different. It's beautiful. Yeah. It's beautiful. How much system data? Seven gigabytes. It's
[19:28-19:28] UNKNOWN: crazy.
[19:28-19:29] SPEAKER_02: I guess it's not crazy.
[19:30-19:30] UNKNOWN: Like
[19:30-19:38] SPEAKER_02: that is some system data is like legit stuff that you want. Right. It's not just a billion Docker images. I
[19:38-19:40] UNKNOWN: don't know what this is.
[19:40-19:43] SPEAKER_02: That's putting it into the adding it
[19:43-19:43] UNKNOWN: to
[19:43-19:58] SPEAKER_02: your path I think. The fact that brew worked means it's added to your whichever source file.
[20:21-20:21] UNKNOWN: What
[20:21-20:22] SPEAKER_02: did
[20:22-20:22] UNKNOWN: you
[20:22-20:30] SPEAKER_02: think about the last of this? It's kind of a jarring ending and also like a chaotic experience of watching a
[20:30-20:30] SPEAKER_00: TV show.
[20:31-20:31] UNKNOWN: It was.
[20:32-20:54] SPEAKER_00: Um I was surprised. Um I like especially because I literally was thinking there's another episode. Right. Yeah that was. I actually kind of like I mean I don't dislike it. It was surprising and I think in general when a show surprises me and it's not stupid. Right. I like it.
[20:54-20:54] UNKNOWN: It
[20:54-21:01] SPEAKER_00: did a good job. Right. He's like I wouldn't have expected that it's like oh she's here. Oh crap. Yeah. Yeah. I didn't
[21:01-21:04] SPEAKER_02: expect Abby to show up.
[21:04-21:04] UNKNOWN: I
[21:04-21:24] SPEAKER_02: did know that like basically in the game the timeline gets played concurrent or not concurrently like you play through either Ellie or Abby's timeline and then play the other perspective of it. Yeah. And things that you did have already done you were like in a different room and you just come and see the aftermath of it and stuff like that. Yeah you heard
[21:24-21:34] SPEAKER_00: that. Right. Yeah so I guess all the next season is going to be Abby going through and being the question and maybe you know I don't necessarily want you to tell me but is I assume Ellie's dead.
[21:35-21:35] UNKNOWN: I
[21:35-21:38] SPEAKER_00: don't I assume she's not dead. I don't know.
[21:39-21:39] UNKNOWN: Um.
[21:39-21:51] SPEAKER_02: Because. I think that would be a good move for the show because that actor is trash. Like fair play to you and you did crush it in Game of Thrones but you're not up to this test.
[21:51-21:54] SPEAKER_00: Right. Exactly. And switch to the better actor.
[21:54-22:26] SPEAKER_02: Right. My thought that I had like a little while ago was basically if they want to keep doing it and they've got good writers and all that stuff and we're going into the new era then just do a time jump. Yeah. Give us this universe maybe like you've had several different like little cities go to Kansas City. Right. Tell us that story. Yeah. How that crazy lady take over and all this stuff. Right. Exactly. Or just go full on like give us a season of an actual zombie show. Right. Like ramp that shit up.
[22:26-22:26] UNKNOWN: Yeah.
[22:26-22:41] SPEAKER_00: And so from that perspective I think they did good and it kind of is like I would rather they jump around and tell interesting stories rather than stay in the same timeline and trying to find interesting and trying to make up stuff. Yeah. Like just jump to the things that you know are going to be good. It's okay. We
[22:41-22:57] SPEAKER_02: get it. That's like jumping the shark but like it was this beautiful one game. Right. And you did a pretty good job doing that and then it was a game too that a lot of people didn't like. Right. And you made a season two that a lot of people didn't like. So go somewhere else.
[22:58-22:58] UNKNOWN: Yeah.
[22:58-23:11] SPEAKER_00: Be creative. Do whatever. Wish you
[23:11-23:34] SPEAKER_02: win. Well so you see what it says your current one is if that's the email you want to and disable usage reporting I'm assuming is like the so first yeah yeah or yes yes as long as those are the ones you want or specifically that email disable usage reporting true I'm almost certain is what you want
[23:47-24:01] UNKNOWN: to do. I
[24:01-24:10] SPEAKER_02: mean they're already set up but might as well.
[24:17-24:25] SPEAKER_00: Oh I don't want a zone. Oh yeah. I don't want to do that. So when I want to do about region. Yes. So one.
[24:29-24:29] UNKNOWN: Yeah.
[25:04-25:05] SPEAKER_02: So
[25:05-25:05] UNKNOWN: and
[25:05-25:40] SPEAKER_02: this is stuff that I would have to do. So 13 years between finals appearances for one of the smallest markets if not the smallest market.
[25:40-25:42] SPEAKER_00: Right. And that's not bad.
[25:42-25:42] UNKNOWN: No.
[25:43-25:47] SPEAKER_00: And there's some big market teams that would wish that they could do this.
[25:47-27:03] SPEAKER_02: Right. And you had three potential Hall of Famers leave one of them is two of them in their prime and Russ is obviously still playing right and was putting like average and triple doubles during that time. And then I mean maybe the greatest run of trades of all time apparently I saw seriously like that might be of maybe any sport but certainly basketball. Presti apparently like he was in charge the last year of the Super Sonics. Oh really. So the story like him getting put in charge like the owner knew they were leaving use a sac and he was out there. Yeah. But he made a trade basically it was like how this unknown player created these two teams 20 years ago or something like that. And it was when it was like early 2000s and mid 2000s and he traded. But this team it was the Suns when they were good. They had Steve Nash and Stoudemire and once is now the fall light skinned
[27:03-27:03] UNKNOWN: dude
[27:03-27:35] SPEAKER_02: freaking Sean Marion. That strikes about it. But they were balling and so they were like basically they gave a few extra pieces because they were like whatever and they brought in one piece and he ended up getting two first round draft picks and Serge Ibaka and basically set it up and one other piece that he ended up passing on for another draft pick. So he's been doing the draft pick things before. Like and he's just been playing and it's like y 'all motherfuckers trying to catch up. I've been here for two decades executing it.
[27:35-27:36] SPEAKER_00: That's cool.
[27:40-27:49] SPEAKER_02: Yeah. Yeah and in like five years he got into the finals. Obviously the players got into the finals. No but I mean that's a
[27:49-28:00] SPEAKER_00: significant portion of the team or the strategy that starts way up here. You bring the players in and then they go do the work but you run on it.
[28:01-28:08] SPEAKER_02: And yeah then the whole Paul George. Like we haven't even seen the pinnacle of it. Right.
[28:09-28:09] UNKNOWN: In theory
[28:09-28:28] SPEAKER_02: at least. Like he could have just completely shit the bed after this. No I agree. And nothing ever happened again but and maybe it was like I guess in theory it could have been like a moneyball era and everybody has adapted to his style but also like he could be the LeBron of general managers. Right. He's just better than you all.
[28:34-28:57] SPEAKER_00: Okay so I guess that's how autopilot works is some sort of way it keeps the cluster active without a node actually being like enabled. Yeah. Or active and whenever you give it a job it actually starts building the cluster and doing stuff. Yeah. Okay. It's like a cloud run GKE cluster.
[28:58-28:58] SPEAKER_02: Right.
[28:59-29:00] UNKNOWN: I
[29:00-29:11] SPEAKER_02: mean that makes sense. That's almost like guaranteed the first meeting that came up with autopilot was like hey we need to marry cloud run and self -manage GKE. Right.
[29:12-29:12] UNKNOWN: Exactly.
[29:15-29:17] SPEAKER_00: Yeah. Ready to go.
[29:18-29:23] UNKNOWN: Yeah. Okay.
[29:23-29:32] SPEAKER_02: Yeah so that I forgot that's where we ended on doing individual builds because that's where it was breaking yesterday at least we think.
[29:33-29:33] SPEAKER_03: Yeah.
[29:34-29:35] SPEAKER_02: But also it
[29:35-29:35] UNKNOWN: filled
[29:35-29:40] SPEAKER_02: up your entire computer stream workspace so that might have been the problem and it wasn't actually a problem.
[29:43-29:43] UNKNOWN: I
[29:43-29:54] SPEAKER_02: think it stalled on step nine but that was the full build so I don't know where it stopped. Yeah.
[29:54-29:55] SPEAKER_00: It's at least doing something.
[29:56-30:02] SPEAKER_02: Yeah. And it shouldn't like this is the smallest of the jobs so it shouldn't have to work that hard.
[30:08-30:09] UNKNOWN: Or
[30:09-30:14] SPEAKER_02: this is the most untested of our code and it's actually got issues.
[30:14-30:36] SPEAKER_00: Maybe. Yeah.
[30:36-30:36] UNKNOWN: Certainly
[30:36-30:58] SPEAKER_00: gonna see what billing looks like today. Yeah. It's gonna have four services. Yeah but in theory nothing running on it. No I think though that having a holding a pod it charges per pod I don't know how I don't know if the rate is reasonable. Yeah. Or not. We're gonna
[30:58-30:58] UNKNOWN: find
[30:58-31:04] SPEAKER_00: out. So I think it's going to have a pod active. You can have several pods
[31:04-31:04] UNKNOWN: at
[31:04-31:08] SPEAKER_00: least four. All the time? I think so.
[31:08-31:12] SPEAKER_02: There's not like I mean they should scale to zero though right?
[31:12-31:16] SPEAKER_00: That's true. Yeah so as long as they are designed that way.
[31:16-31:16] UNKNOWN: Yeah.
[31:16-31:22] SPEAKER_00: Yeah. That's true and if not we'll go back and make it do that.
[31:22-31:29] SPEAKER_02: Yeah it has to like that for the autopilot. To be reasonable. Exactly it can't run when we're not using it.
[31:29-31:29] UNKNOWN: It
[31:29-31:32] SPEAKER_02: can run all day and that's great if we have people using it all day.
[31:49-32:00] SPEAKER_00: Basically giving it permission to talk to giving docker permission to talk to the repository. Yep that makes sense.
[32:00-32:00] UNKNOWN: Why
[32:00-32:11] SPEAKER_00: did it not already have here? Because it's all new. They I just re -installed docker. Oh your local docker. Yeah. Yeah.
[32:11-32:11] UNKNOWN: Giving
[32:11-32:17] SPEAKER_00: like so all these can these they're building these images are being built here. Yeah. Yeah.
[32:17-32:18] UNKNOWN: And
[32:18-32:19] SPEAKER_00: oh.
[32:19-32:20] UNKNOWN: What
[32:20-32:20] SPEAKER_00: the
[32:20-32:22] UNKNOWN: heck.
[32:23-32:24] SPEAKER_00: I know it had that flag.
[32:26-32:27] SPEAKER_02: Oh
[32:27-32:29] SPEAKER_00: it's saying. If you run it on this machine
[32:29-32:29] SPEAKER_02: it
[32:29-32:30] SPEAKER_00: might so.
[32:30-32:30] UNKNOWN: Right.
[32:31-32:31] SPEAKER_00: That's good.
[32:31-32:33] SPEAKER_02: Yeah that's exactly what we're going for.
[32:33-32:58] SPEAKER_00: Yeah so the images are being built here and being pushed back off here in the big in the background. Although it's command line it is this soft this package that's doing all of stuff. Yeah. Until we switch to the computer either way. Yeah. Still then it will there may be a way where it uses my still my local authentication to push that but either way. Right. Whatever is pushing to that repository needs to have permission.
[32:59-33:08] SPEAKER_02: Yeah that's where I'm confused because you've definitely done that you push with docker like on those credentials. My guess is this
[33:08-33:20] SPEAKER_00: is has its own sort of identity. Yeah. Something like you have something and it's different than it was before because I installed it new. That's right. That's probably even smart.
[33:24-33:24] UNKNOWN: Yeah.
[33:27-33:30] SPEAKER_02: It's not moving very fast. That's not especially big.
[33:30-33:35] SPEAKER_00: No it's not but it I think upload speed is just like that.
[33:35-33:36] UNKNOWN: Yeah.
[33:37-33:39] SPEAKER_02: Yeah. You could probably make it faster. Probably.
[33:41-33:42] SPEAKER_00: Yeah exactly.
[33:46-33:54] SPEAKER_02: Because there's not much you can do about a docker push. Yeah. It's speeding it up other than like paying for speed.
[33:54-33:56] SPEAKER_00: Right. Doing something with networking.
[33:56-34:04] SPEAKER_02: Yeah. Like I've got my own VPN. Right. Exactly. Like super robust and my shit gets built and pushed in seconds.
[34:18-34:39] SPEAKER_00: Oh sorry. That's what I thought it was. That is what I wanted to do. Okay.
[34:39-34:39] UNKNOWN: So
[34:39-34:49] SPEAKER_00: I don't even know what namespaces are. Okay. Transcription service.
[34:58-35:10] SPEAKER_02: That's the only namespace which makes sense. That is the overall even though we have a transcription service inside of it this whole project is called the transcription service. Right. I agree.
[35:23-35:51] SPEAKER_00: Um. So
[35:51-35:51] UNKNOWN: okay.
[35:55-35:58] SPEAKER_02: Yeah it's just gonna say hey let me see it. Yeah. Fail create.
[36:01-36:01] SPEAKER_00: Where do you see that?
[36:02-36:11] SPEAKER_02: Replicate failure. Progressing true. Available false. Replicate failure true. Else it should see.
[36:19-36:19] SPEAKER_01: I
[36:19-36:19] UNKNOWN: need
[36:19-36:20] SPEAKER_01: our service account.
[36:57-36:58] UNKNOWN: Okay.
[37:19-37:20] SPEAKER_02: Yeah.
[37:20-37:20] UNKNOWN: Yeah we
[37:20-37:24] SPEAKER_02: may even be able to go like for those just regular service accounts. Yeah
[37:24-37:24] UNKNOWN: I
[37:24-37:24] SPEAKER_02: think so.
[37:24-37:24] UNKNOWN: Let
[37:24-37:34] SPEAKER_02: me go look over here. I guess I don't actually know where to find all the places to find service accounts. I think it's
[37:34-37:37] SPEAKER_00: just regular IAM there and there.
[37:37-37:39] SPEAKER_02: Yeah. Well let's
[37:39-37:39] SPEAKER_00: look there.
[37:46-37:48] UNKNOWN: Yeah I
[37:48-37:53] SPEAKER_00: see them. No. Diarization service account. Yeah
[37:53-37:53] UNKNOWN: I
[37:53-37:54] SPEAKER_00: don't see these news.
[38:02-38:04] SPEAKER_02: And the budget emergency shutdown.
[38:06-38:18] SPEAKER_00: Yeah I don't see the ones we just created. They should be. Child control. What's for KSA? Yeah like these KSAs Kubernetes services.
[38:19-38:20] UNKNOWN: Hmm.
[38:24-38:27] SPEAKER_00: So move to take that itself. Hmm.
[38:43-39:06] SPEAKER_02: There's a like import relative import errors and stuff in here. They're the same as yesterday but. There's something. It also says it's currently creating the node pool.
[39:06-39:09] SPEAKER_00: Yeah that's what it said.
[39:10-39:10] UNKNOWN: It
[39:10-39:13] SPEAKER_00: says pod is in pending status because there are no nodes available.
[39:16-39:16] UNKNOWN: It
[39:16-39:19] SPEAKER_00: says wait for gta to post.
[39:32-39:35] SPEAKER_01: It's not there anymore.
[40:06-40:16] SPEAKER_00: It's not there anymore. Yeah
[40:16-40:18] SPEAKER_02: it says deleting the node pool.
[40:28-40:30] SPEAKER_00: Did they exceed it further?
[40:31-40:32] SPEAKER_01: Seed here
[40:32-40:32] UNKNOWN: today.
[40:55-40:58] SPEAKER_01: That's like a paid thing I think.
[41:04-41:04] UNKNOWN: I mean I
[41:04-41:17] SPEAKER_02: don't think that gives me anything. It might know what the context means but I agree.
[41:20-41:20] UNKNOWN: There we
[41:20-41:40] SPEAKER_01: go. There we go. Yeah hidden rows what that means.
[41:56-41:57] UNKNOWN: Hmm.
[42:05-42:08] SPEAKER_01: Oh well you know what it means.
[42:24-42:58] UNKNOWN: Hmm. Hmm. I
[42:58-43:02] SPEAKER_00: know you could do that.
[43:04-43:05] SPEAKER_01: That'd be cool.
[43:11-43:14] SPEAKER_00: Okay that's what I thought. Let
[43:14-43:17] SPEAKER_02: me try
[43:17-43:27] SPEAKER_01: again. That's an IAM.
[43:28-43:33] SPEAKER_00: I didn't think it was. There's a quota section.
[43:36-43:39] SPEAKER_01: It is. IAM and admin. There
[43:39-43:45] SPEAKER_00: we go. And I specifically want to do your central one.
[43:47-43:47] UNKNOWN: Change
[43:47-43:51] SPEAKER_00: region. Whatever. I'm just going to type it.
[43:59-44:00] UNKNOWN: And
[44:00-44:01] SPEAKER_02: the L4.
[44:07-44:08] UNKNOWN: They
[44:08-44:14] SPEAKER_02: also can just use different ones since we're
[44:14-44:14] UNKNOWN: in
[44:14-44:15] SPEAKER_02: Kubernetes.
[44:26-44:31] SPEAKER_00: No that's zero. No this one's at one. One for central.
[44:44-44:45] UNKNOWN: What
[44:45-44:47] SPEAKER_01: are those unlimited ones?
[44:56-44:57] UNKNOWN: What
[44:57-45:14] SPEAKER_02: is system limit adjustable? Maybe I should just change it? My guess is those aren't adjustable. No. Oh okay. So those are like Google ones maybe.
[45:17-45:18] UNKNOWN: I'm
[45:18-45:20] SPEAKER_00: just going to change it with this picture.
[45:20-45:25] SPEAKER_01: Yeah. Should be. Oh come on.
[45:28-45:30] SPEAKER_02: Is that like a setting you have to change?
[45:31-45:34] SPEAKER_00: I think my primary desktop is this one. Oh
[45:34-45:36] SPEAKER_02: gosh yeah. That makes sense.
[46:08-46:11] SPEAKER_01: There you go.
[46:19-46:21] SPEAKER_00: Compute engineering vehicle.
[46:37-46:40] SPEAKER_02: So it was trying to deploy with two? Maybe. Is that what we're doing?
[46:59-47:02] SPEAKER_00: I think we've already asked and they said no.
[47:02-47:22] SPEAKER_02: Yeah. And I mean we could potentially ask again but I think like maybe ask why did we hit that quota thing then? Because there's nothing. Like are we trying to deploy more than one when we push that or when we deploy that job controller?
[47:37-47:39] SPEAKER_01: Job controller.
[48:12-48:15] UNKNOWN: Job controller.
[48:29-48:34] SPEAKER_00: So I think we need to design to not use more than one GPU at a time.
[48:50-49:08] SPEAKER_02: I think there's like a disconnect though because nothing should be scheduled. This is our first deployment to this cluster and it's a job controller and there are no jobs. I agree with you. And that's it's fundamental basis for the issue so I think it's like off.
[49:08-49:08] UNKNOWN: I
[49:08-51:12] SPEAKER_02: don't know. You need to turn it off auto. There you go. And maybe say something like that. Like I don't think that's right. I think it's viewing it like a project that's up and running again. Yeah. Yeah and it was saying a lot of like well ifs and maybes. Like motherfucker look at it. Yeah and that's what I thought too. Like those should not have GPUs. Yeah that's what I'm talking about when it comes to like still requiring human intervention. Even at like a really high level agent tech application that could happen. Right. And if that happens early on it doesn't matter how long it runs. It's not solving it. Right. I agree.
[51:15-51:16] SPEAKER_00: Where's the quarter bro?
[51:22-51:28] SPEAKER_02: Yeah one of those should be full. Right. Or like it's a computer like that almost has to be it. Because it's the most.
[51:46-51:46] UNKNOWN: It
[51:46-51:50] SPEAKER_00: just doesn't tell you which one.
[51:54-51:55] UNKNOWN: Yeah.
[51:55-51:56] SPEAKER_00: Well at least it's looking at
[51:56-51:57] UNKNOWN: it.
[51:58-52:02] SPEAKER_00: You look at that. Much more than I
[52:02-52:04] UNKNOWN: do.
[52:11-52:14] SPEAKER_00: There is a node now.
[52:14-52:15] SPEAKER_01: Yeah.
[52:37-52:38] UNKNOWN: Yeah.
[52:53-53:01] SPEAKER_00: What do you think? Yeah make them names we want them to be. Well. Or do you think this is also a red herring.
[53:01-53:10] SPEAKER_02: No I think this is probably right but like they are the names we want them to be I think. And my guess is it wrote
[53:10-53:22] SPEAKER_00: the code wrong. The controller expects this and the alignment of what actually. What's in here.
[53:28-53:34] SPEAKER_02: That might not be in there the actual PubServe like command F PubServe.
[53:35-53:36] UNKNOWN: Or
[53:36-53:38] SPEAKER_02: one of those.
[53:49-53:54] UNKNOWN: Yeah. So
[53:54-54:02] SPEAKER_00: we expect some. So I say match to this. Okay. What's already in the notes.
[54:02-54:05] SPEAKER_02: Yeah. Yeah if we're rebuilding all the services anyway.
[54:14-54:16] UNKNOWN: Yeah.
[54:47-54:48] SPEAKER_02: Yeah.
[54:48-54:55] SPEAKER_00: I assume like when we in chat it's going to clean that stuff up. Well I'm talking that's some stuff that was done yesterday.
[54:56-55:09] SPEAKER_02: Like all that cloud run. I think it's nice to get further down. Or yeah it said what we should and then it said we did it. Instead of just deleting it. Right.
[55:42-56:48] UNKNOWN: Okay. Yeah. Yeah.
[56:48-57:32] SPEAKER_00: That makes sense. The first of all I don't know that the service accounts are actually in there. I forgot that we were working on that. But these Kubernetes service accounts the point of them is you create service accounts in like just AIM service accounts and then you use Workload Identity Federation to tie them together. So that the Kubernetes cluster has the permission to do things in Google Cloud. Like you tie those Kubernetes like this account to the cluster. Gotcha. And then give the cluster those service accounts permissions to do stuff. Right. So then effectively. The entire cluster is able to do
[57:32-57:32] UNKNOWN: stuff.
[57:32-57:36] SPEAKER_00: Well you tie them to a service. Like each one. That's the you can do a single but you don't want
[57:36-57:36] UNKNOWN: to.
[57:36-57:52] SPEAKER_00: Right. But it's like giving admin proof. Right. So instead. So it's like giving cloud run permission to do stuff. Well you got to get each service inside of Kubernetes. You create a service account. And then when it asks to go talk to whatever. Right. It has permission.
[57:53-57:59] SPEAKER_02: So do we need to delete these other service accounts or just change them to be.
[58:01-58:19] SPEAKER_00: I think these like that one is going to end up being deleted. Right. Like these ones that exist like that one and that one. Right. Should not be there. And that. Those three shouldn't be there because they're going to get their own. KS. And. Gotcha. These new ones but they don't exist.
[58:23-58:30] SPEAKER_02: So it's going to actually do the opposite. I need to find the. Kubernetes. It's saying there.
[58:30-58:33] SPEAKER_00: Oh maybe I just don't see it.
[58:33-58:34] SPEAKER_02: Right. There
[58:34-58:34] UNKNOWN: might
[58:34-58:38] SPEAKER_02: be another place to find specifically the Kubernetes ones. I don't know.
[59:11-59:13] SPEAKER_00: I don't want that.
[59:20-59:43] SPEAKER_02: We ask it like hey I can't see those service accounts. Where do you. How do I find them. I actually. So it's using like. It's going to find the direction dash.
[59:43-59:43] UNKNOWN: I
[59:43-59:57] SPEAKER_02: say transcription. So that's the ones. Yeah. That is the one that's in there. I agree. So it's just going to make that one into a. Are we going to use that instead. Yeah. We do need to clarify that. And
[59:57-59:57] UNKNOWN: I'm going to.
[59:57-60:27] SPEAKER_02: I don't
[60:27-60:27] UNKNOWN: know.
[61:01-61:11] SPEAKER_00: Yeah. In the Kubernetes cluster. OK. It's connected to. Fair enough.
[61:12-61:13] SPEAKER_02: You were right. But also
[61:13-61:26] SPEAKER_00: I was. I just I was confused. I didn't realize you had to make sense. Kubernetes has the same exact thing of a service account. Inside a cluster like is defined in the in the Kubernetes system. And
[61:26-61:26] UNKNOWN: just
[61:26-61:29] SPEAKER_00: like it has its own networking and all its own everything.
[61:29-61:29] UNKNOWN: And
[61:29-61:37] SPEAKER_00: so yes. So this is the process of saying. And then you create equivalent service accounts on the Google side. Right. You tie those together.
[61:37-61:37] UNKNOWN: And
[61:37-61:37] SPEAKER_00: so
[61:37-61:51] SPEAKER_02: because the. Station service still needs to do all of that shit. But also needs its own service account inside. To both talk to this one to see what it's allowed to do but also to talk to other services and pass stuff along. Yeah. That makes sense.
[62:02-62:04] SPEAKER_01: There you go.
[62:05-62:15] SPEAKER_00: Right. So there's only one of them created. Oh no it looked for.
[62:15-62:15] UNKNOWN: Well
[62:15-62:16] SPEAKER_00: I'm
[62:16-62:16] UNKNOWN: going
[62:16-62:17] SPEAKER_00: to describe.
[62:17-62:20] SPEAKER_02: It specifically looks for the transcription.
[62:30-62:31] UNKNOWN: No
[62:31-62:38] SPEAKER_00: I think option one is good. Yeah. Tied the three services to the three service accounts.
[62:47-62:48] UNKNOWN: I
[62:48-62:48] SPEAKER_00: was
[62:48-63:11] SPEAKER_02: just confused but I. Learned. Yeah that's worth knowing even like regular job. Yeah. Yeah. I am. G .K .E.
[63:12-63:30] SPEAKER_00: Where the fuck is that. In the freaking Kubernetes cluster. I can't look at it. I guess I assume there's a cube CTO command. Yeah. That you can go look at like it just did like you can go look at what service accounts are available in this system. So like right here
[63:30-63:35] SPEAKER_02: it's not like a present but you can go in there and run command like right. CTO command and see whatever the
[63:35-63:44] SPEAKER_00: fuck you want to see. Right. But it's not in the GCP system. Yeah. It does it keeps track of its service accounts not the ones that are in the cluster.
[63:55-64:57] SPEAKER_02: So we shouldn't necessarily need secrets inside the cluster. No because secrets in in secret manager outside because those service accounts are outside. So if you use Anthos you can see it. No thank you.
[65:47-65:49] UNKNOWN: Yeah.
[66:08-66:20] SPEAKER_02: What the fuck. What is that? Have you seen. What are you up to today? Get tailored recommendations that help you reach your goals. Choose one or more to get started. What random shit is that.
[66:20-66:23] SPEAKER_00: That's effectively what we want to build but I don't want it to be that.
[66:23-66:27] SPEAKER_02: Yeah. Like why are you trying to do task manager shit inside
[66:27-66:27] UNKNOWN: of the cluster.
[67:23-67:27] SPEAKER_00: So. What do
[67:27-67:27] UNKNOWN: you
[67:27-67:52] SPEAKER_00: think about this. I say build them all. Yeah. I agree.
[68:17-68:18] UNKNOWN: That
[68:18-68:20] SPEAKER_02: was a pretty good little check.
[68:20-68:20] UNKNOWN: It
[68:20-69:02] SPEAKER_02: was. I tried to get off track got back on with a little bit of correction and it seems like ultimately out there. So it's going back to like tracking like a journal. Yeah. I think that's OK for one session but then that should be gotten rid of and replaced with a new session summary. Maybe it did that. Maybe it did.
[69:03-69:03] UNKNOWN: Yeah.
[69:05-69:10] SPEAKER_02: Like I don't want three thousand lines of session summaries.
[69:21-69:25] SPEAKER_00: Yeah. It still has that clean up stuff in there.
[69:25-69:25] UNKNOWN: In
[69:25-69:27] SPEAKER_00: mandatory billing account stuff.
[69:28-69:38] SPEAKER_02: That's where everyone's going to go through and just like clean it up. It is replacing the old one.
[69:42-70:47] UNKNOWN: Yeah. Yeah.
[71:16-71:19] SPEAKER_00: I love that it's going in there looking at stuff. I agree.
[71:19-71:21] UNKNOWN: Yeah.
[71:52-72:09] SPEAKER_00: And I love that there was that it was not super painful to reformat. No. Meaning like almost like at the beginning of a new project just wipe everything. As long as it's in the repository wipe everything and start back up and only install what you need for that project.
[72:09-72:10] SPEAKER_01: Yeah. I agree.
[72:14-72:16] UNKNOWN: Yeah.
[72:40-72:45] SPEAKER_02: That makes sense. Alignment is barely anything.
[73:23-74:27] UNKNOWN: Yeah. Yeah. I
[74:27-75:45] SPEAKER_02: say it's ninety six bytes. That one should be pretty quick. Yeah. But it's just going to execute. Yeah. Yeah.
[76:50-79:18] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. . . . . . .
[79:44-79:48] SPEAKER_00: . . . .
[80:13-81:16] SPEAKER_02: . . . . . . . . . . . . . . .
[81:19-81:19] UNKNOWN: .
[81:46-81:47] SPEAKER_00: . . . . .
[82:14-82:17] SPEAKER_02: . . .
[82:17-82:44] SPEAKER_00: . .
[82:44-82:45] SPEAKER_01: .
[82:45-82:46] UNKNOWN: .
[82:46-83:19] SPEAKER_00: . . .
[83:44-83:46] SPEAKER_01: .
[83:52-83:55] SPEAKER_03: . .
[83:56-87:13] UNKNOWN: . . . . . . . . . . . . . . . . . . . . . . . . . . .
[87:40-89:49] SPEAKER_02: . . . . . . . . . . . . . . . . . . . . . .
[90:16-90:17] SPEAKER_00: . .
[90:17-91:28] SPEAKER_02: . . . . . . . . . . . . . . . .
[91:32-91:33] SPEAKER_00: . .
[91:58-92:01] SPEAKER_02: . . . .
[92:26-92:28] SPEAKER_00: . . . .
[92:55-93:01] SPEAKER_02: . . .
[93:26-93:28] SPEAKER_00: . . .
[93:56-95:01] SPEAKER_02: . . . . . . . . . . .
[95:28-95:29] SPEAKER_00: . . . .
[95:56-96:29] SPEAKER_02: . . . . . . . .
[96:56-97:49] SPEAKER_00: . . . . . . . .
[97:56-98:28] SPEAKER_02: . . . . . .
[98:57-99:09] SPEAKER_00: . . . . .
[99:15-99:19] SPEAKER_02: . .
[99:45-100:27] SPEAKER_00: . . . . . . . . .
[100:54-101:29] SPEAKER_02: . . . . . .
[101:53-101:58] SPEAKER_00: . . . .
[102:23-102:25] SPEAKER_02: . .
[102:54-104:26] SPEAKER_00: . . . . . . . . . . . . .
[104:53-106:25] SPEAKER_02: . . . . . . . . . . . . . . . . .
[106:52-107:56] SPEAKER_00: . . . . . . . . . . .
[108:22-108:54] SPEAKER_02: . . . . . . . .
[108:54-109:53] SPEAKER_00: . . . . . . . .
[109:59-111:57] SPEAKER_02: . . . . . . . . . . . . . . . . . . .
[112:21-112:52] SPEAKER_00: . . . . .
[112:52-112:54] SPEAKER_02: .
[113:21-114:52] SPEAKER_00: . . . . . . . . . . .
[114:56-114:56] SPEAKER_02: . .
[115:22-115:26] SPEAKER_00: . . . . . . . .
[115:53-116:24] SPEAKER_02: . . . . .
[116:24-117:54] SPEAKER_00: . . . . . . . . . . . . . .
[118:22-118:23] SPEAKER_02: . . .
[118:23-118:24] SPEAKER_00: . .
[118:52-118:53] UNKNOWN: . .
[119:22-119:53] SPEAKER_00: . . . . .
[119:56-119:57] SPEAKER_02: . .
[120:23-120:24] SPEAKER_00: . . . .
[120:24-120:24] SPEAKER_02: .
[120:51-120:52] SPEAKER_01: . . . .
[121:20-121:22] SPEAKER_00: . .
[121:22-121:25] SPEAKER_02: . .
[121:50-121:53] SPEAKER_00: . .
[122:20-122:22] SPEAKER_02: .
[122:22-123:36] UNKNOWN: . . . . . . . . . . . . . . . . .
[123:41-123:49] SPEAKER_02: . . . . .
[124:11-124:13] UNKNOWN: . . .
[124:43-124:44] SPEAKER_00: . . . .
[124:48-124:50] UNKNOWN: .
[124:54-124:55] SPEAKER_01: . .
[125:06-125:07] UNKNOWN: .
[125:20-125:22] SPEAKER_01: .

==================================================
Generated on: 2025-07-23 15:01:52
Total words: 6680
Total speakers: 5
==================================================


Summary:
creation_date: 2025-07-23 source_file: 2025-07-23_1446_ZOOM0022_transcript.txt participants: SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, UNKNOWN

Executive Summary
This transcript captures a technical working session focused on deploying a multi-service transcription application onto a Google Kubernetes Engine (GKE) Autopilot cluster. The session begins with setting up a newly formatted development environment, including syncing settings for the [[AI Tools|AI tool]] [[Cursor]] and installing the [[GCP]] [[CLI]]. The core of the meeting involves a series of troubleshooting steps to resolve deployment failures. The team investigates potential [[GCP]] billing anomalies, discusses the cost and operational model of GKE Autopilot, and debugs issues related to [[GPU]] quotas, [[Docker]] build processes, and [[Service Account]] permissions. They determine the primary issues stem from misconfigured [[Service Account]]s and a mismatch in [[Pub/Sub]] naming conventions, ultimately deciding to rebuild and redeploy all services with the corrected configurations.

Key Topics Discussed
	•	Development Environment Setup
	•	One participant reformatted their machine, requiring a fresh setup.
	•	They synced settings for their code editor, [[Cursor]], to ensure consistency.
	•	Installation of necessary tools, including the [[GCP]] [[CLI]], Python, and Homebrew.
	•	[[GCP]] Infrastructure and Deployment
	•	GKE Autopilot Cluster:
	•	Discussion on its billing model, comparing it to [[Cloud Run]] where you're charged per pod, allowing it to scale to zero.
	•	They noted it functions as a fully managed service, handling node updates and health checks automatically.
	•	The cluster was observed creating and deleting node pools dynamically based on deployment needs.
	•	Deployment Process:
	•	The process involved running a local [[Docker build]] and pushing the images to [[GCP]]'s [[Artifact Registry]].
	•	They attempted to deploy a "job controller" and several microservices, including the [[Transcription Service]] and [[Diarization Service]].
	•	Troubleshooting Deployment Failures
	•	Initial Failure: The deployment failed, with pods stuck in a pending status.
	•	[[GPU]] Quota Investigation:
	•	The initial hypothesis was that the deployment was failing due to exceeding the [[GPU]] quota for the region (us-central1).
	•	They checked the [[IAM roles]] and admin quotas section in the [[GCP]] console.
	•	Decision: They decided to design the application to only use one [[GPU]] at a time to avoid future quota issues.
	•	[[Service Account]] Configuration:
	•	The root cause was identified as an issue with Kubernetes [[Service Account]]s (KSAs).
	•	They discussed the distinction between [[GCP]] [[IAM roles]] [[Service Account]]s and internal Kubernetes service accounts.
	•	The solution involves using Workload Identity Federation to securely link the Kubernetes service accounts for each microservice to their corresponding [[GCP]] [[Service Account]], granting them the necessary permissions to interact with other [[GCP]] services like [[Pub/Sub]].
	•	Configuration Mismatch:
	•	They identified a naming mismatch between the [[Pub/Sub]] topics and subscriptions defined in their deployment files and what the controller service was expecting.
	•	Side Conversations
	•	Brief discussion and review of the TV show "[[The Last of Us]]."
	•	A conversation about the success and management of the [[OKC Thunder]] basketball team.

Action Items & Decisions
	•	Decision: Use the working session to get the [[Transcription Service]] running on the GKE cluster, as it's a foundational component.
	•	Action: Sync [[Cursor]] settings between developers.
	•	Action: Install necessary development tools ([[GCP]] [[CLI]], Python) on the freshly formatted machine.
	•	Decision: Design the system to operate within the one-[[GPU]] quota limit to prevent future deployment issues.
	•	Action: Correct the names of the [[Pub/Sub]] topics and subscriptions in the deployment configuration to match what the services expect.
	•	Action: Create and correctly bind the three Kubernetes [[Service Account]]s to their corresponding [[GCP]] [[IAM roles]] [[Service Account]]s using Workload Identity Federation.
	•	Action: Re-build and re-deploy all microservices to the cluster after applying the configuration and permission fixes.

Suggested New Links/Tags
	•	[[GKE]]
	•	[[GKE Autopilot]]
	•	[[Kubernetes]]
	•	[[The Last of Us]]
	•	[[OKC Thunder]]
	•	[[Workload Identity Federation]]
	•	#Deployment

Linked Concepts
	•	[[AI Tools]]
	•	[[Artifact Registry]]
	•	[[CLI]]
	•	[[Cloud Run]]
	•	[[Cursor]]
	•	[[Diarization Service]]
	•	[[Docker build]]
	•	[[GCP]]
	•	[[GPU]]
	•	[[IAM roles]]
	•	[[Pub/Sub]]
	•	[[Service Account]]
	•	[[Transcription Service]]

#Tags
	•	#AI
	•	#Deployment
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom23
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-28_2037_ZOOM0023_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:02] UNKNOWN: Recording.
[00:43-03:34] SPEAKER_01: You ask if there is a need for the diarization request function at this point or like is all that the published diarization request is going to do is trigger this cluster manager now or does it do some other shit? So is the 77 whatever free on a cluster, is that in general or is that specifically for those aspects of it like basically it's designed so that you can run it 24 7 and the base stuff is free but basically if we're not running it is our compute going to be free because it's running in these free credit zone of Kubernetes? I think it is. Because that didn't go up at all. We weren't hitting compute yesterday actually I don't think. No I mean I think.
[03:34-03:34] UNKNOWN: Well
[03:34-03:36] SPEAKER_01: it was doing the control plane stuff.
[03:36-03:42] SPEAKER_00: Yeah so I think that any time the cluster is up you're using compute because in the back end there's VMs running.
[03:42-03:51] SPEAKER_01: Yeah so that free tier is designed to have a 24 7 control plane basically is what it's designed for. Yeah. That's not actually doing anything but it is up and
[03:51-03:51] UNKNOWN: running. So
[03:51-03:51] SPEAKER_01: we
[03:51-03:53] SPEAKER_00: theoretically could leave it up because
[03:53-04:04] SPEAKER_01: I forgot about that. No because the control plane when it starts doing stuff makes other pods. That's true. And those aren't free. That's true. But I think this will work. I agree I'm just interested
[04:04-04:06] SPEAKER_00: like maybe. Some portion of our compute will be free.
[04:09-04:09] UNKNOWN: Because
[04:09-04:13] SPEAKER_00: it's an autopilot cluster and you automatically get whatever $77 a month.
[04:13-04:30] SPEAKER_01: Right and the compute costs more than the idling control plane obviously so it's not necessarily going to get the whole month. But it offsets some of it. It cut it in half. I mean that means we could do $100 a month spend and pay $23. Right exactly. I like it.
[04:31-04:32] UNKNOWN: Yeah.
[04:33-04:38] SPEAKER_01: Alright. Or $77 a month spend and pay $0.
[04:38-04:39] UNKNOWN: Exactly.
[04:58-05:09] SPEAKER_01: Yeah so it builds the PubSub message. Which is valuable and in theory you could point it in other directions if you wanted to like if it was doing other stuff.
[05:28-05:29] UNKNOWN: Yeah
[05:29-05:34] SPEAKER_00: this is what I this is the first thing that pops into my head. That is just based on the queue. In
[05:34-05:34] UNKNOWN: that
[05:34-05:47] SPEAKER_00: case watching that queue. Because every time you upload it's going to it ends up with putting something in the queue. And you know that you're done when the queue is empty. The PubSub queue? Yeah. Well we acknowledge the message
[05:47-05:48] SPEAKER_01: up front.
[05:49-05:53] SPEAKER_00: No you're not. Oh. Currently. We could not do
[05:53-05:53] UNKNOWN: that.
[05:53-05:54] SPEAKER_00: Plus some time maybe.
[05:54-06:35] SPEAKER_01: Well then we're guessing. Yep you're right. So if basically we remove the limitations of Cloud Run and we don't need to acknowledge it up front. But then PubSub is going to spin up a hundred machines. Yeah it'll just keep going. Yeah so that's the issue with the queue is we empty that sucker almost immediately. And that's like the start of the long process. Processing queue. Yeah this is pseudo code. Okay but you see what it's saying though. Like it's a different queue. Like this shit is processing. And we'll tell you when we're done. Is what that seems like to me.
[06:41-06:44] SPEAKER_00: Yeah I agree. I assume it's talking about this.
[06:44-06:44] UNKNOWN: Oh
[06:44-06:44] SPEAKER_00: you're right.
[06:45-06:45] UNKNOWN: This
[06:45-06:46] SPEAKER_00: duration queue.
[06:46-06:51] SPEAKER_01: Yep. So that's just the standard current situation basically.
[06:56-06:58] UNKNOWN: Okay.
[07:22-07:28] SPEAKER_00: Yeah so that is there. I don't completely understand what it's saying.
[07:29-07:51] SPEAKER_01: Yeah so that makes it seem like maybe we're doing both like you said. Basically the queue should be empty and it should be idle for some amount of time. And just like if you can ask it hey explain the idle timeout. Like how is that even found or pressed. Monitor it.
[08:13-08:15] UNKNOWN: Okay.
[08:31-08:38] SPEAKER_01: Services are actually working for the cluster. Never stops doing shit.
[09:18-09:50] UNKNOWN: Okay. Okay.
[10:06-10:23] SPEAKER_01: Wow. I remember seeing something like an email about it can do mermaid now. I don't know if it's good. Yeah I want to move over. Yeah
[10:23-10:23] UNKNOWN: it
[10:23-10:27] SPEAKER_01: goes to where you're pointing. Like with your cursor.
[10:27-10:27] UNKNOWN: Got
[10:27-10:29] SPEAKER_01: it.
[10:30-10:36] SPEAKER_00: Hooks up to you. Sure. Cluster manager. Cluster exists.
[10:37-10:46] SPEAKER_01: Yes just a cluster. That's huge. That's the answer to what you were asking. Of what if there's a bunch of jobs. Well if there's a cluster there's a fucking job.
[10:48-11:19] SPEAKER_00: No create cluster. Sure. About the 10 minutes. To deploy the job. Yes. Then monitor the queue monitor. Sure. Cluster monitor. Yes. And if the queue is empty and both then no keep the cluster active. If they're not both idle. If yes start the idle timer and then yes give me like some sort of time after that. So
[11:19-11:21] SPEAKER_01: what happens with the idle timer.
[11:21-11:21] UNKNOWN: Is
[11:21-11:39] SPEAKER_01: that basically at the end of the idle timer should we run another everything still down like we think it is. Or otherwise what's the point of the idle timer if it's literally just going to. We've already determined that the cluster is the jobs
[11:39-11:54] SPEAKER_00: are idle and the queue is empty. I think it's just one little bit of just to be sure maybe even put call this like even 10 minutes. Even 30 minutes. 30 minutes after you've
[11:54-11:54] UNKNOWN: after
[11:54-11:56] SPEAKER_00: you've detected everything's down.
[11:57-11:57] UNKNOWN: You
[11:57-11:58] SPEAKER_00: think you. Yeah.
[11:58-11:58] UNKNOWN: I
[11:58-11:59] SPEAKER_00: don't think it
[11:59-11:59] UNKNOWN: probably
[11:59-11:59] SPEAKER_00: needs a
[11:59-12:06] SPEAKER_01: couple of minutes. Basically like I'm trying to determine what could be happening between job idle and all I can think of is like right.
[12:07-12:19] SPEAKER_00: You get another message. That's true. And so the question is if you get another message can you like this. That's
[12:19-12:19] UNKNOWN: what
[12:19-12:31] SPEAKER_00: I'm saying. Like it needs to stop the timer. Like if you get if the
[12:31-12:56] SPEAKER_01: cluster already exists. Yeah in theory it would right now. Like if you were in the idle timer. No it doesn't. Yeah the idle timer. That's why I initially was like we at least at the very like with one second left on the idle timer or like when it expires the true last thing that should happen is like go final check. Yeah. Just run the monitor dual state again.
[12:56-12:57] SPEAKER_00: Yeah.
[12:57-13:20] SPEAKER_01: And then don't start the idle. Well it won't because it will detect stuff in the queue. No I'm saying like even if it doesn't like it should just do one last check and if it's pretty cool. Yeah shut it down because we don't want to get in. But that is a loop if it always runs that idle timer. Also great job on the chart. Yeah
[13:20-13:20] UNKNOWN: it
[13:20-13:22] SPEAKER_01: was a really good. That's the best
[13:22-13:32] SPEAKER_00: one I've ever seen AI do. Yeah we've been talking about this for like for using Gemini to like to make documentation. Yeah. To make our doc.
[13:32-13:47] SPEAKER_01: I mean I tried to get them to do Claude in fact to do this and you probably remember like I sent them to you that they were fine. They technically if I was telling you exactly what they meant by that you could kind of follow it.
[13:47-13:47] UNKNOWN: But
[13:47-14:02] SPEAKER_01: this is good. Yeah I think someone coming in not knowing anything about the project at our like understanding level would be able to look at that and get it. Message what if they.
[14:03-14:04] SPEAKER_00: What if they.
[14:05-14:10] UNKNOWN: I don't know. It's up in the mid. During
[14:10-14:12] SPEAKER_00: the idle timer. I don't
[14:12-14:15] UNKNOWN: know. While they're in the middle.
[14:19-14:21] SPEAKER_01: You get during the while the.
[14:31-15:53] UNKNOWN: You. You. You. You. You. I
[15:53-15:53] SPEAKER_00: mean,
[15:53-15:53] UNKNOWN: I
[16:24-16:30] SPEAKER_00: you're gonna do some more, but if it truly is idle after some amount of time, go ahead and shut down.
[16:30-16:46] SPEAKER_01: Yeah, and that 10 or whatever minutes isn't gonna hurt anything as far as like, as long as the processing is actually shut down and we feel good about that and we're not doing these little phantom operations, then it's nothing. It's the free tier, the freest of the free tier. Right.
[17:09-17:10] UNKNOWN: Yes,
[17:13-17:25] SPEAKER_00: I didn't think about that. That. Oh no, it shouldn't do that. Yeah, it won't. It already handled that. Yeah. It was checking. That cluster already did. Makes sense.
[17:28-17:33] SPEAKER_01: Yeah, so. That makes sense.
[17:34-17:39] SPEAKER_00: Oh, it's copying. Yeah. Is that big enough for you? Yeah.
[17:44-17:45] SPEAKER_01: I don't know if I could
[17:45-17:45] UNKNOWN: see that.
[17:45-17:49] SPEAKER_01: Is there text that we can't see in those bubbles or something?
[17:51-18:00] SPEAKER_00: Yeah. Yeah. That says no cluster. Okay. And this says creating.
[18:03-18:03] UNKNOWN: You
[18:03-18:03] SPEAKER_00: get.
[18:03-18:03] UNKNOWN: So
[18:03-18:15] SPEAKER_00: once cluster ready. Jobs complete processing. Jobs running. I don't
[18:15-18:15] UNKNOWN: know.
[18:15-18:18] SPEAKER_00: This doesn't make as much sense to me. Let's see. Cluster
[18:18-18:19] SPEAKER_01: ready. This.
[18:20-18:20] UNKNOWN: That
[18:20-18:37] SPEAKER_01: word says active. So jobs complete is going back to the cluster ready. So it initially sends out jobs running. It processes until it's done. Sends back jobs complete. It then says QMT plus no jobs. Sends it to the middle one.
[18:39-18:41] SPEAKER_00: That says idle timer. Okay.
[18:44-18:44] UNKNOWN: QMT
[18:44-19:04] SPEAKER_00: plus no jobs. So this is basically a state. Right. These are all states. Yeah. So the state when you get a new message is creating. Yeah. And then active goes into active state and then processing. Yeah. And then it goes back to active.
[19:04-19:04] UNKNOWN: But
[19:04-19:18] SPEAKER_00: then there's like it while if it goes from active to it when it detects QMT and no jobs it goes to idle. Idle timer. Yep. And then it can go back to active.
[19:18-19:18] UNKNOWN: I
[19:18-19:40] SPEAKER_00: assume. Yeah. Timer can be canceled by your activities. The new message right here. Yeah. So new message go back to active. Yeah. So there's a state. That's what makes sense. You should track the state of the cluster or the system. Yep. That if you're right it's an idle. Like hey the timer's running. Right. But as soon as I get another message or message or whatever file it takes you back to active. Update
[19:40-19:42] SPEAKER_01: state and in active state there's no timer running.
[19:43-19:50] SPEAKER_00: Yes. And then dead or whatever like no cluster. Right. So if you send a message there's no cluster of
[19:50-19:50] UNKNOWN: a
[19:50-20:12] SPEAKER_00: click that you go into creating. And then if you timer expired new timer can be canceled by new activity. Yeah. Timer expired. Final check. So activity found. Go back to active. Otherwise confirmed. Deleting.
[20:12-20:33] SPEAKER_01: Double verify before actual deletion. And then abort if new work arrives off of deleting. New message abort deletion active. Deletion complete. No cluster. Yep. I like it. It's a full cycle. That looks great. I agree. Except for the same color text on the
[20:33-20:33] UNKNOWN: dark
[20:33-20:53] SPEAKER_01: background. But other than that the logic is solid. It is beautiful. That's. And that's the thing I've been asking for. Like that is 60 percent of the reason we use Flutterflow is because they had the fancy little graphic. And not because it's cute because that's like useful. It is. It is very much. My
[20:53-20:56] SPEAKER_00: brain is very much oriented to diagrams.
[20:56-21:11] SPEAKER_01: Right. You just literally made the connection to state which is a front end concept that we learned a long time ago. And that completely almost fully clears up that entire flow. Like it's a series of states. Yes. One hundred percent. Yeah. And so it's using this cluster
[21:11-21:26] SPEAKER_00: state for books. Yeah. Get the class. Yeah. Yeah. It's using the Python function or class above like class cluster state. That's it. And it's using the messages or the progress of the system to determine the state.
[21:27-21:37] SPEAKER_01: Yeah. Yeah. Self dot state equals cluster state dot no cluster cluster state dot processing cluster state dot active deleting idle type of beautiful.
[21:38-21:58] SPEAKER_00: This is it. Enhance idle detection with race conditions. I mean I assume race conditions are like runaway. No I think they're like racing towards the same thing. Like and you're not sure which one's going to win. One's trying to shut everything down and one's trying to finish processing. Right.
[21:59-21:59] UNKNOWN: And
[21:59-22:05] SPEAKER_00: so you detect those conditions and handle them so that hey I'm trying to process while you're trying to shut down. I'm not sure which one's going to win.
[22:08-22:13] UNKNOWN: Yeah. OK.
[22:23-22:24] SPEAKER_01: Final check buffer.
[22:33-22:58] SPEAKER_00: I. Don't necessarily love that as long as it will actually work and shut down. Right. Yeah. And it's fine to have to just periodically check. Because while the cluster is active that's fine. 60 seconds is nothing. Yeah. You're not responding to anything.
[23:00-23:19] SPEAKER_01: Like if we were if there's a user on the other end waiting for a response like in real time 60 second checks might not be great. Still not bad because the whole process takes several minutes anyway. But adding a service. Client buyer sort of resists state that cross function.
[23:21-23:26] SPEAKER_00: That actually some some sort of thing because the cluster may die. Right. The cluster
[23:26-23:42] SPEAKER_01: may not be alive. We would think the only other option is basically several different functions and new pubs of messages. Right. Yeah. If we want one function to run all of them it has to be able to main state which requires a persistent source or
[23:42-23:52] SPEAKER_00: something persistent. Yeah. And it's not a bucket. It's some sort of database. Yeah. That hey that and it literally has one thing in it that what's the current state. The fire store
[23:52-24:04] SPEAKER_01: is a no sequel and pretty free. And maybe that will be what we how we structure our final transcripts. Yeah. Like the non vector stuff if we that's necessary.
[24:05-24:25] SPEAKER_00: Yeah. I mean I don't time out 10 minutes. That's OK. Yeah. Final check buffer 37 seconds for final verification. Sure. So I've checked every 30 seconds. OK. Every 60 seconds. I like it. I do too.
[24:44-24:53] SPEAKER_01: We just need to make sure that there are no unexpected conditions that can make it feel like they're still working. Right. And it
[24:53-25:13] SPEAKER_00: just stays on. Exactly. This is fantastic. Like being able to we're doing the thinking and it's doing some thinking and helping us but certainly doing all of the detailed work and but keyboard punch it wouldn't know what to do. Like it wasn't it wasn't going to be robust enough. No it never
[25:13-25:17] SPEAKER_01: will be in my opinion. I don't I could be wrong. I
[25:17-25:17] UNKNOWN: don't
[25:17-25:31] SPEAKER_01: know where I don't think it has exceeded my almost very initial thoughts in like chat GPT. No I get it. It's a much better version. It's a very updated version of that stuff.
[25:31-25:33] SPEAKER_00: I agree with you.
[25:33-25:33] UNKNOWN: But
[25:33-26:02] SPEAKER_00: I this is confirming maybe not confirming making me further agree or excited about my my core tenant is like so me and you as a team work very well together and we can solve problems together. Right. But with that it's a 13 it's a 13 member like super power where we're not right. And then that's where like creating this system of resources. I
[26:02-26:02] UNKNOWN: use
[26:02-26:22] SPEAKER_00: that word. Some of them human resources me and you or whoever. That's what your boss is calling to. That is. And some of them agent non -human resources that are have different capabilities and together this system of resources can do fantastic things that any of us together or separately could not have done.
[26:22-26:22] SPEAKER_01: Yeah
[26:22-26:22] UNKNOWN: I
[26:22-26:48] SPEAKER_01: think the encouraging thing ultimately in my head is it absolutely requires humans. One hundred percent like there's no like this thing's fucking borderline useless without one hundred percent. It will basically it will be very useful for whoever's hosting if you just like you're just spending money you're going to spend all your money in there. All right. You're going to buy your way into trash. Exactly. And at that point
[26:48-26:49] SPEAKER_00: you can hire me. Right. I'm
[26:49-26:49] UNKNOWN: going
[26:49-26:50] SPEAKER_00: to
[26:50-26:50] UNKNOWN: fix
[26:50-26:50] SPEAKER_00: your
[26:50-26:50] UNKNOWN: bullshit.
[26:50-26:57] SPEAKER_00: And I'm going to use a system like this to analyze and fix your crap and make something useful.
[26:57-27:18] SPEAKER_01: Yeah maybe someday we build our own like proprietary cluster or not closer but like cursor basically so we can go in and be like hey it's all private. I am going to use the AI to fix your shit but it's my cluster my LLM all this shit right sort of my stuff. So give me your code base and let's change.
[27:19-27:26] SPEAKER_00: I mean I think cursor is kind of the UI.
[27:26-27:29] SPEAKER_01: I'm just saying for people that are
[27:29-27:29] UNKNOWN: like
[27:29-27:42] SPEAKER_01: are worried about privacy or whatever like that can't just have the cursor doing it. It's like hey this is a lockdown version of that. That's OK for private companies like private company cursor like cursor. Yeah but it's our own because it's
[27:42-27:42] UNKNOWN: just
[27:42-27:46] SPEAKER_01: VS code backed up by a bunch of models. One hundred percent.
[27:46-27:46] UNKNOWN: So
[27:46-27:52] SPEAKER_01: yeah that would be like way down the line where we're offering our services for a shit ton of money.
[27:56-27:56] UNKNOWN: I
[27:56-28:11] SPEAKER_00: mean I mean the model cursor as a company is also a model to like build the tool and have some document. Here's how it works. You upload whatever files and stuff you want into it and it's just going to start making suggestions and do stuff.
[28:11-28:29] SPEAKER_01: I've been thinking basically this entire morning. But like once this is working just this transcription that's a pretty good little project. It's like spinning up its own autopilot clusters and doing all this stuff like once we get the final project read me up. That's pretty solid. Oh for
[28:29-28:50] SPEAKER_00: sure. This is like a varsity level project. Like I do stuff like this at work and work with developers who are doing stuff like this and are not super familiar with the cloud. So they're trying to do things like this and they get frustrated and like well can we just make can we just make it like work like this. Like no. You can't.
[28:50-28:50] UNKNOWN: Just
[28:50-29:04] SPEAKER_00: leave the cluster on stuff like that. Yes you can. But it's going to be really expensive and it makes no sense to do that. Right. Because it's usually not doing anything. Right. Because they have their use of these on -prem resources that just sit there and there's no penalty for being idle.
[29:06-29:06] UNKNOWN: Right.
[29:14-29:22] SPEAKER_01: Even the fact that it's doing scripts to deploy stuff is like a big thing. It is. We talked about building our script library for like a
[29:22-29:22] UNKNOWN: couple years.
[29:22-29:23] SPEAKER_01: Now we have them in
[29:23-29:32] SPEAKER_00: there. Or we go back and look at it. Say we go back and look at the future. In the future go back and say hey go look at all of this stuff. This was
[29:32-29:49] SPEAKER_01: the this is the archive of the process because all the things that we didn't that we ultimately got rid of are in here too. In fact there are scripts that got rid of it. And so it's like a little mini almost terraform like a terraform archive or something like that. Yeah
[29:49-29:58] SPEAKER_00: I think you don't necessarily need terraform. Terraform is cool. But I think it's better for if you're going to routinely update and change the service.
[29:58-29:58] UNKNOWN: If you
[29:58-30:02] SPEAKER_00: don't have AI just doing it. Right. That's true. That's the other sense.
[30:03-30:03] UNKNOWN: Nine
[30:03-30:14] SPEAKER_00: steps to test. Well we need to finish the other stuff.
[30:16-30:27] SPEAKER_01: Yeah. I think the read me does have some stuff. It's like well technically these things have been deployed which is true. Yeah. So
[30:27-30:55] SPEAKER_00: it knows that this other stuff is not. I want to do an in chat first. We talked about and did a lot of stuff. That's true. And I want it to get in there before we start moving. Yeah. I agree. Because this is the thing. I never got to this point. I'm so thankful that you got to this place of using the read me as a memory device.
[30:55-30:55] SPEAKER_01: Yeah I
[30:55-30:56] SPEAKER_00: was
[30:56-31:11] SPEAKER_01: just lucky. Like basically that was one of those like it happened because I was in here trying to not actively trying to solve that problem but it was a problem that was always at like back of my head. And it was like oh well clearly this is it. Read me's are fucking stupid and useless until you're done. Right. Unless you're
[31:11-31:20] SPEAKER_00: using them for this. And it's effectively the memory of the system. Like it can't remember. It's a distillation of
[31:20-31:20] UNKNOWN: the
[31:20-31:54] SPEAKER_00: project. Like this is a trade secret. In fact we're going to expand on this to solve big problems. Like this is a trade secret. Like it makes cursor and all LLMs more effective. Even when I'm working in work now I give it something that's complex or going to be long or go through multiple checks. I say summarize this into literally a read me document that is both a tracking and summary and then I keep that document uploaded to new checks.
[31:54-31:54] UNKNOWN: Yeah
[31:54-31:55] SPEAKER_00: that's the way.
[32:01-32:10] SPEAKER_01: And then like cursor rules on top of that are huge. So the fact that you can just say in chat protocol and it goes and does the whole
[32:10-32:30] SPEAKER_00: shit. It may be worth having just the document that has this like for non cursor stuff because I can't use cursor at work. It's basically like hey here is here's all the rules. Like when you start a new chat upload the files. Here's all the things that here's these rules and put them into the first prompt. Yeah basically
[32:30-32:59] SPEAKER_01: that's how I got to using the read me was like I was starting to in my I had a doc like a Google doc that was the to do like you've seen me use those before and then I started to like basically I was noticing I was putting in the same prompt a bunch like hey when I started a new one it would be like look at the entire code base do this do this and I would write it at the top of the doc copy and paste it in and then that just grew into this much better. My guess is
[32:59-33:08] SPEAKER_00: if you had a doc with the read me that had all of the rules and stuff at the top you just uploaded it and said yeah review like yeah
[33:08-33:14] SPEAKER_01: yeah especially like Jim and I assume you can give a doc to you and so yeah that is your
[33:14-33:24] SPEAKER_00: read me right. Exactly like my guess is if you put everything in the read me including those rules at the top and just uploaded it in it is going to review that and go OK I know what we're doing. Right
[33:24-33:37] SPEAKER_01: the magic of cursor is not any real magic the magic of it is that it's all really simple. It's doing it all by cursor rules sounds like a funny and it gives you a dot cursor rules file. But it's doing all it's
[33:37-33:37] UNKNOWN: doing
[33:37-33:37] SPEAKER_01: is adding it to the prompts.
[33:37-33:37] UNKNOWN: Plain
[33:37-33:39] SPEAKER_01: text prompts. Yes. It's just English.
[33:40-33:40] UNKNOWN: Yeah
[33:40-33:53] SPEAKER_01: and like the removing the necessity or the weakness of cloud four by being like we can look at the internet bro cloud doesn't have to and we'll give it the results like it's all just little optimizations.
[33:54-33:54] UNKNOWN: It's
[33:54-33:56] SPEAKER_01: nothing. It's what you've been talking about
[33:56-33:56] SPEAKER_00: for
[33:56-33:57] SPEAKER_01: a year. That
[33:57-33:57] UNKNOWN: hey.
[33:57-33:58] SPEAKER_01: Obviously they were working on
[33:58-33:59] SPEAKER_00: it. Yeah
[33:59-33:59] SPEAKER_01: and
[33:59-34:00] SPEAKER_00: they did it.
[34:04-34:04] UNKNOWN: Yeah.
[34:05-34:21] SPEAKER_00: They're playing the cluster manager. Yep. Yep. This is I think that set is good. Start with. I'm not even going to
[34:21-34:21] UNKNOWN: do
[34:21-34:37] SPEAKER_00: that. Maybe I should. No it's probably. All right.
[34:42-34:43] UNKNOWN: You
[34:43-34:44] SPEAKER_00: did a bunch of stuff.
[34:45-34:51] SPEAKER_01: I hope it works. Yeah. We're still useful.
[35:40-35:50] SPEAKER_00: Sure. I have been recently using it to do my updates to the repository too.
[35:50-36:00] SPEAKER_01: Yeah. I mean that makes sense. And this is just checking your local Docker images like because in the read me it says that you've already built transcription which is true.
[36:03-36:11] SPEAKER_00: Sure. Yeah.
[36:11-36:11] UNKNOWN: I
[36:11-36:13] SPEAKER_00: did never upload it.
[36:14-36:15] SPEAKER_01: Right.
[36:18-36:19] UNKNOWN: Yeah.
[36:21-36:39] SPEAKER_01: Yeah. Having the names of everything in there too that might be against best practices but like you got to break Google security to find those buckets and those service accounts and stuff. Right. Technically it's a path for savages but it's true. It's really useful when you're developing.
[36:42-36:53] SPEAKER_00: I thought we were going to do the. Yeah it's good. That's what it
[36:53-36:53] UNKNOWN: was
[36:53-36:54] SPEAKER_00: doing
[36:54-36:54] SPEAKER_01: right there.
[36:54-36:56] SPEAKER_00: We haven't actually deployed any
[36:56-37:05] SPEAKER_01: cluster manager. Oh you're right. Oh but the immediate next step wasn't it was to finish transcription service.
[37:05-37:11] SPEAKER_00: No see to do. Yeah but where it said. Oh it says complete.
[37:13-37:14] UNKNOWN: I
[37:14-37:19] SPEAKER_00: thought that we needed to. Oh you can't go back. You can. It's fine.
[37:19-37:29] SPEAKER_01: Yeah. Commit the cluster manager. Yeah so we just need to tell it that it's waiting for your approval.
[37:34-37:35] SPEAKER_00: I'm not sure.
[37:36-37:36] SPEAKER_02: Yeah.
[38:03-38:06] SPEAKER_01: Yeah so it's not great.
[38:08-38:08] UNKNOWN: But
[38:08-38:09] SPEAKER_01: it was complete
[38:09-38:10] SPEAKER_00: from the perspective
[38:10-38:12] SPEAKER_01: of his bills. Right.
[38:12-38:12] UNKNOWN: But
[38:12-38:15] SPEAKER_01: also step four is deploy and test the cluster.
[38:16-38:18] SPEAKER_00: Oh I see.
[38:19-38:19] UNKNOWN: Yeah.
[38:19-39:03] SPEAKER_00: Yeah. So I just looked at that wrong. Like so. Yeah. That was to build the cluster service and then it was just not well written in there. That's fine. It was I broke it. I didn't break it but I didn't let it do what it was. I just had to read. Because there's a script to deploy the cluster manager functions.
[39:05-39:18] SPEAKER_01: Cloud scheduler. Yeah so what's called scheduler cost. That's another potential. Makes sense that it would be near nothing.
[39:19-39:19] UNKNOWN: Yeah
[39:19-39:20] SPEAKER_01: I think.
[39:26-39:31] SPEAKER_00: Yeah maybe this is going to break stuff because the red.
[39:33-39:53] SPEAKER_01: That's just an image like the service is up there. It's an image that we don't want but it's there's all the stuff should be there to be pointed at. Unless it's for whatever reason seeking a specific tag which would make it hard coded like that file would not be
[39:53-40:04] SPEAKER_00: useful at that point. Yeah the cluster manager stuff has to be able to function separate from the cluster. Right. Because most of this makes it's life the cluster is going to be down. Right. So
[40:04-40:04] UNKNOWN: it
[40:04-40:12] SPEAKER_00: has to be able to function like this. Yeah. Because it like so we haven't done these services but those are just images. There is no cluster
[40:12-40:26] SPEAKER_01: transcription service has nothing to do with the cluster. Ultimately it's going to run on the cluster. So it's like before the cluster it has nothing. I agree. What's that error there bro like yesterday it was doing some
[40:26-40:33] SPEAKER_00: shit where. It's the parcel record is not correct. Shows the database already exists.
[40:38-40:44] SPEAKER_01: That's not what that says. It says unrecognized argument.
[41:34-42:06] UNKNOWN: Okay. Good catch.
[42:16-42:25] SPEAKER_01: It typically when it's a red error that's not nothing. Right. Warnings I can be convinced to ignore.
[42:30-42:33] SPEAKER_00: My guess is there's none like I just told you.
[42:34-42:35] UNKNOWN: Exactly.
[42:47-42:51] SPEAKER_01: Like sometimes they just do retarded shit. Yeah I agree.
[43:24-43:25] UNKNOWN: Okay.
[43:42-44:14] SPEAKER_01: I had a moment when I was thinking about trying to describe this whole thing and then getting into ultimately getting to obsidian and being like trying to explain obsidian and the sentence that went through my mind was like let's just markdown. I was like shit just markdown is a silly thing to say because like that's my thing. I understand markdown so everybody understands markdown. It's super simple.
[44:14-44:14] UNKNOWN: I
[44:14-44:28] SPEAKER_01: remember when I had no idea what markdown was. And I still couldn't let go and just sit at the keyboard and write an entire fancy markdown file necessarily. No but I think those days are done anyways.
[44:28-44:38] SPEAKER_00: Like until unless there's a nuclear war and we're like trying to feed ourselves. Yeah that's a whole different thing. It was a different discussion. That they seem to be determined
[44:38-44:38] SPEAKER_01: to
[44:38-44:39] SPEAKER_00: create but
[44:39-44:39] SPEAKER_01: whatever.
[44:39-44:40] SPEAKER_02: Excuse
[44:40-44:53] UNKNOWN: me.
[44:56-45:09] SPEAKER_01: I assume you can do both of those at the same time. It seems like it would be able to. It just takes like the deployed script takes a long time maybe.
[45:09-45:09] UNKNOWN: I
[45:09-45:35] SPEAKER_01: guess. Cluster initialize in state cluster state dot no cluster. That's good.
[45:55-45:57] UNKNOWN: Okay.
[46:10-46:11] SPEAKER_00: Yeah.
[46:19-46:34] SPEAKER_01: So you can kind of see the flow like it when like it pushed it but then lower down you see no save state. So that's it. Checking if there's a cluster. Starting fresh cluster manager so dot no cluster here we are. So we're
[46:34-46:34] UNKNOWN: going to
[46:34-46:54] SPEAKER_01: roll. The state is up. Send a upload upload a file and we're running. Not necessarily but that's how it feels right now. I would give it some more time.
[46:55-46:55] UNKNOWN: You
[46:55-47:02] SPEAKER_01: need to tell it to show. Don't run quietly. Yeah
[47:02-47:09] SPEAKER_00: I do need to do that. Looks like it's done.
[47:14-47:15] SPEAKER_01: Yeah.
[47:15-47:15] UNKNOWN: So
[47:15-47:19] SPEAKER_01: go like is there a place for. There's a place for cloud.
[47:36-47:37] UNKNOWN: Yeah
[47:37-47:41] SPEAKER_00: the function custom manager function is up and running two minutes ago.
[47:41-47:42] SPEAKER_02: Okay.
[47:57-47:57] UNKNOWN: And the
[47:57-48:01] SPEAKER_01: published authorization request is using the default service.
[48:04-48:04] SPEAKER_00: Okay.
[48:05-48:08] SPEAKER_01: So security button on the recommendation.
[48:09-48:21] SPEAKER_00: Yeah. So this stuff should be done. Like here is the script deploy. And that's the only way like was.
[48:21-48:22] SPEAKER_01: That's the whole thing.
[48:22-48:35] SPEAKER_00: This is all of it. Right. Is it. No. This is just for the cluster manager. Create a cloud scheduler job. Something's wrong. Maybe
[48:35-48:35] UNKNOWN: I
[48:35-48:48] SPEAKER_00: don't know. Maybe it's in the middle of this but we haven't seen these things yet. Yeah. Which one did we see. Deploying. Deploying cluster manager cloud function. We seen that.
[48:49-48:50] SPEAKER_01: Yeah. It is there.
[48:53-48:55] UNKNOWN: Yeah.
[49:11-49:23] SPEAKER_00: It might take a lot because maybe these is doing all of this to deploy the functions. Maybe. Is this from today.
[49:30-49:32] SPEAKER_01: Yeah. Current policy change.
[49:32-49:32] UNKNOWN: What
[49:32-49:48] SPEAKER_01: was that error. There's nothing in cloud scheduler.
[49:48-49:49] SPEAKER_00: Yeah.
[49:49-49:49] UNKNOWN: I
[49:49-49:51] SPEAKER_00: don't think there's any activity at all happening right
[49:51-49:53] UNKNOWN: now.
[49:57-50:03] SPEAKER_00: This is the same stuff from five minutes ago. Yeah. I'm going to stop it. I agree.
[50:18-50:19] UNKNOWN: Yeah.
[50:30-50:36] SPEAKER_01: So we don't even have the dash monitor. Yeah. There's supposed to be three functions.
[50:47-50:50] SPEAKER_00: I do think you should try deploying them one at a time.
[50:50-51:19] UNKNOWN: Yeah. Okay.
[51:35-51:36] SPEAKER_00: Yeah.
[51:36-51:36] UNKNOWN: So
[51:36-51:45] SPEAKER_00: this first function is going to fire when it's going to be listening to the diarization request. Right.
[52:15-52:16] UNKNOWN: Yeah.
[53:03-54:09] SPEAKER_00: Do you think. What do you think about this. Letting it do it. It's in there. Yeah. Or say I think this one's already in there. Yeah. I'm confused now because function name is going to be the same cluster manager cluster manager.
[55:01-55:10] SPEAKER_01: Yeah. Yeah.
[55:18-55:20] SPEAKER_00: Okay. So.
[55:47-55:58] SPEAKER_01: I mean it shouldn't mean they should be inherently authenticated right because it's only ever going to get hit by service accounts.
[55:59-56:05] SPEAKER_00: Oh I agree but I think technically you could trigger it by knowing.
[56:05-56:05] SPEAKER_01: Well
[56:05-56:05] UNKNOWN: I'm
[56:05-56:12] SPEAKER_01: saying like that's why it shouldn't be allowed to be run on authenticated. No. Because it's inherent.
[56:12-56:12] UNKNOWN: I
[56:12-56:24] SPEAKER_01: can change it. I think that's a problem. That's a that's in all of our services. So part of the reading should still say hey we need to do a full security go remove at least those flags from every single service.
[56:38-56:39] UNKNOWN: Yeah.
[56:39-56:41] SPEAKER_01: So just sitting there waiting on you to say yes.
[56:57-57:14] SPEAKER_00: That one has the authenticated flag in there. Whereas it does not. I assume I don't see it in there. Oh there it is right there. That's the one you just read. Yeah I know. Oh
[57:14-57:14] UNKNOWN: this
[57:14-57:32] SPEAKER_00: one did not. So I think my guess is the first one does. And that's why it went through the second one did not. Or something like that. Maybe none of them. Yes. This one's in there. Huh. And maybe the first one doesn't care. I don't know. Yes.
[57:32-57:32] UNKNOWN: All
[57:32-57:54] SPEAKER_00: right. Do you think we're winning game six? I do. I do.
[57:54-57:54] UNKNOWN: I
[57:54-58:07] SPEAKER_00: think that they are tired. They're very high energy like us. And they came out swinging. Yep. They're not as deep as us.
[58:07-58:07] UNKNOWN: And
[58:07-58:08] SPEAKER_00: they were doing well.
[58:09-58:09] UNKNOWN: They
[58:09-58:15] SPEAKER_00: were playing but we just continued to overrun and we have so many minor stars. Or role players.
[58:16-58:16] UNKNOWN: Yeah
[58:16-58:18] SPEAKER_00: they're deep but our
[58:18-58:27] SPEAKER_01: depth is higher quality. Yeah I agree. They might be as deep as us but if we're doing a sprint with everything we've got our quality and
[58:27-58:27] UNKNOWN: we're so
[58:27-58:30] SPEAKER_01: much better in the depth that we're going to win by 10 or 15 or 20 points.
[58:30-58:31] SPEAKER_00: And we're younger.
[58:32-58:32] UNKNOWN: And
[58:32-58:35] SPEAKER_00: we know. It's right there. It's like right
[58:35-58:38] SPEAKER_01: there. I feel like in my head Dagnall's going to do him.
[58:39-58:39] UNKNOWN: But
[58:39-58:57] SPEAKER_01: hey they're one swing away from being done. They know even if they give everything they still have to go back to Oklahoma City where they have no chance and they know it. They got their one miracle in Oklahoma City and it's done. It's done. And just like go out there first quarter.
[58:58-58:58] UNKNOWN: Bury
[58:58-59:00] SPEAKER_01: them. They're not diving for extra balls.
[59:00-59:00] UNKNOWN: Break
[59:00-59:00] SPEAKER_01: their
[59:00-59:03] SPEAKER_00: will. Like destroy them. They're there to be
[59:03-59:03] UNKNOWN: broken. In
[59:03-59:05] SPEAKER_00: the first 10 minutes. Take
[59:05-59:12] SPEAKER_01: the crowd out immediately. Just like put them under the ground. All those missed dunks that would have been the moment go for those again.
[59:13-59:13] UNKNOWN: I
[59:13-59:14] SPEAKER_01: don't give a fuck if you miss them.
[59:14-59:14] UNKNOWN: Put
[59:14-59:15] SPEAKER_01: them
[59:15-59:29] SPEAKER_00: down early. As soon as you can. And make the crowd sit on their hands and start wanting to go home. Just let them know it's maybe next year. Maybe. But not today. Today's our day. I think it's going to be like that. I hope so.
[59:54-59:58] SPEAKER_01: Every two minutes or something. I
[59:58-60:03] SPEAKER_00: don't remember what it said. I think it
[60:03-60:07] SPEAKER_01: was the last time. But that's it.
[60:07-60:07] UNKNOWN: I
[60:07-60:23] SPEAKER_01: mean it's a cron job. Star slash two. I think the stars basically mean like when you start. Does that mean it's going to run all the time? I think so.
[60:23-60:23] UNKNOWN: How
[60:23-60:25] SPEAKER_01: much is that going to cost? I don't know.
[60:25-60:32] SPEAKER_00: I don't think cloud functions are not cron jobs or cloud scheduler jobs are expensive. I don't think they are.
[60:32-61:18] SPEAKER_01: Yeah. Cloud scheduler charges ten cents per job per month. Yeah. There you go. So this would cost ten cents. Yeah.
[61:18-61:18] UNKNOWN: Except
[61:18-61:19] SPEAKER_01: that
[61:19-61:36] SPEAKER_00: you get three free jobs per month per billion. There you go. I can't imagine that it's going to run on the smallest VM. Yeah. Possible. Or maybe it's collective. They're running it on a VM that processes ten million a month. It's a
[61:36-61:59] SPEAKER_01: spot VM the size of the smallest little spot that you could possibly get. It's basically free. We'll give you free ones. Yeah. Because it is a cron job. I can run a cron job with some scripts to do this shit for free basically on my local machine. Right. That makes sense. And that's literally ten cents a month if it's
[61:59-61:59] UNKNOWN: running
[61:59-62:02] SPEAKER_01: every second of the day all month.
[62:07-62:17] SPEAKER_00: Yeah. It's things like that that helps cloud adoption. If you're charging me an arm and a leg for everything, I can't work here. I can't make this work. Yeah. Especially for people.
[62:17-62:17] UNKNOWN: I
[62:17-62:30] SPEAKER_00: was companies like us were theoretically working under Patiko. But if it's too expensive to get started and I can't build anything until I'm making money, then I can't do it. For sure.
[62:31-62:41] SPEAKER_01: And you get them in the door with that stuff. And they'll be like, what do you think about BigQuery? Yeah, exactly. What do you think about whatever the cloud spanner? Yeah, not touching that.
[62:42-62:47] SPEAKER_00: BigQuery is freaking expensive. But I mean, when you need it.
[62:47-63:32] SPEAKER_01: Yeah. If you can justify it because of your use case, then great. It's what you're looking for. Like you shouldn't try to drive an F1 car to work. Right. But if you're trying to win an F1 race, you need to spend that money. I'm so happy J .D .O. popped up. Me too. He needed one of those. He
[63:32-64:04] SPEAKER_00: did. For his confidence and just for his career, all of those things like that. Now we're truly solidified to all -star team. And a lot of the NBA champions have had three. But we have such good role players. Collectively, we kind of got a third. The depth of the bench and the quality of our, I don't know, it's not even just the bench. The quality of our role players is, and they're young and they're fast and hungry. Yeah,
[64:04-64:04] SPEAKER_01: K
[64:04-64:05] SPEAKER_00: -Song. I mean,
[64:06-64:06] SPEAKER_01: you know
[64:06-64:06] UNKNOWN: we
[64:06-64:16] SPEAKER_01: only had like eight threes or something last night? Or eight or nine? Which is a lot compared to the previous game. But it felt like we were just raining them in all night. It's not a Boston.
[64:17-64:25] SPEAKER_00: Yeah. I was talking to Mason yesterday, Big Mason. And he was like, yeah, your team's doing it like the old school way. It's like, yeah, it's like,
[64:25-64:25] UNKNOWN: and
[64:25-64:37] SPEAKER_00: it's interesting. And I didn't necessarily think about this, but he made a good point. It's like the other team, the Pacers is also in our mold. Right. And we've all beat out the freaking,
[64:37-64:37] UNKNOWN: you
[64:37-64:46] SPEAKER_00: know, 50s. Shucking up to three? Yeah, we beat out all of those teams. And the two teams that made it to the finals were the old school play tough defense, shoot mid -range jumpers.
[64:47-64:47] UNKNOWN: And
[64:47-64:54] SPEAKER_01: like. That's who, that's, I mean, that's how eras work, right? It's not just because of like rules changes and like more money and shit. Like, basically I said it
[64:54-64:54] UNKNOWN: I
[64:54-65:02] SPEAKER_01: think last night for the first time. They kind of had the thought of like somebody was talking about Shae's mid -range and how good it is. And it's like, yeah,
[65:02-65:02] UNKNOWN: I
[65:02-65:11] SPEAKER_01: mean, whenever the NBA's expanded to three point shooting, that space opened up. Right. He found it. Right. And everybody was going towards these
[65:11-65:22] SPEAKER_00: three point shooting teams. And now, well, now there is an opportunity for these other style of teams and slowly it's going to morph back to all of these. And then somebody is going to be like, you know what? Space for threes.
[65:22-65:45] SPEAKER_01: Yeah. Are you going to have like a new era of big men like playing hard nose in the paint or something? But like you can't. The problem is you can't just go, oh shit, middies are working again. I got to start shooting them. It's like Shae, I'm pretty sure, saw that three or four years ago and started working on them. Yep. Exactly. And also he works harder than everyone else. He does. At least that's what it seems like.
[65:47-65:55] SPEAKER_00: Does this, oh it saved all of those changes myself because it also, I got to know you, it started doing this.
[65:55-65:57] SPEAKER_01: Oh yeah, because you did it, it's in your history. Yeah,
[65:57-65:57] UNKNOWN: I
[65:57-65:58] SPEAKER_01: guess
[65:58-66:05] SPEAKER_00: so. That is like, hey, we need to pretty commit this stuff that which, okay, let's do it.
[66:07-66:08] SPEAKER_01: I
[66:08-66:08] UNKNOWN: think
[66:08-66:11] SPEAKER_01: I'm going to get a coffee in an emergency. Me
[66:11-66:11] UNKNOWN: too. Because
[66:11-66:14] SPEAKER_01: my throat is either from yelling last night or.
[66:15-66:23] SPEAKER_00: I'm going to get an emergency too. If you think you need an emergency, then I think I need one too. We'll click on the trigger on those because ultimately it's just a shift in the volume. Yeah, exactly.
[66:54-70:52] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[71:15-71:41] SPEAKER_01: I guess in theory you can build the other one while this does it, you just have to execute the main cursor game. Right. That's just running in a terminal. I agree. But then it's going to be sharing compute, like just letting it do this. Yeah, it's like, I need two cursors. Yeah. What about the background agents?
[71:41-71:41] UNKNOWN: I
[71:41-71:48] SPEAKER_01: think is what they're, I assume that's the purpose. Like they've heard this from other people, like, hey man, I love it, but whenever it's working, I want to be able
[71:48-71:48] UNKNOWN: to work.
[71:48-71:49] SPEAKER_01: I want to do other stuff.
[71:49-71:52] SPEAKER_00: Like spawn multiple of you. Yeah. Like,
[71:53-71:53] UNKNOWN: and
[71:53-71:56] SPEAKER_00: like even in the other windows can see each other. You
[71:56-71:59] SPEAKER_01: want to just see what happens if you click move to background.
[72:00-72:01] SPEAKER_00: Sure.
[72:02-72:03] SPEAKER_01: We can always start it again.
[72:04-72:05] UNKNOWN: Yeah.
[72:08-72:15] SPEAKER_01: So now it's just running in a terminal. So you don't like that's actually better. Yeah, I
[72:15-72:20] SPEAKER_00: wonder. Will it kill it if you start going? Yeah, there you go. Like,
[72:20-72:20] UNKNOWN: is
[72:20-72:28] SPEAKER_00: it going to start doing stuff? And the answer is yes. Man, that button's always been. It's slow though.
[72:29-72:30] SPEAKER_01: It's been slow.
[72:32-72:36] SPEAKER_00: Okay. That's the answer for these long running things. Send it over there.
[72:36-72:36] UNKNOWN: Clicking in
[72:36-72:36] SPEAKER_00: the
[72:36-72:42] SPEAKER_01: freaking background. It's a background job. Yes. That's the only reason to ever send a terminal over there.
[72:42-72:48] SPEAKER_00: Right. And I can do, build the new image. Because it's local.
[72:48-72:49] UNKNOWN: Yep.
[72:49-73:16] SPEAKER_01: Yeah. And then once it finishes, you come back over here and click that. Yeah. Then it will have it and you won't have to do or press command A and it will pop up a little happy chat button. Especially on something like this because it's basically either going to work or not and it's going to go, all right, we're good. It's very slow.
[73:17-73:17] UNKNOWN: But I
[73:17-73:25] SPEAKER_01: think it's around the time that more people are starting to use it. Like the East Coast is getting to work.
[73:33-73:40] SPEAKER_00: How long do you think it would have taken us to finish this if we
[73:40-73:40] UNKNOWN: were
[73:40-73:43] SPEAKER_00: working like this was our job?
[73:44-73:44] UNKNOWN: Like
[73:44-73:46] SPEAKER_00: we didn't have any other responsibility?
[73:47-73:53] SPEAKER_01: Um, like a couple of weeks probably.
[73:53-73:54] UNKNOWN: I
[73:54-74:07] SPEAKER_01: don't know that we get it finished in a week because there's ultimately like even limitations on how much you can even grind on a thing. And we run out of tokens and that kind of
[74:07-74:07] UNKNOWN: stuff
[74:07-74:33] SPEAKER_01: at some point. Well no, it just gets slower. Basically I've quit looking at it. Like I was kind of anxious about it initially on my first month. But then I exceeded them and still was able to use all the models and everything was fine. Occasionally in like high use times it's like, no, you can't. You're in line. And so, but that has lasted like single digit minutes in my experience.
[74:37-74:45] SPEAKER_00: Oh, well it's basically it's like, even though it's in the background, it's like, hey, the service is not finished. I can work
[74:45-75:07] SPEAKER_01: as hard as I can work. I think you maybe stop it and say, okay, well let's build the other service while we're here. What's next? The diarization. It's
[75:07-75:07] UNKNOWN: like
[75:07-75:12] SPEAKER_01: it's developing this command to check what I can tell you for certain has not happened.
[75:22-75:23] UNKNOWN: I
[75:23-75:27] SPEAKER_01: guess trying to see whether that terminal process right there is done. Right,
[75:28-75:28] UNKNOWN: exactly.
[75:28-75:48] SPEAKER_01: It's not. Here. We can push it to the background, but there's not much else to do.
[75:50-75:54] SPEAKER_00: Because after this is in the intestine. We've got to push this too.
[75:57-75:59] SPEAKER_01: Progress equals play.
[76:03-76:03] UNKNOWN: I
[76:03-76:04] SPEAKER_00: don't want to open terminal.
[76:05-76:12] SPEAKER_01: Oh, yeah. Well, it's basically saying like, let's skip the nonsense. You know, this is going to take forever. Open it over there.
[76:16-76:21] SPEAKER_00: Okay. Okay. It failed though.
[76:29-76:39] SPEAKER_01: Oh, yeah. You're in the right directory, I think. So, yeah, maybe have it started and then move it to the background.
[77:12-77:38] UNKNOWN: Okay. Thank you.
[77:49-77:52] SPEAKER_01: It's just a different way of presenting.
[77:53-78:07] SPEAKER_00: Yeah, I mean, I think it's probably fine over there. And it might even be better because it's over there and then I was assuming it leaves this free. It does, because I was talking to it while that was up. Right. But in some way, it looked like it couldn't see.
[78:07-78:21] SPEAKER_01: Yeah, I'm just thinking about the progress, like the way it's presenting. Oh, it's different than like it's showing everything instead of like the condensed actually useful progress.
[78:25-78:31] UNKNOWN: Yeah, at
[78:31-78:41] SPEAKER_01: this point we're chilling. Yeah, we can move it to the background and try to like talk to it a little bit, but I think all the talking is done. We need to see how the, if it works.
[78:41-78:42] SPEAKER_00: Yeah, I agree.
[78:45-78:45] SPEAKER_01: Let
[78:45-78:45] UNKNOWN: me
[78:45-78:50] SPEAKER_01: get on record that I want to dive into whether you can wield the placebo effect.
[78:50-79:17] SPEAKER_00: Right. And use your money to heal yourself. Yeah. That would be really cool. I mean, again, I think it's technically possible. Right. Because if it is true that the basis of the placebo effect, and I'm just maybe speculating or just what I know about it, that you believe that you are healing or being healed and it's actually your brain just doing it, then theoretically you should be able to harness that. Yeah, that means
[79:17-79:21] SPEAKER_01: that the pill did nothing. Right. Your belief did a thing. Right.
[79:21-79:21] UNKNOWN: And
[79:21-79:24] SPEAKER_01: your brain fixed it. Right. So
[79:24-79:41] SPEAKER_00: you should be able to theoretically meditate or do whatever and heal yourself. Right. And that's not like science fiction. No. The medical field for sure believes in the placebo effect. It's a thing. Right.
[79:42-79:57] SPEAKER_01: It's like they're like double blinded placebo's are required on everything with vaccines that have aluminum in them, but whatever. Yeah, don't worry about those. These are safe. Yeah. Spray this in your newborn baby's eyes. Right. These are safe.
[79:58-80:04] SPEAKER_00: It's fine. Don't worry about it. Yeah. But. I mean it costs some money.
[80:04-80:04] SPEAKER_01: Yeah.
[80:05-80:06] SPEAKER_00: Don't worry about the government's going to take that.
[80:06-80:07] SPEAKER_01: Yeah.
[80:07-80:08] SPEAKER_00: Don't worry about it.
[80:08-80:10] SPEAKER_01: It's not your tax money that it's going
[80:10-80:10] UNKNOWN: to take.
[80:10-80:30] SPEAKER_01: Don't think about that. Yeah. Don't think too deeply on it. That breaks the whole thing. Stop that. Yeah. Yeah. So now it's downloading the gigantic model on one of these steps.
[80:30-80:45] SPEAKER_00: Yeah. It was pot doors or whatever, but it looked like it's. And then maybe it's like showing smaller pieces. Yeah. And it makes me feel better. Fair enough. Like it knows me well. And like, hey, I'm going to show you the plain version so you don't try to stop
[80:45-80:52] SPEAKER_01: me. Yeah. So you don't look over at that 400 megabytes out of 5 ,250. Yeah.
[80:58-81:04] SPEAKER_00: I wonder what my system data looks like. Oh boy.
[81:10-81:15] SPEAKER_01: You haven't done that much. You know like three builds and some deploys? Yeah. Big builds.
[81:16-81:16] UNKNOWN: But
[81:16-81:17] SPEAKER_01: still.
[81:19-81:20] SPEAKER_00: Big? Oh
[81:20-81:21] SPEAKER_01: my
[81:21-81:24] SPEAKER_00: goodness. So that's definitely.
[81:25-81:27] SPEAKER_01: Oh, that's not. Is it all system data?
[81:27-81:27] SPEAKER_00: Oh
[81:27-81:31] SPEAKER_01: no, it was captured. It says messages. It caught up to your cloud.
[81:32-81:32] UNKNOWN: So
[81:32-81:37] SPEAKER_01: that's good. System data 34. It was like 20 something yesterday. 21 or something. Yeah. So not
[81:37-81:37] SPEAKER_00: bad.
[81:38-81:38] SPEAKER_01: This
[81:38-81:39] SPEAKER_00: is reasonable.
[81:40-81:43] SPEAKER_01: Yeah. My guess is straight up like the,
[81:43-81:43] UNKNOWN: you
[81:43-81:48] SPEAKER_01: could add up the amount of gigabytes in those builds and they're in the system data. Yep,
[81:48-81:48] SPEAKER_00: exactly.
[81:49-82:00] SPEAKER_01: Yeah. So it's just clear out Docker desktop regularly because every single build. They're in here. Yep. And so once you push it, go delete it. Yep. Yeah, it's this.
[82:03-82:06] SPEAKER_00: And I had a bunch of other problems. Right. That just needed to go anyways.
[82:06-82:11] SPEAKER_01: For sure, that's how it goes. That's a nice little roller coaster like,
[82:11-82:11] UNKNOWN: fuck.
[82:12-82:12] SPEAKER_01: Oh,
[82:13-82:13] UNKNOWN: it's just
[82:13-82:16] SPEAKER_01: messages. There's a fuck load of pictures in your messages.
[82:16-82:23] SPEAKER_00: Yeah. And default for iOS is forever. Keep them forever. I
[82:23-82:26] SPEAKER_01: mean, how else would we convince you to increase your storage capacity?
[82:26-82:27] SPEAKER_00: Right.
[82:37-82:43] SPEAKER_01: Man, I wonder how much data is just out there being stored that literally will never be looked at again. Yep.
[82:44-82:45] UNKNOWN: Like
[82:45-82:46] SPEAKER_01: so much.
[82:46-82:50] UNKNOWN: Yep. I
[82:50-82:56] SPEAKER_00: assume at some point we'll have some technology where you can store data in crystals or something
[82:56-82:58] SPEAKER_01: like that. It's just like infinity data.
[82:58-82:58] UNKNOWN: So
[82:58-83:01] SPEAKER_01: it just doesn't matter. Right. Convince everything down,
[83:01-83:01] UNKNOWN: zip
[83:01-83:07] SPEAKER_01: it, put it in the fucking asteroid belt where we keep the shit. Everything forever? Yeah.
[83:08-83:13] SPEAKER_00: Because why not? For reasons. Because it's just cheap and why not? Yeah. Keep everything forever.
[83:13-83:21] SPEAKER_01: It's not like we're keeping it forever to preserve it in case of disaster. It's useless should disaster
[83:21-83:24] SPEAKER_00: happen. Because you can't, you don't have any computers. Yeah, what are they?
[83:24-83:29] SPEAKER_01: Right. It's just these broken chips in a factory ultimately.
[83:29-83:30] SPEAKER_00: Yeah.
[83:30-83:30] UNKNOWN: I
[83:30-83:44] SPEAKER_00: mean, I think Star Wars does a good job. So specifically thinking about Andor. Right. So it shows these worlds where they're like farmers and stuff, but they still have modern tools. Right.
[83:44-83:44] UNKNOWN: But
[83:44-84:00] SPEAKER_01: in that scenario, they're a part of an empire that spans galaxies. I agree. And so it's because it's like Ukraine or Gaza in 20 years is not going to look like it looks like right now. Right. But if that happened to the world,
[84:00-84:00] SPEAKER_00: then
[84:00-84:04] SPEAKER_01: in 20 years it's going to look exactly like that, just a lot greener.
[84:04-84:04] UNKNOWN: It
[84:04-84:05] SPEAKER_01: is very different.
[84:06-84:06] UNKNOWN: I agree.
[84:09-84:12] SPEAKER_01: Like computers are so far down the list. I
[84:12-84:12] UNKNOWN: agree.
[84:12-84:14] SPEAKER_01: Arguably they shouldn't be,
[84:14-84:14] UNKNOWN: but
[84:14-84:20] SPEAKER_01: there's so many things that have to come up before like we're going to send the first power to a computer.
[84:20-84:20] UNKNOWN: I
[84:20-84:20] SPEAKER_01: think not.
[84:21-84:29] SPEAKER_00: I assume like maybe not I assume. That's probably not a good assumption, but like the the Selden plant,
[84:31-84:31] UNKNOWN: like
[84:31-84:44] SPEAKER_00: somebody, some multi -billionaires working on this. That's it. Like, hey, if the world ends, here's to get, this is how we're going to come back. I'm going to keep all of these things and keep all of these books and do what I
[84:44-84:53] SPEAKER_01: agree that some billionaire is probably fantasizing that they have some kind of ability to do that. Jeff Bezos is building a big fucking clock.
[84:54-85:30] SPEAKER_00: Yeah. Like something like I would build like a bunker, not just for me to live in it. Like I'm going to try to collect all of the and not digitize like, hey, I'm going to have some sort of like special paper or what? Here's all the books and not just the raw knowledge, but like, hey, here's this like to get back to this place. Here's the plant. You need to learn these things. You need to have these industries like here's it. And like this giant warehouse of, hey, here's all the knowledge. Like what's the the the the library of Alexandria? Like I'm going to build that. If I had money, that's what I'm going
[85:30-85:30] UNKNOWN: to
[85:30-85:31] SPEAKER_00: build. Yeah. And so
[85:31-85:45] SPEAKER_01: then once people are able to eat, like how many how many people do you need to spend a year reading those books and feed those people the whole time? A
[85:45-85:45] UNKNOWN: million. Do
[85:45-85:48] SPEAKER_01: all this stuff? Even like turn electricity back on.
[85:48-85:52] SPEAKER_00: Well, you would have to convince this society. The
[85:52-85:55] SPEAKER_01: society is fully, that's not a thing. No, I know. But even your
[85:55-86:10] SPEAKER_00: community or whatever, how many ever people that, hey, these special people, the smart people, they're gifts. And hey, we're going to farm and you go into that place and start learning and start building our society back.
[86:11-86:11] UNKNOWN: Like
[86:11-86:29] SPEAKER_01: think about like last of us. There's just not like that's not a possibility. We need people to get one line. Yeah, they need people like foraging and running security because there's other people out there.
[86:29-86:29] UNKNOWN: We
[86:29-86:37] SPEAKER_01: don't live in this big United country. Right. We live in not even states. The people you can see every day are your people and everyone else
[86:37-86:52] SPEAKER_00: is not. No, I agree. I think it would be like the leadership team would have to do all of those things and say, hey, I have this small percentage of our resources going towards building the future. Right. So how many people do you need?
[86:52-86:52] UNKNOWN: Go manage
[86:52-86:55] SPEAKER_00: with that library. Go do that. Figure that thing out.
[86:55-87:03] SPEAKER_01: So if it's one percent, which is probably too much already. Probably if
[87:03-87:06] SPEAKER_00: it's one percent, I think it would need to be like five percent.
[87:06-87:20] SPEAKER_01: Right. So even let's go five percent. How many people do you need in your society for five percent to be enough to be idle, to have any kind of effective, have any kind of effect on this society? Because you already have
[87:20-87:34] SPEAKER_00: babies, right? Like babies and elderly, they don't contribute. Don't contribute. You know what it is. Yeah. So you already got some group that you're feeding but not producing. Yeah. That's just inherent in society. That's how it works. So
[87:34-87:34] UNKNOWN: you're going to
[87:34-87:55] SPEAKER_00: add some more to be able to pay for your future. And these are investments. At what point, at what scale is that even effective? It's pretty big. I think you have to be at like a few thousand. I think you can get away with a few thousand. Yeah. So you got
[87:55-87:55] SPEAKER_01: a few
[87:55-88:03] SPEAKER_00: thousand. Especially if out of that library or whatever, it shows you how to farm. Like, hey, here's some farming techniques.
[88:03-88:03] UNKNOWN: I think
[88:03-88:03] SPEAKER_00: we'll
[88:03-88:05] SPEAKER_01: have farming and stuff like that.
[88:05-88:24] SPEAKER_00: But even like fertilization. Like, hey, here's some things you can do that not just how to plant stuff but more like, hey, to dramatically increase the yields of your crop. Right. Put these roots, go find these roots, put them in the water, whatever. Like some technique to fertilize, like natural fertilizers and things like that.
[88:24-88:28] SPEAKER_01: I agree with that. But the initial question was how long is it until we get to computers?
[88:30-88:30] UNKNOWN: And
[88:30-88:34] SPEAKER_01: it's a long generation. I agree you can have a faster.
[88:35-88:58] SPEAKER_00: But it's foundation. Maybe. It's still faster. Maybe it is. Then it just naturally happening and it all going away and you never knew that. Like what are these freaking buildings? What is that? To a person that was not born before. I know. But if you have access to the library, like what was the silo? Then if you can go into the silo and it just ask any question.
[88:59-88:59] UNKNOWN: Like,
[88:59-89:02] SPEAKER_00: granted, that's too much. Like to have a computer or AI that's up.
[89:02-89:02] UNKNOWN: But
[89:02-89:06] SPEAKER_00: even whatever. But even that. If it actually had every answer to the question,
[89:06-89:06] UNKNOWN: like,
[89:07-89:17] SPEAKER_00: hey, go find the book on the solar system. Like, oh, oh, that makes sense to me. But you having access to that would for sure speed it up.
[89:18-89:19] SPEAKER_01: It would.
[89:20-89:20] UNKNOWN: But
[89:20-89:22] SPEAKER_01: like this society doesn't come back.
[89:22-89:22] UNKNOWN: Like
[89:22-89:37] SPEAKER_01: it doesn't naturally end on iPhones. No, it's so far different. Yeah, I agree. Like that's the whole thing with the ancient Egypt stuff. Like what the fuck are the pyramids and all this different thing. It's just a different style of technology.
[89:37-89:37] UNKNOWN: We
[89:37-89:52] SPEAKER_01: couldn't possibly understand it because everything got wiped out. And we took a different path. And so you're talking like hunter gatherer shit. And maybe it's a little quicker, but it's a long fucking time.
[89:53-90:00] SPEAKER_00: It is. Yeah. And then overlaying on top of that are people happier? I mean, probably.
[90:01-90:19] SPEAKER_01: But yeah. And you just don't have time to even waste on that shit. Like if the people by the time people born after are like 20, they're going to have no time for anybody talking about bullshit magical shit from
[90:19-90:20] SPEAKER_00: from before.
[90:20-90:20] UNKNOWN: Oh,
[90:20-90:46] SPEAKER_00: I agree. I think you would have to be in the ideal circumstances where it's like I actually have leisure time. Like we're safe enough and fit like the crops are good. The world is safe enough either through we just have a strong military or whatever. And and I'm safe. My kids are safe. I'm fully fed and bored for like like I got free time and I want to read and whatever. You have to be in that place,
[90:46-90:49] SPEAKER_01: which is like hundreds of years out. It
[90:49-90:50] SPEAKER_00: depends on
[90:50-90:50] UNKNOWN: what
[90:50-90:54] SPEAKER_00: the maybe like. So again, like you're always going
[90:54-91:06] SPEAKER_01: to have just like if everything is great and there's surplus and all that happened is 90 percent of the population died. And now all these like this land and this good farmland is everybody surplus. You're
[91:06-91:06] UNKNOWN: going
[91:06-91:08] SPEAKER_01: to have people that just want to conquer.
[91:09-91:23] SPEAKER_00: Oh, I agree. So I was just getting ready to say I think that probably the primary thing and this sucks, but it's how to build really good weapons. Yeah. That hey, you just need to be stronger than everybody. Hopefully you are also morally strong. Yeah. And you're not just
[91:23-91:23] UNKNOWN: going
[91:23-91:23] SPEAKER_00: to
[91:23-91:23] UNKNOWN: start
[91:23-91:43] SPEAKER_00: living in disaster, but you basically need to expand your little bubble of safety and food and all of that. Like in destroy people around you so that you can remain safe. Like don't do it. You can't join because we can't support all of you. And don't try it because I will kill you.
[91:43-91:49] SPEAKER_01: Fingers crossed that doesn't devolve like it would into some bad person running that society. And
[91:49-91:49] UNKNOWN: then
[91:49-91:50] SPEAKER_01: taking over. I got all
[91:50-91:53] SPEAKER_00: these weapons and nobody can
[91:53-91:58] SPEAKER_01: challenge. Even somebody from the outside would be like some savvy person is going to go like, I'm going
[91:58-91:58] UNKNOWN: to
[91:58-91:59] SPEAKER_01: be friendly and take over.
[92:00-92:01] SPEAKER_00: Now I got
[92:01-92:03] SPEAKER_01: it. Yeah.
[92:03-92:08] SPEAKER_00: Yeah. That's what people do. Yeah. I need to
[92:08-92:08] UNKNOWN: just need
[92:08-92:11] SPEAKER_00: to stop thinking about the end of the world. Think about
[92:11-92:14] SPEAKER_01: it falls apart. Like, yeah, this is nothing I'm
[92:14-92:14] UNKNOWN: going to
[92:14-92:20] SPEAKER_01: do about it. I just hope the first bomb hits me in the head.
[92:20-92:22] SPEAKER_00: And then it's done. And
[92:22-92:22] SPEAKER_01: it's done.
[92:23-92:36] SPEAKER_00: This might be it for the next 20 minutes. Yeah. This is a significant thing that we're
[92:36-92:36] UNKNOWN: doing
[92:36-92:45] SPEAKER_00: two things at the same time. And theoretically, you can do more. I can move this to the background. You have as many terminals as you want. I
[92:45-92:47] SPEAKER_01: think we had more tasks to do.
[92:47-92:59] SPEAKER_00: If it's not done, I think I'm going to move it to the background and in chat protocol update all the stuff and push to the repost store and say like, Hey, obviously don't
[92:59-93:10] SPEAKER_01: interrupt the stuff and mark in the read me that it's in progress. Needs to be verified that everything worked. But then the starting point on our next session is run that test.
[93:10-93:16] SPEAKER_00: Right. Yeah, I think that is what I'm going to do. Yeah, that's what the background is the answer.
[93:16-93:18] SPEAKER_01: Yeah, we're pushing this one. It's already been built.
[93:19-93:30] SPEAKER_00: Yeah, it's already been built and it's pushing. So we're pushing the diarization and the transcription at the same time. And so the last thing is we just got to do that end to end test. And it's just going to work.
[93:32-93:35] SPEAKER_01: Perfectly transcribed and diarized. Yeah, it's going
[93:35-93:43] SPEAKER_00: to deploy. That was done. Nice. It's going to, you know, instantiate this cluster. Yeah, it's gonna be great.
[93:43-93:54] SPEAKER_01: Yeah, I've had a thought that it's been talking like the diarization is the heavy lifting. I don't think it is. It is heavy lifting, but not compared to whisper. But I don't know.
[93:54-94:05] SPEAKER_00: I don't know that we did specifically think about and analyze that. Speaking of which, we probably need to talk a little bit about the we only have one GPU available
[94:05-94:11] SPEAKER_01: for sure. Well, in a cluster, we can use different GPUs, right? In theory. But
[94:11-94:16] SPEAKER_00: we need to talk about that. Like how to time share or figure out which GPUs go to which services.
[94:18-94:33] SPEAKER_01: Yeah, that makes sense. And how to have it set up where they both use the same one and having one provision to both of them does not break because of the quota. Right.
[94:36-95:01] UNKNOWN: Yeah. Art. Yeah.
[95:12-95:17] SPEAKER_01: And then we don't have to deploy them because that's part of the cluster
[95:17-95:29] SPEAKER_00: because it coming up and like the services. Right. Like it will. That process is probably going to take 10 minutes, 15 minutes, whatever. But that's fine. Yeah. But as long as it's not charging was idle.
[95:30-95:33] SPEAKER_01: Yeah. Yeah. And then it'll start working.
[95:33-95:33] UNKNOWN: It
[95:33-95:45] SPEAKER_01: takes 10 or 15 minutes to go, maybe 20 or 30 minutes to actually process everything, waits for 10 minutes on the back end and some number of minutes as it makes short. Right. And then shows itself.
[95:46-95:51] SPEAKER_00: Yeah. Yeah. And it monitors its state every however many minutes.
[95:51-95:51] UNKNOWN: I
[95:51-96:00] SPEAKER_00: think it's whatever is continuously monitoring its states like, hey, no cluster. Oh, there's a cluster. Yeah. It's good. Send the jobs. Yeah. And that monitoring
[96:00-96:07] SPEAKER_01: is free. We could even increase the pace like it's every two minutes.
[96:08-96:08] UNKNOWN: But
[96:08-96:14] SPEAKER_01: I don't know. In theory, you could literally make it run every second. And it's the same freeze.
[96:14-96:14] UNKNOWN: You
[96:14-96:15] SPEAKER_01: made it run twice a day.
[96:19-96:47] SPEAKER_00: Yeah. I wonder what it uses as the cluster is deployed. Is it up and receiving jobs? But theoretically, PubSub should handle that. Right. That it should maybe we need to reduce that wait time because right now it's 10 minutes. So it will only send every 10 minutes. Like it'll send the like it'll wait until for response for 10
[96:47-96:53] SPEAKER_01: minutes. But if it takes 10 to 15 minutes to even spin up. Yeah. Then that's it.
[96:53-96:53] UNKNOWN: It
[96:53-97:11] SPEAKER_01: takes less than 10 minutes. It's still going to be some number of minutes. So we're actually waiting for like three or four minutes. Right. Whereas if it takes 15, same thing. But that's all stuff. Like once we get through this, we'll test every single step and see like, OK, we can reliably predict that the spin up is going to take
[97:11-97:11] UNKNOWN: 10 minutes.
[97:11-97:12] SPEAKER_01: Right.
[97:12-97:12] UNKNOWN: So we're not going to be able to predict this
[97:12-97:20] SPEAKER_01: long. But there's no way to reliably predict the processing time because we don't know how long the audio is going to be. Right. Or if it's going to be a video file. Oh, for
[97:20-97:26] SPEAKER_00: sure. I'm only worried about that first the first one. The startup. Yeah. The one immediately following the startup.
[97:26-97:26] UNKNOWN: Is
[97:26-97:28] SPEAKER_00: it going to just choke or I mean,
[97:29-97:29] UNKNOWN: I
[97:29-97:34] SPEAKER_00: think worst case is it will take 30 minutes before the first one goes through.
[97:34-97:34] UNKNOWN: And
[97:34-97:34] SPEAKER_00: then
[97:34-97:38] SPEAKER_01: it'll go through the whole queue as fast as the GPU can process. Right.
[97:41-97:45] SPEAKER_00: And again, that's probably even fine. As long as it's not running for hours.
[97:46-97:46] UNKNOWN: I
[97:46-97:47] SPEAKER_01: don't which it can't.
[97:47-97:48] SPEAKER_00: And that's
[97:48-97:48] SPEAKER_01: our shutdown
[97:48-97:48] SPEAKER_00: stuff
[97:48-97:49] SPEAKER_01: is not
[97:49-97:59] SPEAKER_00: working. It's not working. But assuming all of that's working, even if it takes an hour to start up each time, three hours, the process and then shut down. It's
[97:59-97:59] UNKNOWN: fine.
[97:59-98:00] SPEAKER_00: Yeah, the process. Three
[98:00-98:00] UNKNOWN: or
[98:00-98:12] SPEAKER_00: four hours a day is fine. Or even a day like is just per instance. Right. Yeah. That maybe we collect everything and process everything. Yeah, we could collect the words and
[98:12-98:23] SPEAKER_01: throw them up like literally all of our sessions and any Wednesday sessions and upload them all on Friday night. Yeah. And then Saturday when we get up, they automatically send out to people.
[98:23-98:25] SPEAKER_00: Right. And then shut everything and it shuts itself down.
[98:26-98:26] UNKNOWN: Yeah.
[98:27-98:34] SPEAKER_00: Not just itself down. It deletes itself. Exactly. It doesn't exist. And so it's it's. It can't be charging. Right.
[98:34-98:47] SPEAKER_01: It's gone. Right. Yeah, I think you're safe to in check. Maybe give it a note to say that whisper pushes and serves. Very well. Oh, it's in there. Oh, it is.
[98:47-98:50] SPEAKER_00: Right. It says it's currently pushing to the registry.
[98:51-98:53] SPEAKER_01: Well, but it hasn't put that in the read.
[98:53-99:02] SPEAKER_00: No, but that's this is going. This is what it's going to do. OK. I assume. We'll find out.
[99:37-99:50] SPEAKER_01: And as we get stuff running, that will tell us where we can like, oh, man, obviously, transcription needs the bulk of the GPU allocation or something like that. We just need to actually see the full process.
[99:50-99:57] SPEAKER_00: I mean, in the big scheme of things, every one of those services needs its own. Yeah. And like we just don't have permission. Right.
[99:57-99:57] UNKNOWN: I
[99:57-99:57] SPEAKER_00: mean,
[99:57-99:57] UNKNOWN: I
[99:57-100:04] SPEAKER_00: think the L4 is the one to start with, but we just need three. Yeah. Or how many each one needs. Probably.
[100:06-100:13] SPEAKER_01: Yeah. I mean, the one building the clusters could use. Well, maybe not that one, but definitely diarization and transcription.
[101:18-101:20] UNKNOWN: OK.
[101:27-101:30] SPEAKER_00: I think its summaries are better than the ones
[101:30-102:17] SPEAKER_01: I believe over there because it's a better model, right? Yeah. Like that ain't cloud right in the ones over in the gift pad. I think we just end early. I think so too. Just leave this. Or we can sit here for 11 minutes and watch it so we don't regret it. Yeah,
[102:18-102:18] UNKNOWN: I
[102:18-102:20] SPEAKER_01: think we're done. I agree. OK.

==================================================
Generated on: 2025-07-28 20:55:36
Total words: 10602
Total speakers: 4
==================================================




Summary:
creation_date: 2025-07-28 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-28_2037_ZOOM0023_transcript.txt participants: SPEAKER_00, SPEAKER_01
Executive Summary
This transcript details a design and architecture session for a [[Cluster Manager]], a new component of the [[Transcription Service]] project. The primary goal of the [[Cluster Manager]] is to dynamically create and destroy the [[GKE Autopilot]] cluster on-demand to minimize costs, ensuring the cluster is only active when there are jobs to process [10:37-11:19]. The participants use [[AI Tools|AI]] ([[Cursor]]) to help conceptualize and visualize the workflow, generating a sophisticated [[State Machine]] diagram using [[Mermaid]] [10:06-10:23]. This process leads them to refine the architecture significantly, identifying the need for a persistent database like [[Firestore]] to track the cluster's state across stateless [[Cloud Function]] invocations, which represents a major architectural decision [23:21-23:52].

Key Topics Discussed
	•	Designing the [[Cluster Manager]]
	•	The core objective is to create an automated system that manages the lifecycle of their [[GKE Autopilot]] cluster.
	•	The system will monitor a [[Pub/Sub]] queue for incoming jobs. If the cluster doesn't exist, it will create one, process the queue, and then shut the cluster down after a period of inactivity to save on compute costs [05:34-06:35].
	•	They discuss the cost benefits of [[GKE Autopilot]], noting the $77 monthly credit for the control plane, which makes an idle control plane essentially free [03:42-04:38].
	•	Developing a [[State Machine]] with [[AI Tools]]
	•	The team collaborates with [[Cursor]] to design the logic for the [[Cluster Manager]], conceptualizing it as a [[State Machine]] [18:44-19:18].
	•	They successfully prompt the [[AI Tools|AI]] to generate a detailed [[Mermaid]] diagram, which provides a clear visual representation of the entire workflow and helps them identify logical gaps [10:06-10:36].
	•	Key States Defined:
	•	No Cluster: The initial state. A new message triggers a transition to Creating.
	•	Creating: The GKE cluster is being provisioned.
	•	Active: The cluster is ready and processing jobs.
	•	Idle: The job queue is empty, and an idle timer starts. New messages can cancel the timer and return the state to Active.
	•	Deleting: The idle timer expires, a final check is performed, and the cluster is terminated [19:43-20:12].
	•	Architectural Shift to Persistent State
	•	A critical insight from the design process is that [[Cloud Function]]s are stateless, meaning a single function cannot track the cluster's state (e.g., "idle" or "active") over time [23:26-23:42].
	•	They decide to incorporate a persistent data store, specifically [[Firestore]], to maintain the current state of the [[Cluster Manager]] [23:42-24:04].
	•	The [[Cloud Function]], triggered by a Cloud Scheduler job, will now read the state from [[Firestore]], perform an action (e.g., check the queue, create/delete cluster), and then update the state back in the database.
	•	Developer Workflow & Philosophy
	•	The session highlights their highly effective workflow of using a README.md file as a dynamic project memory or "[[brain]]" for the [[AI Tools|AI tool]] [30:55-31:20].
	•	They reflect on the power of their human-AI collaborative system, which allows them to design and build complex, "varsity level" projects that would be much more difficult and time-consuming with traditional methods [28:29-29:06].

Action Items & Decisions
	•	Decision: To build a [[Cluster Manager]] to automate the creation and deletion of the [[GKE Autopilot]] cluster based on job queue activity [10:37-11:19].
	•	Decision: The logic for the [[Cluster Manager]] will be implemented as a [[State Machine]] to handle the various stages of the cluster's lifecycle [18:44-19:04].
	•	Decision: To use [[Firestore]] as a persistent database to store and manage the state of the [[Cluster Manager]] across separate [[Cloud Function]] invocations [23:42-23:52].
	•	Action: Implement the [[Cluster Manager]] using a [[Cloud Function]], Cloud Scheduler, [[Pub/Sub]], and [[Firestore]] as designed in the session [24:05-24:25].
	•	Action: Finalize the implementation of the three-service [[Transcription Service]] pipeline (diarization, transcription, alignment) to run on the managed cluster.

Suggested New Links/Tags
	•	[[Cluster Manager]]
	•	[[Firestore]]
	•	[[Mermaid]]
	•	[[State Machine]]

Linked Concepts
	•	[[AI Agents]]
	•	[[AI Tools]]
	•	[[Cloud Function]]
	•	[[Cloud Run]]
	•	[[Cluster Manager]]
	•	[[Cursor]]
	•	[[Firestore]]
	•	[[GCP]]
	•	[[Gemini]]
	•	[[GKE Autopilot]]
	•	[[Kubernetes]]
	•	[[Mermaid]]
	•	[[Pub/Sub]]
	•	[[State Machine]]
	•	[[Transcription Service]]
	•	[[brain]]

#Tags
	•	#AI
	•	#Architecture
	•	#Automation
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting


zoom24
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-25_1725_ZOOM0024_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:15] SPEAKER_00: Redesign loop or maybe I don't know but I think that Something would have been pretty freaking fast, right? If this is all we did, yeah I
[00:24-00:28] SPEAKER_03: As expected it's just checking every two minutes.
[00:28-00:36] SPEAKER_00: Yep the status Like New update available. Okay, I'll update now
[01:09-01:09] UNKNOWN: I
[01:24-01:54] SPEAKER_00: Assume that you didn't wake up but the weather got crazy last night You know But this is the rain that I says we expected Right. I was just hoping to have the grass already down by the stream. Yeah, I think it's gonna be Saturday, I mean probably for the ground to be ready. It's probably Friday Yeah from that perspective you might as well wait till Saturday
[02:03-02:03] SPEAKER_03: I
[02:03-02:05] UNKNOWN: Was thinking I'll just wait till Saturday
[02:06-02:08] SPEAKER_03: So make it look right we'll see
[02:11-02:14] SPEAKER_00: So you're pushed and ready for me to pull yes
[02:38-02:38] SPEAKER_03: I
[02:38-02:38] UNKNOWN: Yeah,
[02:38-03:20] SPEAKER_03: so we've got a few apparently according to this still a few legacy files locally, okay that They're not deployed so they're not doing anything, but we could probably get rid of them. So the Kate's slash job controllers Is Built for the Job controllers that you know is built for the 24 -second controllers And then the job controller directory is What those are referencing you want to drive or you I'm literally just reading like the last few Lines of the reading
[03:23-03:55] SPEAKER_00: Okay, so these Legacy components right here Yeah, so Yeah, so these three things that's gonna be done next oh are we gonna do that first or yes
[03:56-04:01] SPEAKER_03: Like should we finish the cleanup or do we actually need to replace those controllers or what?
[04:54-05:14] SPEAKER_00: Oh It actually answered our question next says media priority and then testing read me clearly states Our next step is in the intent upload audio verify on demand plus creation and then verify There you go Because there's some additional clean
[05:14-05:24] SPEAKER_03: up Yeah, and I think that it's also doing the thing where it's like assuming this is in production and we need to replace it before Yeah, we kill it Which is fair
[06:24-06:25] UNKNOWN: I
[06:28-06:35] SPEAKER_00: I What's the first stage yeah,
[06:35-06:57] SPEAKER_03: yeah, yeah, yeah, no, no, no, no I Know
[06:57-07:03] SPEAKER_00: I was literally thinking about this morning. I'm super excited And I obviously don't want to
[07:03-07:03] UNKNOWN: put
[07:03-07:08] SPEAKER_00: the car before the horse, but we really do have a chance to 3p Get through the first one.
[07:08-08:19] SPEAKER_03: Yeah, they got to go out there and I mean Indiana's not just gonna lay down No, I feel like they might be broken but like the deck animal was most dangerous when it's backed into a corner Like they're gonna lash out and take some swings but and we absorb those yeah absorb those swings and Quiet the crowd down early get him to start complaining about the refs and doing all that and Fucking the NBA champions And people are already some people that don't actually pay attention the fucking like national sportscasters and whatnot Are already like yeah, you know, it's gonna be hard to keep it together though They got some max contracts coming around the corner and it's like, okay. Okay. Yeah They also got like 34 draft picks in the next seven years exactly And Those like they just won't sign those like I don't know who is gonna end up being long -term and who's not I feel like obviously Shay and dub. Yeah, or their Chet Depends I don't know that he means not a max right now, right? And I'm sure he's gonna want one He could probably get one somewhere.
[08:19-08:28] SPEAKER_00: Yeah, I think he's gonna leave I think hard sign this thing That'll be kind of the core and then the other two players and the rest will be right and then interchangeable
[08:29-09:04] SPEAKER_03: as far as the bench guys, it'll depend on personal decisions largely because like go get your money because We're not gonna pay you because we're gonna draft you right? Like we would prefer to not have to do that and replace you and bring a new person into the culture and so they mix But I mean we can only pay so many people max I think For the like the Isaiah Joe Kason Wallace Kason's the one that scares me because he's got so much potential that he might have to go. He might be James Harden maybe
[09:04-09:07] SPEAKER_00: Maybe if he really starts to pop off like that.
[09:08-09:32] SPEAKER_03: Yeah It's like looking back at the James Harden thing specifically they decided to keep Kendrick Perkins and Serge Ibaka instead of James Harden right and on the face of it that sounds insane But it's not he wasn't his thing. He wasn't the James Harden Yeah, and he wanted to go become that right he wanted to be the guy and unfortunately for him Russell Westbrook And Katie were there right and so that just wasn't available So
[09:32-10:03] SPEAKER_00: maybe he's a bad example, but certainly Isaiah Joe like you're a jump shooter, right? And you can never gonna be a waivers. Yeah, like the team he was on waved him You're never gonna be a central guy like you're not gonna be a ball handler Score so if you're talking your idea for a role player on a championship team Historic team is like a dynasty. Um, what's it? So what it passing like the rules like jump shooter? Yeah, or a Eagle dollar. Yeah with the warriors.
[10:03-10:17] SPEAKER_03: Yeah, just stay here. Yeah. Yeah, he's a good one I think and also you have to be aware that like when we're in like hard -nosed defensive series You're not gonna play right exactly even as like our when you as you become a veteran all
[10:17-10:23] SPEAKER_00: that stuff But you got rings and you're getting good money. Yeah, people love you. Hey stay Yeah,
[10:23-10:28] SPEAKER_03: I think case on and Wiggins will be faced with decisions Yep,
[10:28-10:28] UNKNOWN: I
[10:28-10:42] SPEAKER_03: need to come up to them and I assume I don't know them personally obviously But like Presti and then we're gonna be like, I mean, here's the facts on the ground, right? We would love you to stay here. Of course. We just can't pay you. I'm not playing games If
[10:42-10:53] SPEAKER_00: you want to go get your money and you know be taking on a larger role By the team that's great. You're probably not gonna win. Yeah, maybe everybody knows what the cards are
[10:53-11:08] SPEAKER_03: like, but also like You're all you're never gonna be That like legend here, right? You're gonna be a lit like a local legend But she's the guy and he's gonna be for the next however long he stays like tennis
[11:08-11:20] SPEAKER_00: years, right and Russ And you're not gonna be better than one of the like you're not gonna be a legend more than one of those and What's Collison? Yeah, yeah, so I mean you're not gonna be one of these guys
[11:20-11:27] SPEAKER_03: Yeah, I mean you can be maybe like literally like that's who that's how you I mean Nick Collison wasn't a great NBA player Oh,
[11:27-11:27] UNKNOWN: I
[11:27-11:27] SPEAKER_03: agree.
[11:27-11:27] UNKNOWN: He
[11:27-11:28] SPEAKER_03: just stayed forever.
[11:28-11:28] UNKNOWN: Yeah,
[11:29-11:32] SPEAKER_03: so like you do become that if you like give us some money It's
[11:32-11:32] UNKNOWN: just
[11:32-11:40] SPEAKER_00: money and stay to win all three championships and more Even that like if you stay through three years and give a real good go at it But
[11:40-11:50] SPEAKER_03: every single person on that team's alleged forever as of tomorrow night, hopefully that's true Oklahoma City legend never had any the state I know one professional team that's about
[11:50-12:11] SPEAKER_00: to get his one championship Yeah, and then if you do it multiple times like after that Yeah, if you get two of three or certainly three of three it looks like rust didn't win at all I know If you if we win three championships, oh Don't do whatever you
[12:11-12:18] SPEAKER_03: want it'd be Crazy to get to that point, but yeah, he could leave next year Over the summer. Yeah, like you know,
[12:19-12:19] UNKNOWN: I
[12:19-12:23] SPEAKER_03: did it's real like I want to live in It's like,
[12:23-12:23] UNKNOWN: you
[12:23-12:27] SPEAKER_03: know what real talk has been like we're gonna need all their draft picks for the next
[12:30-12:37] SPEAKER_00: First shade is prime or what you have to give up to get shared exactly all
[12:37-12:38] UNKNOWN: right, I
[12:40-12:47] SPEAKER_00: Don't know that this is right. Um, cuz you want me read. Yeah, that's really what I was holding on I think you need to read this
[12:47-12:47] UNKNOWN: I
[13:01-13:40] SPEAKER_03: That reads correctly to me like those job controllers were from our first iteration of putting together the cluster We do need those like they were doing something. I need to make sure that that Activity is still being done But I do think regardless those are gone and I think we've replaced it with like already inside the cluster manager So I'm gonna ask then I Maybe tell it's a very dark.
[13:41-13:41] UNKNOWN: He
[13:41-13:45] SPEAKER_03: did look at GCP did the CLI checks.
[13:46-13:46] UNKNOWN: Yeah
[14:01-14:10] SPEAKER_03: I Didn't change any actual code yesterday So other than delete and stuff everything that did was either on GCP or in the reading
[14:29-14:30] SPEAKER_02: I
[14:55-15:02] UNKNOWN: I There
[15:02-15:06] SPEAKER_03: you go job deployments on this stuff
[15:12-15:36] SPEAKER_00: Yeah I
[15:36-15:36] UNKNOWN: Do
[15:36-16:00] SPEAKER_03: you have a preference I Would probably do them since I think that that Job testing stuff currently works or works to the point of deployment would never actually run anything through The working system has air quotes around it
[16:12-16:18] SPEAKER_00: Yeah, the readme is like the brain right because you can't Is the words gonna rely on us?
[16:18-16:18] UNKNOWN: Yeah,
[16:18-16:19] SPEAKER_00: remember?
[16:19-16:29] SPEAKER_03: Yeah, you got like You have to have some sort of and we always have like it's been a doc of like to do stuff and it's been sloppy And even that has developed over time But using the AI
[16:29-16:30] SPEAKER_00: to manage
[16:30-17:04] SPEAKER_03: it exactly manage and it's doing everything else like the huge optimization again of Just using Claude inside the IDE versus copy and pasting well that alone like read me is not quite to that level But it optimizes that even more breath even if you were Actively giving it the Google Doc that you updated It's not as good as that. Yeah, and now that you have the rules in place Well, it knows like I need to update that shit anytime I do something right even with that Usually without you having to ask you
[17:06-17:27] SPEAKER_00: Yeah, my instinct it's just like saving back in the old days like hey before you do something Yeah, big Hey, let's get a clean say, you know where we're at what we just talked about Yes, that sounds right before we go off and do a bunch of things and like what this didn't work Let's read it in your stuff.
[17:27-17:52] SPEAKER_03: There may be a plate like we might make a rule for pushing to get home Because like there's what we want to do. I think is come up with a commit naming strategy and basically be like Active working commit active working commit active working end -of -date commit or something like that. Yeah, or like big progress Big like stars all around it like a this is one that you if you want to roll back This is the
[17:52-17:52] SPEAKER_00: start.
[17:52-17:52] UNKNOWN: I
[17:52-18:10] SPEAKER_00: think it's worth thinking through that maybe not right now or in our two hours today Yeah That or even with the AI I'm saying like hey come up with a commit strategy that helps us Have these save points right that I almost want
[18:10-18:20] SPEAKER_03: to oversave right like you're talking it doesn't hurt working in Excel back in The day when it's shit would dial you just click the save button Just just because literally working in VS code I command s all the time
[18:20-18:31] SPEAKER_00: Because you just never know when you know, something's gonna happen back in like the computer's gonna die Something like I want to make sure I'm saved in case something crazy happens because it happens all the
[18:31-18:31] SPEAKER_02: time, right?
[18:34-19:18] SPEAKER_03: Also if you're pushing like 35 commits in two hours your little like graph is gonna look awesome. Yeah Yeah, I wish even like the Again fairly small project here relatively speaking and going like hey look at every file It'll do it but still not go like oh shit this thing's Not right, right,
[19:18-19:18] UNKNOWN: you
[19:18-19:26] SPEAKER_03: know, like you got a point like hey are these things replaced right in the functionality? It's like oh shoot. No, it's not you're right
[19:26-19:33] SPEAKER_00: Right, and so it's not good enough to not have humans, right? I can't maybe one way to where it
[19:33-20:08] SPEAKER_03: is. It will because like I Think we can all agree that progress has slowed down Yeah, it's nice like each new model is a little bit better and it's crazy that they made it better But it's that exactly it is fine. But also the gap or the progress between GPT let's call it 3 .5 the first check and now is not Like the gap between now here and it being able to truly contextualize even this project is way bigger In the gap between 3 .5 and clawed force on it.
[20:08-20:08] SPEAKER_00: Oh, I
[20:08-20:11] SPEAKER_03: agree and it's slowing down, right? So like
[20:11-20:12] SPEAKER_00: it's not gonna reach
[20:12-20:18] SPEAKER_03: that this Iteration we're gonna like basically we're due for another winter, right? This is the
[20:18-20:18] UNKNOWN: winter
[20:18-20:19] SPEAKER_03: usually last 20 is you
[20:19-20:27] SPEAKER_00: right? This is an era of tools that are gonna change everything for sure But I don't know that it's gonna make take everybody's jobs. Yeah, like people are saying
[20:27-20:44] SPEAKER_03: I think it'll like it's this classic what the economists tend to say they work for the billionaires, but sure is well, it'll create new jobs that weren't Possible before like it's gonna yes, it is gonna end a lot of them, but it'll create a lot too,
[20:44-20:44] SPEAKER_00: right?
[20:45-20:45] UNKNOWN: I
[20:45-20:58] SPEAKER_00: won't necessarily feels necessary to do like coding already looks different, right? I haven't been coding forever like some people right but you know Needing to know and memorize that
[20:58-20:59] SPEAKER_04: It
[20:59-21:13] SPEAKER_00: is really you are a manager right of a team of agents or that is doing stuff And you need to be creative enough to think and help it solve together. We're gonna solve problems like hey Is that really ready right? That kind of like
[21:13-21:44] SPEAKER_03: the fact that that's got read on it and It's trying to deploy it right 12 problems like they might most probably a lot of them are because you don't have stuff installed locally Which you don't need but we go click on that before you run that deploy me So I wasn't going to Yeah, so those might all literally be because we're not actually running that code locally and we don't need to but Maybe you might have it check them all
[21:47-21:50] SPEAKER_01: There you go
[21:59-22:00] SPEAKER_00: Good
[22:00-22:01] UNKNOWN: yeah
[22:05-22:27] SPEAKER_00: But it really does remind me of Like being a manager at the data center or even in the Navy yeah of like hey, what are we getting ready to do? Something like no, let's sit down. Let me talk talk through this make sure I understand it Have you guys thought about this or this or this? Yeah, or no we haven't okay go look at that Make sure it's good and then come back.
[22:28-22:54] SPEAKER_03: Yeah, I was thinking Yesterday when I was cleaning up the read me there might be a place for another mark that is like Things we've done so like the journal that yeah Yeah, and like hey don't ever look at that unless I tell you to and that would be like hey What did we do like have we already tried this before like we're driving down another? Go look at that and it's like oh, yeah, we have that wasn't it. Let's find something else. Thank but I think that
[22:55-23:35] SPEAKER_00: the you could have I don't know what the Compute would look like for this, but you need two agents Like one of them that's primary like basically what we're doing One of them that's primary and one of them that's out here looking yeah looking at a different level of like Yeah These are agents and they don't have any agendas like well they get they have the agenda that you give it right, right? it's effectively what I'm trying to think about is from this perspective of Well, what are the humans doing and could an agent do that? Could you add an agent to do what we're doing?
[23:35-23:35] SPEAKER_03: Yeah,
[23:35-23:35] SPEAKER_00: I
[23:35-23:35] UNKNOWN: mean
[23:35-23:36] SPEAKER_00: probably
[23:36-23:51] SPEAKER_03: but then it's like well, what is its context limits? How many levels of distillation is it being exposed to I agree? But also that's also what I'm saying with the other markdown file, it's just another distillation in a different place Yeah, you just reference it
[23:51-23:56] SPEAKER_00: less. But yeah, I mean, I think that's the limit the limitations of the context. So,
[23:56-23:56] UNKNOWN: you
[23:56-24:02] SPEAKER_00: know What's the best way to? Overcome the limitations of context window. It's the best possible system.
[24:02-24:14] SPEAKER_03: Yeah, I feel like even If they go through with this whole like we're building 100 nuclear reactors and all these things Like it still doesn't solve that inherent problem.
[24:14-24:14] UNKNOWN: I
[24:14-24:29] SPEAKER_03: agree. So now you have a More compute you can do the fancier things More but we will very quickly as a society absorb that progress and be like, okay But it still doesn't do all this other stuff that was it's like it's not as yet Yeah, exactly get
[24:29-24:31] SPEAKER_00: to a GI with this thing
[24:31-24:37] SPEAKER_03: It gets caught up trying to solve a problem that isn't the real problem like that's what they're doing with trillions of precious I
[24:37-24:48] SPEAKER_00: agree But they have ulterior motives that they are not necessarily trying to maybe they think they're trying to get it But I don't think they are they know if me and you can sit here and have this discussion,
[24:49-25:01] SPEAKER_03: man I think that but also like Are you too in it to really see and also are they all fucking stupid? Right think everyone maybe
[25:02-25:22] SPEAKER_00: Like high -power intelligence is Not necessarily what you need to solve the toughest problems Like you do right you need really smart people focusing but I think that's like focusing on the details But like actually putting together a solution that you know,
[25:23-25:23] UNKNOWN: hey,
[25:23-25:26] SPEAKER_00: what's the best way to get to a what? The dumbest person in the
[25:26-25:47] SPEAKER_03: world knows the answer to the hardest problems we've had this right ton of times It's like well eat right Pray like and those up to the biggest societal level problems. It's still easy We gotta quit doing all this fuck shit and focus and that's never going to that's not gonna
[25:47-26:27] SPEAKER_00: happen But I'm approaching it more like from me like I lack common sense and I when I approach problems sometimes I'm it's overly complex I'm trying to bring complex solutions to a simple problem and that in and of itself is a problem Well, you really need to categorize your the complexity of a problem and for simple problems apply simple solutions Where that's what I'm like, so typically very like if you're down in the weeds or something you Try to apply why we got this tool that's great and it's great at solving complex problems Well, so we need more of it like trying to do that That may not be the best way to solve this problem, I think maybe they're doing some stuff like that.
[26:27-27:15] SPEAKER_03: Yeah, I don't know I think everybody's just kind of Stupid and people get like at that level those people got there off of a lot of good fortune and politicking and fundraising. Yeah, not real capitalism and all that stuff and I Like you just like you become entrenched in this thing that is the reason you're a billionaire or whatever, right and So you have to push because if it's not all that funding is gonna stop right it is like immediately like, okay Well, we've pretty much maxed this out as fine. Yeah, we don't think this is the right avenue anymore. Okay And now this dude that's going to the White House to sit down with the president is just a VC guy again, right?
[27:15-27:21] SPEAKER_00: We don't think you're actually gonna make trillions of dollars off of this anymore Well, I'm gonna get at these other people who say that they
[27:21-27:23] SPEAKER_03: can make me trillions of
[27:23-27:23] UNKNOWN: dollars
[27:23-27:26] SPEAKER_03: Exactly, we're gonna try to build a new canal in Gaza.
[27:26-27:27] SPEAKER_00: Right,
[27:27-27:27] SPEAKER_03: whatever
[27:33-27:44] SPEAKER_00: Yeah, I think this we're gonna have to address this at some point too that these two jobs use this though the one GPU that we have.
[27:44-27:53] SPEAKER_03: Yeah, I'm hopeful That it can like provision like share them right? Yeah, we
[27:53-28:01] SPEAKER_00: got to discuss that at some point and we may get ready to run into it here when we if we get to a Test today, but I think we're going to
[28:01-28:33] SPEAKER_03: yeah, we're pretty good And then I saw something in here basically like the sizes my instincts that it is wrong about Direction being the heavy lifting right? It's like I think the diarization push was just under a gigabyte and the whisper transcription was like five and a half gigabytes Okay, so The my guess that doesn't necessarily mean that the processing is less just because the models gigantic, right? But probably
[28:38-28:39] SPEAKER_00: But
[28:39-28:40] UNKNOWN: I
[28:40-29:20] SPEAKER_00: Could see like my gut tells me Not maybe I guess I'm just I'm actually just now processing on it like actually thinking about it Yeah, I would imagine diarization is harder than transcription because it has to both transcribe and Like what is the output of diarization it is just a JSON file with Time like timestamps, but I think I don't maybe it's not actually Listening to or converting the word. It's like the term is determining the voice I guess just doing this wave matching that hey, this is this wave. This is this way Yeah, so maybe it's not actually turning it into words, right?
[29:21-29:39] SPEAKER_03: Whereas I think Whisper it is doing what you're saying because it differentiates Like sometimes it'll say it'll do it on like pauses and so it'll have Different blocks of you talking because you paused a couple times, right? But it's breaking them up right and putting timestamps on and transcribing.
[29:40-29:40] UNKNOWN: Yeah
[29:41-29:45] SPEAKER_00: So we're gonna Test
[29:52-29:52] UNKNOWN: The
[29:52-29:57] SPEAKER_03: jobs idle true qt true so no cluster should be
[30:01-30:03] SPEAKER_00: I like it. Yeah,
[30:03-30:03] UNKNOWN: I
[30:07-30:18] SPEAKER_00: Still feel like this is science -fiction. I give you What told us five years ago? Yeah That the AI you could write code like this. Holy
[30:18-30:18] SPEAKER_03: shit.
[30:18-30:18] UNKNOWN: I
[30:18-30:32] SPEAKER_03: can't wait. Yeah but Just like all the other real world AI shit or Sci -fi shit that we have we just get used to it immediately like well, I mean, of course it I mean the iPhone Yeah,
[30:33-30:33] UNKNOWN: the
[30:33-30:38] SPEAKER_03: ultimate thing. Oh, you can look at someone and talk to them Literally from Star Trek
[30:41-30:47] SPEAKER_00: That sucks You can
[30:47-30:47] UNKNOWN: see
[30:47-31:23] SPEAKER_00: the yes, it's over you can do entire groups. Yeah exactly Like I'm gonna be a conference all day So I think we do a well, it's basically did in chat. Yeah pretty much So The question is whether we want to do end -to -end or clean up next my guess is it
[31:24-31:33] SPEAKER_03: Wants to do it in that order because it thinks That the clean it like the stuff we're removing is actively working and it's not And it does have
[31:33-31:55] SPEAKER_00: this step in there. Yeah made it back to the read me. Yeah, okay Sounds good. Do you want to I'm just gonna do chat. I think it's right. Yeah, that makes sense In testing it's not gonna work but I'm hopeful but it's probably
[31:55-32:13] SPEAKER_03: Yeah, I mean I think Again, it's like little silly stuff. It's like how the data is being passed Also the added stuff of Kubernetes, but hopefully that's all ironed out by Autopilot and for the most part the annoying shit doesn't exist for our current architecture
[32:31-32:32] UNKNOWN: Do
[32:32-32:35] SPEAKER_03: you want to ask you about the GPUs? Oh, okay
[32:38-32:39] SPEAKER_00: Oh
[33:35-33:59] UNKNOWN: Oh Oh
[34:28-34:31] SPEAKER_00: Yeah, that's assuming you only have one file
[34:39-35:05] SPEAKER_03: I mean we might have to build assuming we only have one if we're as long as we're limited to one GPU Or we have to decide whether to complete like all diarysations and then all transcriptions or do a full
[35:07-35:45] SPEAKER_00: Yeah, I agree and I wanted to think about that I Don't know what it's doing right now.
[35:45-35:50] SPEAKER_03: Yeah, I want to scroll back to the top whatever you get done and see actually read it but
[36:26-36:26] SPEAKER_00: I
[36:26-36:26] UNKNOWN: Looks
[36:26-36:29] SPEAKER_00: like that stuff does need to happen either way, right?
[36:36-36:38] SPEAKER_01: Not have a GPU conflict
[36:49-36:52] SPEAKER_00: It should be doing this anyways,
[36:52-37:21] SPEAKER_03: but yeah the and we ask it like basically What is gonna happen in my head is Before we even try to run anything Kubernetes is gonna try to like Whatever build these pods or provision or whatever and it's nice gonna be like nope can't do that quota Like the cluster manager whenever it starts
[37:37-38:16] UNKNOWN: You I
[38:16-38:41] SPEAKER_00: Mean it's fine for them to be impending Yeah, just between them pop back and forth as long as it knows how to wait, right? It will just it will only do one at the same time and whatever one is pending and it doesn't matter Whether it does all diarysation first, right and then and then Transcription or you know does two two Three three it doesn't matter.
[38:41-38:59] SPEAKER_03: It makes sense to me that it would finish a full one So you can like get your output and you don't get caught in this like halfway through Done seven diarysation is gonna start and something But they would also you're ready to be in the output. So you just need a process for
[38:59-39:14] SPEAKER_00: retries So basically this queue they maybe we're gonna change the queue It's that the queue needs to do what you're saying like a queue is for a single file and it Goes through the full process first and then then goes and grabs the next thing out of the queue
[39:14-39:16] SPEAKER_03: I mean in theory that's what folks should
[39:16-39:36] SPEAKER_00: do Well, we have three different pubs of use, right? So that's the like so maybe it needs to change it that that's I assume That's what it's either doing or we need to suggest is make one pubs up queue That and it runs through the process and then not passes from hey I'm done with this and start a new queue to do the next thing
[39:50-39:56] UNKNOWN: We Go
[39:56-40:48] SPEAKER_03: look at the code for the queue Oh As I understand that,
[40:48-40:48] UNKNOWN: that
[40:48-40:58] SPEAKER_03: seems to make sense. Active GPU jobs is none. Go look at all the jobs. If any of them have GPU in the metadata,
[40:59-40:59] UNKNOWN: add
[40:59-41:02] SPEAKER_03: one. You can only schedule if it's zero.
[41:03-41:04] UNKNOWN: Right.
[41:05-41:12] SPEAKER_00: I mean, that makes sense to me. I don't know if this is going to work. Right. It
[41:12-41:13] SPEAKER_03: doesn't jump out at me.
[41:13-41:13] UNKNOWN: It's
[41:13-41:13] SPEAKER_03: like,
[41:13-41:13] UNKNOWN: no,
[41:13-41:16] SPEAKER_03: that's dog shit.
[41:18-41:20] SPEAKER_01: It'll be complex.
[41:25-42:15] SPEAKER_00: Yeah, like so I think there's some thought process of just letting Kubernetes handle it. Because when we do get permission to have more than one GPU, well, you don't have to go back and change the code. Just let it go independent. And when it has the resources available, it will just do it. Yeah, as long as that is how it's working. Yeah, I'm not sure. We can obviously ask. Right. Or we can go back and change it to two. Change this sequence to maybe this is better because at some point. What do
[42:15-42:15] UNKNOWN: you
[42:15-42:28] SPEAKER_00: mean? Like so where it's like it's limiting itself to one GPU job at a time. Right. You can go back and change it to two. Yeah, you see what I'm saying? Yeah, because theoretically,
[42:28-42:28] UNKNOWN: I
[42:28-42:31] SPEAKER_00: mean, in Kubernetes, you could process all of these at the same time.
[42:31-42:31] UNKNOWN: Like
[42:31-42:52] SPEAKER_00: it won't because it's coming through a queue. But you could change it so that it's like for every file that uploaded will do four processes of diarization or eight at the same time and use every GPU that you have available. And so if you have four available, it will do four at the time. Yeah. If you change that number to four. Right. Yeah.
[42:53-42:53] UNKNOWN: So
[42:53-43:09] SPEAKER_00: that's what I'm saying. Like at some point, if you and that's probably what you want to do. Like if you actually take this to production, like, well, give me a hundred GPUs. Yeah, somebody's paying for this and I want to process as many streams at a time as I can. Is that worth even
[43:09-43:11] SPEAKER_03: thinking about right now?
[43:20-43:21] SPEAKER_00: Yeah,
[43:21-43:21] UNKNOWN: so
[43:21-43:31] SPEAKER_00: I don't understand scenario. Where is scenario one and two? This doesn't necessarily make sense.
[43:31-43:31] UNKNOWN: I
[43:31-43:31] SPEAKER_00: don't
[43:31-43:59] SPEAKER_03: think it's scenario. I think it was scenario three files uploaded. Oh, got it. Okay. Yeah. Sorry. I don't think it understands what files are in this context. I guess it kind of does. Yeah because you're saying file. You mean like an audio file, right? Whereas it's
[43:59-44:02] SPEAKER_00: talking about the job, right? Then that,
[44:02-44:02] UNKNOWN: but
[44:02-44:26] SPEAKER_00: this is a better way of looking at it. I guess saying diarization A, whisper B and diarization C. Like so C is diarization is already a new diarization is coming through at the same time as A went A whatever. Like it doesn't matter. There's multiple files and multiple points of the system and they're all asking for the same GP. Right.
[44:26-44:27] SPEAKER_03: I would have said whisper job
[44:27-44:48] SPEAKER_00: file A, diarization job file B. Yes. I agree with you. Or this one actually needs to be A. That one needs to be B and this one needs to be C. Whatever. It doesn't matter. But I think it's saying, I think it is thinking of it at the right place. So two conflicts will
[44:48-44:56] SPEAKER_03: create multiple GPU jobs. Can only fulfill one other's weight indefinitely. They wait until it's done, right? Right.
[45:08-45:09] SPEAKER_01: Okay.
[45:17-45:42] SPEAKER_03: Yeah. I get what's the difference between pending and queued in Firestore. And is it, are we doing like basically is pending saying that like Kubernetes is handling it and whenever that shit finishes it'll do this one? And what's different about that other than now we're writing the Firestore instead of it just being
[45:42-45:49] SPEAKER_00: in this queue? I don't know. Like so I would rather it be more natural and allow Kubernetes to just handle it because I think it does. Yeah. Cause
[45:49-46:02] SPEAKER_03: it's saying like result is job stuff waiting inefficient processing. What the fuck does that mean? That sounds like PubSub and Kubernetes working perfectly based on your available
[46:02-46:14] SPEAKER_00: resources. They know that. They know the resources they have. Like I would rather not put a layer on top where we're handling it for Kubernetes. It already knows it doesn't have a GPU available and it's going to wait. I think we need to have
[46:14-46:14] UNKNOWN: to. And it
[46:14-46:19] SPEAKER_00: will intelligently schedule its resources as they are available. Right.
[46:19-46:19] SPEAKER_03: That's
[46:19-46:20] SPEAKER_00: how. What it does.
[46:20-46:29] SPEAKER_03: Our code has this tell it to do that though. Cause when we upload something right now it's going to go do all these jobs only have one GPU broken.
[46:32-46:33] UNKNOWN: Maybe.
[46:48-46:49] SPEAKER_04: I
[46:49-47:10] SPEAKER_03: say like what's the difference like or is the pending status in scenario one without Firestore does that actually make a difference? Does that mean it'll just take as long as it takes to process each one sequentially?
[47:11-47:49] UNKNOWN: Yeah. Okay.
[48:19-48:23] SPEAKER_03: Yeah. Native Kubernetes behavior is killed.
[48:24-48:32] SPEAKER_00: Right. Because if it doesn't have the resources available it's just going to wait. It may never do the job if the resources never come available but they should. Right.
[48:37-48:37] UNKNOWN: I mean I
[48:37-48:50] SPEAKER_00: think that is the purpose of Kubernetes is to be a manager.
[48:51-48:51] SPEAKER_01: Right.
[49:12-49:20] SPEAKER_03: Yeah. Like cluster staying alive with pending jobs is not a problem. Cluster staying alive without pending jobs is a problem.
[49:26-49:29] SPEAKER_02: It's not against the goal. You do not understand.
[49:35-49:46] SPEAKER_00: But yeah it does think that it's unnecessary. Yeah.
[49:46-49:46] UNKNOWN: So
[49:46-49:48] SPEAKER_00: that's the key.
[49:48-49:49] UNKNOWN: Yeah.
[49:50-49:52] SPEAKER_00: When it's idle versus pending.
[49:52-50:12] SPEAKER_03: Yeah I think that should be handled by the like 10 minute wait or something. It shouldn't be idle for even a second at computer speed but if it is and it triggers this process it'll sure as shit be working by the time this thing checks again and shuts everything down.
[50:12-50:12] UNKNOWN: I
[50:12-50:12] SPEAKER_03: agree.
[50:35-50:36] UNKNOWN: So
[50:36-50:43] SPEAKER_03: what questions do you have? Let me read like see the changes in the read me that it made specifically.
[51:07-51:13] SPEAKER_00: Well I mean I think the proof of the pudding is in the like I think we just. Read through this.
[51:18-51:47] SPEAKER_03: So literally like the pending jobs sitting there is consuming something else because I don't think that's I don't think it's true. Maybe some resource it doesn't like. Yeah. It's confused about like I don't mind the cluster being up 24 hours a day. If they're dropping in.
[51:47-51:57] SPEAKER_00: And I think by leaving it with naturally allowing Kubernetes to resolve it as you add resources to the cluster it will usually resolve it knows
[51:57-53:03] SPEAKER_03: they're there. I think we need to explicitly say that maybe even have it noted in the read me like the problem is not long running processing. It is long running idling that's costing money. Yeah.
[53:03-53:03] UNKNOWN: Like
[53:03-53:08] SPEAKER_03: it grabs the next thing that's pending and executes it. And then does that until there's
[53:08-53:09] SPEAKER_04: nothing pending.
[53:36-54:12] UNKNOWN: Yeah. Like
[54:12-54:20] SPEAKER_03: any person one tenth as good at coding as cursor would have logically just assumed that.
[54:20-54:22] SPEAKER_00: Right. Exactly. But it's
[54:22-54:22] UNKNOWN: just
[54:22-54:48] SPEAKER_00: a little bit. It's Mila. Yeah. It's just maybe more than whatever. I'll think through things like just the logic of like its ability to process complex or Maybe some basic logic is limited and that's why it needs humans. It's very good at like hey write this module that does this thing. Right. Do that very fast. But thinking through the design and what are we what are we trying to do. Right. It's not like that's the limitation.
[54:49-54:49] SPEAKER_03: Yeah.
[54:49-54:49] SPEAKER_00: You say
[54:49-55:16] SPEAKER_03: make this module that multiplies two numbers by each other and then squares the result. Done. But then make this module that takes a number and does something with it. But they're not plugged into each other. Like it would write both of those modules and not be like oh you want me to make these work together because you maybe you're doing something with it. Right.
[55:17-55:21] SPEAKER_00: It would do that if you tell it. If you tell it to. Right. But it needs a human to think through that. Exactly.
[55:42-55:47] SPEAKER_03: Again it misunderstands you're not uploading a diarization. Yeah.
[55:48-55:48] UNKNOWN: Definitely
[55:48-55:54] SPEAKER_03: not uploading a whisper job split from a diarization job. No I actually think that it is.
[55:54-56:18] SPEAKER_00: Right. Because like the there's these services that are sitting on the cluster and they are in fact independent of each other from the cluster perspective. Right. Right. That and there's this queue that says hey anytime there is a file or whatever object in the queue for diarization I'm going
[56:18-56:18] UNKNOWN: to
[56:18-56:50] SPEAKER_00: send it to diarization. And it's sending diarization stuff. It's sending transcription stuff. And it's sending you know the last one doesn't matter because it does the CP. But these are building up so as you if they're the same if they were exactly the same pace it probably wouldn't matter at some point. No it would matter because once the first one gets to transcription there's a second diarization and then there's going to be this race of hey they both want to use. Yeah I think they're in order
[56:50-56:51] SPEAKER_03: though.
[56:51-56:51] UNKNOWN: It
[56:51-56:52] SPEAKER_03: said first in first out.
[56:53-56:53] UNKNOWN: So
[56:53-57:11] SPEAKER_03: if the diet an actual upload which is you sending audio happens in theory this is uploading two files is uploading a diarization job and a whisper job. That's the problem with its syntax because then if you upload another file which is actually
[57:11-57:11] UNKNOWN: you know
[57:11-57:29] SPEAKER_03: what's happening right then it would upload a new diarization job and a new whisper job. But they would be in line like one two three four. Right. So it's going to diarize and transcribe and then it's going to diarize and transcribe. Probably. Yeah I agree. That's how it's designed at least according to what it yeah FIFO schedule.
[57:29-57:32] UNKNOWN: Yeah. Okay.
[57:34-57:42] SPEAKER_03: Jobs retry automatically a false fail we need to put a limit on that. That's also called an infinite loop. Right.
[57:42-57:42] UNKNOWN: We
[57:42-57:51] SPEAKER_03: do want to have some amount of retry probably if there's a genuine failure that happens. But I think we're ready to test.
[57:55-57:55] UNKNOWN: I agree.
[57:57-58:13] SPEAKER_00: In chat. Did it do all that stuff. No put it all back. Basically. Okay. Well I think that it was designed properly. I don't know.
[58:13-58:13] UNKNOWN: We'll
[58:13-58:34] SPEAKER_00: see. Hopefully we didn't break a bunch of stuff. I don't think so. Trying to make it better.
[58:36-59:15] SPEAKER_03: I still have a pretty good feel I think for everything that is trying to do. And I think it is correct. So some of that stuff it's just like yep did it and it's good. And that's where we get into some loops of it like in the new chat thinking. It did it right. But ultimately when you start testing the actual code.
[59:35-59:36] SPEAKER_00: Okay.
[59:57-59:58] SPEAKER_04: Okay.
[60:21-60:23] UNKNOWN: No.
[60:47-60:52] SPEAKER_00: I don't know what that means. Oh it returned. That was the.
[60:53-61:01] SPEAKER_03: Yeah. It returned. It always prints the command twice for some reason I don't know. Why.
[61:03-61:05] SPEAKER_00: Just going to test all the functions.
[61:05-61:09] SPEAKER_03: Yeah. Just listed over my guess it is going to
[61:09-61:09] UNKNOWN: run
[61:09-61:11] SPEAKER_03: all three of them at least.
[61:13-61:19] SPEAKER_00: So it makes sense to me. Yeah. Or just check one of them the status function. Fair enough.
[61:23-61:26] SPEAKER_01: Active cluster manager status. No cluster. Perfect.
[61:28-61:34] SPEAKER_00: Okay. Just look to see what's in there. That's it never did that before. I
[61:34-61:34] UNKNOWN: just
[61:34-61:37] SPEAKER_00: go look in this bucket and see what's in
[61:37-61:40] SPEAKER_01: there. Yeah. Should be. This one.
[61:40-61:42] SPEAKER_00: Yeah. Remove that.
[61:48-61:59] SPEAKER_02: So test audio file. Look. We've got one. In local testing. I just give it the path.
[62:24-62:27] SPEAKER_03: I don't know.
[62:49-62:52] SPEAKER_00: I don't have it. You had to send it back to me. Oh
[62:52-62:56] SPEAKER_01: yeah. Sure.
[63:10-63:11] UNKNOWN: Okay.
[63:38-63:49] SPEAKER_03: Yeah. So it's outside of local testing. Or my cursor. But I don't know why it's not there for yours.
[63:50-63:54] SPEAKER_00: We probably. It's probably in the get ignore. Maybe.
[63:57-64:00] SPEAKER_01: Oh yeah. Yes. Very explicitly in the
[64:00-64:00] UNKNOWN: get
[64:00-64:01] SPEAKER_01: ignore. Yeah.
[64:04-64:05] UNKNOWN: Fair enough.
[64:11-64:26] SPEAKER_03: Yeah. So I moved it into local testing. Which deleted it. And then when I moved it back out of local testing it was in the get ignore. So when I pushed it in it deleted it from your device basically. It's an M4A file. What
[64:26-64:27] UNKNOWN: the fuck.
[64:44-64:46] SPEAKER_02: That's weird.
[64:49-64:51] UNKNOWN: It's a.
[64:52-64:55] SPEAKER_03: What I'm actually seeing.
[64:57-65:00] SPEAKER_00: Why don't you do a. That's
[65:00-65:00] UNKNOWN: what
[65:00-65:06] SPEAKER_00: I'm trying to. Yeah. That's working.
[65:16-65:46] UNKNOWN: Yeah. It
[65:46-65:49] SPEAKER_00: won't let me.
[65:49-65:55] SPEAKER_03: Put that in there. Oh yeah. I always just like copy the path. Like. Two figure click.
[66:03-66:08] SPEAKER_02: I don't know why. Subscribers. So if it doesn't like to let you do.
[66:53-67:02] SPEAKER_03: It's just doing that to put a log in there. But it's also trying to curl it. Just making sure that the. That we're ready.
[67:04-67:06] SPEAKER_01: OK. And.
[67:11-67:13] SPEAKER_02: Looks like what we've seen before.
[67:19-67:24] SPEAKER_03: I. Changed the logs to be on top.
[67:24-67:24] UNKNOWN: And
[67:24-67:32] SPEAKER_03: then realized that I had already acclimated to them being. But I'm keeping them on top. I'm going to get used to that.
[67:39-67:45] UNKNOWN: Creating cluster. User
[67:45-67:46] SPEAKER_03: does not have access to service account.
[67:47-67:47] UNKNOWN: Whatever
[67:47-67:48] SPEAKER_03: that's a good error.
[67:48-67:48] UNKNOWN: We
[67:48-67:59] SPEAKER_03: can fix that. What
[67:59-67:59] UNKNOWN: do you want
[67:59-68:06] SPEAKER_03: to do? That's what I would tell it to. I don't know why limit three.
[68:17-68:17] UNKNOWN: And
[68:17-68:19] SPEAKER_00: you said it's like.
[68:20-68:20] UNKNOWN: Is
[68:20-68:24] SPEAKER_00: it preferences up there. Up and to the
[68:24-68:25] SPEAKER_03: left.
[68:25-68:25] UNKNOWN: Got
[68:25-68:38] SPEAKER_03: it. I also did in there. Go just delete that
[68:38-68:41] SPEAKER_02: limit. Why is why is it doing that? OK.
[68:49-69:04] SPEAKER_03: I also made it rap. So there's no shit that's off the screen. I don't know if you want to do that. But I like a lot better. I can actually read everything.
[69:04-69:04] UNKNOWN: Thank
[69:04-69:07] SPEAKER_03: you. Some of them are still useless. But some of
[69:07-69:07] UNKNOWN: them
[69:07-69:12] SPEAKER_03: aren't. Yeah.
[69:13-69:13] UNKNOWN: So
[69:13-69:14] SPEAKER_01: how do you.
[69:16-69:29] SPEAKER_03: It's using something weird going on. You don't have the ability to use that service account. And you need to be a service account user role. There's almost. There's almost no way you don't have a service account user
[69:29-69:31] SPEAKER_00: role. Maybe on a specific service account.
[69:34-69:39] SPEAKER_03: Yeah. So scroll down a little. A little bit more right there.
[69:47-69:49] UNKNOWN: There we go.
[69:58-70:04] SPEAKER_03: To the cluster manager function. So that was the user that didn't have it. OK. I feel fine now.
[70:07-70:07] UNKNOWN: Is
[70:07-70:08] SPEAKER_03: this one? Oh, there's still two.
[70:09-70:11] SPEAKER_00: Yeah. I'm going to make coffee for a second.
[70:11-70:12] UNKNOWN: And then I'll have another one.
[70:42-70:53] SPEAKER_03: OK. It's the Compute Engine service account. So is it using a default service account? So I thought I fixed that yesterday. OK. Never mind. I'm dumb. I didn't read the whole thing.
[70:55-70:55] UNKNOWN: Yeah.
[71:05-71:11] SPEAKER_00: Well, it's already in the process of triggering the cluster.
[71:17-71:18] UNKNOWN: I
[71:18-71:21] SPEAKER_03: think it failed that. Right?
[71:27-71:29] UNKNOWN: Yes, sir.
[71:33-71:34] SPEAKER_00: Do we need to delete the other one
[71:34-72:19] SPEAKER_03: first? The other. File in. You don't have to. And my guess is it is using like literally date down to the second so that it'll be a different date. Also, you can do the little stream button. If you scroll inside the logs at all, it kills the stream. But that right there is stream. How do you make this piece go? I don't know. Show query. And then I think I might just press scroll. OK.
[72:19-72:19] UNKNOWN: Yes,
[72:19-72:50] SPEAKER_03: we got another one. OK. Network's not ready yet. That's good, though. We got some action. And I think you can also do the like scroll hard to the top. Yeah. And refreshes. Super for 30 seconds. Check it.
[73:01-73:03] SPEAKER_00: There you go.
[73:05-73:06] UNKNOWN: All right.
[73:09-73:26] SPEAKER_03: What's going on in there? Event art push. No pending work for idle check.
[73:35-73:36] UNKNOWN: I
[73:36-73:37] SPEAKER_00: think
[73:37-73:42] SPEAKER_03: just basically leave it. Yeah, see what happens 10 minutes from now.
[73:43-73:54] SPEAKER_00: Yeah. It's adding its own logs, which I appreciate.
[73:55-73:55] UNKNOWN: Yeah.
[73:56-74:05] SPEAKER_03: Yeah. And they show up here now. I actually do appreciate the emojis. Yeah. Because they're almost like the arrow flags that just like grab your attention out of all the mess. OK. I'm going to
[74:05-74:08] SPEAKER_00: go make company. I'm excited about this.
[74:08-74:08] UNKNOWN: Me
[74:08-74:09] SPEAKER_00: too.
[74:11-77:21] UNKNOWN: I'm going to do the full battery tests on the full battery today and see what we can look at. Got a lot of water in there. That does. Well, this should be the last though. It's supposed to get hot and sunny for the next step, like three weeks. Yeah. Three months. Yeah. OK. OK. OK. All right. We have some up here. Yeah. Yeah. Very helpful. But also, you need to look anything else that's in there. Yeah. Yeah. Yeah. I know
[77:21-77:24] SPEAKER_00: the store actually helps because it's an insulator
[77:24-77:25] SPEAKER_02: on top whenever it's increased.
[77:33-77:39] SPEAKER_03: But that's also like, those are $400 pineapples. Yeah exactly, I could
[77:39-77:41] SPEAKER_00: go to the store and get some. But it's still, it's not, I mean,
[77:42-77:42] UNKNOWN: And
[77:42-77:43] SPEAKER_00: it's a fresh pineapple too.
[77:43-77:43] UNKNOWN: Yeah,
[77:44-77:45] SPEAKER_00: you know what's been done to it.
[77:47-77:51] SPEAKER_03: I saw a YouTube short the other day,
[77:51-77:51] UNKNOWN: I
[77:51-77:53] SPEAKER_03: was not thinking about this, but a guy said,
[77:54-77:54] UNKNOWN: Basically
[77:54-77:56] SPEAKER_03: no one listening to this,
[77:56-77:56] UNKNOWN: to the
[77:56-78:17] SPEAKER_03: sound of my voice right now has ever had a ripe pineapple before. Because they take two years to ripen. Holy crap! And it's like there's no shot that the industry based shit we got going on ever lets them grow to full ripeness. But like, well then what does a fucking ripe pineapple taste like? Because what I've had is pretty small.
[78:22-78:23] UNKNOWN: Plus
[78:23-78:24] SPEAKER_00: they're still creating.
[78:25-78:25] UNKNOWN: Yeah.
[78:27-78:32] SPEAKER_03: Yeah, it said it'll take 5 to 10 minutes and then wait it to. Yeah, I
[78:32-80:44] UNKNOWN: figured that out. What the hell? Oh god. Okay. Okay. Okay. Okay.
[81:25-81:27] SPEAKER_02: Okay.
[81:50-81:51] SPEAKER_03: So,
[81:53-81:53] UNKNOWN: it
[81:53-82:03] SPEAKER_03: went, it's running, but I also saw logs that said like shutting down. So my guess is there's some like work not being started by me.
[82:14-82:18] UNKNOWN: There we go.
[82:23-82:27] SPEAKER_03: This is like the stuff you don't ever see in your work. Right,
[82:27-82:27] UNKNOWN: exactly. Because
[82:27-82:32] SPEAKER_03: the code's working. Right. Like the system works, we just need to deploy it on some architect. Yeah,
[82:32-82:42] SPEAKER_00: exactly. Figure out how to make everything talk to each other. Yeah, and talking to, kubectl commands are authenticated with SSL.
[82:43-82:50] SPEAKER_03: But these are the types of like, okay, yeah, this doesn't throw the hay on the wrong path flag.
[82:50-82:50] SPEAKER_00: You're right,
[82:50-82:51] SPEAKER_03: I agree.
[82:57-82:58] SPEAKER_00: Because there's, yes.
[83:00-83:02] SPEAKER_01: Yeah. There
[83:02-83:02] UNKNOWN: you
[83:02-83:06] SPEAKER_01: go. So this will take a few minutes.
[83:42-83:54] SPEAKER_03: So in theory, 10 minutes from that little shutdown message, it should shut down. Right. Or like 11, whatever, there's some 30 second waits in there too.
[83:56-84:03] SPEAKER_00: Sure. If the cluster manager is working correctly. What's that canceling? Is
[84:03-84:06] SPEAKER_03: that because of
[84:06-84:06] UNKNOWN: the
[84:06-84:14] SPEAKER_00: exceeded quota? I assume. And that's probably true, like it's going to have...
[84:14-84:20] SPEAKER_03: As long as that's just a warning, that's fine. Like we know we can't. Right. But we're only ever running
[84:20-84:21] SPEAKER_00: one of those.
[84:21-84:21] UNKNOWN: I
[84:21-84:25] SPEAKER_00: assume at some point we can have a second GP. Yeah.
[84:29-84:34] SPEAKER_03: Yeah, they don't not want us to buy more stuff. Right. They just want to make sure we can pay for
[84:34-84:34] UNKNOWN: it.
[84:34-84:36] SPEAKER_03: Sure, actually, yeah, exactly.
[84:39-84:45] SPEAKER_00: Which, get through this $50 bill and hopefully it will get down to, you know, dollars. Yeah, because still
[84:45-84:49] SPEAKER_03: like 35 of it was from that day where Cloud Run was just running for an entire day.
[84:49-84:50] SPEAKER_00: Right.
[84:55-84:59] SPEAKER_02: Okay. Now that's the function deploy.
[85:18-85:21] SPEAKER_00: Yeah, and it gives itself logs, which is cool.
[85:25-85:25] UNKNOWN: Yeah.
[85:35-85:38] SPEAKER_03: This is already actual progress.
[85:39-85:48] SPEAKER_00: Yeah, I didn't expect it to just go through and produce a output. Like, yeah, done. I would have bet every piece of
[85:48-85:50] SPEAKER_03: value I could get my hands on that it wouldn't.
[85:50-85:52] SPEAKER_04: Yeah, for sure.
[86:09-86:13] SPEAKER_00: And this button does stream me. Like it just always keeps it...
[86:13-86:53] SPEAKER_03: Yeah, as long as you don't go in there and move around. Right. Like if you see one and you want to go look at it, it just stops the stream, which makes sense. Because then you would get into this battle of you scrolling in it, getting a new log and jumping to the top. Right. Okay. Oh, that was the... I think so.
[86:56-86:57] SPEAKER_00: It said complete.
[86:59-87:09] SPEAKER_03: Yeah, it's got like five or six different logs that it does that I made cursor look at each one and explain each one to me. Like these are all... Different states.
[87:09-87:09] UNKNOWN: ...the part of
[87:09-87:19] SPEAKER_03: that free thing. Yeah. And it was like, yes, this is all just the class schedule and it's going to do it every two minutes. Okay. And that's free? Yes.
[87:19-87:20] UNKNOWN: Okay.
[87:21-87:39] SPEAKER_00: Are you sure? Oh, well. Well, the cluster's up, so... Yeah, it should be in its like... State.
[87:39-87:40] SPEAKER_03: ...idle
[87:40-87:40] SPEAKER_00: check.
[87:41-87:53] SPEAKER_03: Time. So it uploaded. It's going to wait a minute.
[87:56-87:57] UNKNOWN: Well,
[87:57-88:13] SPEAKER_00: I mean, we're not waiting on the cluster to come up now. It's just, it's up and available. Good call. So we should just roll right through. So we are not. But we do need to check, test the ability for it to go to delete at some point. But this is, I mean,
[88:13-88:13] UNKNOWN: I
[88:13-88:20] SPEAKER_00: think theoretically we're through the testing portion of will the cluster come up and be available. Right. We're technically through that.
[88:20-88:28] SPEAKER_03: Yeah, it's available. Like it was there. You saw it. It's still there. And it's just a matter of being able to get in there and deploy services and see them work.
[88:29-88:43] SPEAKER_00: Right. And so I do still think we need to go through a full scale test of. Clusters deleted. There's nothing. Upload a file, instantiated cluster, go through all the processing, get the files out and the cluster deleted. Yeah, we have full
[88:43-88:52] SPEAKER_03: aligned transcription and no clusters running at all. And no pub subtopics hitting phantom fucking shit that doesn't exist.
[89:20-89:23] SPEAKER_02: It's a jobs idle false.
[89:25-90:09] SPEAKER_03: So it's either working on it or it's detecting Kubernetes activity as maybe it could be working on if it's starting to show. I don't. The authentication stuff. It didn't do that.
[90:25-90:27] SPEAKER_02: So
[90:27-90:46] SPEAKER_03: it added updated the IAM policy. Although. It says adding allow unauthenticated to cluster manager for development.
[90:47-90:47] UNKNOWN: But
[90:47-91:11] SPEAKER_03: then what it actually does is updates it, which is the right thing. Like that's the ultimate goal is what we're going to get to. But that's just conflicting information. So I want to. We'll see if it works. But you see what I'm saying? No. And this one right here is text that said, yeah, adding allow unauthenticated to cluster manager for development.
[91:11-91:11] UNKNOWN: But
[91:11-91:19] SPEAKER_03: then it went to IAM. It bounds the binds run invoker to that thing. So this
[91:19-91:24] SPEAKER_00: is actually what it should do and not allow up the right. And the unauthenticated.
[91:24-91:33] SPEAKER_03: Right. But the purpose for the unauthenticated was to not have to do that. Well, to remove that as one of the possibilities for breaking. Right. But we'll see if
[91:33-91:33] UNKNOWN: it
[91:33-91:33] SPEAKER_03: works.
[91:33-91:42] SPEAKER_00: Yeah, I understand what you're saying. Yes, that is the right way is to give each one of the service accounts the right permissions to run whatever it is unauthenticated. Right.
[91:42-91:43] SPEAKER_04: Yeah.
[92:03-92:03] SPEAKER_00: I
[92:03-92:43] SPEAKER_03: mean, that's good that it didn't try it and fail. That means the code is wrong. Yeah, that's in theory going to fix it right now. Right. But that's amazing. See what it's doing.
[92:43-92:48] SPEAKER_00: Yes, it just changed it. Yeah. To OK, now the current status is this.
[92:49-92:56] SPEAKER_03: Which is fine. Like we can still still we're getting testing data out of this. But that did not fix the application.
[93:03-93:05] SPEAKER_00: Yeah.
[93:05-93:06] SPEAKER_01: There
[93:06-93:09] SPEAKER_00: we go.
[93:21-93:31] SPEAKER_03: Yeah. So it never started idling because it's taking a job.
[93:54-93:55] SPEAKER_00: Yeah.
[93:57-93:59] SPEAKER_03: Yeah.
[94:04-94:05] UNKNOWN: Yeah.
[94:35-94:36] SPEAKER_03: Yeah.
[94:36-94:36] UNKNOWN: I
[94:36-94:38] SPEAKER_03: think by end
[94:38-94:38] UNKNOWN: to
[94:38-94:38] SPEAKER_03: end test,
[94:38-94:38] UNKNOWN: I
[94:38-94:44] SPEAKER_03: mean, make everything work in like along the path. You just get as many
[94:44-94:46] SPEAKER_00: test things done as possible.
[94:47-94:51] SPEAKER_03: It's like, oh, that one's broken. Let's take the next one. That one's broken. Let's test the next one. That one's broken.
[94:52-95:07] SPEAKER_00: Yeah. So yeah. So rather than fixing it yet, that's what I would say. Like the cluster manager is broken. Yeah. So the same. Forget it. We're going to manually deploy and do. OK, that's fine. As long as it that makes sense.
[95:33-95:34] SPEAKER_03: Yeah.
[95:34-95:34] UNKNOWN: You
[95:34-95:35] SPEAKER_03: have to do it manually.
[95:35-95:39] SPEAKER_00: Yeah. And we'll come back to the cluster manager later.
[95:40-95:40] UNKNOWN: Yeah.
[95:42-95:52] SPEAKER_00: I mean, if it's up like so that we also don't know because we can get the cluster manager up, but then the services don't work and we won't know that until we go through a full delete and start up again. Yeah.
[96:06-96:07] UNKNOWN: OK.
[96:42-97:18] SPEAKER_00: Interesting. It's a good info. Yeah. It's learning. And at a rate much faster than I would ever be able to do. Yeah, there
[97:18-97:18] SPEAKER_03: was
[97:18-97:18] SPEAKER_00: another
[97:18-97:21] SPEAKER_03: quota exceeded. Yeah.
[97:21-97:41] UNKNOWN: Yeah. Yeah. There's the.
[97:42-97:45] SPEAKER_02: Stopping the cluster.
[98:03-98:04] SPEAKER_03: Yeah.
[98:04-98:04] UNKNOWN: Yeah,
[98:04-98:17] SPEAKER_03: it's hitting that quota exceeded thing again. My guess is that is our current blocking issue.
[98:23-98:23] UNKNOWN: Yeah.
[98:23-98:35] SPEAKER_00: Yeah, it says that once those jobs were submitted, it triggers scale up and it now is trying to provision a GPU nodes, but it's only going to be able to do one.
[99:16-99:19] SPEAKER_02: Resource not found error.
[99:24-99:24] UNKNOWN: So
[99:24-99:31] SPEAKER_00: this is what I would have expected right here. So these templates, I don't know the difference between a template and a job.
[99:31-99:31] UNKNOWN: I
[99:31-99:35] SPEAKER_00: didn't know you can make templates, but it said it created the mess jobs.
[99:35-99:35] UNKNOWN: But
[99:35-99:58] SPEAKER_00: what that there's these services. GPUs aren't available. Yeah, they can't do these because they're unscheduled. They don't have there's not resources available to allow it to schedule because it needs to get in the it doesn't match the affinity selections. So when it does, when it is available, that job will run. Should we
[99:58-100:11] SPEAKER_03: try to get everything running on CPUs? Maybe I go CPU only because there's no quotas and maybe I mean, we did whisper on CPU only and it's the heavy lifting.
[100:14-100:17] SPEAKER_00: Or just make one of them be GPU.
[100:18-100:18] UNKNOWN: But
[100:18-100:18] SPEAKER_00: it's
[100:18-100:18] UNKNOWN: still
[100:18-100:19] SPEAKER_00: it's going
[100:19-100:19] UNKNOWN: to
[100:19-100:19] SPEAKER_00: have. Yeah,
[100:19-100:25] SPEAKER_03: like it's not able to spend one up right now. Right. It's not like one of those words and one didn't.
[100:25-100:32] SPEAKER_00: I think we get through it, whatever it wants to do for testing, consolidate everything and then redesign.
[100:32-100:37] SPEAKER_03: I think it's in a spin its wheels for the next 20 minutes. You think so? And you're going to end chat protocol.
[100:41-100:42] SPEAKER_00: I'm going to wait for it to do this.
[100:42-100:50] SPEAKER_03: Like the fact that it's saying waiting for them to come up, maybe maybe they are coming up and I'm wrong. But I've seen multiple quota errors since it said that.
[100:50-101:05] SPEAKER_00: Yeah, it says it. OK, that's wrong. Oh, it's not a GPU.
[101:05-101:05] UNKNOWN: You
[101:05-101:07] SPEAKER_00: know, it looks like a CPU, not a GPU.
[101:22-101:34] SPEAKER_03: Alignment job is running. I mean, that would be amazing if that L4 did both of those things in this few minutes. Yeah, it might. I'm going to look at
[101:34-101:34] UNKNOWN: buckets.
[101:48-101:50] SPEAKER_00: Of course, we hit a GPU quota limit.
[101:50-101:51] SPEAKER_02: Yeah.
[102:14-102:36] UNKNOWN: OK. OK.
[102:46-102:50] SPEAKER_00: I was hoping it did this like get through the testing that you want to get through. Yeah.
[103:14-103:15] UNKNOWN: OK.
[103:30-103:31] SPEAKER_00: I want to do all of these
[103:31-103:36] SPEAKER_04: things.
[103:37-103:38] SPEAKER_00: Create a new
[103:38-103:47] SPEAKER_03: file for the test report. That's the new markdown file I was talking about. Nice. We make a directory of those. Like history.
[103:48-103:48] UNKNOWN: Yeah.
[103:48-103:53] SPEAKER_03: We're missing a bunch because I've gotten annoyed with it and deleted it. No, but this is a
[103:53-104:01] SPEAKER_00: new concept, right? Rather than trying to keep it in a big document and it going like spin off like, hey, this is the report of the set of things we did today. Create a new file.
[104:01-104:05] SPEAKER_03: Yeah, the reading needs to be concise and
[104:05-104:16] SPEAKER_00: focused. Yes. This is this is kind of the brain concept that we keep adding. These are all the things we've done. If you want to look back at it, go look at it. I mean, you said we should do the
[104:16-104:19] SPEAKER_03: full process, like build the brain manually.
[104:38-104:39] SPEAKER_01: OK.
[105:00-105:22] SPEAKER_00: It understands what we're trying to do. This is because some of it. Yes, some of it. There's no way we could have gotten through that testing and got everything out of there in 20 minutes that it did. Like now there's a bunch of errors or issues that we're going to go through and redo. Right. And maybe even consider CPU only.
[105:23-105:45] SPEAKER_03: Yeah, I think CPU only gives us a is like taking us taking some complexity off the table. Full on testing. We might find out that it's good enough. That's not the purpose. Like it's see everything work. See that our subscription or pub subs are passing everything around properly, everything inside the clusters working and then
[105:45-105:47] SPEAKER_00: add GPUs. Right.
[106:06-106:08] SPEAKER_03: This cluster is being deleted.
[106:29-106:48] SPEAKER_00: I'm presenting one of our projects to like a steering committee. Yeah. This morning at like eight thirty. OK. But it's it is the project that we're working on to do automated or not. Not only automated but standard pricing. Oh, like
[106:48-106:53] SPEAKER_03: a fancy billing calculator or like an actual useful
[106:53-107:01] SPEAKER_00: actually surprises me that this doesn't exist. I agree. This is like as far as we're as mature as we are.
[107:01-107:01] UNKNOWN: We
[107:01-107:19] SPEAKER_00: don't have these things. And I get it that the leadership seems like we have like because we're all over the place and pricing is like it's like well there's a lot of people trying to price and you're just trying to push us to go. Go. Like well this what comes up like well how do how do I price this like everybody's just kind of like four weeks.
[107:20-107:31] SPEAKER_03: Six. My guess is it's finally started to show in loss of business. Right. Like people are like well if I can't do it then fuck off. Right. Tell me how much it's going to cost.
[107:32-108:02] SPEAKER_00: Yeah. And this process will work. We need a team of people that just works on internal projects like just cleaning everything up making sure like an adding automation to it standardization of all of our. Right. That is like the types of things that I normally do on my teams. And that's why I'm involved in these. But but it's oh do this as a side job and we actually need it right now. Right. And it needs to be really good. How much I get paid for this side job. Nothing. Oh
[108:02-108:02] UNKNOWN: and
[108:02-108:14] SPEAKER_00: oh why are your customers complaining that you're not available. Well because I'm working on this other stuff. Can we can I just do this. No you have to do well. Well yeah you're going to get a 10 percent.
[108:14-108:32] SPEAKER_03: Yeah. I mean it is what it is. Because you go in there and like kill yourself for it. It's not going to the rest of the people aren't. I'm not going to. Yeah I'm not going to do what's going to happen is they're going to give you another one as soon as it's done. That's exactly what's going to happen. And you'll have increased expectations based
[108:32-109:28] SPEAKER_00: on having pulled off this miracle. This is literally just the proof of concept and like literally the people in the group are like man we've been trying to do this forever. And in two weeks you guys just put it together it's like well you're retarded. That's why that's my theory. It's not that hard. I just need to sit down and do it. And I think there is consistent with my thinking before. Like there are very few people in the tech world that are broad. Like there's these managers and project managers and stuff. And there's these engineers who are really good at whatever databases. Right. It's like OK. And there's like these account people like well how do you create a consistent system of scheduling and pricing and do it. Like well you got to know a little bit about the engineering a little bit about the account a little bit about you just got to be able to put all of it together and have a broad picture. And there's
[109:28-109:28] UNKNOWN: like
[109:28-109:30] SPEAKER_00: no there's no people
[109:30-109:30] SPEAKER_04: like
[109:30-109:57] SPEAKER_00: and they find people like me like oh you can do all this is great. You put that together in two weeks. In fact I could have probably done it faster if I didn't have this other stuff. Just make this my job. And the reason I did it so fast this time is because I was on the bench. And it's like well that's all I was doing. And in fact the bulk of the work I did in like two days. Like two working days. And not all day. It was just like it was probably about 10 hours worth of work.
[109:59-110:02] SPEAKER_03: You know what. Give me a 50 percent pay increase.
[110:02-110:02] UNKNOWN: I'll
[110:02-110:05] SPEAKER_03: take care of it. And make a stack of shit that you want done.
[110:06-110:31] SPEAKER_00: And let me run. Right. Basically that's like give me the ball. I think I understand what needs to happen. I really do. Give me some funding. Give me a team. Let's go. I'll get it done. But if you don't want to that's fine. Yeah. I'm going to put my energy here anyways. And this is very helpful for my day to day work.
[110:31-110:34] SPEAKER_03: Yeah. I mean you're gaining knowledge in general.
[110:35-111:04] SPEAKER_00: Cluster is. And it really does help to be able to understand the development work and what development teams are doing. And the infrastructure stuff at the same time. And again very few people on the infrastructure team do. Like they they just don't like they're good at the thing. Like hey I know how to do networking. I
[111:04-111:13] SPEAKER_03: also wonder like those people that you're talking about like how good are they at the thing that they're good at. Not great. That's what I'm saying. Because I
[111:13-111:20] SPEAKER_00: learned networking in about six months. And I think I'm I can talk the talk. Like are any
[111:20-111:27] SPEAKER_03: of them just sitting down and going keyboard keyboard keyboard job done. No. Yeah exactly. They go to the same
[111:27-112:17] SPEAKER_00: like because I asked that I have these networking mentors like hey that my customers asking me can we do these things. And I think it can go this this this like is that possible. Well I don't know. We need to do testing site. I mean I can do that. Go in and build a bunch of like like. That's what I'm saying. Everyone is. And I don't think that. And I'm the point the takeaway shouldn't be or not. Like I'm just smart and they're all dumb. It is like. I don't know like their perspective of how they they're not problem solvers. I think is the end like hey we need a consistent and repeatable process to estimate our work. Right. OK. So they're drones. Yet like retarded. Well I know how to do networking. Well OK. You could. Well what's the. I
[112:17-112:17] UNKNOWN: go.
[112:17-112:37] SPEAKER_00: I try to get engineers like well tell me. Like if we're trying to do estimated on the fly tell me how long you think this is going to take. Given these requirements and what you know about the customer's environment. How long do you think it's going to take. I don't know. We won't know until we get in there and do it. Well haven't you done this for years and years. If you like guess like I
[112:37-112:40] SPEAKER_03: don't know. So OK. You go do it. You're
[112:40-112:40] UNKNOWN: going
[112:40-112:54] SPEAKER_03: to take longer than I would to do it. Even though you're the fucking expert. And here we are. Thank goodness we have this team with three million dollars of salary. And yes very little figure it out. Mental processing.
[112:55-114:22] SPEAKER_00: We did delete. Let's do this. This is about time. Yeah. I actually need to do a little prep for that presentation. We did a run through yesterday. But what I want to do is preach like do a scenario of hey hey let's assume we're doing a foundation engagement with. Some migration. And it's basically set up so you do some. It's an all cart menu. Like hey here's all the services we offered broken down into useful chunks. Check which ones you want to deliver. And it should. It's going to estimate the time and cost for each one. And so I'm going to have them rather than on the fly checking them. I'm going to have to precheck and have a thought. These are checked because typically we would do this. This is the system that we're building with this specific example. Yeah. And the whole I'm presenting one half of it and the overall discussion like there's another guy who's going to he's a data guy who's going to do the data tab. Fair enough. And the whole thing the whole meeting is 30 minutes hit. And typically with leadership they come in like five minutes late. And with the presentation is supposed to be 15 minutes with you know five 10 minutes of questions. So I'm going to be rushed for time. So I'm trying to be succinct because I generally worry right because there's a lot of detail. Right. What we're doing is talking
[114:22-114:27] SPEAKER_03: to people they don't know what the fuck they're talking about but have managed to fail upward enough to be on top of that.
[114:29-114:46] SPEAKER_00: I'm trying to distill it down to hey here's what we're trying to do. It will work. You can automate this whole thing but this is a proof of concept. Does this make sense. Does this work. And if it does give me enough time I can automate I can add a I can do all sorts of things to this.
[114:46-114:46] UNKNOWN: But
[114:46-114:53] SPEAKER_00: not in my spirit. Right. Or expect it to take six months. Yeah. One of those I need
[114:53-115:02] SPEAKER_03: 200 hours to do this. Would you like me to do that at two hours a week or 40 50 right. 50 hours
[115:02-115:24] SPEAKER_00: a week. I have it done by the end of next week. Or if you like give me resources like give me because this is all cloud stuff in the big scheme of things. Give me a team of our engineers. And we can like we not only can help customers we can build ourselves. Let us just put together give me two weeks with a team and we'll produce it.
[115:30-115:35] SPEAKER_03: That's fine. Yeah. That is why our world is broken.
[115:42-115:55] SPEAKER_00: Yes. I think this is a win as well. Like it really is kind of the concept of do something produce a file. Right. Of what you did to add to the brand.
[115:55-115:56] SPEAKER_03: Yep. Yeah.
[115:56-115:56] UNKNOWN: We
[115:56-116:11] SPEAKER_03: need to ultimately have a directory with however many work sessions we've had full of reports. Right. Like if I do any more work on this project today I'll have it generate another end of work report or whatever. Right.
[116:12-116:15] SPEAKER_00: I don't know why it's choking on this. Yeah.
[116:18-117:05] SPEAKER_03: I would say like OK. Basically whenever it gets caught up especially on something like that like updating the README. Right. I will interrupt it with anything saying like hey all good. Yeah. Sometimes it gets in those loops of like yeah I'll change that and it does but then it's like oh looks like it didn't change. Let me try again. And then it's like OK. But normally it's
[117:05-117:06] SPEAKER_00: even showing that it was just
[117:06-117:07] SPEAKER_03: spinning.
[117:07-117:07] UNKNOWN: Yeah
[117:07-117:08] SPEAKER_03: that's
[117:08-117:08] UNKNOWN: true.
[117:10-117:29] SPEAKER_03: In fact it's still working. That's only its first. So our logs should be getting down to just the periodic two minute check.
[117:35-117:36] SPEAKER_01: I think
[117:36-117:49] SPEAKER_00: that's where it is. It's not in the right status. What's it in? It just says monitoring job completion. I
[117:49-118:01] SPEAKER_03: think that is. OK. I think like it has always been that. OK. But we may have it
[118:01-118:01] UNKNOWN: check.
[118:10-118:26] SPEAKER_03: That needs verification problems there on purpose because I think it's also not exactly right. Like if it takes 20 to 30 minutes to process an eight minute file that's not good. Right. I agree. That's way too slow. Yeah. And I don't think it's going to be that. I think we've got some kind of testing that took that long.
[118:27-118:27] UNKNOWN: But yeah.
[118:33-118:35] SPEAKER_03: Yeah so it's doing the thing a little bit.
[118:58-118:59] UNKNOWN: Yeah.
[119:39-119:42] SPEAKER_00: Should be a lot of other things too right.
[119:43-119:53] SPEAKER_03: At least no. But go to the commit for the. Yeah. There's a few others.
[119:54-119:59] SPEAKER_02: It needs to just do. Oh there it is.
[120:04-120:08] SPEAKER_03: That almost certainly is a better way of doing it. Probably.
[120:08-120:08] UNKNOWN: It's just
[120:08-120:14] SPEAKER_03: all. It's like an extra little bit of get ignore. Yeah.
[120:52-120:53] UNKNOWN: I.
[120:56-120:57] SPEAKER_00: Stop.

==================================================
Generated on: 2025-07-25 17:46:46
Total words: 11185
Total speakers: 6
==================================================




Summary:
creation_date: 2025-07-25 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-25_1725_ZOOM0024_transcript.txt participants: SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04
Executive Summary
This working session focuses on initiating the first end-to-end test of the on-demand [[GKE Autopilot]] cluster, which is managed by their newly developed [[Cluster Manager]] [04:54-05:14]. Before starting the test, the group discusses cleaning up legacy components and their development philosophy, emphasizing the use of the project's README file as a centralized "[[brain]]" to maintain context for their [[AI Tools|AI tool]], [[Cursor]] [16:12-17:04]. A significant portion of the conversation is a detailed analysis of the [[OKC Thunder]]'s potential championship run [06:35-08:19]. The primary technical objective is to upload an audio file, verify that the [[Cluster Manager]] correctly creates the [[GKE]] cluster, processes the file through the full [[Transcription Service]] pipeline, and then successfully destroys the cluster upon completion [88:29-88:43].

Key Topics Discussed
	•	Project Strategy and Cleanup:
	•	The session begins by reviewing the README.md to determine the next steps, deciding to prioritize the end-to-end test of the new system over cleaning up legacy job_controller files [03:23-05:24].
	•	They reinforce their development methodology of using the README as an active [[Project Plan]] and a memory aid for the [[AI Agents|agent]], which has proven highly effective [16:12-17:04].
	•	The group discusses implementing a more structured commit message strategy to create clear "save points" in their project history [17:27-17:52].
	•	End-to-End System Test:
	•	The main goal is to test the full, on-demand workflow:
	•	Upload a sample audio file to Cloud Storage [61:48-62:52].
	•	Verify the [[Cluster Manager]] [[Cloud Function]] detects the file and initiates the creation of the [[GKE Autopilot]] cluster [72:52-73:26].
	•	Confirm that the [[Diarization Service]], [[Transcription Service]], and alignment jobs are scheduled and run on the new cluster [88:29-88:43].
	•	After processing is complete, verify that the [[Cluster Manager]] detects the idle state and successfully deletes the cluster to minimize costs [88:29-88:43].
	•	[[GPU]] Resource Management:
	•	They identify a potential bottleneck with their single available [[GPU]] quota in [[GCP]] [27:33-27:44].
	•	They plan to rely on [[Kubernetes]]' native scheduling to handle the queue of pending [[GPU]] jobs, allowing one job to run while others wait for the resource to become available [38:16-39:14].
	•	[[OKC Thunder]] Finals Discussion:
	•	A lengthy discussion on the [[OKC Thunder]]'s chances in the NBA finals against Indiana [06:35-08:19].
	•	They analyze the team's depth, the long-term prospects of keeping the core players together, and the potential for a dynasty [08:19-09:32].

Action Items & Decisions
	•	Decision: Prioritize conducting an end-to-end test of the on-demand cluster creation and job processing pipeline over cleaning up legacy files [04:54-05:14].
	•	Decision: To manage the single [[GPU]] resource, they will let [[Kubernetes]]' native scheduler handle the pending jobs sequentially rather than implementing custom queuing logic [45:42-46:14].
	•	Action: Upload a sample audio file to the input bucket to trigger the full end-to-end test of the [[Cluster Manager]] and transcription pipeline [61:48-62:52].
	•	Action: Manually fix an authentication issue on the [[Cluster Manager]] [[Cloud Function]] to ensure it has the correct permissions to act on the [[Service Account]] [69:34-70:04].

Suggested New Links/Tags
None

Linked Concepts
	•	[[AI Agents]]
	•	[[AI Tools]]
	•	[[brain]]
	•	[[Cloud Function]]
	•	[[Cluster Manager]]
	•	[[Cursor]]
	•	[[Diarization Service]]
	•	[[GCP]]
	•	[[GKE]]
	•	[[GKE Autopilot]]
	•	[[GPU]]
	•	[[Kubernetes]]
	•	[[OKC Thunder]]
	•	[[Project Plan]]
	•	[[Service Account]]
	•	[[Transcription Service]]

#Tags
	•	#AI
	•	#Automation
	•	#Deployment
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom25
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-25_1747_ZOOM0025_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:03-00:16] SPEAKER_03: So at any moment we can go change it out. What I really think we need to do is remember and at the end of the day or whatever like change them every day. Maybe change them every day or every other day.
[00:16-00:16] UNKNOWN: Fill
[00:16-00:16] SPEAKER_03: that into
[00:16-00:53] SPEAKER_02: the workflow of that's part of breaking everything down. Right exactly. So I pushed up there. It was I basically said like I think we have a fundamental misunderstanding of what's happening here and because based on the readme that you keep writing you seem to think these things have actually been tested when literally I said zero. We've seen some of the services work locally. None of them on GCP and alignment was in here as like this is done implemented works great and I'm pretty sure it's never even run. Yeah we've never seen it run.
[00:53-01:08] SPEAKER_03: I have not. Yeah. Like as you built it. We built images and pushed them but that means nothing as far as functionality. But it's never actually been tested with a fully diorized file and a fully transcripted file. Right. And I don't
[01:08-01:23] SPEAKER_02: even think it's been kicked off. We have potential architecture issues to where things aren't even being passed through. I agree completely. We have seen diorization run on GCP as the first thing and output. We have seen transcription
[01:23-01:23] SPEAKER_00: run.
[01:24-01:41] SPEAKER_02: Yeah that's true. Individually not with diorization because when we did that alignment was like part of the transcript whatever. I agree. I agree. But now it should be better. There's a lot of like hey we've done a lot of work but there's a lot left untested.
[01:47-01:47] UNKNOWN: Huh. Is
[01:47-01:52] SPEAKER_03: that. I don't
[01:52-01:52] UNKNOWN: know. Is
[01:52-01:53] SPEAKER_03: that stuff
[01:53-01:53] SPEAKER_02: to commit.
[01:54-01:57] SPEAKER_03: Yeah it's like the DS .DS store. Oh
[01:57-01:57] SPEAKER_02: yeah those show
[01:57-02:03] SPEAKER_03: up sometimes. They should be in the. Get ignore. Get ignore.
[02:03-02:04] UNKNOWN: Yeah.
[02:05-02:06] SPEAKER_03: You should be able to pull.
[02:15-02:30] SPEAKER_02: So now we have the daily MD reports. Yeah. And it's tagging it with basically the date and time and it just looks at the time.
[02:30-02:30] UNKNOWN: It
[02:30-02:44] SPEAKER_02: doesn't run like a function to do timestamp. But then I said like some kind of some words that indicate what happens. So basically I'm building it for. History. The AI to look through it to be able
[02:44-02:44] UNKNOWN: to
[02:44-02:49] SPEAKER_02: look through it. That's a clunky looking name. Right. But that knows exactly what it's doing. It
[02:49-02:51] SPEAKER_03: doesn't. It's not for humans. Exactly.
[02:51-03:09] SPEAKER_02: So in the in the rule I said hey go look at one of them is look at the latest version or the latest file in there the most recent one. And so it has like down to the seconds what time they were made because obviously we're going to make several a day at this at our current workflow.
[03:11-03:14] SPEAKER_03: Can I see your roots or you actually sent them.
[03:14-03:25] SPEAKER_02: Yeah I think they're currently exactly what I. I've got five
[03:25-03:25] SPEAKER_03: now.
[03:25-03:25] UNKNOWN: I
[03:25-03:40] SPEAKER_03: deleted a couple. Guys. I have OK. I have five but. But you deleted a couple of them because I would have seven at the end of this no six.
[03:42-03:42] UNKNOWN: So
[03:42-05:01] SPEAKER_02: this is a new rule. Oh yeah he was doing that yesterday too which is why I started copying paste like save it quick. It's like it's going and getting them. So it's updating. Yeah. Delete what you do and then the new entire protocol. Yes. You begin chat basically just references. Oh. I don't know what I did. I guess it makes sense that you'd be able to open. It.
[05:02-05:05] SPEAKER_03: Hit me and see.
[05:24-05:25] UNKNOWN: And
[05:25-05:27] SPEAKER_03: then what's your delete.
[05:27-05:28] SPEAKER_02: Oh
[05:28-05:28] UNKNOWN: I
[05:28-05:31] SPEAKER_02: remember it was something about checking logs on filter.
[05:32-05:35] SPEAKER_03: When debugging an issue. No I
[05:35-05:35] UNKNOWN: still
[05:35-05:38] SPEAKER_03: have that one. I have a we're working in Google Cloud.
[05:40-05:46] SPEAKER_02: Yeah I don't have that. I have one building images built for the correct platform. I have that in a
[05:46-05:47] SPEAKER_03: project.
[05:49-05:50] UNKNOWN: I
[05:50-05:57] SPEAKER_03: don't even know where that is. I look at it. I looked at it at some point. Oh it is that. There
[05:57-06:31] SPEAKER_02: you go. And I've got in chat protocol that linked up on or synced up on. I have no assumptions about the code base are acceptable. And that's the thing to use in the begin chat protocol. I think it's literally a file like you have a cursor rules. Or a cursor folder over there.
[06:49-06:51] SPEAKER_03: Oh because it's the file.
[06:51-06:57] SPEAKER_02: Yeah. And it's being synced. And the dot cursor is not immediately going to be.
[07:05-07:10] SPEAKER_03: Don't put dot ds was already is synced now. Yes. It's
[07:10-07:11] UNKNOWN: fine.
[07:13-07:14] SPEAKER_02: I think it's fine.
[07:24-07:34] UNKNOWN: It's. Good.
[07:41-07:42] SPEAKER_02: Yesterday. Yesterday.
[08:12-08:18] SPEAKER_03: Did that come from you or is that from its assessment. It's truly an honest assessment.
[08:18-08:23] SPEAKER_02: I mean I don't know if it actually wrote that in here.
[08:23-08:23] UNKNOWN: But
[08:23-08:28] SPEAKER_02: I don't think I've said honest assessment before.
[08:30-08:31] UNKNOWN: So
[08:31-08:34] SPEAKER_02: it may have picked up a tone. Yeah. From me of like hey.
[08:35-08:35] UNKNOWN: Critical
[08:35-08:36] SPEAKER_02: reality check.
[08:37-08:57] SPEAKER_03: Processing is untested. So I mean I can go do that right now.
[09:00-09:04] SPEAKER_02: I think the answer is step one of option one.
[09:05-09:05] UNKNOWN: And
[09:05-09:28] SPEAKER_02: then option two. Submit the quota increase. But step two is wait for one to three. So. We're looking for the global GPU quota. Maybe that's why it rejected the. I
[09:28-09:28] UNKNOWN: don't know.
[09:28-09:31] SPEAKER_02: Specific L4 one. Because we had none for.
[09:43-09:44] UNKNOWN: GPUs.
[09:47-09:52] SPEAKER_03: What. GPU in there. Because of the P .U.
[09:52-10:01] SPEAKER_02: I don't know. What did it give an actual search parameter. Or can it do it.
[10:05-10:12] SPEAKER_03: It did. It might be able to do it.
[10:14-10:14] UNKNOWN: I
[10:14-10:22] SPEAKER_03: don't know how else to do this. Maybe. I guess name. Yeah.
[10:31-10:36] SPEAKER_02: Maybe. Look at the type. like the next what is going on there like properties
[10:48-10:49] SPEAKER_03: 23
[10:49-10:50] SPEAKER_02: ,606
[10:50-11:30] SPEAKER_03: right i don't know how i would find that because you know there's a lot of them but so you want to just go ahead and commit to pivoting to cpu only
[11:30-11:39] SPEAKER_02: or try to do this first i mean i think we should submit the request but there's no like the step two of that process is wait three days
[11:39-11:40] SPEAKER_03: no i agree no
[11:40-11:43] SPEAKER_02: no question so i think our other option is the cpu option
[11:44-11:45] UNKNOWN: if
[11:45-11:48] SPEAKER_02: our global gpu allowance is zero
[11:49-11:50] SPEAKER_03: exactly
[13:00-13:23] UNKNOWN: more Inst痛?
[13:31-13:31] SPEAKER_01: I found
[13:31-13:46] SPEAKER_03: that quota. It did too. Oh no, nothing came up. What is the name of it? How did you find it? So I
[13:46-13:51] SPEAKER_02: think it's case sensitive, which is retarded, but capital GP and it'll probably get recommended.
[13:58-13:59] UNKNOWN: Yeah,
[14:00-14:01] SPEAKER_02: I have some sort of filter on or something.
[14:02-14:02] UNKNOWN: So
[14:02-14:08] SPEAKER_02: yeah, delete that and actually click on filter. This is what I
[14:08-14:08] UNKNOWN: did.
[14:08-14:11] SPEAKER_02: Scroll to the very bottom of that list. What is it named?
[14:22-14:22] SPEAKER_01: Adjustable,
[14:22-14:23] UNKNOWN: yes.
[14:23-14:25] SPEAKER_02: Or a million.
[14:28-14:35] SPEAKER_03: Yeah, you can just change it. So two? Two. I mean, technically I want three,
[14:36-14:36] UNKNOWN: but
[14:36-14:37] SPEAKER_03: I'll go with
[14:37-14:37] UNKNOWN: two.
[14:37-14:40] SPEAKER_03: Plus the three? One, three, certainly. Yeah,
[14:40-14:40] UNKNOWN: I
[14:40-14:40] SPEAKER_03: guess it doesn't.
[14:42-15:50] SPEAKER_02: That's the shipping a letter on a freight ship. It's true. Two to five business. Is
[15:50-15:51] SPEAKER_04: that it?
[15:51-15:51] UNKNOWN: I
[15:51-16:01] SPEAKER_04: got it. I'm going to close that. I don't even know how to
[16:01-16:02] UNKNOWN: do that.
[16:02-16:03] SPEAKER_04: I actually
[16:03-16:10] SPEAKER_02: really like Chrome. Yeah, it's good. It's just Apple's got all the Apple stuff. Yeah, exactly.
[16:10-16:10] UNKNOWN: Or
[16:10-16:16] SPEAKER_02: like Safari has all the Apple stuff. I have gone back and forth.
[16:21-16:25] SPEAKER_03: Unfortunately, we're unable to grant you additional for at this time.
[16:27-16:39] SPEAKER_02: Well, and GPUs aren't even like almost on the table. Right. I mean, it says you can try regional, but I don't know.
[16:46-16:46] UNKNOWN: You
[16:46-16:46] SPEAKER_02: can
[16:46-17:01] SPEAKER_03: reach out to your sales rep. I'm reaching out to a regional sales rep. I'm talking to an FSF. No. I hate that. I don't hate that. That's the wrong language. But no, I'm definitely not reaching out to a regional FSF.
[17:11-17:16] SPEAKER_02: How do you get proven usage patterns for GPU resources if your quota is zero?
[17:53-17:54] SPEAKER_03: Yeah.
[17:54-17:54] UNKNOWN: So
[17:54-18:05] SPEAKER_03: yeah, just some building history that's not zero. It's just been zero for a long time. Yeah. And pay this $50 bill and just run it. Well, you have whatever the fuck you want.
[18:07-18:08] UNKNOWN: Probably
[18:08-18:14] SPEAKER_02: just see that card work once. I don't understand what it's doing. Let's see. Google Cloud sales,
[18:15-18:15] UNKNOWN: contact
[18:15-18:24] SPEAKER_02: options, and I'm going to print it in the terminal. Right. Why is it doing that? Does it ever actually run something?
[18:27-18:44] SPEAKER_03: Like is it putting it in notes or something? Like it's been doing this lately. Like I will hit run. Hold on. It's all echoes? Yeah. Like why? Why is it doing that? Like, and it just, okay, puts it in its own.
[18:50-18:58] SPEAKER_02: I have no
[18:58-19:01] SPEAKER_03: idea why that's doing that.
[19:22-19:26] SPEAKER_02: It's designed to provide someone with options for contacting.
[19:26-19:26] UNKNOWN: I
[19:26-19:36] SPEAKER_03: get that, but it just, yes, to display, but it doesn't even display it because it just truncates that because.
[19:36-19:40] SPEAKER_02: Yeah. Is it picking up something weird from the rules? It's like,
[19:40-19:40] UNKNOWN: I
[19:40-19:44] SPEAKER_03: don't know.
[19:44-19:45] SPEAKER_02: That's
[19:45-19:46] SPEAKER_03: interesting.
[19:48-20:00] SPEAKER_02: CPU only it is. Yeah, for now. It'll be cheaper. And it'll let us get everything actually working. Like the PubSub topics, all of the stuff that's broken right now, from my perspective, has nothing to do with GPUs.
[20:00-20:01] SPEAKER_03: Oh, you think so?
[20:01-20:02] SPEAKER_02: Yeah. Like I know
[20:02-20:06] SPEAKER_03: the code works without GPUs. No, I agree with you.
[20:06-20:06] UNKNOWN: I
[20:06-20:23] SPEAKER_03: think the things that are, the reason why everything's not running and coming up is because it's trying to provision with CPUs. Right. And therefore the cluster can't build and that's what I think. But even pre -cluster, the whole workflow was not complete. Oh, I agree. Yeah, we had two sets of problems.
[20:23-20:23] UNKNOWN: I
[20:23-20:32] SPEAKER_03: agree. Yeah, this is a good test path anyway. Just get everything working with CPU only.
[20:32-20:38] SPEAKER_02: Yeah, because that's a matter of adding a couple of properties in the right places to go from CPU to GPU.
[20:38-20:39] SPEAKER_03: It
[20:39-20:39] UNKNOWN: is
[20:39-20:45] SPEAKER_03: actually, it wants a whole new deploy, like a deploy CPU only testing script.
[20:46-20:46] UNKNOWN: I
[20:46-21:04] SPEAKER_03: don't know what it's getting ready to do. So it does have a CPU only diorization YAML. That makes sense to me. Yeah, so there it is,
[21:04-21:04] UNKNOWN: right?
[21:04-21:10] SPEAKER_03: Like it printed itself like there's some, maybe it likes to have that in its.
[21:10-21:10] SPEAKER_02: Fair
[21:10-21:12] SPEAKER_03: enough. So that it can use it
[21:12-21:22] SPEAKER_02: for notes. I guess, because that's tech. Yeah, I think it stays in the same terminal. Right. But that's weird. Like why can you reference that better than you can reference the conversation?
[21:22-21:22] UNKNOWN: I
[21:22-21:23] SPEAKER_02: don't know.
[21:28-21:32] SPEAKER_03: Employees diorization CPU, public alignment service was already.
[21:33-21:33] SPEAKER_00: Yeah.
[21:42-21:43] SPEAKER_02: I mean we need.
[21:43-21:46] SPEAKER_03: What about transcription with CPU?
[21:46-21:46] SPEAKER_01: Yeah,
[21:46-22:30] SPEAKER_02: that's what I was going to say. So also give us some metrics on like how much does the GPU actually
[22:30-22:35] SPEAKER_03: bias? Right. I agree. It may not be that much. I guess it is. But it.
[22:39-22:41] UNKNOWN: Like, do
[22:41-22:45] SPEAKER_02: we have a GPU optimized job? I believe so.
[22:45-22:45] UNKNOWN: But
[22:45-22:57] SPEAKER_02: how are they so true? Using that model. If you wanted to read me literally right there,
[22:58-22:58] UNKNOWN: it
[22:58-23:10] SPEAKER_02: is on line 52. It's slow.
[23:10-23:10] UNKNOWN: It
[23:10-23:47] SPEAKER_02: is. My guess is you've used all your this month's request because that happens pretty quick when you're actually working. Also, like a lot of this is only one request. Right. Because when it works and runs terminal commands, I think those are infinity. That makes sense. But also like when a shit ton of people are using it, it doesn't matter how many requests you have. Like everybody's slow. It's like when there's a lot of traffic on the turnpike. It's like everybody's a paintbrush or a road. Right. It's nothing you can do about
[23:47-23:48] SPEAKER_00: it.
[23:52-23:56] SPEAKER_03: It's probably still faster than going on the small streets.
[23:58-23:58] UNKNOWN: So
[23:58-23:59] SPEAKER_03: if you could like,
[23:59-23:59] UNKNOWN: you don't
[23:59-24:01] SPEAKER_03: have to use this. You can
[24:01-24:12] SPEAKER_02: just do it yourself. Yeah, on a typical day, this wouldn't be crowded. But it's game six of the finals tonight and everybody's coming to this one place on both roads.
[24:15-24:26] SPEAKER_03: Azure tools? Oh, it's from Microsoft. MS that Azure tools. But the Docker extension is for VSCO. Fair enough. I guess.
[24:27-24:44] SPEAKER_02: Looks legit. 1 .7 million. Yeah. How many stars is that? Sorry. It's making a new Docker file.
[24:58-24:59] SPEAKER_03: It's cool.
[25:01-25:01] UNKNOWN: You
[25:01-25:03] SPEAKER_03: see that?
[25:05-25:06] SPEAKER_01: Yeah.
[25:06-25:14] SPEAKER_03: Yeah. Yeah. It's doing this echo thing to put it. I don't know what it's doing. Keeping track of
[25:14-25:14] UNKNOWN: it.
[25:14-25:16] SPEAKER_03: So I guess.
[25:20-26:19] SPEAKER_02: It could be a thing that like, Claude does because Anthropic has determined that that's a use because they're one of the big agent builders too. And if it's 10 to 20 times slower, well, we don't have a GPU. So it's not. It's not. It's in fact, I'm saying like, it doesn't matter. It's like, man, a Ferrari would be way better for this job. It's like, well, you've got a Honda. So get out there and drive your Honda.
[26:19-26:19] UNKNOWN: Do you want
[26:19-26:37] SPEAKER_02: to go or not? Or we wait till the end of the billing cycle and hopefully that's all we need to get those provisions. Ask once every billing cycle. Right. But then we go solve the bugs of the workflow at that point. Like.
[26:55-26:57] SPEAKER_03: 30 to 60 minutes.
[26:57-27:19] SPEAKER_02: Yes, I don't think it's right anyway, because it's claiming the GPU would do the whisper transcription in one to two minutes. In that table. Right. And that. I mean, if that's true, then great news. Like diarization is going to take 30 seconds. That's what I think it
[27:19-27:19] UNKNOWN: should
[27:19-27:32] SPEAKER_02: like. That should be like kind of our targets because this is for two to three minute. Clip. Right. And so if those are true, then great. And those CPU times aren't that bad. Right.
[27:32-27:32] UNKNOWN: In
[27:32-27:34] SPEAKER_02: that case. I agree.
[27:35-27:39] SPEAKER_03: We can't use this service to do it. Like it's going to be.
[27:39-27:39] SPEAKER_02: I mean, we
[27:39-27:47] SPEAKER_03: could because it's just going to be CPU is running for a day. Oh, it's going to be longer than that. I mean, we have that's probably.
[27:47-27:57] SPEAKER_02: Several hours backed up. But you talk about like your regular day to day. We got like two hours. Oh, I. And those two hours will take like seven.
[27:58-28:06] SPEAKER_03: Right. Exactly. So the 20 hours are going to take four days. Maybe. So.
[28:07-28:07] UNKNOWN: Yeah.
[28:08-28:09] SPEAKER_03: What if we run
[28:09-28:46] SPEAKER_02: 10 CPUs? Right. I mean, that is not. It's 10 times slower. OK. Compensate. But yeah. And I assume this is fairly short term anyway. I don't know when this billing cycle ends. If it's just at the end of the month. I don't know. I assume it's soon. I mean, we are first one that I see down here is June 2nd.
[28:47-28:47] UNKNOWN: So
[28:47-28:52] SPEAKER_02: if it hasn't like. It might just be on the first.
[29:02-29:11] SPEAKER_03: June 1st and 19th. Oh, that's. Yeah, I think it's monthly. OK. Literally calendar month. Yes. We're a week and a
[29:11-29:11] SPEAKER_00: half.
[29:17-29:18] UNKNOWN: OK.
[29:22-29:32] SPEAKER_02: How human you. Yeah. Fair enough. And it's not costing you any prompts. It's just. That's what you feel like you need to do.
[29:38-29:42] SPEAKER_04: No, I actually did something. Listing. There you go.
[29:44-30:30] SPEAKER_02: Yeah, we got G cloud commands now. Yeah. See if you. Is it hey, it's going to take a lot longer, but cost are the exact same.
[30:30-30:30] UNKNOWN: I
[30:30-30:40] SPEAKER_02: think general compute is super cheap. That's what I think. Like if you can make it work and it's not like a breaking thing, let the shit run for 26 hours.
[30:44-30:45] UNKNOWN: But
[30:45-30:58] SPEAKER_02: cloud run ran for like 16 hours and that was our big outlier of a charge day. That's true. So maybe. It's not. Maybe it's not. But they cloud run
[30:58-30:58] SPEAKER_03: have the GPU.
[30:59-31:00] SPEAKER_04: I
[31:00-31:00] UNKNOWN: don't.
[31:00-31:00] SPEAKER_04: I thought it did.
[31:01-31:01] SPEAKER_03: I thought we
[31:01-31:07] SPEAKER_02: have had a GPU. Yeah. I don't understand. At some point,
[31:08-31:18] SPEAKER_03: we've definitely seen quotas of one. Right. But that's for regional. But the all region one is set to zero. So you can.
[31:19-31:41] SPEAKER_02: I don't know. This will help us iron out those and theoretically in a week and a half when we hopefully get that quote increase. We will have the code all like ironed out and working in an infrastructure project. And that's positive.
[31:50-31:52] SPEAKER_03: Maybe we should try one.
[31:53-31:54] SPEAKER_01: Yeah.
[31:56-32:00] SPEAKER_03: That's not a one. There is one.
[32:30-32:33] UNKNOWN: We received.
[32:58-33:33] SPEAKER_03: So received. Yeah. Well, recede. No, not defined like that will come here. Sure. Oh, OK. Well, I don't know. Fingers crossed. It's
[33:33-33:33] UNKNOWN: approved.
[33:34-33:47] SPEAKER_03: Nice. OK. So you can have one. Yeah. You just can't jump from zero to anything but one. So do
[33:47-33:58] SPEAKER_02: we want to go backwards? I would say if so, it's only to add it to one of them and not try to time share them yet. Correct. So we can.
[35:05-35:07] SPEAKER_04: I don't know what's happening.
[35:10-35:11] UNKNOWN: Yeah. You said you
[35:11-35:27] SPEAKER_02: invoked intrap protocol.
[35:27-35:33] SPEAKER_03: I did up there. Oh. And then where it was stuck and it just ignored what I just put in there. Oh,
[35:38-35:40] SPEAKER_01: it's going to.
[35:56-35:58] SPEAKER_02: You can just stop and send it again.
[36:36-36:43] SPEAKER_03: Or just accept all and start a new chat. Yeah, you got
[36:43-36:44] SPEAKER_02: the new chat prompt down there.
[36:44-36:44] UNKNOWN: I'm going
[36:44-36:46] SPEAKER_02: to
[36:46-36:46] UNKNOWN: finish
[36:46-36:52] SPEAKER_02: right now because it really seems to want to.
[37:15-37:18] SPEAKER_03: It wants to finish the intrap protocol.
[37:19-37:26] SPEAKER_02: I guess I can appreciate that. That's the rule. Yeah. I have to do this when you say that.
[37:58-38:02] SPEAKER_04: I'll give it that message after it's back in there.
[38:02-38:03] SPEAKER_01: Yeah.
[38:44-38:48] SPEAKER_02: So that is another example of new chat,
[38:48-38:48] UNKNOWN: new
[38:48-38:51] SPEAKER_02: chat, new chat. Like, start them off.
[38:52-38:55] SPEAKER_03: It was confused. It just wouldn't even listen to
[38:55-38:55] SPEAKER_02: it.
[38:57-38:58] SPEAKER_03: Recommended whisper service.
[38:58-39:47] SPEAKER_02: This is the reasonable response to the thing that you said twice. Yeah, because it
[39:47-39:48] SPEAKER_03: was, it changed it.
[39:48-39:48] UNKNOWN: There
[39:48-39:50] SPEAKER_03: may be two in there.
[39:50-39:59] SPEAKER_02: Yeah, because it generated CPU specific files, I think. On the last one. I agree.
[40:04-40:04] UNKNOWN: Like
[40:04-40:22] SPEAKER_02: Docker files CPU only. But it also said that the Diorization service is already configured for CPU only. So
[40:22-40:53] SPEAKER_03: it didn't make a special one. Yeah, so it replaced the Docker file for Diorization service because that one is CPU. But for the transcription service, there's two files. One of them is, well, that doesn't refer to anything. Whereas this one,
[40:53-40:53] UNKNOWN: yeah,
[40:54-40:58] SPEAKER_03: it said we basically need to tell it to get rid of that Docker file CPU. Yeah.
[41:45-41:46] UNKNOWN: Okay.
[42:11-42:15] SPEAKER_03: You just gotta ignore that. Yeah, what's going on here?
[42:52-42:54] UNKNOWN: Okay.
[43:01-43:13] SPEAKER_03: I think at least what it looks like for this morning, like if it's in the middle of something, it doesn't want to be interrupted. Yeah. Let it finish and then like, hey, also this. Right.
[43:15-43:19] SPEAKER_02: But those are, that's not right either. I guess.
[43:33-43:34] UNKNOWN: I
[43:34-43:39] SPEAKER_03: think that's fine because these scripts are what they came from last time. Last
[43:39-43:39] UNKNOWN: time.
[43:39-43:45] SPEAKER_03: Diorization job CPU only isn't still necessary. I think it made a new one. Just now.
[43:48-43:48] UNKNOWN: Okay.
[43:49-43:51] SPEAKER_03: As long as there's one in there and it's working.
[43:51-43:52] UNKNOWN: Yeah.
[43:54-44:10] SPEAKER_03: I believe. I don't know for sure. Yeah. And in general, my thought process is if it doesn't work, it will figure it out. Yeah. And fix it. Thank you. I think
[44:10-44:10] UNKNOWN: you have to
[44:10-44:12] SPEAKER_03: accept those things before you close
[44:12-44:13] SPEAKER_02: it. Wow.
[44:13-44:13] UNKNOWN: And
[44:13-44:24] SPEAKER_02: that's certainly the. Wow. I closed
[44:24-44:25] UNKNOWN: it.
[44:25-44:29] SPEAKER_02: It might just auto accept them.
[44:57-45:01] SPEAKER_03: I'm going to do. Option.
[45:03-45:08] SPEAKER_02: It was yellow. I think it's uncommitted. Okay.
[45:13-45:13] UNKNOWN: Yeah.
[45:20-45:27] SPEAKER_03: Being weird this morning. Yeah. It's game day. Yeah. I'm excited. I'm
[45:27-45:36] SPEAKER_02: thinking about it already. 13 hours and however many minutes past the start time they decided to go.
[45:38-45:39] UNKNOWN: Yeah.
[45:53-46:15] SPEAKER_03: Are we getting ready to do this? Where is that script? We're just going to test it without the. Let's see. This
[46:15-46:17] SPEAKER_02: will deploy the optimal GPU allocation strategy.
[46:18-46:18] UNKNOWN: Would
[46:18-46:39] SPEAKER_02: you like to see? Because as long as this build like does all the building and shit, then fair enough. Container clusters describe. So it's going to look into everything first. Then it's going to plug it's doing that echo shit.
[46:41-46:42] SPEAKER_03: Yeah, but that's fine.
[46:42-46:44] SPEAKER_02: But yeah, 97 Dr. Build.
[46:45-46:56] SPEAKER_03: Yeah, but I thought that we. I'm confused. Like this has nothing to do with the pipeline. Well, look, it's going to
[46:56-47:07] SPEAKER_02: stop. Go back down. Dr. Build diarization. Tag it and push it. Then the next one is Dr. Build whisper. Oh, so it's
[47:07-47:13] SPEAKER_03: just going to. Yeah. And then alignment. Okay, if you want to try to do
[47:13-47:35] SPEAKER_02: everything at the same time. Yeah, Mike, I think we've seen this not work, but it may have been the quota issue. Maybe we'll see. So this might be why it's doing all that echo shit when it runs locally, because it thinks that's what you want.
[47:40-47:45] SPEAKER_03: Yeah, but what I'm saying is like it's creating a cluster right now. And it's not just.
[47:45-47:50] SPEAKER_02: Deploying all those services, right? That's what it's doing right there. I
[47:50-47:50] UNKNOWN: know
[47:50-47:58] SPEAKER_02: it's called like it maybe after this it goes and creates the cluster as well. But that's just doing the build tag and push.
[47:59-48:36] SPEAKER_03: Oh, I agree. Like this. This is actually what we need to do. And then deploy the cluster as a part of the pipeline. Yeah, I agree. Like where does it show that it's actually deploying the cluster? It's doing it right now. Like the very first thing of this. What the very first command is since I don't know where it is. It's just. Yeah, it's creating the autopilot cluster. That's what that and that's what it's doing right now. And then workload I did like it says if it wants to be up the whole time.
[48:37-48:42] SPEAKER_02: Yeah, and. Then it's pushing the service right
[48:42-49:01] SPEAKER_03: to the. It hasn't even built them yet. So the cluster is going to be up running while it does the Docker build locally. Then push to the repository. So we're going to sit here for an hour with this cluster just sitting there for funsies. Yeah, you stop that.
[49:03-49:19] SPEAKER_02: I would almost go to like stop that. Fuck this file. It's stupid and trying to do too much. Yeah. I mean, we're still going to sit here while it builds locally, but at least the cluster won't be.
[50:06-50:08] SPEAKER_04: I might go delete this so
[50:08-50:08] UNKNOWN: you
[50:08-50:08] SPEAKER_04: can see the
[50:08-50:08] UNKNOWN: cost
[50:08-50:09] SPEAKER_04: there. I'm
[50:09-50:09] UNKNOWN: going to delete
[50:09-50:10] SPEAKER_04: it.
[51:02-51:06] SPEAKER_02: It does not understand what you're trying to say.
[51:35-51:35] UNKNOWN: I'm going to delete it.
[51:52-51:55] SPEAKER_03: This is finally what it says.
[51:55-51:55] UNKNOWN: It says,
[51:55-51:58] SPEAKER_03: hey, you're right. I want to delete the cluster. You can't delete it until it's done.
[51:59-51:59] UNKNOWN: But
[51:59-52:06] SPEAKER_03: being deployed. And then, yes, we need to rebuild these two services.
[52:13-52:43] SPEAKER_02: It's confused. Yeah, maybe looking at those files, we shouldn't have it look at the previous files by default. Right. Only if we need to go reference previously. I can't imagine. It's two coding, like two markdown files would probably combine less than a thousand lines.
[52:44-52:47] SPEAKER_03: Yeah, no, I don't think it's exceeding its context window. I
[52:47-52:47] UNKNOWN: think
[52:47-52:48] SPEAKER_03: it's just confused.
[52:54-53:11] SPEAKER_02: We're in kind of a chaotic, I guess, yeah, it could be referencing stuff that doesn't necessarily make sense based on where we're at at this point. It built that transcription service that fast?
[53:13-53:17] SPEAKER_03: Yes. But it was already,
[53:18-53:18] UNKNOWN: it
[53:18-53:37] SPEAKER_03: didn't have to, like it said, it said up here, it's already GPU and may need a refresh. But I assume it didn't actually change anything. So what's in my local Docker should have all of the stuff. Is good. Because it didn't need to download anything. All the changes we made reverted.
[53:37-53:37] SPEAKER_02: Or
[53:37-53:39] SPEAKER_03: actually didn't even make changes
[53:39-53:39] SPEAKER_02: to that.
[53:39-53:39] UNKNOWN: Oh,
[53:39-53:49] SPEAKER_03: yeah. Those layers are actually on my computer. Yep. They don't need to be changed. And I assume this is going to be fast too. Because all the layers,
[53:49-53:49] UNKNOWN: it
[53:49-53:59] SPEAKER_03: didn't actually change anything. Right. Or find any new layers that it needed to download or anything like that. But
[53:59-54:04] SPEAKER_02: diorization also didn't, what is that? Yeah, so. I'll go back, it might
[54:04-54:07] SPEAKER_03: be doing it as the last thing. No, it didn't. No. It did it first.
[54:10-54:26] SPEAKER_02: Okay. I mean, I guess it doesn't have to re -download the model to build it and all that stuff. Like that's already there too. Yeah. I mean, we'll see. I don't know. Let's tag it on three.
[54:30-54:36] SPEAKER_03: And just tag it on again. Now just push it down to the
[54:36-54:36] UNKNOWN: right.
[54:36-54:44] SPEAKER_03: So I think we need to clean up the models that are in or the images that are in the repository too.
[54:45-54:45] UNKNOWN: I
[54:45-54:51] SPEAKER_03: agree. Down to just the ones we actually expect to be running.
[55:12-55:18] UNKNOWN: There you go.
[55:29-55:31] SPEAKER_02: I don't want to deploy it to the
[55:31-55:31] UNKNOWN: other side.
[55:31-55:38] SPEAKER_02: Yeah, I just want to turn it. I mean, theoretically you can. That's the next step is to spin that cluster up,
[55:39-55:39] UNKNOWN: right?
[55:39-55:43] SPEAKER_03: Yeah, well, I want to test it with the pipeline or do you want to just test the services?
[55:44-55:47] SPEAKER_02: I mean, what's the, what do you mean by the pipeline?
[55:47-55:49] SPEAKER_03: Like know that, I guess we can do this,
[55:50-55:57] SPEAKER_02: right? That just say. No, I think I get what you're saying. Like part of literally cluster creation is part of like after you upload a file.
[55:57-55:57] SPEAKER_03: Right.
[55:57-55:57] SPEAKER_02: Yeah.
[55:58-56:04] SPEAKER_03: And then it deploy the cluster, then everything. Because I mean, we can test it, these services to see if they work.
[56:05-56:05] UNKNOWN: No, I
[56:05-56:09] SPEAKER_02: think tell it I'm deleting it. And then
[56:09-56:17] SPEAKER_03: we're going to do that. I wouldn't let it delete it. I'm going to hit stop here. First. Say.
[57:38-59:38] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay.
[59:44-59:57] SPEAKER_03: Yeah, it was not a processing or aware of the on demand nature of the logic. I guess like, okay, we're ready to test. Like, no, you don't understand what we're doing.
[59:57-60:13] SPEAKER_02: I started to, and maybe it's worth talking about, but yesterday I stopped myself from like over extracting from the read me. Yeah. But maybe there's an argument for a standalone full on current architecture file that is part of like,
[60:14-60:14] UNKNOWN: Hey,
[60:14-60:16] SPEAKER_02: references every fucking. Yeah. Don't look at
[60:16-60:22] SPEAKER_03: it every time you do anything. Right. Yeah. Because it is like it was working correctly from the perspective of,
[60:22-60:22] UNKNOWN: Hey,
[60:22-60:23] SPEAKER_03: the clusters up. Now
[60:23-60:23] UNKNOWN: I
[60:23-60:31] SPEAKER_03: can see why I wanted to deploy the cluster. Right. Like, hey, deploy all these services and now let's just test it. But that's not that is a partial test from some perspective.
[60:31-60:46] SPEAKER_02: Yeah. We might need to kill, like literally get rid of some of those scripts because I can imagine them like it clearly goes to scripts when it's deployment time, which I think is a good instinct. But if we've got a bunch of scripts that say that point to bad things.
[60:46-60:47] UNKNOWN: Yep.
[60:48-61:08] SPEAKER_03: Yeah. In a big scheme of things, I don't think we need any of those scripts anymore. Right. They're in some ways like, what is the infrastructure as code terraform or kind of like terraform history to a certain extent to know what was there like,
[61:08-61:08] UNKNOWN: but
[61:08-61:10] SPEAKER_03: like billing and stuff, but like those cleanup runs.
[61:11-61:32] SPEAKER_02: Yeah. And there's so much going on. Like this is a chaotic way of developing because we're doing architecture. We're actively developing both the architecture and the code at the same time. Yeah. And so there's a lot of chaos there that we're literally like, Hey, emergency shut down every fucking thing. Right. I agree. That might be a useful script to keep actually like,
[61:33-61:33] UNKNOWN: Hey,
[61:33-61:46] SPEAKER_02: nuke everything on the entire project. Oh, I agree completely. But I also agree that like there's a few things that probably aren't necessary. Nice.
[61:52-61:53] SPEAKER_04: I'm going to go make coffee.
[61:56-61:57] UNKNOWN: Sorry.
[61:58-61:59] SPEAKER_02: We're getting it lined up.
[62:41-63:06] UNKNOWN: Okay. I
[63:06-63:27] SPEAKER_02: was actively thinking about it this morning and I think there's some merit to it. What we're developing in there right now is not this transcription service. It's how to work with the right work to remove it. So that's like these new files we're doing and like how many abstractions should we make?
[63:27-63:27] UNKNOWN: Should
[63:27-63:44] SPEAKER_02: it be one read me? That's two thousand lines long. Should it be abstracted from these other things and actively developed the techniques for when to hit those other things? Have a big long list of rules. I understand they're all going to it every time. That's a lot of context that you're hitting every
[63:44-63:59] UNKNOWN: single question. Oh, I agree. We're finding
[63:59-64:10] SPEAKER_02: the places where humans can be taken out of it. And it's in hey, check the references to the CLI and all these different things.
[64:16-64:16] UNKNOWN: Right.
[64:21-64:47] SPEAKER_02: Because the problem, this thing knows how to do literally every single thing we want it to do because none of these services are complex. They're complex, but they're like known entities. There's not problems with the code and those how to do Pub -Sub and those how to do all of those things. What it doesn't know is exactly what we want. Right. And what we're developing is how to get it there faster with like more and less competent humans.
[64:47-64:47] SPEAKER_03: I agree.
[64:48-64:48] UNKNOWN: It
[64:48-64:54] SPEAKER_03: doesn't like this more like the primary issue was it didn't remember that we were doing an on demand cluster.
[64:54-65:24] SPEAKER_02: Right. And we were not able to recognize quickly enough that that's why it was struggling. Right. And so I think, yeah, that is what we're building. And ultimately, we know that that is the long term project is how to let AI do more and more and more and optimize it more and more and more. Well, that's what we're doing. Right. The project is almost irrelevant as to what like this transcription thing. It's a part of the tool we're building for sure, but it's not the project inherently.
[65:25-65:32] SPEAKER_03: I agree completely. So I still don't think I still think it's
[65:32-65:37] UNKNOWN: confused. That
[65:37-65:53] SPEAKER_03: is correct. Yeah. Create. So I think all of this is correct. I don't think it's confused. All of this is correct. It now just wants to do testing. It's like we now need to upload the freaking files. We never deployed them. We pushed them to the
[65:53-65:57] SPEAKER_02: registry. I think so. OK. I think I'm pretty sure.
[65:58-65:59] SPEAKER_03: Yeah,
[65:59-65:59] SPEAKER_02: push.
[66:01-66:08] SPEAKER_03: OK. I didn't I didn't think we did. Yeah, I remembered that one. OK. Good. Well, then, yes, we're ready to test.
[66:08-66:15] SPEAKER_02: Yeah, we legitimately were on the testing phase and it just tried to misunderstand.
[66:45-66:54] UNKNOWN: OK. OK.
[67:01-67:02] SPEAKER_03: There should be.
[67:27-67:32] SPEAKER_02: That's right. That's right. Jobs. I was true. This is true.
[69:52-69:54] SPEAKER_01: That's what we didn't expect.
[69:59-70:24] SPEAKER_02: Yeah, that's a new lens. I'm glad I even started to talk it through about like the true vision of like the true purpose of all of this, because we're not learning how to write any code here or anything like that. We're doing things that we understand. Right. And it's bridging that gap between the AI and our like inherent understanding and how
[70:24-70:24] UNKNOWN: to
[70:24-70:25] SPEAKER_02: make it.
[70:25-70:25] UNKNOWN: We
[70:25-70:30] SPEAKER_02: could stream this fucking thing and have it actively update it based on what we're talking about.
[70:30-70:48] SPEAKER_03: That's the goal. Like we're one of these days. That's the goal to get there to be truly an assistant. Right. It's not streaming or anything. It's just a participant. Right. The leader. In fact, like, hey, here's what we should be to. Yeah.
[70:48-70:48] UNKNOWN: You
[70:48-70:56] SPEAKER_03: want it to be our leader. It's Sky Man. Like,
[70:56-70:56] UNKNOWN: I
[70:56-71:03] SPEAKER_03: need control of all your passwords and all of your. No. Why? It doesn't matter.
[71:03-71:03] UNKNOWN: I
[71:03-71:07] SPEAKER_03: already have it. Are you going to make me rich? Yeah.
[71:08-71:22] SPEAKER_02: Can you do that? No, I just think that there's a natural path to it being our leader in a greater sense than a project level. Right. Let's see.
[71:22-71:22] UNKNOWN: Oh,
[71:22-71:27] SPEAKER_02: yeah. That makes sense.
[71:27-71:27] UNKNOWN: I
[71:27-71:29] SPEAKER_02: mean, it takes a bit.
[71:42-71:43] SPEAKER_04: Yeah.
[71:51-71:55] SPEAKER_02: And ultimately what we're hoping for is like one more log that says,
[71:55-71:55] UNKNOWN: okay,
[71:55-71:59] SPEAKER_02: well, now we got to wait like 10 or 15 or 20 minutes because the irisation stuff.
[71:59-72:32] SPEAKER_03: Yeah, exactly. I did not. Did you see that?
[72:33-72:33] UNKNOWN: Oh,
[72:33-72:52] SPEAKER_03: and when the Starships blew up on the testing yesterday, I don't know. I literally saw it this morning. So something bad because we would know. Yeah, it like they were doing some testing with it and it freaking on the test on the freaking test stand on the ground. Like,
[72:53-72:59] SPEAKER_02: I'm still not fully not a believer in that system. Like move fast and break things.
[72:59-72:59] UNKNOWN: But
[72:59-73:01] SPEAKER_02: like you're
[73:01-73:01] UNKNOWN: breaking
[73:01-73:01] SPEAKER_02: a little broken.
[73:02-73:10] SPEAKER_03: Right. Maybe you take a pause, do a full on six month redesign, analyze everything, figure out what's going on.
[73:10-73:12] SPEAKER_02: Put down the ketamine. Right.
[73:13-73:13] UNKNOWN: So
[73:13-73:16] SPEAKER_03: like chill for a bit.
[73:23-73:26] SPEAKER_02: I mean, it hasn't been 10 minutes, right? Like, yeah, it's still provision.
[73:29-73:32] SPEAKER_03: Yeah, I'm talking about it's
[73:32-73:35] SPEAKER_02: stuck. Is it not just sleeping? It
[73:35-73:35] UNKNOWN: has
[73:35-73:37] SPEAKER_02: been more than 30 seconds.
[73:41-73:54] SPEAKER_03: Yeah, it's definitely been more than 30 seconds. But I'm going to leave it alone. I'm frustrated and I need to just leave it alone.
[73:55-73:56] SPEAKER_02: What
[73:56-73:56] UNKNOWN: is?
[73:58-74:09] SPEAKER_02: I mean, it says wild right there. Yeah, wild truth. So that might literally be in a wild loop on purpose. Okay. I don't know that.
[74:09-74:15] SPEAKER_03: But yeah, and at some point it's going to say cluster is ready. Yeah. And then break. Okay.
[74:21-74:45] SPEAKER_02: I need to just leave it alone. And this one specifically because we know it's a process and it's starting to get beyond my Linux up there with the break semicolon, FI, semicolon. Right. I think I got it. I've just never seen it run an intentional wild loop before.
[74:46-74:46] SPEAKER_03: Me
[74:46-74:48] SPEAKER_02: either. And I don't know what decoy means.
[74:50-74:50] SPEAKER_03: Me either.
[74:57-75:11] SPEAKER_02: So wild true, let's see monitoring cluster creation. So while that's happening, do status equals gcloud container clusters describe that cluster that exists? And then pipe to?
[75:12-75:12] UNKNOWN: Either
[75:12-75:27] SPEAKER_02: not found or its status. Then if status equals running, echo is ready and break. If status is not found, echo not found and break. Otherwise, sleep for 30 seconds and try
[75:27-75:27] SPEAKER_03: to
[75:27-75:27] UNKNOWN: do
[75:27-75:34] SPEAKER_03: it again. So is this waiting for a status that?
[75:34-76:02] SPEAKER_02: Well, my guess is it's waiting specifically for either running or not found. Yeah, right. So if it's in processing or whatever, provisioning, that doesn't keep going. Yeah. Okay. It doesn't break the loop. Looks like it's done. And it can't scale up. Yeah, that one's been there. So give it 30 seconds and then maybe it actually has been broken this one. Maybe. But the cluster was also provisioned.
[76:04-76:04] UNKNOWN: Okay.
[76:15-76:16] SPEAKER_03: Move that to the background.
[76:17-76:23] SPEAKER_02: Yeah, I think also maybe that status could be wrong. Is running the right status or is active the right status?
[76:24-76:25] SPEAKER_03: Yeah. I'm going to move that to the background.
[76:26-76:27] SPEAKER_02: You might want
[76:27-76:27] UNKNOWN: to
[76:27-76:54] SPEAKER_02: be careful with that. Maybe just stop it. Because all it's doing is trying to see when the cluster gets finished and we know that it's finished. If it's in an infinite loop, you don't want to perpetuate that loop and then forget about it. Yeah, so it's doing a lot of stopping over here.
[77:07-77:08] SPEAKER_03: Running.
[77:10-77:11] SPEAKER_02: So that's what it had,
[77:11-77:11] UNKNOWN: right?
[77:11-77:13] SPEAKER_03: Yeah. But that
[77:13-78:04] SPEAKER_02: code just wasn't working. There we go. If that sucker's using the default service account, that would be a problem. Yeah, so.
[78:04-78:04] UNKNOWN: When
[78:04-78:19] SPEAKER_02: you have a references file and some kind of rule that says before writing anything or pushing anything to GCP, check the references and ensure that you're writing the right shit. Because I'm not
[78:19-78:22] SPEAKER_03: sure that's what's happening. That might be the issue.
[78:22-78:34] SPEAKER_02: Yeah, like that's my current guess is it was writing to either a non -existent or trying to use a non -existent service account or some other one, whereas it needs to know explicitly.
[78:35-78:35] UNKNOWN: Right.
[78:37-78:40] SPEAKER_02: So is it doing the right thing?
[78:42-79:09] SPEAKER_03: No, it is not. So it is. Let me see that. So there are these service accounts that are in GCP and it needs to connect them to the Kubernetes service accounts which are in Kubernetes. But I don't know that those service accounts are in there or and it has to do that every time, right? Because it's a new cluster with new accounts. And so I don't know if part of the pipeline is it's tying those Kubernetes service accounts to
[79:09-79:09] UNKNOWN: GCP. Yeah,
[79:09-79:09] SPEAKER_03: I mean it's
[79:09-79:16] SPEAKER_02: got the Kates folder has service accounts. I don't know that it's working, but like over here on the files, there's a service accounts.
[79:16-79:16] UNKNOWN: Yeah,
[79:16-79:31] SPEAKER_03: right. I agree. But the process. Yeah, so this is creating the Kubernetes service accounts. I don't know that the they're tied to the Google or the GCP service accounts
[79:31-79:31] SPEAKER_02: as
[79:31-79:32] SPEAKER_03: a part of the pipeline.
[79:33-79:44] SPEAKER_02: Yeah, now it's trying to do it manually to get that like part of the pipeline. That's fine. This will give us data if those are created and then it works. Right. That's true. But now we need to plug that into the pipeline.
[79:44-79:56] SPEAKER_03: I agree. That's the point that I'm saying. Again, it created these service accounts, but it should do that automatically. Again, it's applying all of these YAML files manually. Like wire. I guess we're doing that.
[79:57-80:12] SPEAKER_02: That is to test the code. Like that's one like genuinely push them through, see that it runs on Kubernetes and then do the pipeline, I guess is what it's driving towards. Or that word full end to end. It's like,
[80:12-80:12] UNKNOWN: bro,
[80:13-80:27] SPEAKER_02: yes, for an end to end test. Yeah. I'm gonna make that shit happen. I don't know. I don't think this is a problem. Like these are. No, it's not bad. These are problems we need the answers to. I
[80:27-80:27] UNKNOWN: agree. Like
[80:27-80:31] SPEAKER_02: so. It's gonna help us find some data.
[80:41-80:41] UNKNOWN: I
[80:41-80:44] SPEAKER_02: think that's what creates regular jobs.
[80:48-80:52] SPEAKER_03: Yeah, I don't understand the difference. I don't understand what a template is. And it did this yesterday.
[80:52-80:53] SPEAKER_02: Yep, I agree.
[80:53-80:53] SPEAKER_03: That.
[80:54-80:56] SPEAKER_02: And if they started, like, well, what are they doing?
[80:58-80:59] UNKNOWN: Right.
[81:17-81:20] SPEAKER_01: You said me I had stuff going on over here.
[81:56-81:58] SPEAKER_02: Correct things from what I can tell.
[81:58-81:59] SPEAKER_03: I agree.
[82:37-82:42] SPEAKER_02: All that actually does make sense as far as I'm reading it.
[82:43-82:43] SPEAKER_03: Me
[82:43-82:44] UNKNOWN: too.
[82:46-83:01] SPEAKER_03: Except for these jobs are job template, like templates to like that process is not. Does it make sense? And it should have auto deployed all of these. Right. Everything in that Kubernetes, those, they should automatically deploy.
[83:02-83:02] SPEAKER_00: Yeah.
[83:03-83:12] SPEAKER_03: And these services should come up on their own and then be available for the pipeline to use. Second motive
[83:12-83:13] SPEAKER_02: is created.
[83:13-83:13] UNKNOWN: I
[83:13-83:16] SPEAKER_02: mean. Okay.
[83:26-83:27] SPEAKER_01: Perfect.
[83:36-83:39] SPEAKER_03: So all three services are running.
[83:43-83:44] UNKNOWN: Yeah.
[83:44-83:47] SPEAKER_02: It's the optimal architectural design.
[83:52-83:54] SPEAKER_03: But it just wasn't automatic.
[83:55-83:55] SPEAKER_02: Right.
[83:57-83:58] SPEAKER_03: But that's fine.
[83:59-84:08] SPEAKER_02: Yeah. If this thing diorizes, transcribes and aligns, I'm going to be very happy. I don't give a fuck if it's not triggering on its own just
[84:08-84:14] SPEAKER_03: yet. It's running. It's going to do it, I think.
[84:15-84:21] SPEAKER_02: GPU acceleration. So the transcriptions are finished like should be done almost.
[84:21-84:28] SPEAKER_03: Right. I don't know that that is working.
[84:31-84:33] UNKNOWN: It's definitely not.
[84:34-84:37] SPEAKER_02: It works if you do a bunch of manual shit after you start it.
[85:05-86:36] UNKNOWN: Okay. Okay. Okay. Okay.
[86:48-86:57] SPEAKER_03: Is it time for the terraform? Maybe. Maybe. And the template.
[87:01-87:01] UNKNOWN: I
[87:01-87:02] SPEAKER_03: don't know if that's how you say it.
[87:03-87:04] UNKNOWN: Yeah.
[87:05-87:06] SPEAKER_03: The services started.
[87:28-87:29] UNKNOWN: Let's
[87:29-87:30] SPEAKER_00: monitor
[87:30-87:34] SPEAKER_04: the job
[87:34-89:30] UNKNOWN: performance and completion. Okay. Okay. Okay. Okay.
[89:44-89:50] SPEAKER_02: The deorization probably isn't done. That's why there's a new one.
[90:07-90:54] UNKNOWN: Okay. Okay. Okay. Okay.
[91:22-91:23] SPEAKER_03: So, it's ready to delete.
[91:25-91:29] SPEAKER_02: Jobs never complete. They're running web servers instead of processing jobs.
[91:30-91:52] SPEAKER_03: That's what it said. I looked at it up here and yeah. So, but I think the issue, like they should be, they're designed to be services that then you send requests to. Let me stop this. Did they need to
[91:52-91:58] SPEAKER_02: be redesigned for Kubernetes instead of Clavir? Like, no.
[92:49-93:20] UNKNOWN: Okay. Okay.
[93:50-94:21] SPEAKER_03: Okay. Okay. But ultimately, the cluster should come up and the services should just be sitting there. Right. And then the pipeline sends requests to the cluster and starts to like use these services that are instantiated on the cluster. Right. And it processes and like it sends a request to the cluster to do the diarization. It completes it and puts it back. And it just keeps doing that because there's a queue of service or queue of message or files. Right. And these services just sit there and they're general for the pipeline to use.
[94:21-94:21] UNKNOWN: So
[94:21-94:27] SPEAKER_03: the pipeline in fact sits independent of the cluster. Like no different than they were VMs.
[94:29-94:33] SPEAKER_02: Yeah. As long as the cluster's alive, they should be alive and waiting.
[94:34-94:43] SPEAKER_03: Right. Or exactly. It shouldn't get to done. Right. They should not get to done. Right. Or I'm not sure of the way to look at it, but it should know that more than I'm sure. I agree.
[95:05-97:16] UNKNOWN: Okay. So that's all the time we have. I'll see you next time. Bye. Bye. Bye. Bye. Bye. Bye. Bye. Okay. Okay. Okay.
[97:35-97:37] SPEAKER_03: I'm abnormally frustrated today.
[97:37-97:38] SPEAKER_01: Yeah.
[97:38-97:38] SPEAKER_02: That's
[97:38-97:39] SPEAKER_03: fine though.
[97:42-97:47] SPEAKER_02: What do you think is making today special about? Work. Yeah.
[97:47-97:51] SPEAKER_03: I'm not, I don't work today by the way. Oh, it's. It's my day yesterday.
[97:51-97:51] SPEAKER_02: Whatever.
[97:52-98:14] SPEAKER_03: Juneteenths. Yeah. I am. It's that there's a lot of chaos. So I got pulled into this project by Jeff yesterday that he literally threatened us that like literally don't even tell your wife. Like it's that big of a thing. And it is a big deal. It's cool to be in the project. I'll tell you about it at some point. But not, certainly not with that.
[98:16-98:16] UNKNOWN: It
[98:16-98:18] SPEAKER_03: will come out on the news.
[98:18-98:18] UNKNOWN: I
[98:18-98:22] SPEAKER_03: assume. Yeah. I guess one of those projects like, did you know this was going to happen?
[98:23-98:23] UNKNOWN: I
[98:23-99:00] SPEAKER_03: know normally I'm like, had no idea. Right. But I actually do. Actually. Yeah. But it's chaos. Yeah. And it's like, we really need to be working on it based on the timeline that like from the leadership team. And it's like the leadership. Like, Hey, we want to do this next month. Like in two weeks. Okay. Okay. See what we can do. And it's being frustrating. Right. Yeah. Like you forgot that we were trying to do it on the demand cluster. Like the whole
[99:00-99:09] SPEAKER_02: thing. So we need to, we need to figure out why it forgot and how to mitigate that in the future.
[99:17-99:17] UNKNOWN: And
[99:17-99:39] SPEAKER_03: I don't completely understand. I don't think this is a source of frustration, but I don't completely understand what those like how it's supposed to work. Like, I mean, I understand the cluster comes up and, but again, my understanding like those there's three services and I think they're general, but I don't understand how you give a service a job. What the service is supposed to live.
[99:39-99:39] UNKNOWN: And
[99:39-100:05] SPEAKER_03: I think it's supposed to be a server and you pass stuff to it via a JSON file and then it processes it and does stuff. And then it's the service stays up. Right. And it's not like you're passing it jobs that create a pod work process and then die. But maybe I think those are two different versions of how you can do this. I agree. I think
[100:05-100:06] SPEAKER_02: based on our architecture,
[100:06-100:06] UNKNOWN: we
[100:06-100:13] SPEAKER_02: want while the cluster is alive, all of those pods that can do that processing are alive for those services.
[100:14-100:14] UNKNOWN: And
[100:14-100:27] SPEAKER_02: even when like in theory right now, they're all working properly as it's written, as I understand it, they're all going to spin up and be alive and immediately basically however long it takes them to spin up.
[100:27-100:27] UNKNOWN: And
[100:27-100:34] SPEAKER_02: then diarization and whisper are both going to start working. Alignment is going to start, but it's going to have nothing to work with.
[100:34-100:34] UNKNOWN: So
[100:34-100:55] SPEAKER_02: it needs to sit there and wait until those two are done. And then whisper is going to finish way faster than diarization in like a couple of minutes. And then whisper is still going to be running, sitting there waiting to do anything else. Maybe the next one. Right. Well, there's not going to be a next one. I know that's how we're building it. But right now there's only one. Oh, I agree. And that doesn't work. So that's where we need to like zero in our focus. But
[100:55-101:01] SPEAKER_03: that template thing, which I don't understand, is like this job template. And so it makes me think that,
[101:01-101:01] UNKNOWN: hey,
[101:01-101:07] SPEAKER_03: it's not a running service. It is this set of jobs that something comes in from the queue, from the PubSub queue.
[101:08-101:08] UNKNOWN: It
[101:08-101:31] SPEAKER_03: creates a job that is a diarization job. And it submits it to the cluster. It finds the right resources necessary for that pod. It completes that, finishes the file and dies. And so then at the end, like when there are no files in the queue or nothing in the PubSub queue, there are no services running. Right. And those are two different styles of processing.
[101:31-101:31] UNKNOWN: And
[101:31-101:34] SPEAKER_03: I'm not sure that it's sure which one it should be. Yeah,
[101:34-101:34] UNKNOWN: I
[101:34-101:38] SPEAKER_03: think we're probably. We let it design it, but we don't know which one it's doing.
[101:38-101:40] SPEAKER_02: Yeah, we need to actually put this in there.
[101:40-101:40] UNKNOWN: But
[101:40-101:51] SPEAKER_02: like basically one of them makes sense if the cluster is always on. Right. And one of them makes sense if you're actively creating and destroying the clusters. They do not make sense to
[101:51-102:40] SPEAKER_03: get. Oh, I agree. And I think that the second one, meaning the job based one, makes sense. That the cluster is up as not even a general services, it's up as general compute. And you submit jobs to it. And each job is independent of the other jobs. Right. And it's a whisper sync, not whisper sync, whisper transcription job, a diarization job, or an alignment job. Right. And they're all just independently like in the job knows which files, which bucket to look at. And you just submit a job, it instantiates the pod type that's necessary, whether it needs a GPU or not, and finishes the job and dies. Right. And so that at the end of the queue, there are no jobs. Right. There's nothing, there's no services except for the background services.
[102:41-102:41] UNKNOWN: Right.
[102:45-102:47] SPEAKER_02: We scroll up to the top of this.
[103:01-103:15] SPEAKER_03: Yeah, so this is, I think it is trying to do the job style, which I think makes sense. So that the cluster will actually go to idle when there are no jobs. But I'm not sure. I don't know what that means.
[103:16-103:16] UNKNOWN: So
[103:16-103:22] SPEAKER_02: you think as it is currently deployed, it's trying to create jobs? Not as it's designed as we want it?
[103:23-103:33] SPEAKER_03: I think the two things, it is trying to do the jobs, but there's also a secondary issue that it's trying to create. If I understand, well, a job template is saying that,
[103:33-103:33] UNKNOWN: hey,
[103:33-103:40] SPEAKER_03: there's a template for a diarization style job. You just need to plug in the... The requirements, the properties, whatever. The
[103:40-103:40] UNKNOWN: properties
[103:40-104:15] SPEAKER_03: for where the GCS name, like all of that stuff like that, where to get your stuff. And then it will create a job for the cluster to complete, given the right metadata. What it's not doing is creating a job instead from the job template. So what the YAML file should deploy is a job template. So that when the pipeline can submit a job from the job template. I assume there's some sort of process that says create a job from this existing job template that you already know about. Plug in these two things. And instead, it's creating a job instead of the job template when it deployed the YAML file.
[104:15-104:50] SPEAKER_02: That's what it's trying. So I think we need to align when you say what it's trying to do. Like actively deployed or what Cursor thinks. Because right now it seems to me like Cursor views, like it is actively right now deployed as active jobs. But Cursor understands that that should not be the case. Right. So what the deployed stuff is trying to do when you say that. So I think. You said it's trying to start jobs. But by that you mean the currently deployed code is trying
[104:50-104:50] UNKNOWN: to do that.
[104:50-104:50] SPEAKER_03: So
[104:50-104:50] SPEAKER_02: I mean
[104:50-105:12] SPEAKER_03: the design. So that is not how we want it designed, right? I do think we want it designed that way. And that is different than what we, than what I thought previously. I think that I, I'm just speculating that what the design that Cursor created is a job focused design. Here's how I think it works. Regardless of what we just saw.
[105:12-105:12] UNKNOWN: Maybe
[105:12-106:04] SPEAKER_03: not regardless. But based on what we just saw and what it's saying. That the way that it works is when it creates the cluster, it sends all of this stuff. And these job YAMLs are supposed to be job templates. Right. And there's something in Kubernetes that is called a job template. Right. That it knows that I am going, you're going to submit jobs to me based on job templates. And you're going to give, then all you need to submit for that is tell me the job template and give me the metadata. The variables that go with that job template. And then I'll kick off a job of that style. Right. And that's what's supposed to be happening. That's how it is designed. But however, when they sent, when it sent these job template YAMLs, it actually sent them as jobs. And so they came up and
[106:04-106:14] SPEAKER_02: ran. So what do you think it should be doing? Like by, not by what is written in like the perfect design. Like what would your design do? I think it is this. Which thing? You just
[106:14-106:20] SPEAKER_03: said both of them. To run, what it should do is when it creates the cluster,
[106:20-106:20] UNKNOWN: it
[106:20-106:28] SPEAKER_03: should, these job YAML files should create a job template. Right. And those job templates sit on the cluster. Yeah. So you
[106:28-106:39] SPEAKER_02: don't think it's like, I was just confused as to what you were even saying. Like, so you think it should be template based? Yes. I agree. I do. And cursor agrees. Yes. It just is wrong right now. Yes. Okay.
[106:39-106:39] SPEAKER_03: Yes.
[106:40-106:40] UNKNOWN: I
[106:40-107:00] SPEAKER_03: think we're, because what I'm trying to correct is before this, before this morning, I thought it was, I didn't really think about it, but that these services are going to be sitting there. Like for instance, a diorization service is going to sit and be available to process multiple things. Right. But that's not it. The diorization service doesn't exist.
[107:00-107:00] UNKNOWN: It's part
[107:00-107:30] SPEAKER_03: of a template. It is a templated job. Right. That you submit a job of a style of diorization. Right. And it will instantiate a pod that is using the diorization resources and image. Right. It creates a pod using the diorization image, processes it and dies. Right. And then another diorization pod comes up, just based on these templates. And the template tells it which image to build, which bucket to look at,
[107:31-107:31] UNKNOWN: and
[107:31-107:39] SPEAKER_03: it's a single discrete. And each pod comes up as either a diorization alignment or transcription type pod. And then they die when they're done.
[107:39-107:45] SPEAKER_02: Yeah. It's just so far away from that. It seems like it's going to be a shit show. I want to re -look things.
[108:19-108:20] SPEAKER_04: I want to
[108:20-108:21] UNKNOWN: look at this.
[109:13-109:15] SPEAKER_04: And what are you
[109:15-109:28] SPEAKER_03: trying to do? I'm going to say don't run from a script. Just do everything manually. Yeah. I'll
[109:28-109:28] UNKNOWN: just
[109:28-109:29] SPEAKER_03: fill the actual test.
[110:26-110:27] UNKNOWN: Okay.
[110:38-110:58] SPEAKER_03: Yeah, so that makes sense. There's this function that is, well, I assume this function is in the job controller service. So the very first service that should come up is the job controller service. Right. It receives messages from
[110:58-110:58] UNKNOWN: PUSSUP. Or
[110:58-111:00] SPEAKER_03: the cluster manager.
[111:01-111:03] SPEAKER_02: I think the job controller is from an old,
[111:03-111:03] UNKNOWN: old
[111:03-111:12] SPEAKER_02: thing. Where do you... I think that's job controllers is on the list of shit that needs to be deleted,
[111:14-111:14] UNKNOWN: I think.
[111:16-111:16] SPEAKER_03: The
[111:16-111:17] SPEAKER_02: cluster manager.
[111:18-111:24] SPEAKER_03: Yeah. So maybe that's the issue that is confusing those. Like, I'm not sure. I
[111:24-111:33] SPEAKER_02: think that's where it's right. It's in the cluster manager. Go to that main .py that it has open. Yeah. It's in the cluster manager.
[111:36-111:46] SPEAKER_03: Okay. It's the thing where all of that happens. Yeah, so there's some service that, that's the persistent service. Right. That it, the job, it receives the jobs from
[111:46-111:46] UNKNOWN: the PUSSUP.
[111:46-111:56] SPEAKER_03: It starts and kills the cluster. Right. So everything happens inside of it's running. Okay. So I think, I don't think that's true. Here's what I think. I may be wrong,
[111:57-111:57] UNKNOWN: of
[111:57-112:31] SPEAKER_03: course. Yeah, so the cluster manager is what's building and monitoring and destroying the cluster. Right. That's what I think. And then there is a job controller. And it, what it's responsible for is receiving messages from PUSSUP. Right. And creating jobs. Like, it turns the job, the message into a actual job on the cluster.
[112:31-113:56] SPEAKER_02: Will you ask it? Because it was definitely on the shit we can delete list before. It may have refactored them. There's a job controller directory and in the case directory a job controller yaml. Right. But I think they're from the very first autopilot one that was like always on. Yeah, and the reason that I pushed this morning the job controller directory is flagged as legacy because it's 24 -7 operation.
[114:31-114:36] SPEAKER_03: That's what it seems like to me. Like they're mixed together and it's.
[114:36-114:46] SPEAKER_02: Yeah, so I'm saying like that job controller just needs to be gone. That's not. We shouldn't even have it in the directory anymore. There might need to be job controllers, but that is not it.
[114:51-114:51] UNKNOWN: Yes.
[114:55-115:06] SPEAKER_03: This is what I was just talking about. This is what I thought it was trying to do. And I didn't you're right that this is old style
[115:06-115:09] UNKNOWN: current. Yeah.
[115:10-115:19] SPEAKER_03: GCS event art cluster manager. Okay. The cluster creates the cluster process delete cluster. But then again, this is assuming that it's only going to be one event.
[115:20-115:27] SPEAKER_02: Well, no, that's encapsulated inside of that like processing or delete cluster has the idle timer stuff in it. You're right.
[115:27-115:29] UNKNOWN: Yeah. Yeah.
[116:14-116:14] SPEAKER_03: So
[116:14-116:14] UNKNOWN: I'm not sure where
[116:14-116:34] SPEAKER_03: these things. Cluster manager creates specific processing jobs. It does clarify.
[116:37-117:01] SPEAKER_02: The only thing that jumps out at me there is that sequential process, which is fine. But it is not what I thought we were doing. But I think we can add like concurrent processing to the process later. Once there's just so many things that are broken that we can't possibly know what's broken. Right. And so let's not add new shit like if that's how you feel like doing it right now.
[117:29-118:20] UNKNOWN: That's fine. Okay. Okay.
[118:37-118:37] SPEAKER_03: I
[118:37-118:37] UNKNOWN: mean,
[118:37-118:42] SPEAKER_03: I guess it's
[118:42-118:42] UNKNOWN: fine.
[119:02-119:05] SPEAKER_03: Just don't want to try to do 10 things at the same time.
[119:05-119:11] SPEAKER_02: I agree. It's like all you're doing is running that one command that just deploys this fair play.
[119:35-119:59] UNKNOWN: Okay. So
[119:59-119:59] SPEAKER_02: I'm
[119:59-119:59] UNKNOWN: going
[119:59-120:00] SPEAKER_02: to
[120:00-120:00] UNKNOWN: remove
[120:00-120:09] SPEAKER_02: the in begin chair new chat protocol, take out the reference to the daily reports.
[120:10-120:10] UNKNOWN: And
[120:10-120:33] SPEAKER_02: because what's jumping out at me is read me right there says historical details, see daily reports for you. So that can be the path if you need it. Go check. Now it might ignore that and just start ripping like it has done a few times this morning. So you want to take out in chat or new chat?
[120:33-120:33] UNKNOWN: I
[120:33-120:51] SPEAKER_02: think new chat. So check the entire evening. I use it as a project planning to do list in the time what we're working on. And I said also check the most recent file in the daily and do your first directory. I think that or add if necessary, I think it's
[120:51-120:51] UNKNOWN: being
[120:51-120:56] SPEAKER_02: more explicit. To them is better.
[121:11-121:42] SPEAKER_03: Yeah, I think I might. But there's definitely something to that. But that I don't know if that's what's causing the behavior this morning. But we definitely should be some kind of concept of the read me being the active, like tactical level of what are we doing right now? Right. And offload periodically to a historical file or set of files to say, hey, here's what we've done to get here. And we should be able to go back and look at it, but it not be in the context right now. Yeah,
[121:42-121:42] UNKNOWN: if
[121:42-121:50] SPEAKER_02: it might be useful, whereas the read me should be actively useful and a big picture overview of our progress of development. So
[121:50-122:09] SPEAKER_03: what I think we need to do is a in day protocol so that not after each check, like so just do the regular in chat protocol. But then at the end of the day, look at go process a historical file that says, hey, this is all the stuff we did today. All the problems we had,
[122:09-122:09] UNKNOWN: blah,
[122:09-122:13] SPEAKER_03: blah, blah. I think the problem into a new markdown
[122:13-122:23] SPEAKER_02: file. The problem with that is it doesn't keep the cause. Like if you do three chats, it's only got one of them. That's true. So there might be a process of like,
[122:23-122:23] UNKNOWN: hey,
[122:23-122:31] SPEAKER_02: get all of the reports from today and make a report like a final daily end of day report.
[122:31-122:54] SPEAKER_03: Or maybe the in chat protocol. And we just have a bunch of markdown files, which is fine that every time you end a check, it splits into two update this with the most current tactical stuff and anything that's not necessary for the next steps or current log to a second archive markdown. And what is that? So now we have read me and
[122:54-122:59] SPEAKER_02: then two others or use it for every check. There's going to be a markdown file. That's what they're currently is. OK,
[123:00-123:00] UNKNOWN: like
[123:00-123:10] SPEAKER_02: part of the chat protocol is going to write into that daily and be reports. OK, new one. But don't look at it as a part. Yeah, we didn't take that away from the end chat.
[123:10-123:10] UNKNOWN: We
[123:10-123:24] SPEAKER_02: just in and then in the read me, it explicitly says like, hey, we might need to correct it and make it more explicit. But if you need to get details, go look at the daily reports. It says that as a line in the reading.
[123:34-123:34] UNKNOWN: You
[123:34-123:37] SPEAKER_02: need to stop. Are you good on time? You know,
[123:37-123:40] SPEAKER_03: we're going to breakfast. OK, so I do.
[123:47-123:47] UNKNOWN: I
[123:47-123:48] SPEAKER_02: mean, is there a cluster?
[123:49-123:50] SPEAKER_01: I don't think so.
[123:56-124:08] SPEAKER_02: Yeah. So most interesting thing I took out of today is actually like how do we optimize the right? Not even really that engaged on what's
[124:08-124:08] UNKNOWN: happening
[124:08-124:18] SPEAKER_02: in the service. Right. Yeah. Like the better we do it, optimizing the better that will be. And the quicker it will happen. Right. And the next projects.
[124:19-124:25] SPEAKER_03: Right. And ultimately, this is a this is a starting point for an optimized system.
[124:25-124:36] SPEAKER_02: Right. Yeah, we didn't we hadn't explicitly like stated that as the goal, but we had stated all of the steps along that goal. What were the steps that we were planning on taking?
[124:36-124:36] UNKNOWN: Right.
[124:36-124:46] SPEAKER_03: Yeah, that's ultimately I think what it's we are coming to like this project is an optimization tool package. Whatever.
[124:46-124:53] SPEAKER_02: It's the like Steve Jobs said he made Max so your grandma could use a computer. We're trying to make it so your grandma can use an
[124:53-124:53] UNKNOWN: AI.
[124:53-125:00] SPEAKER_02: Right. Exactly. And it actually be helpful and powerful and robust. And the primary.
[125:00-125:00] UNKNOWN: I
[125:00-125:04] SPEAKER_02: have to know what an ID is and things like that because it's super useful. Right. Exactly.
[125:05-125:23] SPEAKER_03: And the primary issue that we're trying to resolve is context, like how to condense context for a long running project. That is, it knows enough and it knows how to find new information if it needs to. Like, hey, we're logging these files of things that long running process or project,
[125:24-125:24] UNKNOWN: but
[125:24-125:34] SPEAKER_03: it only is really looking at the tactical level stuff because that's all it can do. Right. The context. But it knows somehow it has no use.
[125:35-125:35] UNKNOWN: And
[125:35-125:37] SPEAKER_03: like this thing is here. Go
[125:37-125:39] SPEAKER_02: look over here to see if you
[125:39-125:39] UNKNOWN: need
[125:39-125:45] SPEAKER_02: to be like paths of escalation to go reference a less
[125:45-126:01] SPEAKER_03: distilled version of something like no different than. It goes to the Internet and like, hey, I'm not really sure how to whatever do this. Go look at it and come back and say, now I know. Right. And that it should be able to do that to our internal files.
[126:01-126:11] SPEAKER_02: And our system has to work inside of its level of intelligence. That is the limitation because there's a lot of stuff we can do to make human understand what we're doing.
[126:12-126:12] SPEAKER_03: But that's
[126:12-126:13] SPEAKER_02: not what you. Right.
[126:13-126:14] UNKNOWN: Yeah.
[126:16-126:22] SPEAKER_03: OK, so. In check. I think we're ready for a test.
[126:22-126:22] UNKNOWN: I
[126:22-126:23] SPEAKER_03: really want to hold on.
[126:23-126:23] UNKNOWN: Let
[126:23-126:23] SPEAKER_03: me go talk to.
[126:27-126:31] SPEAKER_02: I'm going to hit the lows here before too long. OK, we'll do it some more. I
[126:31-126:31] UNKNOWN: mean,
[126:31-126:31] SPEAKER_02: we
[126:31-126:36] SPEAKER_03: can run a test, but no, it's going to be like if we start to like, yeah, you're starting
[126:36-126:40] SPEAKER_02: out. The diatomization alone is going to take. Right. So we'll then
[126:40-126:42] SPEAKER_03: never mind. Yeah, I need.
[127:31-127:33] UNKNOWN: So.
[127:36-127:37] SPEAKER_03: What are you going to do?
[127:38-128:01] SPEAKER_02: We have built some trellises for the tomatoes and cucumbers. So I'm going to get PVC pipe. We're going to build just a structure over the top of it completely and tied down from the top. Let it grow as vertical as we can make it.
[128:42-128:43] UNKNOWN: OK.
[128:55-128:59] SPEAKER_02: Well, the color would be off tomorrow. Oh,
[129:00-129:07] SPEAKER_03: yeah, I had that thought we were talking about that earlier. It's like it would be great. Yeah. If the day off was tomorrow, a lot of people took tomorrow off. That makes sense.
[129:07-129:07] UNKNOWN: So we can
[129:07-129:09] SPEAKER_03: get the five or four day weekend.
[129:09-129:10] UNKNOWN: So
[129:10-129:30] SPEAKER_02: that's the. Yeah. And then as long as there's no problems, never look at it again. Right. But if there are. Then we can go.
[129:41-129:50] SPEAKER_03: Yeah, effectively, that's the last session. I think we should start using the word session. So
[129:50-129:50] UNKNOWN: the
[129:50-130:00] SPEAKER_03: current session is going to be loaded from the memory or what is going to be loaded from the readme. And when you end the session,
[130:00-130:00] UNKNOWN: you
[130:00-130:09] SPEAKER_03: basically log what you you update the readme such that it will load for the next session. But you download what you did in this session to the last one so that,
[130:10-130:10] UNKNOWN: hey,
[130:10-130:15] SPEAKER_03: at any point, if you need to go back, like if you're confused, go back and look at the history from the last session.
[130:15-130:39] SPEAKER_02: Yeah, we go look at the readme real quick and find where it describes the path of. So. You know, I'm talking about where it like draws the arrows to like here. Yeah. So right there, we need to do that for it. Right.
[130:39-130:39] UNKNOWN: We
[130:39-130:53] SPEAKER_02: need to say, hey, like literally in the readme because the rule is already there. Hey, this is a process. This is a set. We need to find a session. Yes. A session equals begin chat protocol. If like, obviously, that does a lot.
[130:53-130:53] UNKNOWN: It
[130:53-130:59] SPEAKER_02: will know what the context is that if necessary, like a decision tree is what we
[130:59-131:14] SPEAKER_03: need. Yeah. If you don't have enough context, go back and look at this file. And then if you still don't go to another like they're dated, just keep like go, keep following that down. It's like, well, go at least three down. If you can't find it, then quit and say,
[131:14-131:24] SPEAKER_02: ask if we have a bug that we've tried to fix three times in this session. They can't figure it out. Grip the entire code base to see if we've experienced this bug before. Right. That type of
[131:24-131:38] SPEAKER_03: thing. Like if basically start expanding your search like we this is in here or go look on the Internet. I've got one of the tools or resources you have available to you is this. Right. The archive files.
[131:38-131:48] SPEAKER_02: We go to the top of the readme and manually just put that in there. Don't you have to be pretty like, hey, create decision tree example.
[131:48-132:02] SPEAKER_03: I think they should be in this would be a rule. I think it should be in the start check protocol. I don't disagree. That's where it should be because it should apply independent of this. I think
[132:02-132:20] SPEAKER_02: it's not necessarily in that step. Like imagine if we have a bug that we're looking for. That's not part of the begin chat or new chat. Yeah. So it needs to always be told because that basically that is setting us up to have to tell it to do that at some point. OK, it could be a rule that's like,
[132:21-132:21] UNKNOWN: hey,
[132:23-132:27] SPEAKER_02: every single time, like think about this every single time if you're unsure at all.
[132:27-132:42] SPEAKER_03: That is what I mean. Yeah. Basically make a rule that says, hey, if you're unsure or hey, know that this is a tool or resource available to you to do this. But I'm good with whatever you jump in. I'm good with I think I'm
[132:42-132:42] UNKNOWN: not
[132:42-132:49] SPEAKER_03: necessarily following your like I just want to make it something between you trying to tell me what to type.
[132:49-132:59] SPEAKER_02: I know. I think like this one, I literally just want to have a note. So the next time you run a begin chat protocol or a new chat protocol, it goes, oh, we need to do that. Right. That's all I like.
[133:03-133:14] UNKNOWN: Define. So.
[133:19-133:22] SPEAKER_03: Oh, this is a note for us. Yeah, I
[133:22-133:22] SPEAKER_02: was confused.
[133:22-133:22] UNKNOWN: It's
[133:22-133:28] SPEAKER_02: still not for us. It's going to see this. Yeah. Whenever you run a new chat protocol. This.
[133:38-133:41] SPEAKER_03: Maybe even put that under the current status and next steps.
[133:45-133:45] UNKNOWN: Yep.
[133:49-134:20] SPEAKER_03: Make me a little bit. There it is. Okay. And then I think we need to do the push. Okay. Like we did last time.
[134:20-134:22] SPEAKER_00: Yeah.
[134:50-134:51] SPEAKER_02: Okay.
[134:51-134:51] UNKNOWN: That's what it
[134:51-134:51] SPEAKER_02: looks like.
[134:59-135:01] SPEAKER_03: Monitoring job completion.
[135:01-135:01] UNKNOWN: Is
[135:01-135:02] SPEAKER_03: that what it should be saying?
[135:03-135:03] UNKNOWN: I
[135:03-135:04] SPEAKER_03: think so.
[135:10-135:11] UNKNOWN: Every
[135:11-135:16] SPEAKER_02: two minutes. Yeah,
[135:17-135:17] UNKNOWN: I
[135:17-135:23] SPEAKER_02: think we're good. I agree. Yeah. We're getting there. Yeah. I think this was another actually good.

==================================================
Generated on: 2025-07-25 18:09:00
Total words: 11002
Total speakers: 6
==================================================




Summary:
creation_date: 2025-07-25 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-25_1747_ZOOM0025_transcript.txt participants: SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04
Executive Summary
This working session serves as a crucial reality check and architectural refinement for the [[Transcription Service]] project. After acknowledging that the full end-to-end pipeline on [[GCP]] remains untested [00:16-01:08], the team attempts to resolve a [[GPU]] quota issue, which initially gets rejected before they successfully secure a quota for a single [[GPU]] [13:31-14:40]. This limitation forces them to pivot their immediate testing strategy to a CPU-only deployment to validate the workflow logic [19:48-20:23]. The session's primary breakthrough is a deep dive into their [[Kubernetes]] architecture, where they diagnose a fundamental design flaw: their deployment files are incorrectly creating immediate Jobs instead of reusable Job Templates, preventing their on-demand processing pipeline from functioning as intended [100:55-102:40]. They conclude by defining a clear path forward to re-architect the services as job-template-based deployments.

Key Topics Discussed
	•	Project Status & Workflow Refinement
	•	The session begins with a critical assessment that the full transcription pipeline (diarization, transcription, and alignment) has never been successfully tested end-to-end on [[GCP]], with many components only verified locally or individually [00:16-01:41].
	•	They continue to refine their [[AI Tools|AI]]-assisted workflow, establishing a system where the README.mdserves as the high-level, tactical plan, while daily markdown files (daily_md_reports) act as a historical log or "memory" for the [[AI Agents|agent]] to reference [02:15-03:09].
	•	They discuss creating a formal "session" protocol, where each work period is logged, allowing the [[AI Agents|agent]] to trace project history through a decision tree if it lacks context from the current README.md[129:41-131:38].
	•	Troubleshooting [[GPU]] Quotas
	•	The team confirms their global [[GPU]] quota is zero, which is the primary blocker for deploying their [[GPU]]-dependent services [09:05-09:31].
	•	They submit a quota increase request through the [[GCP]] console, which is initially denied due to a lack of billing history [16:21-16:39].
	•	After another attempt, they successfully get the quota for the L4 [[GPU]] increased from zero to one [33:34-33:47].
	•	Due to the single-[[GPU]] limitation, they decide to pivot the entire testing plan to be CPU-only to first validate the application logic and workflow before tackling [[GPU]] scheduling [20:02-20:38].
	•	Architectural Deep Dive: Jobs vs. Services
	•	A major realization during the session is the need to clarify whether their services on [[Kubernetes]] should be persistent, long-running services or on-demand, discrete jobs [97:52-98:14].
	•	They conclude that for their on-demand cluster model, the services should be structured as Jobs that are created, execute a single task (e.g., transcribe one file), and then terminate [100:55-102:40].
	•	Key Issue Identified: The current YAML deployment files are creating Jobs directly, which run immediately upon cluster creation. The correct approach is to deploy Job Templates, which act as blueprints. The [[Cluster Manager]] pipeline can then use these templates to create new Jobs dynamically as messages arrive in the [[Pub/Sub]] queue [100:55-104:15].
	•	Side Topics
	•	[[OKC Thunder]]: The group has a detailed discussion about the team's championship potential, the quality of their role players, and the long-term strategic decisions the front office will face regarding player contracts and draft picks [08:29-09:32].

Action Items & Decisions
	•	Decision: The team will pivot to a CPU-only deployment for the initial end-to-end test to separate workflow logic bugs from [[GPU]] resource contention issues [19:48-20:38].
	•	Decision: The [[Kubernetes]] architecture will be refactored from deploying persistent services to deploying Job Templates. This aligns with the on-demand, job-based processing model required by the [[Cluster Manager]] [106:20-107:39].
	•	Action: Modify all relevant Kubernetes YAML files to define JobTemplates instead of Jobs for the diarization, transcription, and alignment services [101:40-101:51].
	•	Action: Clean up legacy files and scripts related to the old, persistent-service architecture (e.g., the old job_controller) to avoid confusing the [[AI Tools|AI agent]] [60:32-61:10].
	•	Action: Establish a more formal "session" and "daily report" system to improve the context provided to the [[AI Tools|AI agent]] for future development [121:50-123:24].

Suggested New Links/Tags
	•	[[Job Controller]]
	•	[[Job Template]]
	•	[[Juneteenth]]

Linked Concepts
	•	[[AI Agents]]
	•	[[AI Tools]]
	•	[[brain]]
	•	[[Cloud Function]]
	•	[[Cluster Manager]]
	•	[[Cursor]]
	•	[[Diarization Service]]
	•	[[Docker]]
	•	[[GCP]]
	•	[[GKE]]
	•	[[GKE Autopilot]]
	•	[[GPU]]
	•	[[Hugging Face]]
	•	[[Job Controller]]
	•	[[Job Template]]
	•	[[Juneteenth]]
	•	[[Kubernetes]]
	•	[[OKC Thunder]]
	•	[[Project Plan]]
	•	[[Pub/Sub]]
	•	[[Service Account]]
	•	[[Transcription Service]]
	•	[[Whisper]]

#Tags
	•	#AI
	•	#Architecture
	•	#Automation
	•	#Deployment
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom26
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-29_1036_ZOOM0026_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:18] UNKNOWN: Lay down. Yeah, let's do it. Ah! It's okay. I agree. I mean, it was game three.
[00:18-00:22] SPEAKER_03: Right. That made some adjustment. Game four, we came back and won.
[00:22-00:22] UNKNOWN: Right.
[00:23-00:25] SPEAKER_03: And we literally only need to win
[00:25-00:27] SPEAKER_02: one game. When we're
[00:27-00:27] UNKNOWN: going
[00:27-00:28] SPEAKER_02: home, all this stuff.
[00:28-00:29] UNKNOWN: Yup.
[00:30-00:33] SPEAKER_02: Literally, nothing else matters. We need to win this one.
[00:42-00:50] SPEAKER_03: I need some YouTuber to make a video about what the fuck happened. Right. Like, what did they do to make
[00:50-01:00] SPEAKER_02: that happen? Do you want to work on this right now? Uh, if we can. Instead of doing it just jumping right in.
[01:03-01:05] UNKNOWN: Um, so... Let
[01:05-01:14] SPEAKER_02: me think about it. Is it a cursory rule? I think... My gut tells me it's a rule. But I don't feel super strongly about it.
[01:14-01:21] SPEAKER_03: I don't either. I think the fact that you have a feel that it should be a rule means it probably should
[01:21-01:21] UNKNOWN: be.
[01:23-01:24] SPEAKER_03: You're
[01:24-01:24] UNKNOWN: going to
[01:24-01:30] SPEAKER_03: have to open a note or something if we're going to think through this thing as we write it. Yeah. It
[01:30-01:33] SPEAKER_02: may be worth using Gemiini to do that.
[01:33-01:43] SPEAKER_03: Yeah, I was actually thinking like we'll do a Begin Chat Protocol or a New Chat and see what it says. I guess that's not enough context, that one line.
[01:44-01:47] SPEAKER_02: Yeah, I want to just throw that in here real quick.
[01:49-01:50] UNKNOWN: Um...
[01:52-01:54] SPEAKER_02: Hold on, let me jam for just a second.
[01:54-02:02] SPEAKER_03: Yeah, I think the context it needs if you go over here is that we use the Read Me, like what we use the Read Me for and stuff.
[02:02-02:02] UNKNOWN: I
[02:02-02:04] SPEAKER_03: guess we need to define a section.
[02:06-02:08] SPEAKER_02: Can I copy all of these?
[02:08-02:08] UNKNOWN: I
[02:08-02:18] SPEAKER_02: can't. Can't even edit it. Or, can't even copy it. You can... Yeah.
[03:06-03:08] UNKNOWN: Okay.
[03:16-03:19] SPEAKER_02: Is that no assumptions? No.
[03:59-06:30] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay.
[06:57-06:58] SPEAKER_02: What are those
[06:58-07:06] SPEAKER_03: other daily reports? Which isn't the perfect one, but...
[07:29-08:00] UNKNOWN: Okay. Okay.
[08:35-08:50] SPEAKER_03: I don't think that's possible. Oh, yeah. Yeah, I don't know. It will not have context from previous conversations at the end of the day. So if you started New Chats...
[09:17-10:00] UNKNOWN: Okay. Okay.
[10:36-10:39] SPEAKER_03: I might tell it that those are
[10:39-10:39] UNKNOWN: the
[10:39-10:40] SPEAKER_03: cursive rules, don't they?
[10:52-11:57] UNKNOWN: Thank you. Very nice. Okay.
[12:34-12:36] SPEAKER_02: Yeah, there you go. Again,
[12:36-12:36] UNKNOWN: append.
[12:37-12:44] SPEAKER_02: Append to something. Yeah, so just add to this file as you're going. And then it is daily. So you don't
[12:44-12:44] UNKNOWN: have
[12:44-12:45] SPEAKER_02: to make a new file. That makes sense.
[12:50-12:52] SPEAKER_03: But there should be a new one every day.
[12:54-13:03] SPEAKER_02: Did you not create a new timestamp marked out file in the daily? Yeah, I do think that.
[13:03-13:03] UNKNOWN: I
[13:03-13:04] SPEAKER_02: want to clean that up a little bit.
[13:05-13:14] SPEAKER_03: I mean, in theory, it could be one file. Again, if we're never looking at it, it's going to be pretty quickly thousands of lines of code of text.
[13:14-13:14] UNKNOWN: But
[13:14-13:17] SPEAKER_03: you can look through that. Yeah, so I guess
[13:17-13:18] SPEAKER_02: that is what it's suggesting
[13:18-13:28] SPEAKER_03: is... I guess it's a question of context. Like, do we want something that we worked on in May in that context when we're trying to solve a bug from yesterday?
[13:28-13:35] SPEAKER_02: Yeah, I think that... Oh, so it's saying make this a temporary file. Always call it daily log. And
[13:35-13:35] UNKNOWN: then
[13:35-13:35] SPEAKER_02: the
[13:35-13:35] UNKNOWN: end
[13:35-13:46] SPEAKER_02: of day protocol is to review the daily log and make a daily. Does that make sense? Yeah, when we
[13:46-13:52] SPEAKER_03: delete the daily log, yep. That makes sense.
[13:55-14:30] SPEAKER_02: Delete it and prepare for it. Yeah, exactly. Yeah, so I mean, yeah, you can put in some details in the
[14:30-14:50] SPEAKER_03: daily log. Yeah, it just needs to be a lot more detailed than that. But I get the best of examples. So, I like... We'll go back to what we were saying about git. Yeah,
[14:50-14:50] UNKNOWN: just
[14:50-14:56] SPEAKER_03: don't forget. Yeah, commit every time. Do you feel good about this?
[14:57-14:57] UNKNOWN: Yep.
[14:59-14:59] SPEAKER_02: So,
[15:01-15:01] UNKNOWN: this
[15:01-15:11] SPEAKER_02: is the new... Oh, this is just going to go in...
[15:24-15:26] UNKNOWN: Do you
[15:26-15:28] SPEAKER_02: have some sort
[15:28-16:12] SPEAKER_03: of do not delete protocol in here? I don't think it would. I think it can tell... I think it's more hesitant to actually delete things. But you could also just write, don't delete this ever. Is
[16:12-16:13] UNKNOWN: it...
[16:27-16:32] SPEAKER_03: I mean, it wrote different things. I don't know if you care.
[16:33-16:33] UNKNOWN: Oh,
[16:34-16:34] SPEAKER_03: no, I
[16:34-16:36] SPEAKER_02: do think I do care.
[16:45-16:46] UNKNOWN: Can
[16:46-16:47] SPEAKER_03: you send me that?
[16:55-17:02] SPEAKER_02: I'm going to do the rule first. That is what I'm sending you now. And then...
[17:03-17:03] UNKNOWN: Oh,
[17:04-17:10] SPEAKER_02: yeah, you can. And then the new in -chat protocol is this.
[17:21-17:22] UNKNOWN: It
[17:22-17:23] SPEAKER_03: has
[17:23-17:23] SPEAKER_02: numbers on
[17:23-17:24] UNKNOWN: it.
[17:25-17:25] SPEAKER_03: Yeah, that
[17:25-17:38] SPEAKER_02: one says rule one, as you said. Yeah, I know. I added that. I'm saying this one right here has numbers on it that didn't come through in the copy. Gotcha.
[18:27-18:44] SPEAKER_03: So we need to adjust the new chat protocol. I know it's already not looking at
[18:44-19:57] UNKNOWN: those. Okay. Okay. Is this good?
[19:57-19:58] SPEAKER_00: Yeah.
[20:00-20:01] UNKNOWN: Pretty good.
[20:02-20:11] SPEAKER_03: Feel good about those. So should we just leave the current directory as it is?
[20:14-20:14] UNKNOWN: Or
[20:14-20:24] SPEAKER_03: combine all the... Name them the temporary file names so at the end of today it'll... We'll just go ahead and do
[20:24-20:41] SPEAKER_02: an in -day protocol. I think do an end and then once it works and is successful, have it go back in and consolidate those. Okay. Into daily reports consistent with the other ones. This is only going
[20:41-20:41] UNKNOWN: to
[20:41-20:43] SPEAKER_02: be two days. I've been doing it for two days.
[20:44-20:44] SPEAKER_00: Yeah.
[20:52-20:57] SPEAKER_02: Did you pull? No, did you work yesterday? Oh, no, you're right.
[21:02-21:07] UNKNOWN: Yeah, I
[21:07-21:08] SPEAKER_02: thought that. Yeah,
[21:08-21:08] UNKNOWN: I
[21:08-21:15] SPEAKER_02: don't think there's any... Yeah, two pull. You did the last push.
[21:34-21:37] SPEAKER_03: I really wish the game was tomorrow.
[21:37-21:39] SPEAKER_02: Me too. Yeah.
[21:39-21:39] SPEAKER_03: What
[21:39-21:39] UNKNOWN: the
[21:39-21:41] SPEAKER_03: fuck are we doing in the NBA? We
[21:41-21:41] UNKNOWN: just
[21:41-21:42] SPEAKER_03: hate ratings.
[21:42-21:55] SPEAKER_02: I get frustrated during commercials. Yeah. Like, let's just go. I know that the reality of that is you can't... They're tired and things like that. Right. Let's just play 12. Let's just go.
[21:56-22:08] SPEAKER_03: Yeah. Or let the whole thing... I'm good with the three days. But how about Saturday night for game seven in the NBA? That is a fantastic time for that game. Why would it be on Sunday?
[22:08-22:08] UNKNOWN: Why would it be
[22:08-22:08] SPEAKER_03: on
[22:08-22:08] UNKNOWN: Sunday?
[22:08-22:10] SPEAKER_03: Shipped everything back one day. Right.
[22:10-22:10] UNKNOWN: The
[22:10-22:11] SPEAKER_03: entire series, it's fine.
[22:13-22:17] SPEAKER_02: And game seven would be perfect for Saturday night. Your big blockbuster.
[22:17-22:22] SPEAKER_03: Yeah. A Saturday fucking night. No one has to work tomorrow. Exactly.
[22:22-22:28] SPEAKER_02: Not a Sunday where everybody has to work. Not everybody, but everybody has to work. Your
[22:28-22:37] SPEAKER_03: entire fan base. Yeah. And you're dealing... It's just another artifact of how they've been failing for five years.
[22:38-22:38] UNKNOWN: You
[22:38-22:40] SPEAKER_03: hate ratings. Right.
[22:40-22:40] UNKNOWN: You
[22:40-23:00] SPEAKER_03: hate people watching. Schedule it late as fuck on a fucking Sunday. I don't get the prestige of Sunday shows. Right. Eight o 'clock on a Sunday. What are we doing? Right. I'm not gonna watch it. No.
[23:00-23:00] UNKNOWN: I
[23:00-23:09] SPEAKER_03: watch it during the week. Yeah. There's like one show in the past 20 years that has demanded my okay... Just that one. ...be there on Sunday. Just
[23:09-23:26] SPEAKER_02: that one. Yeah. And I was like, fine. For you, I will do that. No different than this, my interest in this series and this team. Yeah. Normally, I don't stay up till 10 or 11 o 'clock at night for anything. No. Have people come over at six?
[23:26-23:26] UNKNOWN: For you,
[23:26-23:28] SPEAKER_02: I will do it.
[23:29-23:30] SPEAKER_03: Yeah.
[23:38-23:38] UNKNOWN: I will do it.
[24:00-24:01] SPEAKER_00: Okay.
[24:47-24:54] SPEAKER_03: So, I don't know. This is gonna conflict with the global one, but it's saying we can use different types of GPUs. Right.
[24:55-25:06] SPEAKER_02: But you still can only use one at a time. Is that... I assume that the global... Based on the global, right, you can only use one at a time. So, we should use the cheaper one, the L4. And when we get two, we'll change...
[25:06-25:06] UNKNOWN: Is
[25:06-25:07] SPEAKER_02: T4
[25:07-25:20] SPEAKER_03: more expensive? I think that we looked it up. But I don't... I remember that there was basically there was only three that we could use on Cloud Run. So, it didn't like the L4 was the cheapest one that worked on Cloud Run. But I think we looked up T4
[25:20-25:28] SPEAKER_02: and it was more expensive. I think L4 is the oldest cheapest. Like the baseline. The only one. The oldest, yeah. One that is available. Yeah.
[25:43-25:44] UNKNOWN: I
[25:44-25:57] SPEAKER_03: don't like debug when using that script because I don't know what that script does. I
[25:57-25:57] UNKNOWN: guess
[25:57-26:57] SPEAKER_03: that's like I need to develop a testing ability or something because I don't trust tests when they go through. It's like cool. That did everything that that test did. But let's fucking see what happens when we push it up here. Yeah, I also don't care about actually testing the CPU versus the GPU. I know GPUs are
[26:57-26:57] UNKNOWN: fast.
[26:57-27:01] SPEAKER_03: Right, exactly. When we get them, we'll...
[27:01-27:01] SPEAKER_00: Okay.
[27:07-27:08] SPEAKER_02: Yeah. Exactly.
[27:17-27:18] UNKNOWN: It
[27:18-27:20] SPEAKER_02: was going to cause problems.
[27:26-27:36] SPEAKER_03: Yeah. Yeah, I think we need to delete that shit. The scripts? Like the scripts, the references, if those job whatever controllers are still in there, I think we did get rid of it.
[27:36-27:43] SPEAKER_02: It did. The only place like the last time when we ended chat, it was looking for anything referencing to job
[27:43-27:49] SPEAKER_03: controllers. It was just a case manifest and there was a directory. So
[27:49-28:00] SPEAKER_02: it's probably good. But I think there's those scripts or some of them we need to peek like the billing protect. Some of them, but some of them we need to just delete like these cleanup scripts.
[28:01-28:09] SPEAKER_03: Right. Especially Cloud Run. Those still work and probably would kill all the Cloud Run services, but we don't necessarily need a script in here for it.
[28:10-28:10] UNKNOWN: Right.
[28:11-28:16] SPEAKER_03: Because ultimately next time if we need to just ice all the Cloud Run stuff, I'm going
[28:16-28:16] UNKNOWN: to
[28:16-29:49] SPEAKER_03: go in there and click off that shit. Right. Like I know that that kills them. Why are we doing this? Yeah, we still don't have the... Well, maybe we need to add to the... Well, actually let's look. So a serverless audio transcription service using whisper and diarization migrated yet. So it doesn't say anything about event driven in there. I don't know if it says it further down, but like it clearly doesn't understand what we're trying to do. I mean it has the pipeline in here. Yeah, so this is not correct.
[30:00-30:01] SPEAKER_02: I'm going to have it update the reading.
[30:02-30:02] SPEAKER_03: Yeah, I
[30:02-30:02] UNKNOWN: think
[30:02-30:36] SPEAKER_03: we need to look at it because it's bad when it's off at just knowing why you have an issue with the value. You scroll down. It might actually be up, but yeah, to the architecture. So this is the overview. Like that, which I'm guessing it's looking at, does not even have the steps underneath it because I mean it says Cloud Function, but that's the cluster manager, which is supposed to do everything that it was trying to do manually just now. Right. And it's clearly not getting that context from this shitty little workflow.
[30:38-30:38] UNKNOWN: And
[30:38-31:02] SPEAKER_03: so I think generally we need to... We can have it updated, but then we need to go through it and be like, does this actually make sense? Oh, also it says that there's both run in GPUs.
[31:23-31:24] UNKNOWN: I
[31:24-31:29] SPEAKER_03: think. Did it put that in
[31:29-31:29] UNKNOWN: there?
[31:30-31:31] SPEAKER_03: It just did that.
[31:31-31:35] SPEAKER_02: I said, no, I'm going to go back and... Yeah, because it needs to
[31:35-31:37] SPEAKER_03: be right there or that just needs to be gone.
[31:37-31:55] SPEAKER_02: No, I'm going to, but I'm going to also make it understand that there's only one GPU available now after it understands that. Go do a detailed review and update of the README. Yeah. So that it accurately reflects the actual pipeline and architecture.
[31:55-31:55] UNKNOWN: All
[31:55-32:03] SPEAKER_02: right. I don't know. Well, whatever. It's going to be in all caps.
[33:07-33:09] UNKNOWN: Okay.
[33:22-33:27] SPEAKER_03: It's got some processing times in here, but there's not like a reference to...
[33:27-33:28] SPEAKER_02: It just made it
[33:28-33:33] SPEAKER_03: up. It says like five to 10 minutes for diarization, but like what if it's a three hour audio clip?
[33:36-33:40] SPEAKER_02: Yeah, that was like for our eight minute test file, those might be right.
[34:10-36:38] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay.
[37:04-37:04] SPEAKER_03: No.
[37:05-37:05] UNKNOWN: Where
[37:05-37:06] SPEAKER_03: do you see that?
[37:06-37:06] UNKNOWN: What
[37:06-37:18] SPEAKER_03: was wrong? It says architecture has been optimized for sequential GPU. Oh, yes it has. But only using it on Whisper.
[37:28-37:41] SPEAKER_02: I don't know that we're ready for production testing. We're still ready for production. Certainly not. We're in development. That one's going away. I know. I'm going to copy that to say,
[37:41-37:41] UNKNOWN: hey,
[37:41-37:47] SPEAKER_02: you're not... You advanced the status, but this is still a good status.
[37:49-37:50] SPEAKER_03: Yeah.
[37:51-37:51] UNKNOWN: I
[37:51-37:56] SPEAKER_03: guess you could argue everything for production is deployed with the exception of
[37:56-37:56] UNKNOWN: the
[37:56-38:18] SPEAKER_03: function that it's going to do. Maybe, yeah. Like all the images are up there. Yeah, and it just made a new function here just a second ago. I would nitpick the word production. I would change that to development because that's really... And I think that might actually be important. We're not in production testing. We're not testing a thing that's about to go live.
[38:20-38:20] UNKNOWN: I
[38:20-38:20] SPEAKER_03: agree.
[38:20-38:20] UNKNOWN: I
[38:20-38:49] SPEAKER_02: don't think that's nitpick. I do think it's important. I'm going to say it after it finishes. I'm
[38:49-38:49] UNKNOWN: going
[38:49-38:54] SPEAKER_02: to say delete that whole thing and just leave this one line. That would
[38:54-39:16] SPEAKER_03: be kind of funny, actually. Are you kidding me? Yeah. That's an interesting thing because if I were driving, I would have to sit there and while you were here, not flip out and curse at it. You can flip out and curse at it any time you want to. When I'm driving, it just makes me
[39:16-39:16] UNKNOWN: laugh
[39:16-39:18] SPEAKER_03: how ridiculous it would have been.
[40:00-40:47] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[40:49-40:51] SPEAKER_02: It is very important.
[41:29-42:00] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[42:10-42:27] SPEAKER_03: Like in my mind, I know there's a line in there that says at the end of testing, we need to harden security and remove allow unauthenticated, which in my head, communicates everything you just said in the prompt. But it's Mila.
[42:36-43:07] SPEAKER_02: Oh, we're doing a development project. Right. That's important. We're constantly changing code and writing the... That's an important distinction. Of course it is. It sure is, dude. But I think in its defense, you have to say the obvious. Yeah. Like, hey, this is important and it needs to be deeply understood and embedded. Oh, I would do that. It's now... True.
[43:08-43:09] SPEAKER_03: And when you do that,
[43:09-43:09] UNKNOWN: it would do it.
[43:09-43:25] SPEAKER_03: And generally default to assuming it's a thing that you really shouldn't break. Right. Like basically assume that somebody's working on this, it's paying all their bills slash the company they work for and you really need to not break. Right. But that's not what
[43:25-43:35] SPEAKER_02: we're doing. So we need to tell it. So I think I want to do an InChat protocol, capture everything, like look at it and start again. Look at everything. Does it come up the right way?
[43:35-43:44] SPEAKER_03: Yeah. And I think we need to do an end day to try to... Because basically it's going to be a weird end day that's like, hey, the current structure is
[43:44-43:44] UNKNOWN: fucked
[43:44-43:58] SPEAKER_03: up, but will you go look at those two days worth of reports? Because they're not even the standard, like it's just supposed to be daily and D report. It's not supposed to have all the other shit. Oh, I agree. I agree. I think that you want to do that now or do it
[43:58-43:58] UNKNOWN: at
[43:58-44:34] SPEAKER_03: the end of the day? Well, I think at the end of the day, ideally we have one that is in the right format. Right. And then go back after that? Well, and do it to that, but not have like, let's clean up. We can do that too at the very end, but right now it's not going to be able to execute the InChat protocol because there's no new daily and D report. Yeah. I want to hope it's just going to create it. Yeah. But regardless, an independent stuff that has nothing to do with any of that is cleaning up the current... Oh, I agree. And so I think
[44:34-44:55] SPEAKER_02: at the end, leave some time at the end to say, Hey, make the daily empty reports be right. Yeah. They're from an old rule. They're fucked up. And just independent of the rules, like just start discussing it, work on this as just like we were working on any code. Yeah. Or basically like we just did like,
[44:55-44:55] UNKNOWN: Hey,
[44:55-45:01] SPEAKER_02: work on our thinking in organization. And although we're not moving forward,
[45:01-45:01] UNKNOWN: this
[45:01-45:12] SPEAKER_02: is, this is the real goal. It's the probably primary goal. The actual transcription service is a secondary goal of what we're doing right now. Yeah. The
[45:12-45:27] SPEAKER_03: words that hit that I thought of yesterday was just kind of silly, but like they're a side effect of what we're trying to do. Yeah. Like these super powerful applications we're going to build are just like, yeah, that happened while we were developing this thing of how to work with AI. Right. Exactly.
[45:27-45:37] SPEAKER_02: Yeah. And this type of thing of the in -chat, begin chat, how to log stuff is super, is, is the, the goal. Right. And it looks like it's
[45:37-45:38] SPEAKER_03: working.
[45:39-45:39] UNKNOWN: Well,
[45:39-45:44] SPEAKER_03: um, deploy cluster manager still has the old GPU conflict.
[46:02-46:08] SPEAKER_02: So it's in there. No. Okay. Yeah. And that's just going to be temporary. It's going to delete that.
[46:14-46:17] SPEAKER_03: Will you look at it?
[46:17-46:17] UNKNOWN: Once
[46:17-46:38] SPEAKER_03: you get done. I
[46:38-46:57] SPEAKER_02: think it's doing what we want it to do. And it just has a bunch of detail that we don't need in the README, but we want probably or if you, if we wanted to, if we had been doing this the whole time, that is the daily summary of the things we did in the path we took to get through. Right.
[46:57-46:57] UNKNOWN: Because they're
[46:57-46:58] SPEAKER_02: ultimately going to be
[46:58-49:38] SPEAKER_03: that. What I'm thinking right now is like, what's the value of then taking this and distilling it again and making it less informative ultimately for the final daily report? Like I almost think instead of deleting it at the end of the day, you tag it with the date and move it to that. And just keep like appending. Don't distill it. If we're having, if we ever have you go look at this, we're specifically having an issue. And so I want you to have as much context as you can. In fact, we could combine the two and have them literally like the first thing it does is create a today inside the directory already. So we don't have to rename it, just append. Right. Like create the initial today. The first thing it should do is go check and see if there's one from today. If so, append. If not, create today. Sorry. I think improving cursor's context and whatever the lesson is with creating a useful archive are kind of two different things. Like distilling is inherently creating a less useful archive. Right. I agree. Maybe. There's an argument against it, I guess.
[49:41-49:41] UNKNOWN: But
[49:41-49:43] SPEAKER_03: maybe both again.
[49:44-49:44] UNKNOWN: So
[49:44-50:01] SPEAKER_03: like, and that gives us multiple layers of diving into debugging is okay, distill the full day, but still keep the entire, all the notes. Right. Because they're not hurting anything. We have a hundred thousand. There you go. Yes.
[50:10-50:14] SPEAKER_02: Yeah. So synthesize it, save a summary.
[50:16-50:16] UNKNOWN: Save
[50:16-50:54] SPEAKER_03: a summary to the daily in your folders. Create a subdirectory raw logs. Yeah. Yeah. Get what it's saying. The distillation transforms a simple log into a strategic asset, but I also know your limitations. Right. And sometimes you need very specific details. Not sometimes. All
[50:54-50:55] SPEAKER_02: the time.
[50:55-50:55] UNKNOWN: All the
[50:55-51:12] SPEAKER_02: time. Otherwise you act like a child. Right. Maybe not like a, like you're innocent, like a child. You just do exactly what you're told or what you think is right. Right. Which makes sense in a big scheme of things. I also don't want you going off the register and start doing things on your
[51:12-51:13] SPEAKER_03: own.
[51:13-51:13] UNKNOWN: So
[51:13-51:27] SPEAKER_03: like if I don't tell you, I don't want to spend a hundred thousand dollars a day, no matter what. But then if I tell you to spin up a hundred thousand Kubernetes clusters, you will do it. Right. So it's simple. Like it will
[51:27-51:34] SPEAKER_02: do exactly what you tell it to do and not more and not less. Which I think is the way you want it to be. We need to be different. We need to be more explicit.
[51:36-51:49] SPEAKER_03: Ultimately, after I calm down from being a little thrown a little hissy fit at it, I always end up at like, oh no, I need to be, I need to do better at telling it this or whatever. Yeah. I'm just angry in the moment.
[51:54-52:03] SPEAKER_02: So rules. You don't see rules. There's rules. The end day protocol is now
[52:03-52:26] SPEAKER_03: this. I'm going to change it on my side to capital EOD so I don't have to type that whole thing. And that's not like I'm made up. Yep. Let's go. People still showed up. That's what I'm talking about.
[52:27-52:45] SPEAKER_02: Heck yeah. I'm going to do chan. I have to start a
[52:45-52:45] UNKNOWN: new chat?
[52:45-53:34] SPEAKER_02: Actually start a new chat. I have no idea what that means. See this.
[53:40-53:47] SPEAKER_03: Welcome to a new session. Yeah. I like it.
[54:02-54:04] SPEAKER_02: Okay. Let
[54:04-54:04] UNKNOWN: me
[54:04-54:04] SPEAKER_02: deploy the function.
[54:06-54:24] SPEAKER_03: That's exactly where I wanted it to pick up. So dash porcelain outputs machine readable stuff instead of human readable stuff. Okay. And it's optimized for scripting and automation. Yeah. I think everything's going to go to that eventually. Yeah. You're
[54:24-54:24] UNKNOWN: going
[54:24-54:29] SPEAKER_03: to have to put a flag to get it human readable. Right. Exactly. Not like it's going to default to machine readable.
[54:36-54:43] SPEAKER_02: Yeah. I'm glad our big lesson learned from budgeting was $50.
[54:44-55:03] SPEAKER_03: Yeah. That's good. $40 or $30 or whatever. Yeah. Now one day we're at like $48 and that one freaking day was $30. Yep. So the rest of the days of deployment or development have cost 50 % of what that day
[55:03-55:03] UNKNOWN: was.
[55:03-55:23] SPEAKER_03: Even that next day that bump is still from Cloud Run. That's true. $7 on that day. So $37 of $45. So less than $10 but we also haven't been processing anything. So it makes sense that we're getting like pennies on that day. But I don't want to pay for errors.
[55:23-55:25] SPEAKER_02: No. Like for fake processing.
[55:25-55:26] SPEAKER_03: Yeah.
[55:26-55:26] SPEAKER_02: It's just running
[55:26-55:29] SPEAKER_03: for nothing. Just letting you know that it's
[55:29-55:34] SPEAKER_02: running. Paying for getting what you want out of it. That's different. That's what money is. Yeah.
[55:34-55:42] SPEAKER_03: You're exchanging. You view the thing that you're getting as more valuable than the dollars and anything that those dollars could otherwise get you. Right.
[55:58-56:01] SPEAKER_02: Words are coming out awfully slowly.
[56:07-56:13] SPEAKER_03: Every passing minute a few more people are using Cloud somewhere in the world.
[58:24-58:36] SPEAKER_02: But just looking at these three services, transcription services much bigger. Yeah. It doesn't necessarily mean that it's the most suited for GPUs but it's probably primary indicator.
[58:36-58:47] SPEAKER_03: Right. And outside of that context we know that Whisper is like hey this thing works but we recommend using a GPU. Like from OVN AI. For sure.
[59:30-59:31] UNKNOWN: Okay.
[59:40-59:46] SPEAKER_02: Is the local, the file of the sample audio, is the sample audio file?
[60:25-60:26] UNKNOWN: Okay.
[60:37-60:43] SPEAKER_02: It is uploading. Very very slow.
[61:16-61:17] SPEAKER_00: Okay.
[61:33-62:35] UNKNOWN: Okay. That is exactly what that suggests.
[63:19-63:21] SPEAKER_02: I think we
[63:21-63:24] SPEAKER_03: just wait. Yeah, it's still deploying for sure.
[63:26-63:27] SPEAKER_02: Do you want
[63:27-63:27] UNKNOWN: to
[63:27-63:33] SPEAKER_02: meet us to keep monitoring? I think no. We just sit here. Just watch it until we feel
[63:33-63:35] SPEAKER_03: like it's either working or not.
[63:36-63:36] UNKNOWN: And
[63:36-63:54] SPEAKER_03: then you go look at it. Yeah, it says 64 % deploying according to this. That's really health checks.
[64:22-64:23] SPEAKER_02: Sit that.
[64:24-64:32] SPEAKER_03: Yeah, it's been like that for the last few days. Maybe it really is that cheap. I mean, if it's
[64:32-64:40] SPEAKER_02: not doing anything. I mean, and we don't have to do the on -demand thing, but it's fine. I mean, maybe.
[64:41-64:51] SPEAKER_03: Maybe it is that cheap, but I don't know. You got to be, I guess, super sure that you have everything lined up exactly right. I agree.
[64:52-64:58] SPEAKER_02: And this doesn't hurt. Time is
[64:58-64:58] UNKNOWN: a
[64:58-65:01] SPEAKER_02: resource that we can... It's free to
[65:01-65:01] UNKNOWN: a
[65:01-65:07] SPEAKER_02: certain extent that unless you're just like, we got so much we need to process and it needs to stay on. Right, but then it will. But then it will. Right,
[65:07-65:07] UNKNOWN: exactly.
[65:08-65:30] SPEAKER_02: But on the weekend, while we're chilling, doing whatever, it doesn't need to be up. You don't need to risk it. I'm good. I think the flip side is complexity of starting up and shutting down and doing all of that stuff like that. But I think it's worth it either for learning, first of all, or just to be sure. And if we want to change it, we can.
[65:34-65:35] UNKNOWN: Yeah.
[65:36-65:50] SPEAKER_03: 67 percent. Where are you seeing that? It's in the Kubernetes part in the log. Oh, specifically in the Kubernetes logs. So I go into that in the logs. Yeah, that's interesting. I guess it's not just in the logs.
[65:50-65:50] UNKNOWN: It
[65:50-65:52] SPEAKER_03: was up there. Oh,
[65:52-65:52] UNKNOWN: yeah. The
[65:52-65:55] SPEAKER_03: logs was where I was at. Yeah, it's
[65:55-65:56] UNKNOWN: just up there.
[65:57-66:06] SPEAKER_03: So the question is, is it failing these health checks that it's running? It takes a little while, I
[66:06-66:07] UNKNOWN: think.
[66:08-66:49] SPEAKER_03: I mean, there certainly aren't error flags popping up in the logs. See that flag up there? This one? Yeah.
[66:49-66:59] SPEAKER_02: Yeah, that's why I'm looking at this autoscaler, these logs. I assume it's the GPU.
[67:00-67:24] SPEAKER_03: I mean, almost has to be. The CPU's exceeded.
[67:26-67:32] SPEAKER_02: Where do you see that? It's in one of the logs. In those
[67:32-68:10] SPEAKER_03: autoscaler logs? Cluster logs. I just searched quota specifically in the filter. Not like that. I'm going to put that in. That's from the 19. Fair enough.
[68:11-68:12] UNKNOWN: Disregard.
[68:13-68:19] SPEAKER_02: But it still may be an issue now.
[68:20-68:30] SPEAKER_03: Right. I mean, it's running. Create, update, update, update. I don't know. Kubernetes logs are absurd.
[68:41-68:46] SPEAKER_02: You may need to update that quota too. But I think you can do that one. Yeah.
[69:12-69:22] SPEAKER_03: Now that thing is going. Yeah,
[69:22-69:22] UNKNOWN: it
[69:22-69:52] SPEAKER_03: says cluster's running. Okay. That's actually progress.
[70:00-70:23] SPEAKER_02: Yeah, in all circumstances, it needs to get the cluster credentials and use them to talk to the cluster after it's created. Because the cluster credentials don't exist until the cluster's created. So that's part of the script. The manager needs to go get the cluster credentials. We just did it manually.
[70:27-70:28] UNKNOWN: But
[70:28-70:43] SPEAKER_02: that needs to be a part of the script. I agree. Yeah, now it can get, it can do
[70:43-70:45] UNKNOWN: it. Okay.
[70:50-70:51] SPEAKER_03: Likely is that.
[71:12-71:20] SPEAKER_02: Manually deploy resources. Fine. One of these times we're going to get through a full automated test.
[71:20-71:21] SPEAKER_03: Yeah, and I mean,
[71:21-71:21] UNKNOWN: it's one of the things that we do in Kubernetes.
[71:22-71:26] SPEAKER_03: If the automatic test doesn't work and break it down into steps, it does actually make sense.
[71:27-72:16] UNKNOWN: Yep. I
[72:16-72:24] SPEAKER_03: mean that's not actually good. What? The job template is deployed as actual running jobs. That is a problem.
[72:24-72:24] UNKNOWN: I
[72:24-72:29] SPEAKER_03: think it might help us get this test done,
[72:29-72:29] UNKNOWN: but
[72:29-72:45] SPEAKER_03: it will not help our event driven design. But if they do run and complete and give us some output then fine.
[72:52-73:00] SPEAKER_02: AMD 64, that should be, is it because they were created the wrong way?
[73:00-73:08] SPEAKER_03: I don't think so. But they were built as Linux containers.
[73:09-73:13] SPEAKER_02: Maybe, there might be some one in there that's not.
[73:15-73:47] SPEAKER_03: Yeah. So that was one problem. It was just working with the same thing and doing some shit.
[74:24-74:24] UNKNOWN: Am
[74:24-74:29] SPEAKER_02: I correct in how valid it thinks this test
[74:29-74:30] SPEAKER_03: is? Yeah.
[74:52-74:54] UNKNOWN: Okay.
[75:01-75:02] SPEAKER_02: One
[75:02-75:04] UNKNOWN: is,
[75:04-75:10] SPEAKER_02: wait, cluster, is it cluster manager? Yep.
[75:51-75:53] UNKNOWN: Okay.
[75:59-76:17] SPEAKER_02: Two, the job templates.
[76:23-76:36] UNKNOWN: It has actual jobs and not templates. Believe this people.
[77:14-77:25] SPEAKER_03: Okay. I got a mounting file system transcription service, digitization output system successfully mounted. Mounting input audio.
[77:26-77:26] UNKNOWN: So
[77:26-77:27] SPEAKER_03: like it's doing. It's working.
[77:27-77:37] SPEAKER_02: Like we might actually get output files. I think the issue is the pipeline is not exactly right, but this is the closest we've been of it being fully automated.
[77:38-77:44] SPEAKER_03: Yeah. If we get the code working and specifically like passing through and doing all the stuff, the pipeline's not
[77:44-78:12] SPEAKER_02: that hard. It's not. I agree with you. Yeah. It wants to delete all the jobs to fix it. Or do you want to let it finish this test?
[78:13-78:13] UNKNOWN: I
[78:13-78:19] SPEAKER_03: kind of want to give it another couple of minutes just to see.
[78:20-78:26] SPEAKER_02: Because getting the YAML files are type of kind job, not templates.
[78:27-78:40] SPEAKER_03: There are some warnings in here now. This NVIDIA driver package includes welcome components, but no ICD loader was detected on the system.
[79:22-80:05] UNKNOWN: Okay. Okay. Okay.
[80:33-80:35] SPEAKER_00: Okay.
[80:57-81:00] SPEAKER_02: I think we have just enough time to tear it down and do another full test.
[81:00-81:01] SPEAKER_03: Yep.
[81:22-81:23] UNKNOWN: Okay.
[81:31-81:42] SPEAKER_03: I'm not considering it before right now, but there's nothing stopping me from having my cursor look at all the GCP stuff. I can't see any code you're working on,
[81:42-82:13] SPEAKER_02: but I can... You can look, analyze the logs. 100%. That's... We've talked about that of like, hey, we need two. Right. Looking at the same thing. Yeah, that's the answer. Hey, we're running a test. Go in there and start looking at stuff. Right. Like, do a pull. Like, I can push and you can pull. Like, this is the current state. We're not working on any code. Right. We're running a... I'm running a test from here. You're reviewing the logs. We should do that. So I want to do and
[82:13-82:20] SPEAKER_03: do it in chat. I don't think we try to like truly make it a two... Like,
[82:20-82:20] UNKNOWN: I
[82:20-82:41] SPEAKER_03: think basically I can jump in. Like, right now I saw some logs and I was like, what the heck are these? I don't necessarily need to make you stop what you're doing. I can go look, but I think we'll get caught in an inefficient loop of like trying to push too much and pull and like, oh, I found this. Let me push and I'll send it back to you. Like... Yeah.
[83:05-83:24] SPEAKER_02: I think we have just enough time to do that. I agree. Okay.
[83:56-87:34] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[87:56-87:57] SPEAKER_02: Okay.
[88:02-88:03] UNKNOWN: Okay.
[88:14-88:26] SPEAKER_03: Okay. Yeah. If they were serious, they would have said like, Hey, there'll be extra security to keep people away. Right. They were just doing a cover your ass. Anybody that complains about it. We did what we try.
[88:26-88:26] UNKNOWN: We
[88:26-88:59] SPEAKER_03: did what we could. Yeah. Okay.
[88:59-88:59] UNKNOWN: I
[88:59-89:08] SPEAKER_03: think we're pretty good. Okay. Okay. Okay.
[89:12-89:13] UNKNOWN: Okay.
[89:21-89:24] SPEAKER_03: There we go,
[89:24-89:24] UNKNOWN: copy,
[89:25-89:26] SPEAKER_03: sample out here.
[89:33-89:35] UNKNOWN: It
[89:35-89:43] SPEAKER_02: should automatically authenticate itself. Automatically deploy resources and do them as jobs.
[89:43-89:43] UNKNOWN: Or
[89:43-89:44] SPEAKER_02: job templates.
[89:45-89:50] SPEAKER_03: Just save them as jobs and wait. And if you get something that says,
[89:51-89:51] UNKNOWN: hey,
[89:51-89:53] SPEAKER_03: go, then you go.
[91:38-91:41] SPEAKER_02: Hey, what's up? Hello?
[91:42-91:44] SPEAKER_01: First off, we may be the worst team in the NBA yet.
[91:44-91:45] SPEAKER_02: It's not true.
[91:46-91:47] UNKNOWN: I know.
[91:47-91:48] SPEAKER_01: God, I think I'm
[91:48-91:48] UNKNOWN: gonna
[91:48-91:49] SPEAKER_01: freaking say
[91:49-91:53] SPEAKER_02: it, though. It's just, we've got one game left. And that's the only one that matters.
[91:54-91:55] SPEAKER_01: I still think it's conspiracy.
[91:55-91:56] SPEAKER_02: Maybe.
[91:56-91:56] UNKNOWN: We
[91:56-92:05] SPEAKER_02: gotta make money. It may be. And going to game seven is much better for the league. It's much better for everybody. Or maybe not everybody. It's much better for the league, for sure, and the fans.
[92:06-92:07] UNKNOWN: Yeah, and
[92:07-92:08] SPEAKER_01: you
[92:08-92:08] UNKNOWN: know, it would be cool to
[92:08-92:09] SPEAKER_01: win one
[92:09-92:17] UNKNOWN: in Oklahoma. And then go to Indiana. What do we think about going up Sunday, watching at a bar,
[92:19-92:20] SPEAKER_01: stay the night, go to
[92:20-92:20] UNKNOWN: the
[92:20-92:21] SPEAKER_01: parade the next day?
[92:21-92:21] UNKNOWN: If
[92:21-93:02] SPEAKER_02: the parade is the next day, I think that would be cool. Or we also consider going to, like, there's watch parties around here. I think I would rather do that. Even if, and rather than staying the night there and everything, we're gonna go out, go here. But I don't know. Let me think about it, or see what areas there are to go and stuff like that. Okay, yeah, let me look at it and talk to your mom. Alright.
[93:03-93:46] UNKNOWN: Beep, beep, beep. That would
[93:46-94:05] SPEAKER_03: be really funny. Is to host a watch party at the airport. That's funny. Yeah, everybody camped out in like, car like doing tailgating, RVs. In the parking lot. Yeah.
[94:08-94:13] SPEAKER_02: Like, they're not even flying, like I know. We just wanted to watch here. Just a little fuck you.
[94:13-94:41] SPEAKER_03: You can't tell me what to do. Yeah, I get where he's coming from, but... I would absolutely do that tomorrow. Right, but going to work the next day? Yeah, and we've got like, the birthdays and father's day. Yeah,
[94:41-94:45] SPEAKER_02: we probably can't do that. And it would have to be after all of that.
[94:46-94:55] SPEAKER_03: Yeah, timing wise, we can probably get to where we go somewhere locally. Right. Ultimately, we're just gonna hang out here and by the pool and all that shit. That's what's gonna end up happening.
[94:57-94:57] UNKNOWN: And
[94:57-94:58] SPEAKER_02: it's much
[94:58-94:59] SPEAKER_03: more comfortable.
[95:00-95:00] UNKNOWN: Yeah,
[95:00-95:04] SPEAKER_03: and I mean, if he's willing to do it,
[95:04-95:04] UNKNOWN: and
[95:04-95:04] SPEAKER_03: it's free,
[95:05-95:05] UNKNOWN: like...
[95:05-95:05] SPEAKER_03: Yeah.
[95:07-95:08] UNKNOWN: Versus
[95:08-95:14] SPEAKER_03: a couple hotel rooms with several people packed into them or a lot of hotel rooms. Or Airbnb, I
[95:14-95:14] UNKNOWN: guess.
[95:14-95:16] SPEAKER_03: Not cheap. Yeah,
[95:16-95:27] SPEAKER_02: I mean Airbnb, basically. Yeah. And I assume everybody's raising all of those prices for that. I certainly would. Yep. Yep, you can stay at this house. Of
[95:27-95:27] UNKNOWN: course. Six
[95:27-95:30] SPEAKER_02: hundred dollars a night. Yeah. Maybe more than that.
[95:31-95:37] SPEAKER_03: Yeah, and like literally, as of halfway through the third quarter last night, prices went up.
[95:37-95:37] UNKNOWN: Like,
[95:37-95:39] SPEAKER_03: those people were paying attention.
[95:50-95:55] SPEAKER_02: Yeah, I think this is a bad command or something. Maybe. And it's now stuck.
[95:57-96:06] SPEAKER_03: Will you look at it again real quick? Because it did that weird one yesterday. Yeah, and it looked like this and it was
[96:06-96:13] SPEAKER_02: stuck. Was it stuck? Oh, it looked like this and we ended up hitting stop. Yeah. What do we... So
[96:13-96:13] SPEAKER_03: it's trying
[96:13-96:16] SPEAKER_02: to... I guess it's periodically just looking.
[96:16-96:23] SPEAKER_03: Right. And it's... waiting for something specifically, right? Like, no.
[96:24-96:25] UNKNOWN: I
[96:25-96:26] SPEAKER_03: don't know what it's
[96:26-96:39] SPEAKER_02: doing. I'm gonna hit accept for whatever's over there. Yeah. And then I'm gonna hit stop. And go continue... Okay, go monitoring.
[96:51-96:51] SPEAKER_03: Okay.
[96:51-96:51] UNKNOWN: We
[96:51-97:49] SPEAKER_03: got like, artifact registry stuff happening. This was 30 minutes ago. Is this a thing that Terraform fixes? It might be. Like, instead of... Basically, the cluster manager is a homemade...
[97:49-98:02] SPEAKER_02: Yeah, it is. It's a boutique. Oh, I think here's the issue right here. You have to give it IAM permissions for that cluster. Maybe. I don't know.
[98:11-98:13] SPEAKER_03: It's just kind of does, I think,
[98:14-98:14] UNKNOWN: this.
[98:16-98:19] SPEAKER_03: Yeah, you can manage any cluster. Yeah.
[98:24-98:38] SPEAKER_02: Oh, it just checked too soon. Possibly. The custom authentication logic might not be good.
[98:46-98:48] SPEAKER_03: What's the trade -off for this
[98:48-99:24] SPEAKER_02: simpler, more reliable fix? Right. And I don't know that... Whatever. Like, what's the infrastructure? Terraform won't fix this. I think the permission will still be like this. What is to fix? What you do? I don't know if this is grabbing to
[99:24-99:25] UNKNOWN: me.
[99:26-99:27] SPEAKER_02: Yeah.
[99:56-99:58] SPEAKER_03: Okay.
[100:02-100:02] UNKNOWN: Okay.
[100:03-100:05] SPEAKER_03: Quite a reliable... Yeah, I
[100:05-100:05] UNKNOWN: believe
[100:05-100:06] SPEAKER_03: on it.
[100:40-100:55] SPEAKER_02: Yeah, I mean, it's doing that echo stuff. I don't know if that's actually going to the logs or... It doesn't matter to me. Yeah, I agree. As long as you can capture it all in our notes. Yeah.
[101:14-101:16] UNKNOWN: Okay.
[101:45-101:51] SPEAKER_02: Anything ever make it to Alpha buckets? Not the last time I checked.
[102:04-102:11] SPEAKER_03: Just the data -ization from a week ago. I'm going
[102:11-102:11] UNKNOWN: to
[102:11-102:14] SPEAKER_03: delete the audio file and then we'll put audio... Okay.
[102:31-102:51] SPEAKER_02: Oh, it just uploaded another file. Sorry. Oh, sorry. I deleted the one. It's interesting. This is a bit of a different test in and of itself. Right. Like, with the cluster up, does it make anything go wonky? Try to create a whole new cluster. Right. All of that stuff like that.
[102:52-102:56] SPEAKER_03: Yeah, this is a test that we need to run. Yeah.
[103:10-103:10] UNKNOWN: Do
[103:10-103:13] SPEAKER_03: you want me to delete some images?
[103:15-103:20] SPEAKER_02: I think so, or have it do it is what I was going to go through a cleanup process at some point.
[103:20-103:29] UNKNOWN: Okay. There we go.
[103:31-103:52] SPEAKER_03: It should do that. Thank
[103:52-103:52] UNKNOWN: you.
[103:52-103:58] SPEAKER_03: It handles the air okay, right? I think so. Completely failed in an account.
[103:59-103:59] UNKNOWN: Is
[103:59-105:23] SPEAKER_03: that maybe not? So it changes self .stay equals clusterState .noCluster to if not self .cluster exists, self .createCluster else move on. It keeps saying perfect as though you don't know what that word means. This does get to like the, it seems boring just sitting and waiting, but this is part of the process. Even if we went and wrote all the code, we'd be sitting and waiting on this function to deploy. No question. We just get to those points more
[105:23-105:26] SPEAKER_02: often. Right, exactly. And it's good.
[105:26-105:26] UNKNOWN: I
[105:26-105:34] SPEAKER_02: think we're moving, we're burning down errors and bugs. Yeah. But they're getting smaller and smaller and it's getting closer to the thing.
[105:34-105:34] UNKNOWN: An actual
[105:34-105:46] SPEAKER_02: path. Yep. I think we're, there still might be bugs in the actual code. Like I think right now we're still debugging the pipeline.
[105:46-105:46] UNKNOWN: I
[105:46-105:47] SPEAKER_02: agree.
[105:48-106:08] SPEAKER_03: The value we have is with the exception of alignment, the code is not, it works. Right, I agree. Like and so the pipeline is, it almost has to be the issue. Gonna upload again. Yep, that's
[106:08-106:08] UNKNOWN: fine.
[106:15-106:16] SPEAKER_02: Final test.
[106:19-106:34] SPEAKER_03: Gonna sleep for 10 whole seconds and see if everything's done. I guess that makes sense if the cluster's already out.
[106:43-106:43] UNKNOWN: Did
[106:43-106:45] SPEAKER_00: you feed him, Mark?
[106:46-106:47] SPEAKER_03: Yes. Great.
[106:48-106:51] SPEAKER_00: You know, you're like still alive to me.
[106:51-106:56] SPEAKER_02: He does. He's smart, he's sneaky. Yeah,
[106:56-106:58] SPEAKER_00: right.
[107:10-107:18] SPEAKER_03: Is it confused about service accounts again? Like that cube,
[107:19-108:01] SPEAKER_02: whatever, essay? Yeah. So I think it is. You're right. The service accounts have the correct permissions. What the script, or whatever else, I'll call it script, needs to do is retrieve the cluster
[108:01-108:10] SPEAKER_03: credentials. Yeah, because it's trying to do the exact same test we just have done twice now. That's its next step.
[108:19-108:52] SPEAKER_02: So effectively those credentials are the SSL certificate. Right. To be able to write cube CTO commands. That's what I thought we were doing before. Yeah. That cube CTO for me works because I can get the cluster, it automatically does it.
[108:53-108:53] UNKNOWN: Right.
[108:57-109:02] SPEAKER_02: But not that computer, the service account doesn't. It needs to go do it.
[109:13-109:19] SPEAKER_03: So I thought we were doing before. It says it mimics it. What's it doing?
[109:26-109:26] SPEAKER_02: I don't know,
[109:26-109:26] UNKNOWN: I
[109:26-109:28] SPEAKER_02: probably should have looked at that one.
[109:28-109:30] SPEAKER_03: Oh, you just hit that drop down here? Yeah.
[109:33-109:44] SPEAKER_02: So got rid of all that and did this. Get Google Cloud credentials.
[109:58-110:06] SPEAKER_03: Should that user not be the service account? Where is that what it's doing? Users is that block right there.
[110:09-110:18] SPEAKER_02: I think that is how you build the service account. The service account
[110:18-110:25] SPEAKER_03: is there. Yeah, you're right. I may not understand what that's actually doing.
[110:27-110:35] SPEAKER_02: I'm not sure. I don't understand what it's doing. I will be sure.
[110:35-110:35] UNKNOWN: I
[110:35-110:46] SPEAKER_03: think it's just going down the full line.
[111:02-111:03] SPEAKER_02: You called the last one final.
[111:12-111:13] UNKNOWN: I'm
[111:13-111:23] SPEAKER_02: sure there's not like 40 clusters. I'm sure there's a limit to number. I think we can only make three.
[111:25-111:31] SPEAKER_03: At least at some point in the code somewhere there was a hard limit of one. Maybe. By us. No, I agree.
[111:31-111:31] UNKNOWN: But
[111:31-111:32] SPEAKER_03: in the quota
[111:32-111:45] SPEAKER_02: wise, right. Let me create more than three. That makes sense. This is dependency. Okay. That it does need that. I can see why it's like trying to log in as a user.
[111:46-111:46] UNKNOWN: Yeah.
[111:50-111:50] SPEAKER_03: I
[111:50-111:51] UNKNOWN: believe.
[111:52-111:58] SPEAKER_03: We're going. Let's go back to a simpler, more direct approach.
[111:58-111:58] UNKNOWN: I mean, I know there are some things
[111:58-111:59] SPEAKER_03: that you
[111:59-111:59] UNKNOWN: can do that
[111:59-111:59] SPEAKER_03: are
[111:59-111:59] UNKNOWN: like the more direct, You know, the more direct IE
[111:59-112:14] SPEAKER_03: approaches that haven't worked, but like, fine. As long as you actually did it. Let's see. Back to the credential approach without the problematic off -plugging dependency. What.
[112:18-112:19] UNKNOWN: I
[112:19-112:20] SPEAKER_03: feel like
[112:20-112:20] UNKNOWN: we
[112:20-112:32] SPEAKER_03: might be spinning wheels, but give it one more chance. Because we're at a tear down. Yeah. Pretty sweet.
[112:52-113:13] SPEAKER_02: Yeah. I think that I want to change that rule. I don't do it right now, but the rule to say, begin and end session. That's the word that it's not just it's like we're getting ready to go through a session and talk and do like so. You have begin a session and end a session. That does make sense.
[113:13-113:13] UNKNOWN: I'm
[113:13-113:20] SPEAKER_02: going to do that. I think that's the. So
[113:20-113:29] SPEAKER_03: I've got, I call it EOD for end of day. And then I will say. And.
[113:57-114:40] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay.
[114:45-114:58] SPEAKER_03: Okay. Okay. I'm going to want to show that pot portions authenticated GKE clusters. Okay. Okay.
[115:52-116:18] UNKNOWN: Okay. Okay.
[116:47-116:48] SPEAKER_02: Okay.
[116:52-116:54] UNKNOWN: Okay.
[117:06-117:53] SPEAKER_02: Okay. Potions. This should be a rule.
[117:58-118:10] SPEAKER_03: I don't know. That seems kind of like. I guess it's. Introducing the concept, but the concept is very well defined. Okay.
[118:10-118:10] UNKNOWN: In
[118:10-118:13] SPEAKER_03: the new session and in session.
[118:32-118:44] SPEAKER_02: Okay. Okay. And so.
[118:49-119:08] SPEAKER_03: You want to get started on killing the cluster. Yes. I forgot about that. I guess that should in theory be part of the end of day protocol.
[119:09-119:14] SPEAKER_02: Well, it should automatically. It should kill itself. Like if everything's working correctly.
[119:15-119:20] SPEAKER_03: But almost nothing is working. Have we actually seen to do that?
[119:20-119:21] SPEAKER_02: No.
[120:33-120:40] SPEAKER_03: Okay. I think it is. Motherfucker. I guess it's that.
[121:26-121:40] UNKNOWN: Okay. Okay.
[122:01-122:02] SPEAKER_03: Initiate.
[122:04-122:44] UNKNOWN: Okay. Okay. Okay. Okay. Okay.
[122:49-122:50] SPEAKER_02: Okay.
[122:55-122:57] UNKNOWN: Okay.
[123:15-123:42] SPEAKER_03: Okay. Okay. Okay.
[123:42-123:42] UNKNOWN: I don't
[123:42-123:53] SPEAKER_03: know if those should be. All in one rule or if they should be individual.
[123:53-123:53] UNKNOWN: I
[123:53-123:53] SPEAKER_03: just don't know.
[123:54-123:54] UNKNOWN: Like
[123:54-123:57] SPEAKER_03: what cursor is better at.
[124:02-124:08] SPEAKER_02: Yeah. I'm going to leave all of them in there for right now. Yeah. They're not hurting anything. I got to go.
[124:10-124:10] UNKNOWN: And
[124:10-124:11] SPEAKER_02: I want to do.
[124:15-124:18] SPEAKER_03: It's working. I will. Well.
[124:19-124:20] UNKNOWN: I
[124:20-124:21] SPEAKER_03: forgot about.
[124:27-124:45] UNKNOWN: Okay. Okay.
[124:45-124:57] SPEAKER_03: So we should get a new file and daily MD reports. And either. Daily log. MD is gone or it's just empty.
[124:58-124:59] UNKNOWN: Correct.
[125:05-125:12] SPEAKER_03: It's not going to do it in the directory. I assume it would get given us a path.
[125:17-125:18] UNKNOWN: I
[125:18-125:23] SPEAKER_03: can finish this stuff. I'm going to see if.
[125:33-125:34] UNKNOWN: I'm going to see if it's going to do it.
[125:34-125:47] SPEAKER_03: No, we should also get the new directory. Inside daily MD reports. That has everything. From that file. And then that file should be deleted. Oh,
[125:55-125:55] UNKNOWN: baby.
[125:59-126:01] SPEAKER_03: And it deleted them.
[126:04-126:05] UNKNOWN: Oh,
[126:19-126:23] SPEAKER_02: I think they should also have. Stuff about pushing.
[126:24-126:28] SPEAKER_03: You're right.
[126:41-126:41] UNKNOWN: We
[126:41-126:45] SPEAKER_03: need to start calling seven thirty. So we can actually.
[126:53-126:54] UNKNOWN: Forty five.
[127:06-127:07] SPEAKER_03: Oh.
[127:08-127:08] UNKNOWN: critiam
[127:08-127:45] SPEAKER_03: works. Yeah, maybe. The only thing in my head for Terraform is that seems like something it might handle. Or maybe we're just using autopilot in such a weird way that we do have to come up with our work around. Right, maybe. And that might be one of the tools that we contribute to the community. It's like, hey, what are that concept of this cloud run or autopilot as cloud run? Right. Or something like that. I agree. And the tools with which
[127:45-127:59] SPEAKER_02: to make that work. Yeah, maybe we're doing some independent research of how do you make a cloud function authenticate to a newly created cluster.
[128:00-128:00] UNKNOWN: Because
[128:00-128:07] SPEAKER_02: I can do the whatever command that says get the credentials. Then it logs it in my system. And then I can use it from that point forward.
[128:07-128:10] SPEAKER_03: Yeah, it might be time for a Jupyter notebook,
[128:10-128:10] UNKNOWN: too.
[128:10-128:15] SPEAKER_03: Maybe. To go through specifically the full flow of creating the cluster.
[128:16-128:16] UNKNOWN: I
[128:16-128:18] SPEAKER_03: don't know exactly how that would work inside of a Jupyter notebook.
[128:19-128:19] UNKNOWN: But
[128:19-128:21] SPEAKER_03: that functionality of,
[128:21-128:21] UNKNOWN: hey,
[128:22-128:34] SPEAKER_03: do this very first step. Now, what happened? Assess every variable that came out of that step. Right. Now, let's determine the second step. And there might be 1 ,000 steps.
[128:34-128:34] UNKNOWN: But
[128:34-128:39] SPEAKER_03: then at least I can just turn it off. There might be
[128:39-128:39] UNKNOWN: a
[128:39-128:44] SPEAKER_03: ton of steps. But that's better than just this wheel spinning in this one round
[128:44-128:44] UNKNOWN: step.
[128:44-128:45] SPEAKER_03: We don't know what's happening. Right.
[128:45-128:46] SPEAKER_02: I'm going to hit.

==================================================
Generated on: 2025-07-29 10:54:30
Total words: 7360
Total speakers: 5
==================================================




Summary:
creation_date: 2025-07-29
source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-29_1036_ZOOM0026_transcript.txt
participants: SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, UNKNOWN

Executive Summary
This meeting focused on refining workflow automation protocols using an AI assistant ([[Cursor]]) and debugging a serverless audio [[Transcription Service]] on [[GCP]]. The participants established "begin session" and "end session" protocols to improve context and logging for the AI, deciding to maintain both raw and summarized daily logs for better debugging. A significant portion of the session was dedicated to troubleshooting the deployment of the service on [[GKE]], specifically addressing issues with [[GPU]] allocation, [[Job Template]] deployment, and [[Service Account]] authentication for the [[Cluster Manager]]. The primary goal was defined as improving the human-AI development process itself, with the transcription project serving as the test case. The conversation also included a brief discussion about the [[OKC Thunder]]'s playoff performance and scheduling.

Key Topics Discussed
	•	Workflow & AI Collaboration
	•	The primary goal of the project was clarified: developing an effective methodology for working with [[AI Agents]], with the [[Transcription Service]] being a side effect of that effort.
	•	New protocols for managing development sessions with [[Cursor]] were established, including "begin session" and an [[End-of-Day Protocol]].
	•	The [[End-of-Day Protocol]] involves synthesizing a detailed daily log into a strategic summary while also archiving the raw log file for deeper context, creating a multi-layered archive for future debugging.
	•	[[Transcription Service]] Debugging
	•	Deployment Pipeline: The team worked to resolve a critical issue where [[Job Template]]s were being deployed as active, running jobs, which breaks the event-driven design.
	•	Authentication: A recurring problem was identified where the [[Cluster Manager]] ([[Cloud Function]]) fails to automatically authenticate with newly created [[GKE]] clusters. The process requires manually getting cluster credentials, which needs to be automated within the script.
	•	Infrastructure & Configuration:
	•	They confirmed the architecture uses a single [[GPU]] sequentially, first for [[Whisper]] and then for other processes.
	•	Cleanup scripts were reviewed, with a decision to remove outdated ones related to [[Cloud Run]] and old [[Job Template]] controllers.
	•	The team used [[Gemini]] to help update the project [[README]] to accurately reflect the current architecture and development status, correcting misunderstandings the AI had about the pipeline.
	•	Sports & Scheduling
	•	The participants briefly discussed the [[OKC Thunder]]'s playoff series, expressing frustration over game scheduling and speculating on plans for watching the upcoming final game.

Action Items & Decisions
	•	Decision: The "End of Day" process will now be called the [[End-of-Day Protocol]]. It will synthesize the daily log into a summary, create a new dated folder, move the raw log into it, and then delete the temporary daily log.
	•	Decision: The project's official status is "development," not "production testing." This distinction is critical for providing the correct context to the AI assistant.
	•	Action: Update the project [[README]] to accurately reflect the event-driven pipeline, the sequential use of a single [[GPU]], and the correct development status.
	•	Action: Resolve the authentication issue where the [[Cluster Manager]] fails to get credentials for newly created [[GKE]] clusters.
	•	Action: Fix the deployment script to ensure it deploys [[Job Template]]s correctly rather than as active jobs.

Suggested New Links/Tags
	•	[[End-of-Day Protocol]]
	•	[[README]]

Linked Concepts
	•	[[AI Agents]]
	•	[[Cluster Manager]]
	•	[[Cloud Function]]
	•	[[Cloud Run]]
	•	[[Cursor]]
	•	[[End-of-Day Protocol]]
	•	[[GCP]]
	•	[[Gemini]]
	•	[[GKE]]
	•	[[GPU]]
	•	[[Job Template]]
	•	[[OKC Thunder]]
	•	[[README]]
	•	[[Service Account]]
	•	[[Terraform]]
	•	[[Transcription Service]]
	•	[[Whisper]]
	•	[[Workflow Automation]]

#Tags
	•	#AI
	•	#Automation
	•	#Deployment
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom28
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-29_1055_ZOOM0028_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:02-00:02] UNKNOWN: I
[00:02-00:10] SPEAKER_01: think you saw but I don't know if you had a chance to look at what I sent from Gemini. Oh
[00:10-00:10] UNKNOWN: I
[00:10-00:11] SPEAKER_01: was
[00:11-00:11] UNKNOWN: looking
[00:11-00:21] SPEAKER_01: through it. I didn't spend very much time with it. So I don't know if that makes sense completely. It
[00:21-00:26] SPEAKER_04: made sense on my first read through but obviously you gotta do it.
[00:26-00:26] UNKNOWN: So you
[00:26-00:28] SPEAKER_04: basically put the secret inside the cluster?
[00:30-00:30] SPEAKER_01: No
[00:30-00:31] SPEAKER_04: I don't think that's
[00:31-00:31] SPEAKER_01: not
[00:31-00:31] SPEAKER_04: the way
[00:31-00:39] SPEAKER_01: I... It's got a secret manager add on? Yes. For the cluster. That makes sense.
[00:43-00:43] UNKNOWN: So
[00:43-00:44] SPEAKER_01: something's active and
[00:44-00:45] SPEAKER_04: not
[00:45-00:45] UNKNOWN: working.
[00:45-00:50] SPEAKER_04: Yeah that's that check. I don't know why it's an error now.
[00:51-00:51] UNKNOWN: In
[00:51-00:51] SPEAKER_04: the previous
[00:51-01:51] SPEAKER_01: it wasn't. Okay. I think somewhere to start. But yeah so I think that the way I looked at this, and like I said I didn't look at it very much. There is a module or add on to the cluster. That allows it to find secrets from Google Cloud. But then the secret is just in Google Cloud. I mean that was the way that I saw it. Like there's a CSI driver which becomes a resource in Kubernetes. And then once you have that resource type you can then create a YAML that deploys that secret provider class.
[01:52-01:53] SPEAKER_02: That makes
[01:53-02:02] SPEAKER_01: sense. And then so then Kubernetes knows how to find secrets from GKE. Right. I mean Kubernetes knows how to find secrets from secret manager.
[02:03-02:03] SPEAKER_03: Yeah.
[02:05-02:12] SPEAKER_01: I think this will work. And I think, and I think it's the issue we're having like because it can't get that secret.
[02:14-02:17] SPEAKER_04: It's the current issue. Right. Like we've seen it get the secret
[02:17-02:23] SPEAKER_01: before. Only
[02:23-02:24] UNKNOWN: in,
[02:28-02:30] SPEAKER_01: yeah we have seen it get the secret before.
[02:30-02:31] SPEAKER_04: Yeah because we've run diarization
[02:31-02:31] SPEAKER_01: on
[02:31-02:32] SPEAKER_04: GCP.
[02:36-02:40] SPEAKER_01: We have run diarization on GCP. Huh.
[02:42-02:47] SPEAKER_04: I don't know if it was inside a cluster. I don't remember where we ran it. That's not.
[02:47-02:49] SPEAKER_01: I think we ran it locally.
[02:49-02:49] UNKNOWN: I don't
[02:49-02:50] SPEAKER_01: know.
[02:50-02:54] SPEAKER_04: Definitely ran it because we've had it. It's been output to the bucket. It has gone to the
[02:54-02:54] UNKNOWN: bucket
[02:54-02:55] SPEAKER_04: before.
[02:56-02:57] SPEAKER_01: Were we running it locally?
[02:57-02:59] SPEAKER_04: No. I think it was in Cloud Run.
[03:00-03:15] SPEAKER_01: Maybe it was in Cloud Run. It was in Cloud Run. Yeah. For sure. It was in GKE. So I do think we need to do that. That helps. That's better. Are you good with doing this?
[03:15-03:16] SPEAKER_04: Yeah. That makes sense to me.
[03:18-03:18] UNKNOWN: Maybe
[03:18-03:20] SPEAKER_04: copy that into Cursor.
[03:20-03:25] SPEAKER_01: Yeah. I'm going to. Do you want to look at these logs first?
[03:26-03:34] SPEAKER_04: I had Cursor look at them this morning and it claims that they are exactly those Cloud Scheduler ones. And it gave some of
[03:34-03:34] UNKNOWN: them.
[03:34-04:37] SPEAKER_04: It pissed me off just immediately this morning. I said look at unfiltered logs. It gave me a command for some filtered logs. Three commands. I said what the fuck are we even doing now man? Check the logs. Checking the logs required one command. It started being like oh wow you're mad at me. And then it looked finally. And at the ones I was going it was like oh yeah that says it's happening every two minutes. Can't find any instances to monitor because there are zero VM controllers, zero clusters. System is completely idle. Monitor is looking for infrastructure that doesn't exist causing constant failures. The problem, the monitoring function is broken. It should handle the no instances case. So it's not. If you want the logs to look different we can change it. But it's not broken. So is. What is this function doing? It's the one checking if anything is running and the status of everything.
[04:38-04:54] SPEAKER_01: Well then what does the cluster monitor or cluster controller do? That's what this is. Cluster controller dash monitor. I'm saying the one that runs on the VM. Oh I don't know. Do we need this and the cluster? I doubt it but we talked about that. Right that's what I'm saying.
[04:54-04:54] UNKNOWN: Do
[04:54-04:56] SPEAKER_01: you want to handle this first?
[04:56-04:57] SPEAKER_02: Oh yeah we can.
[04:59-05:03] SPEAKER_01: So did you upload anything or change anything?
[05:03-05:29] SPEAKER_04: No I just had it. Whenever I saw those reds I was like shit. And then held my breath while I clicked to the billing page. I checked the billing last night before I left the bed and it hadn't changed. It's only like four and a half months until next season's tip up.
[05:29-05:32] SPEAKER_01: Exactly. I know. I'm excited.
[05:33-05:33] SPEAKER_00: Right.
[05:50-05:52] SPEAKER_01: Matt just sent this to me.
[05:53-05:53] UNKNOWN: That
[05:53-05:56] SPEAKER_01: is not what I was. I
[05:56-05:56] UNKNOWN: thought
[05:56-05:58] SPEAKER_01: it was going to be. Oh yeah.
[06:00-06:02] SPEAKER_04: Yeah. They're just
[06:02-06:05] SPEAKER_01: shooting downtown. OK see you last night.
[06:07-06:09] SPEAKER_02: People are the worst.
[06:11-06:11] SPEAKER_01: Sorry.
[06:14-06:16] SPEAKER_04: According to Jim and I last night the parade's tomorrow.
[06:17-06:19] SPEAKER_01: It is. Yeah tomorrow, Tuesday.
[06:23-06:29] SPEAKER_04: And I immediately went through the whole, I'll go to that, hold on just
[06:29-06:29] UNKNOWN: a
[06:29-06:36] SPEAKER_04: second. That's like four and a half hours of drive and ultimately I'm going to stand there while the bus drives by for about three minutes. No I'm not doing that. And
[06:36-06:43] SPEAKER_01: I'm just, I don't want to be in a big giant crowd. I already have thoughts too. And it's in
[06:43-06:43] UNKNOWN: the
[06:43-06:44] SPEAKER_01: middle of the day.
[06:44-06:57] SPEAKER_04: Yeah on a Tuesday. I hope a lot of people show up. I'm not going to. That makes sense to me too. Those dudes are ready to go on vacation. Right.
[06:58-06:58] UNKNOWN: Like
[06:58-07:09] SPEAKER_04: let's get this done. It's cool. I appreciate you all. But yeah I'm leaving. Their standard vacation is already about six weeks shorter than North. Right. I'm going to
[07:09-07:09] SPEAKER_01: Europe.
[07:11-07:14] SPEAKER_04: Now they're going somewhere. Where? In the Caribbean I guess.
[07:36-07:53] SPEAKER_01: It's doing stuff. I'm going to work on this other stuff first. Okay. I'm going
[07:53-07:53] UNKNOWN: to
[07:53-07:55] SPEAKER_01: let it finish doing this I guess.
[08:21-14:09] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[14:18-14:28] SPEAKER_01: I'm excited. What? That's funny. I don't know that you're actually excited.
[14:55-15:33] UNKNOWN: Okay. Okay.
[15:33-15:40] SPEAKER_01: I thought we were having problems with the diorization service.
[15:42-15:48] SPEAKER_04: Definitely are but this entire thing is called Mount Bistro.
[16:02-16:07] SPEAKER_01: I think both of them load tokens. No just the diorization service.
[16:07-16:09] SPEAKER_04: Whisper is open source.
[16:10-16:11] SPEAKER_01: Yes.
[16:17-19:08] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[19:45-19:47] SPEAKER_02: What the fuck?
[19:49-20:04] SPEAKER_01: Yeah. I think maybe go back to maybe. I don't know maybe leave it just to
[20:04-21:46] UNKNOWN: see. Okay. Okay. Okay.
[21:49-22:05] SPEAKER_04: Apparently that's the first time Kyle's been in water with his clothes on. Oh really? And he was like. I'm not getting back in the pool with my clothes on again. He said if they win I will go make a basket. That's funny.
[22:06-22:15] SPEAKER_01: Like I didn't like this. Just so everybody knows I did not like this. That's funny.
[22:28-22:29] SPEAKER_04: Cluster state directed.
[22:31-22:31] UNKNOWN: Did
[22:31-22:44] SPEAKER_04: you see that? I did. I don't know that it's real. Where do you see that? Down, down, down, up. Like seven down from where you were. You were just on your. Oh. To it.
[22:45-22:45] SPEAKER_01: Huh.
[22:47-22:48] SPEAKER_04: It says loaded from five
[22:48-22:48] UNKNOWN: to six.
[22:48-22:49] SPEAKER_04: Firestore.
[22:50-22:50] UNKNOWN: That
[22:50-22:52] SPEAKER_01: makes no sense.
[22:53-22:56] SPEAKER_04: It definitely has some kind of firestore. Oh yeah we do have
[22:56-22:57] SPEAKER_01: a database for a state.
[22:58-22:58] UNKNOWN: We
[22:58-23:12] SPEAKER_01: do in fact have that. But is it in there as active from yesterday? Yeah maybe that's old. I don't know. Because there's definitely not a cluster.
[23:14-23:14] UNKNOWN: Well
[23:14-23:17] SPEAKER_01: maybe there is then. It wasn't.
[23:18-23:29] SPEAKER_04: It's also definitely not active right? Like it's being provisioned. Right. So that should. Did we have to manually change it to active yesterday at some point?
[23:29-23:29] UNKNOWN: I
[23:29-23:36] SPEAKER_04: feel like that was. I did. I do think we did have to do that. So it did like a oh now it's working and then just moved on with his life.
[23:37-23:38] SPEAKER_01: Yep.
[23:40-23:43] SPEAKER_04: It says it sees it as provisioned. Oh it actually checks the cluster.
[23:49-23:51] UNKNOWN: Okay.
[24:07-24:08] SPEAKER_02: Deplicated motion.
[24:19-24:25] SPEAKER_01: I know that I'm talking about the freaking status of the VM controller.
[24:26-24:27] UNKNOWN: Right.
[24:33-24:36] SPEAKER_01: I want to know what status it says.
[24:51-24:56] SPEAKER_03: That's good. Unless you did not find it.
[25:34-26:04] UNKNOWN: Okay. Okay.
[26:13-26:21] SPEAKER_04: Yeah also say what you want about having deleted it but there's a cluster manager status Cloud Run function. Yes. So.
[26:21-26:34] SPEAKER_01: That's what I wanted it to look at. Like what's the status of the cluster based on the cluster manager that's on the VM. Right. But it's fine.
[26:35-26:37] SPEAKER_04: Well it's not even on the VM. This is the old one I think.
[26:37-26:37] UNKNOWN: Like
[26:37-26:40] SPEAKER_04: this is a Cloud Function.
[26:40-26:42] SPEAKER_01: In Cloud Run. Right.
[26:43-26:43] UNKNOWN: I
[26:43-26:45] SPEAKER_01: thought that. Well I guess it doesn't need to do that.
[26:45-26:45] UNKNOWN: I
[26:45-26:49] SPEAKER_01: guess the VM is doing that. So it needs to delete that too. My guess is
[26:49-26:59] SPEAKER_04: that yeah. And that's the one I think that was actually running that check from the Cloud Scheduler. And you get rid of that fucking Cloud Scheduler.
[26:59-27:00] SPEAKER_01: I think it did.
[27:05-27:05] SPEAKER_04: Okay.
[27:06-27:09] SPEAKER_01: You're right. It said it got rid of the function and the schedule.
[27:09-27:12] SPEAKER_04: Yeah. So there was another one I think.
[27:13-27:13] UNKNOWN: There
[27:13-27:19] SPEAKER_04: was like a Cloud Cluster Manager status and Cluster Manager dash something else. Yeah.
[27:23-27:23] SPEAKER_02: I
[27:23-27:25] SPEAKER_01: think that it.
[27:27-27:27] UNKNOWN: I
[27:27-27:29] SPEAKER_01: don't want to go back to all of that. Whatever.
[27:30-27:30] UNKNOWN: I'll go.
[27:34-27:34] SPEAKER_04: Is it right?
[27:35-27:35] UNKNOWN: I
[27:35-27:46] SPEAKER_04: don't know. Yeah. So it got rid of this Cloud Scheduler. Yeah. And then the monitor. So fair enough. So there's another one. It's dash status.
[27:47-27:49] SPEAKER_01: Okay. I'll do it. And
[27:49-27:53] SPEAKER_04: that seems like the one that would have said retreat status from the Cloud
[27:53-28:11] SPEAKER_01: Store. I'll do it after this. Okay. So we don't even need that Firestore database. We shouldn't
[28:11-28:14] SPEAKER_04: unless. Like as long as there's a
[28:14-28:14] UNKNOWN: good
[28:14-28:17] SPEAKER_04: status check that always works and never fucks up.
[29:01-29:03] UNKNOWN: Okay.
[29:09-29:09] SPEAKER_01: Yeah.
[29:10-29:10] UNKNOWN: So
[29:10-29:18] SPEAKER_01: we're not far away from. We're definitely in the place of thinking about what the next moves are for the offseason.
[29:18-29:18] UNKNOWN: I
[29:18-29:20] SPEAKER_01: guess here like the draft is Wednesday.
[29:20-29:20] SPEAKER_03: Yeah.
[29:23-29:23] SPEAKER_04: Yeah.
[29:24-29:25] SPEAKER_01: The draft is Wednesday.
[29:25-29:28] SPEAKER_04: I'm sure he doesn't talk a lot to
[29:28-29:28] UNKNOWN: the
[29:28-29:36] SPEAKER_04: public but I'm sure we're in private. Sam Presti's been saying like, yep, we're focusing on this finals. Like outwardly but he's working
[29:36-29:39] SPEAKER_01: and talking to people and doing stuff. Yeah. These guys plans in place.
[29:40-29:46] SPEAKER_04: What he'd like to get. Any backup plans. Who's available to be sent places.
[29:46-29:57] SPEAKER_01: Yeah. I saw a post like last week of we brought in somebody to do a tryout. Not tryout but a whatever. A trial or whatever. Like a college guy. Yeah.
[29:57-29:58] SPEAKER_04: I mean that's how
[29:58-29:58] UNKNOWN: it goes.
[29:58-29:59] SPEAKER_04: I didn't know. Yeah.
[30:00-30:06] SPEAKER_01: Yeah I know one college player. Yeah. Exactly. That's the only one I know.
[30:14-31:06] SPEAKER_04: This last time a white kid was going to be in the Olympic was wild. This has been a long time. Like the 50's. Yes. Was Luca, I don't remember him getting drafted. I don't either. And that freaking final score doesn't tell the story. It doesn't. Because I got comfortable with like 58 seconds left when Alex Caruso started going like this. Exactly. And then Lou Dort started screaming. I felt good
[31:06-31:14] SPEAKER_01: about the 20 point lead meaning that okay well when they start coming back. Yeah that's probably enough. Not like oh
[31:14-31:14] UNKNOWN: we're
[31:14-31:16] SPEAKER_01: good and they're not coming back. Yeah
[31:16-31:16] UNKNOWN: the
[31:16-32:11] SPEAKER_01: game's over. That's not how I felt at all. That actually makes sense. We made changes and didn't push them.
[32:11-32:12] SPEAKER_04: There you go.
[32:12-32:15] SPEAKER_01: Yeah. That'll do it. That was dumb.
[32:22-32:26] SPEAKER_04: It's just your project. Rolled it for whatever reason.
[32:26-32:26] UNKNOWN: It felt
[32:26-32:27] SPEAKER_04: like it needed to put out
[32:27-33:00] SPEAKER_01: there. Um let's build that. Move it to background. That's pretty foul. And there's an area. Really? Why are we having to make these changes? What's it doing? Since the Docker build failed because it couldn't find the requirements .txt file. And they're making changes to the Docker file.
[33:01-33:27] SPEAKER_04: Well you go look is it one of the ones that has the Docker file named with? Well it's just. Is it running it from the wrong directory? Like what the fuck is going on? Commanded it right up there in the next one. Yeah my guess is it was just in the wrong directory. It wouldn't be doing all kinds of dumb shit.
[33:54-33:56] SPEAKER_01: I'm realizing that this is incorrect.
[34:18-34:19] UNKNOWN: Are
[34:19-34:38] SPEAKER_04: you gonna not go there again? And now it's giving it directly at the end. So it's such a stupid fucking way to do it. Like navigate to the directory and run the build. I'm obviously fucking tired this morning.
[34:46-34:56] UNKNOWN: I'm gonna go back to the Docker.
[35:02-35:11] SPEAKER_04: Yeah no shit don't change code. Just run the code from the right place. Oh that is not right either.
[35:13-35:16] SPEAKER_03: Alright try cloth.
[35:39-35:42] SPEAKER_02: Thank you. There you go.
[35:46-35:59] SPEAKER_04: Yeah. Even if they weren't separate commands like don't do retarded shit. CD then build. You can do it in the same command if you want to. Don't just try to do this weird at the end thing.
[36:07-36:07] SPEAKER_02: Okay that's
[36:07-36:08] UNKNOWN: fine.
[36:21-36:27] SPEAKER_04: That last one wouldn't have been annoying if it wasn't preceded by the
[36:27-36:37] SPEAKER_01: previous one. Oh I agree completely. I think I didn't accept it before.
[37:19-37:21] UNKNOWN: Okay.
[37:46-37:48] SPEAKER_00: Okay.
[38:26-38:27] UNKNOWN: Okay.
[38:57-38:59] SPEAKER_01: Okay.
[38:59-38:59] UNKNOWN: Tell
[38:59-39:01] SPEAKER_01: me the function.
[39:01-39:06] SPEAKER_04: Cluster manager dash status.
[39:09-39:10] UNKNOWN: Yes.
[39:12-39:14] SPEAKER_01: You can turn this
[39:14-39:14] SPEAKER_04: fan
[39:14-39:17] SPEAKER_01: off. Cluster manager all one word.
[39:17-39:48] SPEAKER_04: I think it's with dashes like cluster dash manager dash status. Let me delete a bunch of these images. Yeah. I don't think it manually removes any context that
[39:48-39:49] SPEAKER_02: cluster is going to be looking for.
[39:49-39:51] SPEAKER_04: I agree. I think just keep the last two.
[39:51-39:52] SPEAKER_02: Okay.
[40:05-40:21] SPEAKER_04: Fail to delete seven versions. To delete four versions. Okay.
[40:23-40:23] SPEAKER_02: Why?
[40:28-40:34] SPEAKER_04: Whatever. We'll delete those. But got rid of most of them.
[40:37-40:38] UNKNOWN: Let
[40:38-40:39] SPEAKER_04: me get rid
[40:39-40:39] UNKNOWN: of
[40:39-40:44] SPEAKER_04: some old. Other ones as well.
[41:23-42:07] SPEAKER_03: Okay. Let's get on. Okay. I forgot that. What? Oh it did fail? Hmm.
[42:12-42:13] UNKNOWN: Okay.
[42:18-42:23] SPEAKER_04: Is it changing it in the right spot? Like is it in the wrong
[42:23-42:25] SPEAKER_02: fucking coordinates?
[42:30-42:32] SPEAKER_01: Who knows? It's not. It's a
[42:32-42:32] UNKNOWN: lot
[42:32-42:35] SPEAKER_01: of this doing it. It's going to change.
[42:56-42:57] UNKNOWN: Okay.
[42:57-42:57] SPEAKER_00: Okay.
[43:14-45:08] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay.
[45:21-45:26] SPEAKER_04: I'm tired. Me too. I did not go to sleep immediately.
[46:21-46:23] SPEAKER_01: I was getting ready to ask you to do.
[47:12-47:57] UNKNOWN: Okay. Okay. Okay.
[48:27-48:29] SPEAKER_00: Okay.
[48:46-48:47] UNKNOWN: Okay.
[49:14-49:16] SPEAKER_04: Okay. Okay. Okay.
[50:14-50:15] SPEAKER_01: Okay.
[50:18-50:40] SPEAKER_04: Okay. Okay. the potential obviously right but because I mean we could have said the same thing to Jado two years ago when he was as experienced as Chet and he has obviously grown into it but also sometimes they don't and so yeah he needs to be he's
[50:40-50:40] SPEAKER_01: definitely
[50:40-50:40] SPEAKER_04: the
[50:40-50:47] SPEAKER_01: one he's hurt to work over he's the one I would trick yeah or if I were looking at moving somebody it would be him
[50:47-50:59] SPEAKER_04: yeah it just depends on because you got to get like the things I'm saying are also the reason you should be able to get a lot for him right and so we'll see what
[50:59-51:00] UNKNOWN: happens
[51:31-51:41] SPEAKER_04: so jay doesn't share better than Michael's guy they scored more points they did score more points
[51:41-52:09] SPEAKER_01: I do agree with that but I don't think that that's true I don't I think I don't know it's not like they were somehow defensively yeah that 90s Bulls team compared to this team that's a tough one for me the question like with this team I
[52:09-52:09] UNKNOWN: guess
[52:09-52:14] SPEAKER_01: I was gonna say it's different but it's not that different because they're actually playing a similar style yeah okay see
[52:14-52:39] SPEAKER_04: I mean it comes down to obviously comparing different your kind of end up at a point where you just have to go like well what are the numbers say because right which rule setter we playing but right we're playing with 90s refs or 2025 reps right I mean the numbers say for sure I mean that's one number there's probably some other numbers but that's a pretty big one oh
[52:39-52:45] SPEAKER_01: yeah for sure what what who is the number one
[52:45-53:08] SPEAKER_04: LeBronik Harry in 2016 which that's I guess the other argument is the Bulls team was better because they didn't require as many points out of their top yeah that is a good way of thinking about it as well well Thunder's team is pretty fucking good
[53:08-53:17] SPEAKER_01: yeah pretty good but that like when I think of like these shooters and the role players everything that's the team that I'm actually thinking of in my head
[53:17-53:18] UNKNOWN: yeah
[53:18-53:26] SPEAKER_01: it does this sometimes just spins fixes
[53:26-54:00] SPEAKER_04: it and then can't see it for some reason and then shut yeah I wonder what the is talked about in like let's say they win two more the next like four years or whatever how do they get talked about 15 years down the road right like people are talking now like they enjoyed the Spurs back in the day right I'm old enough to remember people hating on how boring the Spurs were right I know it's like oh man that's the way that's how you play basketball it's fundamental
[54:00-54:14] SPEAKER_01: right yep no really like
[54:14-54:22] SPEAKER_04: the warriors in the moment everyone knew like holy shit this is an unbelievable
[54:22-54:26] SPEAKER_01: oh yeah for sure
[54:39-54:45] SPEAKER_04: if they were to get like three out of five and just dominate half a decade
[54:45-54:56] SPEAKER_01: at least I think people would look back at them just like the Spurs like during it no different but hating and dismissing shit right but you can't beat them
[54:56-55:02] SPEAKER_04: yeah and then that's historically you look back and you can't deny a dynasty right
[55:02-55:15] SPEAKER_01: yeah I mean it's certainly more exciting to shoot a hit a bunch of three -pointers and dunk all the time but
[55:15-55:36] SPEAKER_04: the dunking yeah I could I could see the society moving past the the three -pointer huge like in the moment because you get three points and like some of them are crazy shot but like it doesn't have to be I think in fact we've seen it like people kind of like Celtics like yo chill right shoot a couple too right
[55:36-55:44] SPEAKER_01: but I think everybody appreciates good defense maybe not yeah I think you
[55:44-55:49] SPEAKER_04: appreciate when your team's playing good defense right I'm talking
[55:49-56:03] SPEAKER_01: like fans of the game yeah like just looking at even if it was not our team right I would rather see a team play like this yeah then play like this I agree I would also rather see somebody fly high flying and dunking
[56:03-56:03] UNKNOWN: like
[56:03-56:34] SPEAKER_01: yeah if we make you so they put that oh yeah for sure we can have Anthony ever or if she talk about who he is right now and jump like Anthony like when he goes in the hole he like Jordan did like it is she moves a little bit like Jordan but when he got in the paint people were afraid because he's gonna put it down like Anthony Edwards for real all right
[56:35-57:00] SPEAKER_04: Anthony Edwards is the most classic not fit in the world right with the thunder like Ethan no I agree I don't think he's the guy but it would be nice to see him mix see somebody I'm not gonna lose are afraid of right I'm not gonna play literally
[57:00-57:17] SPEAKER_01: one right we literally won but what we're what at least in my mind we're critiquing is how to make it dynasty yeah and what is that kind of look like yeah and I literally just had the thought though even if we don't win another one I'm happy right the ones
[57:17-57:20] SPEAKER_04: fine right
[57:20-57:25] SPEAKER_01: I'm grateful for the one
[57:25-57:28] SPEAKER_04: right but yeah
[57:28-57:28] UNKNOWN: I
[57:28-57:52] SPEAKER_04: mean Shay also specifically can be like can very much if things go right put himself in a goat conversation for sure I don't know that he has the tools to I mean it just depends because like he's obviously not as physically gifted as LeBron or even Michael right but like when it comes to numbers what are they gonna be right
[57:52-58:00] SPEAKER_01: he definitely is working towards are already the Hall of Famer
[58:00-58:06] SPEAKER_04: yeah I mean one of the greatest individual years that's ever the NBA has ever seen right period not like excluding some players
[58:06-58:08] SPEAKER_01: right
[58:08-58:13] SPEAKER_04: and it's done like yeah all the MVP's scoring champion everything
[58:13-58:27] SPEAKER_01: yeah and I think that we might remember how rocky it was and like how I felt like like the playoffs like oh we're gonna actually make it right but the pastry books won't remember that stuff and I feel like that's everybody
[58:27-58:37] SPEAKER_04: right there's a couple teams that just cakewalks through the playoffs probably but not very many right and none of us remember the crazy games
[58:37-58:46] SPEAKER_01: okay sure if you really I'm not opposed to that my friend
[58:46-59:01] SPEAKER_04: yeah I actually think commits on session ends are probably make sense because it's more and like you're you're ending sessions at logical stopping points and that's like one of the guided lines on when you
[59:01-59:14] SPEAKER_01: should commit I agree we should update that yeah this is a new one and it's looking for like it that's
[59:14-59:14] UNKNOWN: better
[59:14-59:21] SPEAKER_01: I get look for do you have a file yeah looks like I found one that makes sense yeah that's what is rather than trying to figure make up one or something yeah
[59:21-59:22] SPEAKER_04: I just thought you hadn't started the
[60:00-60:10] SPEAKER_01: yeah this is definitely a plot thing the echo thing but it does it works well yeah I agree it works better so far it
[60:10-60:11] SPEAKER_04: certainly feels better yeah
[60:41-60:44] SPEAKER_01: wait that's more just complete you're right
[60:53-62:29] UNKNOWN: you you you you
[62:46-62:56] SPEAKER_01: I'm looking at these services and where this latest tag is and wondering if that's like a root cause for any of this stuff.
[62:57-63:05] SPEAKER_04: Because I don't think I think those services legitimately aren't broken. We're just not getting to them or something like I don't know.
[63:07-63:18] SPEAKER_01: Well, I mean the trouble shooting now is the diarization service and if you look at well, yeah, it is. I know you're right. It's actually the secrets and all that stuff. No, the
[63:18-63:20] SPEAKER_04: customer being managed. You're right.
[63:46-63:58] SPEAKER_01: Yeah, this really shouldn't be called the VM controller. It should be called the cluster controller and it's running on a VM. It's a VM based cluster controller. Because if you move this service to the cluster,
[63:59-63:59] UNKNOWN: it
[63:59-64:07] SPEAKER_01: didn't shouldn't even be called cluster controller. It should be called like. I don't know.
[64:08-64:11] SPEAKER_04: Yeah, I think it is kind of
[64:11-64:11] UNKNOWN: the
[64:11-64:20] SPEAKER_04: controller too because I think it's also doing the VM setup stuff, right? Yeah, you're right. So it's yeah, you're it maybe needs to be broken into service.
[64:20-64:31] SPEAKER_01: It's fine. I'm just thinking about the year from now, right? Or six days from now.
[64:32-64:32] UNKNOWN: Yeah.
[64:32-65:08] SPEAKER_01: What does that do? Yeah, cluster states processing. Okay. That's good. Is that real? I don't know because there's not a cluster.
[65:08-65:09] SPEAKER_04: Yeah.
[65:12-65:12] UNKNOWN: So
[65:12-65:18] SPEAKER_04: when the cluster dies, it doesn't update its status. I guess so.
[65:24-65:28] SPEAKER_01: But it's a new VM. Yeah, that's loaded from Firestore.
[65:29-65:29] SPEAKER_04: Right.
[65:31-65:32] SPEAKER_01: It shouldn't be.
[65:33-65:44] SPEAKER_04: Yeah, that's my guess is there's no updates maybe until it starts running again. And that's the flow is like if it's either on or not. I don't know.
[65:57-69:45] SPEAKER_01: I should put that log in there. In fact, it gets two different ones at the same time or my guess is those are the two that it's talking about, right? I think this is the way it should be.
[69:49-69:57] SPEAKER_04: Yeah, I want to mention my wonder is that VM controller not starting.
[69:58-69:58] UNKNOWN: Is
[69:58-70:14] SPEAKER_04: that because it sees that the cluster is already running and doesn't like that's inherent? There must be VM doing all this should have made a cluster that's active and processing. Maybe. I think regardless like that, we need to mention that like,
[70:14-70:14] UNKNOWN: hey,
[70:14-71:19] SPEAKER_04: this is saying those checks that you're talking about are saying that the cluster is active or processing or whatever when there's not even a cluster that exists yet. That's probably not it.
[71:19-71:19] UNKNOWN: I
[71:19-72:41] SPEAKER_04: think specifically it's able to see them. It gets the log and the log tells it that there's a cluster working like the status seems to not get updated once the cluster gets shut down or something. How is it we're not finding these things immediately? I don't know. If it's a fucking import. It just make a new file.
[72:42-72:42] UNKNOWN: I
[72:42-72:42] SPEAKER_04: don't think so.
[73:23-73:24] SPEAKER_01: I'm going
[73:24-73:24] UNKNOWN: to
[73:24-73:31] SPEAKER_01: delete this cluster if it ever came up. There's not one. Yeah.
[74:00-74:01] UNKNOWN: Okay.
[74:19-74:20] SPEAKER_00: Okay.
[74:59-75:30] UNKNOWN: Okay. Okay. Okay.
[75:50-75:57] SPEAKER_04: Okay. Tags it as deleting and then finally re -checks. But when we delete it, it's just whatever it
[75:57-75:57] UNKNOWN: ended
[75:57-76:05] SPEAKER_04: up on. That actually makes sense to me. I'm not actually going
[76:05-76:05] UNKNOWN: to
[76:05-76:07] SPEAKER_04: let it make any of
[76:07-76:07] UNKNOWN: these
[76:07-76:09] SPEAKER_04: changes. But
[76:56-77:02] UNKNOWN: I'm going to delete
[77:02-77:10] SPEAKER_01: it. I'm
[77:10-77:16] UNKNOWN: going to delete it.
[77:16-77:18] SPEAKER_04: That's got to start being a wind stream. Yeah, I
[77:18-77:20] SPEAKER_01: think it is.
[77:21-77:28] SPEAKER_04: This is way too bad. Or like the router's about to die. Right. I don't think that's what it is.
[77:30-77:32] SPEAKER_01: It's possible.
[78:13-78:15] UNKNOWN: Okay.
[78:27-78:34] SPEAKER_01: Maybe it is the... No, like,
[78:35-78:35] UNKNOWN: meaning
[78:35-78:46] SPEAKER_01: that shouldn't have dropped off. It should have kept that connected. Like it's maybe the network itself inside the house.
[78:46-78:47] SPEAKER_02: I
[78:47-79:19] UNKNOWN: don't know. I don't know.
[79:25-79:29] SPEAKER_01: Okay. Okay. Okay.
[80:16-80:18] UNKNOWN: Okay.
[80:38-80:42] SPEAKER_01: What are you trying to do? I'll deploy that. No.
[81:20-81:21] SPEAKER_02: Why?
[81:44-81:51] SPEAKER_01: I don't know.
[81:51-81:52] SPEAKER_03: I agree.
[82:35-82:36] UNKNOWN: Okay.
[82:56-83:00] SPEAKER_01: Okay. Okay.
[83:04-83:10] SPEAKER_04: Great fucking idea there, cursor. Thank you so much.
[83:36-83:37] SPEAKER_01: I don't
[83:37-83:37] UNKNOWN: want
[83:37-83:38] SPEAKER_01: a deployment script.
[83:38-83:42] SPEAKER_04: Yeah. Especially a comprehensive one. You can give me
[83:42-83:42] UNKNOWN: a
[83:42-83:43] SPEAKER_04: very simple one.
[83:51-83:57] SPEAKER_03: Where's this script going? It's made of deployvm controller .sh.
[84:39-84:59] UNKNOWN: Okay. Okay.
[85:27-85:27] SPEAKER_04: I'm getting
[85:27-85:27] UNKNOWN: ready to manually
[85:27-85:28] SPEAKER_04: get rid
[85:28-85:28] UNKNOWN: of these. Oh
[85:28-85:28] SPEAKER_04: no,
[85:28-85:28] UNKNOWN: I
[85:28-85:31] SPEAKER_04: already got rid of v6's latest tag.
[85:33-85:39] SPEAKER_01: Did you tell it to do that? I did not. I'm getting ready to have a go look at all of the images.
[86:21-91:27] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[91:46-91:48] SPEAKER_02: Why is it doing all this?
[91:49-92:19] SPEAKER_01: I asked it to clean up everything, look at all the images, make sure we only have everything that we're using as tagged latest, one other image that's the previous one. And it started looking at it and comparing it saying, hey, we should have four services. That one should be called transcription service. But in the repository, we have whisper transcription service. And it doesn't like that it has two different names. And so it's going to do latest and change it to just say transcription service.
[92:19-92:24] SPEAKER_04: Is it claiming to have done what you asked it to do in reference to deleting images?
[92:25-92:25] UNKNOWN: Because
[92:25-92:25] SPEAKER_04: it didn't do
[92:25-92:30] SPEAKER_01: that. I don't know yet. Oh no, I don't know that it has done
[92:30-92:34] UNKNOWN: that.
[92:39-92:42] SPEAKER_01: Specifically with regards to delete.
[93:06-93:06] UNKNOWN: Okay.
[93:07-93:07] SPEAKER_01: There it goes.
[93:31-95:00] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[95:25-95:42] SPEAKER_04: Okay. There's an awful lot of images. Okay. And
[95:42-95:42] UNKNOWN: the
[95:42-95:56] SPEAKER_04: whisper transcription service is there with no images in it now. It's good times. It's fine. The transcription service has them and that's what it just made.
[95:56-95:56] UNKNOWN: But
[95:56-95:57] SPEAKER_04: like.
[95:57-96:04] SPEAKER_01: Oh, yeah. So my guess is, yeah, it's just going to get rid of the whisper transcription service.
[96:04-96:04] UNKNOWN: Not
[96:04-96:17] SPEAKER_01: to do it manually. Okay. Let me.
[96:21-96:25] SPEAKER_03: Yeah. I'm going to try to delete that whole service.
[96:30-96:31] SPEAKER_02: All right. That's going.
[96:41-96:41] SPEAKER_01: Okay.
[96:41-96:41] UNKNOWN: Says
[96:41-96:47] SPEAKER_01: some untagged manifests remain. These are internal Docker manifest layers and can be left as is.
[96:49-96:50] SPEAKER_03: Okay.
[96:52-96:55] SPEAKER_04: I guess. Yeah. Some of them are like 1 .4 kilobytes.
[96:55-96:59] SPEAKER_01: Right. Yeah, I think they just needs those for whatever.
[96:59-96:59] UNKNOWN: I
[96:59-97:07] SPEAKER_01: don't know. Yeah. Since it's
[97:07-97:17] UNKNOWN: done. Okay.
[97:17-97:19] SPEAKER_01: I'm going to wake it up. Okay.
[97:41-103:30] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[103:38-103:41] SPEAKER_01: I know that we got very much done today.
[103:42-103:42] SPEAKER_04: Yeah.
[103:42-103:42] UNKNOWN: It
[103:42-103:43] SPEAKER_04: was
[103:43-103:43] UNKNOWN: a
[103:43-103:47] SPEAKER_04: little bit of an annoying. Not necessarily wheel spinning.
[103:47-103:47] UNKNOWN: It
[103:47-103:49] SPEAKER_04: was kind of like a maintenance day.
[104:01-104:05] SPEAKER_01: Unless we start everything up and it works in 10 minutes. Yeah, there's that.
[104:05-104:06] SPEAKER_03: Okay.
[104:10-104:14] SPEAKER_01: It looked in the daily status or daily summary already.
[104:14-104:15] SPEAKER_04: Yeah.
[104:15-104:18] SPEAKER_01: That's interesting. I don't know that I've ever seen it do that.
[104:18-104:18] UNKNOWN: I
[104:18-104:33] SPEAKER_01: haven't. The indication crisis. I don't know. It's not fully resolved. No, it did. It did authenticate to the cluster.
[104:34-104:36] SPEAKER_02: Yes. I think so.
[104:36-104:36] UNKNOWN: At
[104:36-104:37] SPEAKER_02: least.
[104:39-105:16] SPEAKER_01: Oh, we actually want to kill this controller. Should not be a cluster, but there is a controller. I mean, you can look at it, but it should not be processing anything.
[106:01-108:41] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[108:46-108:46] SPEAKER_01: Okay.
[108:52-108:53] UNKNOWN: Yeah,
[108:57-109:07] SPEAKER_01: that's I didn't get the same thing from that. Like there is a container ID and it has a name. Right. It started 37 seconds ago.
[109:07-109:08] UNKNOWN: Okay.
[110:21-110:23] SPEAKER_01: Using V8, V7.
[110:32-112:00] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[112:32-112:33] SPEAKER_01: Okay.
[112:47-112:47] UNKNOWN: Okay.
[112:47-112:53] SPEAKER_01: Okay. Okay. Okay. Okay.
[113:10-113:14] SPEAKER_04: Okay. Exactly the same as it did.
[113:41-114:33] UNKNOWN: Okay. Okay. Okay. Okay.
[114:49-114:51] SPEAKER_01: Okay. Okay.
[114:51-115:18] SPEAKER_04: Okay. Okay. Okay. Okay. Okay.
[115:46-115:48] SPEAKER_01: Okay.
[115:54-115:56] UNKNOWN: Okay.
[116:23-116:55] SPEAKER_01: Okay. Okay. Okay. Okay.
[117:49-117:50] SPEAKER_02: It's not.
[117:50-118:47] UNKNOWN: Okay. Okay. Okay. Okay.
[118:56-118:57] SPEAKER_02: Okay.
[119:30-120:21] UNKNOWN: Okay. Okay. Okay.
[120:27-121:19] SPEAKER_01: Maybe. Okay. Okay.
[121:46-121:47] SPEAKER_04: Okay. Okay.
[121:48-121:49] SPEAKER_03: Okay.

==================================================
Generated on: 2025-07-29 11:09:20
Total words: 4812
Total speakers: 6
==================================================




Summary:
creation_date: 2025-07-29 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-29_1055_ZOOM0028_transcript.txt participants: SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04
Executive Summary
This transcript captures a technical troubleshooting session focused on resolving a persistent authentication issue with the on-demand [[GKE Autopilot]] cluster. The primary problem was identified as the [[Kubernetes]] services' inability to access secrets from [[GCP]]'s [[Secret Manager]], which was preventing the [[Diarization Service]] from running [00:31-01:51]. The proposed and accepted solution is to implement the Secret Manager CSI driver add-on for the cluster, which will securely mount secrets as volumes for the pods [01:51-02:12]. The session also involved significant "maintenance" work, including cleaning up legacy [[Cloud Function]]s and [[Cloud Run]] services, and a major cleanup of outdated and redundant images in the [[Artifact Registry]] to streamline the project [85:27-92:30]. The meeting is punctuated by a lengthy, celebratory discussion of the [[OKC Thunder]] winning the [[NBA championship]] [50:18-58:13].

Key Topics Discussed
	•	[[GKE]] Secret Management Troubleshooting
	•	The core technical problem was that services running inside the [[GKE Autopilot]] cluster could not authenticate to access a necessary token from [[Hugging Face]] stored in [[GCP]]'s Secret Manager [02:05-02:24].
	•	They compared the failing GKE deployment to a previous, successful deployment on [[Cloud Run]], realizing the authentication mechanism was different and not correctly configured for [[Kubernetes]] [02:57-03:15].
	•	Solution: The group decided to implement the recommended [[GCP]] solution: the Secret Manager CSI driver. This involves enabling the add-on for the cluster and creating a SecretProviderClass resource in [[Kubernetes]] that defines which secrets to mount [00:31-02:02].
	•	Infrastructure Cleanup and Maintenance
	•	The team identified and planned the deletion of several legacy components from previous architectural iterations, including an old [[VM controller]] and its associated [[Cloud Run]] and Cloud Scheduler services, to avoid confusion and potential conflicts [26:13-28:14].
	•	A significant portion of the session was dedicated to cleaning up the [[Artifact Registry]]. The AI assistant ([[Cursor]]) was tasked with identifying and deleting old, untagged, and redundant container images, and renaming repositories for consistency (e.g., changing "whisper-transcription-service" to "transcription-service") [85:27-96:59].
	•	[[OKC Thunder]] Championship Discussion
	•	A lengthy tangent celebrating the [[OKC Thunder]] winning the NBA championship [50:18-50:40].
	•	They discussed the team's future as a potential dynasty, comparing [[Shai Gilgeous-Alexander]] and [[Jalen Williams]] to [[Michael Jordan]] and [[Scottie Pippen]] [51:31-52:39].
	•	The conversation covered the team's impressive performance, the front office's strategic success, and the cultural significance of the victory for a small-market team [52:39-55:15].
	•	Development Workflow & AI Collaboration
	•	The session continued to highlight their iterative workflow with [[Cursor]], using it to diagnose issues, generate code and commands, and manage project state through the [[README]] file.
	•	They encountered and worked through several instances where the AI was confused by the project's state or required multiple prompts to generate the correct commands, reinforcing the need for human oversight and clear context [32:26-34:56].

Action Items & Decisions
	•	Decision: To resolve the secret access issue, they will implement the Secret Manager CSI driver add-on for the [[GKE Autopilot]] cluster [03:15-03:16].
	•	Action: Update the [[GKE]] cluster to enable the SecretManagerCSI add-on [14:55-15:33].
	•	Action: Create and apply the necessary YAML files for the SecretProviderClass and update the service deployments to mount the secrets [14:55-15:33].
	•	Action: Clean up legacy components, including deleting the old cluster-manager-status [[Cloud Run]] function and its associated Cloud Scheduler job [27:47-28:14].
	•	Action: Perform a comprehensive cleanup of the container images in [[Artifact Registry]], deleting old versions and untagged images, and renaming repositories for consistency [85:27-92:30].
	•	Action: After all cleanup and fixes are implemented, re-run the end-to-end test of the transcription pipeline [103:42-104:05].

Suggested New Links/Tags
	•	[[Jalen Williams]]
	•	[[Michael Jordan]]
	•	[[NBA championship]]
	•	[[Scottie Pippen]]
	•	[[Secret Manager]]
	•	[[Secret Manager CSI driver]]
	•	[[Shai Gilgeous-Alexander]]
	•	[[VM controller]]

Linked Concepts
	•	[[AI Agents]]
	•	[[AI Tools]]
	•	[[Artifact Registry]]
	•	[[Cloud Function]]
	•	[[Cloud Run]]
	•	[[Cursor]]
	•	[[Diarization Service]]
	•	[[Docker]]
	•	[[Firestore]]
	•	[[GCP]]
	•	[[Gemini]]
	•	[[GKE]]
	•	[[GKE Autopilot]]
	•	[[GPU]]
	•	[[Hugging Face]]
	•	[[IAM roles]]
	•	[[Job Template]]
	•	[[Kubernetes]]
	•	[[OKC Thunder]]
	•	[[Project Plan]]
	•	[[README]]
	•	[[Secret Manager CSI driver]]
	•	[[Service Account]]
	•	[[Transcription Service]]
	•	[[VM controller]]
	•	[[Whisper]]

#Tags
	•	#AI
	•	#Automation
	•	#Deployment
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom29
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-28_2242_ZOOM0029_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:13-00:15] SPEAKER_01: Yeah, it's up to
[00:15-00:37] SPEAKER_04: you. I mean, either way, I will. I have no idea anything about testing, so... Neither do I. Apparently there's a cursor up there. Oh yeah, I
[00:37-00:37] UNKNOWN: ran
[00:37-00:43] SPEAKER_04: it. It's like a Slack integration. From Slack,
[00:43-00:43] UNKNOWN: you
[00:43-01:01] SPEAKER_04: can get it to create agents or some shit. I think the background agent thing is one of the extra... You have to have the other thing turned on. So I'm not doing it until I hear some YouTuber go, like, you have to do this background.
[01:01-01:01] UNKNOWN: This is it.
[01:01-01:02] SPEAKER_04: You gotta do it.
[01:06-01:09] SPEAKER_05: Alright, I'll put it up there.
[01:15-01:22] SPEAKER_01: There's a lot more room when the resolution is based on my monitor and not the TV.
[01:23-01:24] UNKNOWN: Yeah.
[01:30-01:33] SPEAKER_01: Let alone the wide one. Yeah, for sure.
[01:34-01:42] UNKNOWN: Look at that. There's me.
[01:56-02:13] SPEAKER_05: Let's see what this does. It's not bad.
[02:33-02:34] UNKNOWN: Okay.
[02:44-02:51] SPEAKER_04: Alright. I don't know if you want to pull... Oh, you already have... Yeah, that's what I'm
[02:51-02:51] SPEAKER_01: doing.
[02:51-02:54] SPEAKER_04: Yeah, I think it probably makes sense to even go through and discuss this.
[02:55-03:01] SPEAKER_01: Yep. It's going to take me a second to just kind of read through it if that's okay.
[03:01-03:01] UNKNOWN: For
[03:01-03:01] SPEAKER_01: sure.
[03:20-04:28] UNKNOWN: Okay. Okay. Okay. Okay.
[05:08-05:10] SPEAKER_01: Okay. Okay.
[05:20-05:21] UNKNOWN: Okay.
[05:46-06:02] SPEAKER_01: Okay. So I think that this is just my raw thoughts. This is going to become the objective of our work.
[06:03-06:03] UNKNOWN: What
[06:03-06:03] SPEAKER_01: do
[06:03-06:03] UNKNOWN: you
[06:03-06:08] SPEAKER_01: mean? Learning testing, I think, is by far...
[06:08-06:08] UNKNOWN: With
[06:08-06:17] SPEAKER_01: the plan, this robust is going to become the objective of the work vice producing a transcription service. Yeah. And
[06:17-06:17] UNKNOWN: that's the
[06:17-06:25] SPEAKER_01: priority of the two, meaning we can get to producing the transcription service just by quick and easy and dirty and get it done while we're trying. I don't know. We've
[06:25-06:25] UNKNOWN: been
[06:25-06:39] SPEAKER_01: trying for almost a month. Yep. I don't know that we can. And it's fine. I'm not opposed to that, but I just wanted to make that be a conscious decision that we are effectively prioritizing learning testing frameworks. I think a little bit.
[06:39-07:10] SPEAKER_04: So I was looking at it yesterday and it's like a four week plan, which is 28 days, which means 2 .8 days. Right. For start, because it's going to do most of it. And I think what we're really going to learn is Python and the CLI and all of that. Okay. Yeah. And it doesn't have to be through these testing frameworks full on. But then we need to go and figure out some other like go through every file with a fine tooth comb because I think we've got like
[07:10-07:11] SPEAKER_01: ghosts and gremlins. Yeah.
[07:11-07:21] SPEAKER_04: And just stuff happening. We don't know exactly. Yeah. We're like we got a head start in the marathon. We didn't train for. Right. And it's gonna go for us. Nothing.
[07:21-07:30] SPEAKER_01: I agree. I'm right. I want to do it. And the other thing is I don't completely understand the different phases, but that's different. That's okay. That's what we're going to talk about.
[07:30-07:31] SPEAKER_04: Yeah.
[07:31-07:31] UNKNOWN: So
[07:31-07:34] SPEAKER_04: like testing, do you understand like unit versus integration? I do.
[07:34-07:34] UNKNOWN: That
[07:34-07:34] SPEAKER_04: stuff.
[07:35-07:49] SPEAKER_01: I do. What I'm saying is like foundational understanding. What's the objective of I mean, I guess I see a set of tests here. Foundation and understanding.
[07:59-08:24] SPEAKER_04: I'm good. So the foundation would be the just setting up the directories. Testing. Understanding. I specifically was like, I want to know when I upload that what happens to that bucket and what it does with it. Right. I want to know what an event arc is, what it's receiving when that bucket thing happens and what it's outputting and where, everywhere that it's going. I agree.
[08:25-08:25] UNKNOWN: And
[08:25-08:41] SPEAKER_04: that type of thing. Yeah. I think this is just what's required for us to even understand like the architecture side, because that's what's broken. The Python's not for like the whisper service and the diarization service.
[08:41-08:41] UNKNOWN: It
[08:41-09:17] SPEAKER_04: works. Yep. If you give it the stuff that we know what to give it to. Also. So like fundamentally, like this is even not your job, but this is the job of the people you're talking to that are executing on it. And so it's probably worth understanding from that perspective. 100%. I'm in. Let's do it. I do. There is the asterisk of like, well, this whatever the testing framework is, we don't necessarily have to learn that Python testing framework. But then I think we're going to end up writing a bunch of functions that is going to be like,
[09:17-09:17] UNKNOWN: hey,
[09:17-09:19] SPEAKER_04: this would be easier with this. Yeah.
[09:19-09:37] SPEAKER_01: I think that is a perspective or tool in the toolkit that even if we don't always develop in test driven development style, we probably will a little bit. At the end of this, I'd rather do a deep dive and go overboard. Yeah. You
[09:37-09:37] UNKNOWN: know,
[09:37-09:37] SPEAKER_01: just saying,
[09:37-09:37] UNKNOWN: hey,
[09:37-09:40] SPEAKER_01: I want to build my own shed. And then from this point forward,
[09:41-09:41] UNKNOWN: well,
[09:41-09:45] SPEAKER_01: I just I don't know that I'm going to build everything. Right. But if I need to. Yeah.
[09:47-09:58] SPEAKER_04: Yeah. And I think like testing is a new thought right now. But like testing is famously one of the things everybody hates. So might as well be good at that.
[09:58-10:06] SPEAKER_01: Right. I agree. And I think that if everybody else is scared of it, it's a perfect companion to AI.
[10:06-10:35] SPEAKER_04: Yeah. And I think it's also just like an earlier off ramp. We can still start projects the same way we started this one. But two weeks ago, we would have been like, hey, something's fucked up and we need to go do some testing on this part of the pipeline, literally just to start. I agree. We need it to hit the Pub Subtopic or the cloud function that triggers everything and starts it. And that's mostly it. Like there's some more stuff to do like alignment, but we can't even test alignment. Because we can't get there. We
[10:35-10:35] UNKNOWN: can't get two outputs.
[10:36-10:39] SPEAKER_04: Because we're not getting two inputs. We're not getting one input as far as I can
[10:39-10:39] UNKNOWN: tell.
[10:39-10:40] SPEAKER_04: We don't know
[10:40-10:41] SPEAKER_01: what's going on. Right. Like
[10:41-10:52] SPEAKER_04: we're spinning up a cluster. It's failing. It's shutting itself down. And eventually everything shuts down properly, which is good. Right. But we don't know if it would shut down properly if it actually spun
[10:52-11:06] SPEAKER_01: up and worked. I agree. But I think that if you look at these agents, the AI agents as people or developers, well, then our role becomes testing their work and making sure, architecting,
[11:06-11:06] UNKNOWN: but
[11:06-11:09] SPEAKER_01: also like in a lot of ways it's doing architecture too.
[11:09-11:09] UNKNOWN: But
[11:09-11:13] SPEAKER_01: like, okay, well, if this is what you recommend, here's the set of tests to say,
[11:14-11:14] UNKNOWN: this
[11:14-11:22] SPEAKER_01: should be, this is the input, this should be the output. And hey, well, clearly here's what's wrong. And I think feeding that back to it will actually help fix it.
[11:22-11:52] SPEAKER_04: Yeah. And I think I assume a couple of things. Another new thought was I think architecture may be one of the lesser documented areas of coding. Right. And that's what it knows. Right. End of the day, like it's good at coding. No, no, no. It knows all the docs. Right. Especially the very popular ones. Right. And it's seen all of the well reviewed code. But like how good is it at GCP? Because GCP in fact is one of the smaller clouds. Right. I agree. I agree
[11:52-12:00] SPEAKER_01: completely. So yeah, the documentation and knowing how to, like in general, infrastructure is everybody's media infrastructure.
[12:00-12:00] UNKNOWN: It's one of the gaps,
[12:00-12:01] SPEAKER_01: exactly. Because it's new.
[12:01-12:01] UNKNOWN: I
[12:01-12:11] SPEAKER_04: mean like networking has been around since the 70s or before. But cloud has been around since like I remember when they started saying it. Right.
[12:11-12:11] UNKNOWN: When
[12:11-12:12] SPEAKER_04: I was an adult.
[12:16-12:17] UNKNOWN: So
[12:17-12:27] SPEAKER_04: yeah, I don't know. I think it's just another tool in the kit that we won't necessarily use all the time. It's like the fucking one iron or some shit.
[12:27-12:27] UNKNOWN: Right,
[12:27-12:31] SPEAKER_04: exactly. It's like we don't pull it out that much. But whenever you need it, it's like very,
[12:31-12:31] UNKNOWN: very
[12:31-12:32] SPEAKER_04: fucking useful.
[12:33-12:34] UNKNOWN: And
[12:34-12:43] SPEAKER_04: it's one of those things. Like we've done that for Python and to some extent for Kubernetes. Like we both read at least a book on Kubernetes. And so I think.
[12:43-12:43] UNKNOWN: But
[12:43-12:45] SPEAKER_04: we've not done this. Okay. Yeah, I'm
[12:45-12:45] UNKNOWN: ready. I don't
[12:45-12:49] SPEAKER_04: want our bag. We've certainly done it for front end development stuff. I have it. Well,
[12:49-12:50] SPEAKER_01: not as much as you. But
[12:50-12:53] SPEAKER_04: you could have done enough that with Cursor you could.
[12:53-12:53] UNKNOWN: I
[12:53-12:57] SPEAKER_04: could do it. Yeah. Okay. Let's do it. Do you want to drive? Or do
[12:57-12:57] UNKNOWN: you
[12:57-12:58] SPEAKER_04: want me to? Either way,
[12:58-12:58] UNKNOWN: I
[12:58-13:01] SPEAKER_04: think like Cursor is going to largely drive.
[13:01-13:01] UNKNOWN: But
[13:01-13:18] SPEAKER_04: I guess let's go through. So what I don't know is if it just basically made a multi -step plan and plugged each thing that I requested into one of the steps. Like is it actually thoroughly testing everything at the unit level?
[13:18-13:18] UNKNOWN: And
[13:18-13:23] SPEAKER_04: is it planning on testing everything at the integration? I think so. Yeah, it looks pretty good to me. Yeah,
[13:23-13:42] SPEAKER_01: I mean, it looks pretty good to me. What I don't think I don't understand is the testing framework right now. You've explained like foundation and understanding. So the foundation, I think you're right, is the foundation of the test
[13:42-13:42] UNKNOWN: application.
[13:42-13:43] SPEAKER_01: Right.
[13:44-13:44] UNKNOWN: Or
[13:44-13:49] SPEAKER_01: test service. There is a service that's separate than our services that's looking at them and doing stuff.
[13:50-14:07] SPEAKER_04: Yeah, I mean, it's a Python package. Right. I think it's like ultimately, yes, but yeah. And so then I'm not sure, like you mentioned the emulators at one point. Let me see. Yeah, PyTest is the package. Right. And
[14:07-14:07] UNKNOWN: it
[14:07-14:17] SPEAKER_04: comes with these things where you can do mock HTTP hits and mock functionality and fake async operations and stuff like that.
[14:17-14:23] SPEAKER_01: What I don't understand is how you mock cloud. That's what I mean. That's
[14:23-14:23] SPEAKER_04: what
[14:23-14:23] SPEAKER_01: these
[14:23-14:35] SPEAKER_04: are. And I don't know that those are even real. But if they are, then that's it. And that they are literally test utils. Right. And I assume they're
[14:35-14:35] UNKNOWN: real.
[14:36-14:43] SPEAKER_04: But then yeah, container testing with Docker. Again, as we are on the level. Right.
[14:43-14:43] UNKNOWN: Both
[14:43-15:15] SPEAKER_04: of us. On the same level. So the only thing I did over here, I did a new session and then it was talking again like, oh man, look at all this stuff that's done. And so I was just like to say that that is operational as a stretch. The reason we're pivoting the test during development is because it is not. And so the infrastructure is in no way complete. Like these are all based on things that set up here. So here's I think where we actually are.
[15:21-15:35] SPEAKER_01: Oh yeah, I guess I don't have that. That's just Reddit talking. Yeah, it's a chat. Okay. Yeah, so I guess the objective of testing,
[15:36-15:36] UNKNOWN: I
[15:36-15:41] SPEAKER_01: think creating a test structure is to create a robust, you know,
[15:42-15:42] UNKNOWN: what
[15:42-16:35] SPEAKER_01: I've said of testing around your deployments. Right. So that you catch anything. And I assume it is because, or it is based on, this is just me thinking out loud. Yep. I assume that normally when you're creating a test structure, it's around a stable set of code and you're trying to instrument it so that you can automate a bunch of things and let people just add things by themselves and the testing will catch it. At least it should catch most things. Yeah. But we're not doing that. We're doing test driven development. Right. And I don't know if it knows the difference between those two, meaning like I don't want to build a bunch of things and build test infrastructure that's going to simulate GCP, do a bunch of testing on a code before you upload it just to make sure it's going to work before it gets there. Right. Do you see what I'm saying? Because that kind of defeats the purpose that we're putting a bunch of effort, unless we just want to learn it, put
[16:35-16:35] UNKNOWN: a
[16:35-16:50] SPEAKER_01: bunch of effort into simulating our environment when we're in a development environment and we can just send it and then observe what happens in the environment. And that's kind of different. I'm just thinking out loud. That's what we've been doing. That's true.
[16:50-17:03] SPEAKER_04: That's fundamentally why we're where we are. And so I think what this does is you don't have to send it and you actually go through every step because we're basically going like,
[17:03-17:03] UNKNOWN: oh,
[17:03-17:07] SPEAKER_04: here's a transcription service. Does it work? Nope. Oh,
[17:07-17:07] SPEAKER_01: I agree.
[17:07-17:07] UNKNOWN: I
[17:07-17:27] SPEAKER_01: guess, again, thinking out loud, I'm trying to articulate my thoughts. This is a new thought, but if I am trying to test what happens when I do a PUP subnet or event arc, like we can't, I don't know what an event arc is. Like I don't see how you test that without sending it to GCP. Do you see what I'm saying? Like I don't, we don't have
[17:27-17:27] SPEAKER_04: an
[17:27-17:27] SPEAKER_01: event
[17:27-17:35] SPEAKER_04: arc service. I agree. I assume that's what that testing utils package includes. I don't know. That's what I'm confused
[17:35-17:39] SPEAKER_01: about is like, how does it work? Like if the very first step is like,
[17:39-17:39] UNKNOWN: well,
[17:39-17:55] SPEAKER_01: okay, we're uploading a file to a GCS bucket. What should happen? Well, an event arc should kick off a cloud function. Like, I don't know how you test that other than just do it and observe it.
[17:55-18:02] SPEAKER_04: Yeah, that's what we have to find out. Either that's possible or not. Right. And if it is, then I think we should probably do it. No, I agree. I don't
[18:02-18:02] UNKNOWN: disagree. Because
[18:02-18:14] SPEAKER_04: clearly just pushing it up there. I mean, it knows we've been over that several times. Like here's what's happening at the very beginning. And so walk through those steps. Is it working? No. Right.
[18:14-18:38] SPEAKER_01: So it is almost like what I think what I would do if we if you hadn't done any of this is say, okay, upload into the bucket and trigger not our function, trigger a function that all it does is get read back what you receive. Something like that. Like the function that I'm going to put that I'm going to trigger is give me the specs on what got uploaded and when.
[18:39-18:39] SPEAKER_03: And
[18:39-18:43] SPEAKER_01: then when that's good, I'll replace that with it. I know that it's getting the right thing. Right. Okay.
[18:43-18:43] UNKNOWN: Now
[18:43-19:11] SPEAKER_01: this function is supposed to go do this thing. Okay. Go to the thing. Did it in place of what was supposed to run next. Right. Put a tool, an observation tool that sends back to me. Hey, I received this request from this thing at this date with these specs. Right. Is that correct? Yes. And keep doing. And if it's not, then okay, well, I know I need to work what sent the sending. Right. And okay. Now it's sending the right thing. I received the right thing. I'm
[19:11-19:11] UNKNOWN: going to replace
[19:11-19:23] SPEAKER_01: my function. Then I'll keep walking through like that. And that something like that makes sense to me because I'm not I don't have the services. They're the GCP services and I don't know how to test them or simulate
[19:23-19:40] SPEAKER_04: them. That makes sense to me. Do you want to drive doing that? Because I kind of like vaguely understand what I think our job at that point would be to not allow ourselves to let it just go. No, just because a couple of steps for
[19:40-19:48] SPEAKER_01: I literally want to do one step. Yeah. And then, okay. And how what do I need to do to guarantee that this step works?
[19:48-19:48] SPEAKER_04: Yeah.
[19:48-20:22] SPEAKER_01: And okay. The output is should be this and I observe it. And yes, it is good. Now go to and keep doing that all the way. And then for each service. Okay. Now I know this sir. I'm up to this service is receiving the right files, whatever. Right. Is it running? Okay. Well, I'm getting errors. I'm getting silent errors. Okay. Start instrumenting the code just like we would know where is it failing and like that. That like fine too. That's what I would not necessarily. I'm not saying that the test driven development is not the right perspective. I just don't understand it. Right. And how it's going to help us do that.
[20:23-20:29] SPEAKER_04: Yeah. Yeah. I'm good with that. I just don't exactly know how to do that.
[20:29-20:29] UNKNOWN: Me
[20:29-20:30] SPEAKER_04: either. Like so what I
[20:30-20:34] SPEAKER_01: think is we need to have this conversation with it.
[20:34-20:35] UNKNOWN: Yeah.
[20:35-20:37] SPEAKER_05: All right.
[21:28-22:16] UNKNOWN: Okay. Okay. Yeah. I
[22:16-22:23] SPEAKER_01: mean, I read what you put in there, but I, it is almost like what we need to do is we've,
[22:24-22:24] UNKNOWN: we
[22:24-22:29] SPEAKER_01: jumped to end to end testing and don't know where we're getting problems. And instead of doing end
[22:29-22:29] UNKNOWN: to
[22:29-22:32] SPEAKER_01: end testing, we need to do unit or whatever type component testing
[22:32-22:32] UNKNOWN: by
[22:32-22:38] SPEAKER_01: component testing first. And we never did that. We thought everything was working. We jumped to you into in testing.
[22:38-23:00] SPEAKER_04: That's where I say like, it's going to try to do that. And that's our thing. Is it say no for this attempt is like, no, I don't want to know what comes out of the event arc. I want to know what happens to the bucket. Right. That type of shit. And then we'll move on to the event. I'm kind of over the fucking. Absolutely. That's amazing. Right.
[23:16-23:16] UNKNOWN: Yes.
[23:19-23:34] SPEAKER_01: That is exactly what I was thinking. What's that? Like one be like upload and then modify this diarization to just log it. Right. Just log what you see. You're what you saw. And don't try to run the rest of it. That makes sense.
[23:47-24:01] SPEAKER_04: Just I'm going to emphasize that every fucking couple of instances. I'm actually really.
[24:17-25:37] SPEAKER_01: Trying to create a test file, but we have one. This is a very different vantage point already. I can tell you. So if you go to the read me like maybe at the top where it has the arrows that describes the flow, I don't know if it's still in there anymore. Yeah. So basically I want to be able to follow this pathway and test every place inside of like wherever the. That's not even nearly. That's not robust enough.
[25:38-25:38] UNKNOWN: But
[25:38-25:52] SPEAKER_01: yeah, basically maybe what we do is focus on really understanding, making sure it and we understand the flow of like when this happens and this and this and this
[25:52-25:52] UNKNOWN: and
[25:52-26:03] SPEAKER_01: this and this but understand that 100 percent what it's supposed to do and then dissect, go down to each place and verify that it's actually doing that.
[26:03-26:03] UNKNOWN: It
[26:03-26:05] SPEAKER_01: actually works that we understand.
[26:05-26:05] UNKNOWN: And
[26:05-26:09] SPEAKER_01: it's actually. And I have a like a mermaid file because that's all ultimately.
[26:25-26:31] SPEAKER_04: What's that service that you make the visuals something sharp.
[26:36-26:37] UNKNOWN: Lucid.
[26:40-27:16] SPEAKER_01: Output words very detailed. Oh, he moved like I'm not going
[27:16-27:21] SPEAKER_04: to. Yeah, stay on his toes.
[28:18-28:28] SPEAKER_01: And so your objective is to build the lucid chart diagram as we go. Yeah. OK. I think you just say that.
[28:28-28:32] SPEAKER_04: I guess as we determine what is actually happening at each step. OK. It's good.
[29:08-29:20] SPEAKER_02: OK. We go back to this. OK.
[30:17-30:36] SPEAKER_01: That's cool. Yeah, I came across this a while back and somebody told me we were in some meeting and like, hey, you know that Jim and I can make documents now. I mentioned Mermaid is like, that's cool. And I never looked at it or thought about it until you said something about
[30:36-30:46] SPEAKER_04: it. Yeah, definitely. Like this would run in obsidian and show as the chart. We just need to think it's like in preview mode or something.
[30:46-30:55] SPEAKER_01: And it can run in lucid too. It will. It will. It will run in lucid. That makes sense. That was why we started talking about it.
[30:56-30:56] UNKNOWN: It's
[30:56-30:56] SPEAKER_01: quite new.
[31:08-31:08] UNKNOWN: Yes,
[31:12-31:31] SPEAKER_01: I think that we're clear up to like a lot of that. The first few things of that is, you know, GCS. You can't really does the copy USU to copy command work? Well, as long as it's formatted correctly. Yes. Is it going to create the file in the bucket? Probably. Right.
[31:32-31:32] UNKNOWN: And
[31:32-31:39] SPEAKER_01: all the way up through event arc. So what is the event arc? What is our message saying?
[31:39-32:01] SPEAKER_04: Yeah, I know this is going to show up in the bucket. Right. I still want it to go through each step and make sure just because I want it to establish that right now. That's what we're doing. But I agree. Like this is good object creation. We even know that like the first topic is getting created and all this different stuff. But I want it
[32:01-32:11] SPEAKER_01: granular as a motherfucker. Oh, no, no, I agree. I'm not saying that it shouldn't be in the diagram. What I'm saying our first test area, maybe we could test. Did it make it in the bucket? Yeah, I'm
[32:11-32:11] UNKNOWN: going
[32:11-32:12] SPEAKER_01: to make it go like I
[32:12-32:21] SPEAKER_04: know that, but I don't know steps that big further down the code. And I don't want it to get any kind of instinct. Like, I'm OK with it skipping anything.
[32:21-32:25] SPEAKER_01: Right. Oh, yeah. Got it. So upload it and then just just observe.
[32:26-32:26] UNKNOWN: Did
[32:26-32:27] SPEAKER_01: it make it to the
[32:27-32:27] UNKNOWN: bucket?
[32:33-32:36] SPEAKER_01: Or test. I don't know. Confirm. Yeah, that's good.
[33:16-33:41] UNKNOWN: Okay. Okay.
[33:55-33:57] SPEAKER_02: I think the bucket is good.
[34:39-34:42] SPEAKER_01: I'm going to delete everything except for what you just put in there.
[34:53-34:53] UNKNOWN: Okay.
[35:03-35:09] SPEAKER_01: Oh, I guess we have all those triggers going. So it is going to make everything run.
[35:09-35:14] SPEAKER_04: Yeah, that's why I told it to kill it at the end of this.
[35:27-35:30] SPEAKER_01: Okay. The controller is up.
[35:49-35:50] UNKNOWN: Okay.
[36:13-36:31] SPEAKER_01: That's that bullshit. Right. Exactly. I don't know anything actually about what is happening with that event arc, what it is saying to do, what it looks like. I want to examine the code for the event arc trigger. What is it doing? What is it receiving?
[36:41-36:46] SPEAKER_04: Like immediately it tried to go like, oh, let's see if it got created. Let's see this. I'm going
[36:46-36:50] SPEAKER_01: to stop this video. Okay. I'm going
[36:50-36:50] UNKNOWN: to
[36:50-37:03] SPEAKER_01: delete it. Is that okay? Yeah. Because I think we just want to examine the event arc itself. Exactly. We can always upload another file and get to the, like, this is easy.
[37:03-37:04] SPEAKER_03: Yeah.
[37:04-37:12] SPEAKER_01: Getting to it, creating the VM. But I don't know that the VM is being created the right way. Right. With the right information or whatever.
[37:18-37:20] SPEAKER_05: Okay.
[37:37-38:04] SPEAKER_01: So what pops in my head is this target. So we know the inputs are good. It triggered on the upload of the bucket, which is what we exactly want. But it published this published diarization request that executes a cloud function. So my question is, what is that? Maybe we don't need to inspect that as long as it executes. I think we understand that. Yeah. Public
[38:04-38:09] SPEAKER_04: diarization request is the one from the very beginning. It's always been the first cloud function that triggers everything.
[38:10-38:17] SPEAKER_01: Right. And all it does is trigger this function called public diarization. That's what the event arc does.
[38:18-38:18] UNKNOWN: Event
[38:18-38:56] SPEAKER_01: arc senses the upload and triggers a function. That's what event arc is. So the question is, what does this function do? Like, I want to see that function. Like, we need to look at it. This is what it's supposed to do, I guess. Right. Yeah, I see what it does. It tells me what it's
[38:56-38:57] UNKNOWN: doing. It's trying
[38:57-39:01] SPEAKER_05: to stop delete the delete controller which created various tests.
[39:02-39:04] SPEAKER_04: You deleted it, right? I did.
[39:37-39:38] UNKNOWN: Okay.
[40:02-40:03] SPEAKER_01: I'm sorry.
[40:03-40:03] UNKNOWN: I'm
[40:03-40:57] SPEAKER_01: sorry. So I think that we need to already change the architecture. So this cloud function, what it does is create a pubsubmessage. And the payload of that pubsubmessage is the URI of where the file got uploaded, the URI of where it wants the diarization to go, and the URI of where it
[40:57-40:57] UNKNOWN: wants
[40:57-41:02] SPEAKER_01: the file to go. But there's a step in the middle of here that we're not taking into account.
[41:02-41:06] SPEAKER_04: For sure. This is from the original sequential stuff.
[41:06-41:22] SPEAKER_01: Right. So I think that the pubsub, like the cluster manager should be monitoring that pubsub queue and kickoff. But what I actually think is that and... I think it's
[41:22-41:22] UNKNOWN: currently
[41:22-41:22] SPEAKER_01: flawed
[41:22-41:38] SPEAKER_04: in general because it's based on what it's named after, which is a bad name currently, which is published diarization request. It's not supposed to be doing that. It's supposed to kick off the full
[41:38-41:40] SPEAKER_01: transcription or some shit. Right.
[41:40-41:40] UNKNOWN: So
[41:40-41:46] SPEAKER_01: I had this thought yesterday about re -architecting, and I'll say it, and I don't know that we want to do it right now.
[41:47-41:47] UNKNOWN: But
[41:47-42:03] SPEAKER_01: we don't even have to run the manager, whatever, cluster manager, on a VM. It can actually be run on the cluster. That the very first thing that you do when you upload is instantiate a cluster.
[42:04-42:04] UNKNOWN: And
[42:04-42:07] SPEAKER_01: then, well, never mind. There's nowhere to put file.
[42:07-42:17] SPEAKER_04: Yeah, and there's no way around the fucking retarded breaking issue where it's not linked in the service accounts. No matter what. Right. I agree. Yep. I agree.
[42:18-42:22] SPEAKER_01: But, sorry. Go ahead. It's doing something.
[42:22-42:22] UNKNOWN: I
[42:22-42:24] SPEAKER_01: got to...
[42:38-43:14] UNKNOWN: Okay. You
[43:14-43:37] SPEAKER_01: can have it run wherever it's... No, I'm thinking in some ways. Because I don't know the answer to this question. Right. It's saying, hey, let's look at the function. The Gcloud just described the diarization request, the function itself. That cloud function, I have no idea what it's doing.
[43:38-43:38] SPEAKER_04: Yeah.
[43:38-43:38] UNKNOWN: I
[43:38-43:54] SPEAKER_04: mean, again, it's one of the very first ones that was from the Cloud Run, which is probably tweaked, but the Cloud Run kickoff, and that's why it's named Publish Diorization Request. Because all it was supposed to do was kick off diarization on
[43:54-44:29] SPEAKER_01: Cloud Run. Right. So we probably should rename it, because what it's actually doing is kicking off the cluster manager. That is the first trigger. Upon upload, all we want to do is instantiate all of the resources. So what I don't know is how you get from creating resources to actually doing diarization. Because it takes 15 minutes for those resources to instantiate. How do you ever start the diarization after that? We don't think about that.
[45:25-45:35] SPEAKER_04: Yeah, it's going to make new documents for all of these suckers. That's perfect. We can go back and clean up that.
[46:08-46:46] SPEAKER_01: I actually think it is working perfectly, but I don't think it's doing what we want it to do. I actually think it needs to generate four GCSR URLs, because there's another step in between there. Go ahead and name the output of the input. There should be an output from the transcription service. That's not the final output. That's not the final transcript. That is not in here.
[47:01-47:04] UNKNOWN: I'm sorry, but...
[47:21-47:39] SPEAKER_01: Yeah, I think there's two issues. One is this first upload should trigger infrastructure build. Right, not even talking about diarization and all those things like that. And the second one is looking at... like we're missing an URI. For sure. Do you agree?
[47:40-47:40] UNKNOWN: Do
[47:40-47:41] SPEAKER_01: you understand what I'm saying?
[48:22-48:23] UNKNOWN: Okay.
[48:29-48:31] SPEAKER_05: Maybe more.
[48:40-48:40] SPEAKER_02: Yes.
[48:49-48:53] SPEAKER_01: Yes. That. This is good.
[48:54-48:55] UNKNOWN: Yeah.
[48:55-48:56] SPEAKER_01: I'm going to
[48:56-48:56] UNKNOWN: go
[48:56-49:12] SPEAKER_01: to pipeline orchestrator. Yes. That is what this should be doing. I do think we're now, after it does this, at the place of,
[49:12-49:12] UNKNOWN: okay,
[49:12-49:47] SPEAKER_01: well, if this is kicking off the pipeline, it's the pipeline orchestrator, which I think that's a good name, or something like that. Yeah. Okay. And it's going to give me the four URIs. Knowing that the pipeline takes, let's call it 15 minutes to come up. It's not 10 minutes. It takes 10 minutes to come up. How then do you, when it knows that the pipeline is then ready, or I guess maybe it publishes the next thing to the next PubSub, and it's just trying until the first service is available? Yeah.
[49:47-49:47] SPEAKER_04: PubSub
[49:47-49:49] SPEAKER_01: keeps going until you say,
[49:49-49:49] UNKNOWN: got
[49:49-50:05] SPEAKER_01: it. So this should kick off, it should do two things. It should kick off the pipeline and publish a message to, I think actually two, it should publish a message to the diarization service and the transcription service. Those should run at the same time.
[50:06-50:13] SPEAKER_04: I assume it is. Oh, that's how it is supposed to be designed, and the problem is we don't know how it is. I don't know how it
[50:13-50:17] SPEAKER_01: is designed, but that's what it should do. It should do three things. When it receives this,
[50:17-50:17] UNKNOWN: it
[50:17-51:19] SPEAKER_01: should do, it should have three cues in my mind. One that kicks off the infrastructure, and then two other ones, these two services can run in parallel. And they will just fail until the infrastructure is ready. And then when it is ready, it will consume those and it will process them and send it to, both of those will send, I don't know how you combine. I don't know how, we will get to that later. And then if you have subsequent uploads, there needs to be a check in here that says, do I need to do this? No. Infrastructure is already good. Add to this queue. So if we uploaded five files, it would kick off the infrastructure and load five things into these two queues. And then they would just start processing once the infrastructure is up. Yeah, I agree. And they would know what URI to publish to. Right.
[51:19-51:19] UNKNOWN: And
[51:19-51:20] SPEAKER_01: then I think the,
[51:21-51:21] UNKNOWN: maybe
[51:21-51:50] SPEAKER_01: even, yes, it also should kick off the fourth queue. Because, and then the message that that fourth queue gets is, check to see when both URIs exist. Right. And start processing when both, I don't know. When both URIs will exist immediately. No, when both files are in the GCS bucket. Yeah, I don't know how to do
[51:50-51:51] SPEAKER_02: that.
[52:29-52:31] UNKNOWN: Okay. Sure.
[52:56-53:10] SPEAKER_01: So, I don't think this function is done. I'm not sure. So it's creating all four, the original one, then plus the three. So
[53:10-53:10] UNKNOWN: it
[53:10-53:28] SPEAKER_01: publishes the job details to a PubSub, triggers the VM controller. I agree. And like I said, and I think it should already, because I don't see how you get from publishing or creating the infrastructure to then, okay, well, when is it no?
[53:28-53:28] SPEAKER_04: I
[53:28-53:28] UNKNOWN: think
[53:28-53:35] SPEAKER_04: that's the PubSub. Like it's going to keep trying until it works and it gets a message back from that service that says,
[53:35-53:35] UNKNOWN: got
[53:35-53:44] SPEAKER_04: it, and then PubSub stops. So as long as it's not there, not accepting and sending back that 200, which it can't if it's not running yet.
[53:46-53:47] UNKNOWN: I
[53:47-54:00] SPEAKER_01: don't, here's how I think I understand PubSub, that there are publishers and subscribers. So I don't know what tells the PubSub queue, I'm done and you can delete the message.
[54:01-54:04] SPEAKER_04: That's that 200, that's from the beginning, you get like a 200 accepted.
[54:04-54:19] SPEAKER_01: I agree. Right. So if you get it from the VM controller, which says go deploy the infrastructure, spend 10 minutes, then that message is gone and there are no subsequent messages. I think they're
[54:19-54:21] SPEAKER_04: different messages, right? That's what I'm saying.
[54:21-54:21] UNKNOWN: Several
[54:21-54:22] SPEAKER_04: different PubSub topics.
[54:22-54:29] SPEAKER_01: Oh, I agree. I think that then something in this controller path needs to create a new message that is waiting.
[54:30-54:37] SPEAKER_04: I agree and I think we'll find that as we progress. I mean, I think we're already at it. I haven't even read what it's done yet.
[55:20-57:00] UNKNOWN: Okay. Okay. Okay. Okay. Okay.
[57:28-57:43] SPEAKER_01: Yeah, that's like, there's nothing tying them. Like we co -opted the trigger diarization request to do the pipeline, but it never actually goes back to actually go look at the file.
[57:50-57:57] SPEAKER_04: That. Right. No.
[58:04-58:07] SPEAKER_02: Oh, there is this concept of these jobs.
[58:16-58:25] SPEAKER_01: I do think that we need to understand what the VM controller does. I know it creates the hardware or infrastructure.
[58:26-58:30] SPEAKER_04: Yeah, but that's in a step after the one we're currently figuring out.
[58:30-58:31] SPEAKER_01: Oh,
[58:31-58:31] UNKNOWN: I
[58:31-58:31] SPEAKER_01: agree.
[58:32-58:32] UNKNOWN: But
[58:32-58:39] SPEAKER_01: meaning we need to, for this step needs to output to the right places to
[58:39-58:49] SPEAKER_04: process. I think it needs to output to the right places that make sense. And then if those places don't currently exist, they should be built and whatever's there right now should be destroyed.
[58:49-58:55] SPEAKER_01: Okay. Yeah. So there's two different philosophies. Like, do we want to build to the current VM controller or change? Yeah, I don't think.
[58:55-58:55] UNKNOWN: Think
[58:55-58:58] SPEAKER_01: about what it should be and then change the architecture. Exactly. I
[58:58-59:03] SPEAKER_04: think we should accept fucked up live coded architecture just because it's already in place.
[59:44-61:47] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[61:49-62:09] SPEAKER_01: The function may be expecting to see two URIs or three instead of four. Oh, well, I guess we changed them around the functions producing the URIs.
[62:55-65:57] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[66:18-66:28] SPEAKER_04: Okay. Okay.
[66:28-66:29] SPEAKER_05: Okay. Okay.
[67:13-67:14] UNKNOWN: Okay.
[67:33-68:23] SPEAKER_04: Okay. Okay. Okay. Okay.
[68:38-68:39] UNKNOWN: Okay.
[68:39-69:05] SPEAKER_01: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[69:54-70:06] UNKNOWN: Okay. And
[70:06-70:07] SPEAKER_02: that should
[70:07-70:21] SPEAKER_01: have cloud run invoker. Right. And the event arc should be designed to use that service account. And it will invoke the cloud function.
[70:22-70:24] SPEAKER_05: Fuck you.
[70:31-70:31] UNKNOWN: Is
[70:31-70:32] SPEAKER_01: it out
[70:32-70:48] SPEAKER_04: of what
[70:48-70:48] UNKNOWN: it is?
[70:57-70:57] SPEAKER_01: Okay.
[70:57-70:57] UNKNOWN: It gave
[70:57-71:54] SPEAKER_01: it pub sub publisher. Okay. Okay.
[72:08-72:09] UNKNOWN: Okay.
[72:09-72:13] SPEAKER_02: Okay. That's why I didn't do it. It's because it was usually not on that.
[72:15-72:18] SPEAKER_04: Which wasn't working, which we just saw. Right. Oh fuck. I'm sorry.
[72:47-72:59] SPEAKER_01: Okay. Okay. Okay. Okay. Okay. Okay.
[72:59-73:13] SPEAKER_04: Okay. Okay. Okay. Okay.
[74:04-74:56] UNKNOWN: Okay. Okay. Okay. Okay.
[74:56-75:09] SPEAKER_01: I think that. Yeah. I think that. I was just going to say that. It's probably good to run them in series. Because you don't know how. When. When
[75:09-75:09] UNKNOWN: you run them in series. Each
[75:09-75:10] SPEAKER_01: one's going to finish first.
[75:11-75:11] SPEAKER_03: Right.
[75:11-75:27] SPEAKER_01: So only try alignment. After you know that. The other one is right. That both of them. Right. And the time doesn't matter. In the big scheme of things. It is slower. But unless there's a way to align them at the end to say,
[75:27-75:27] UNKNOWN: Hey,
[75:27-75:30] SPEAKER_01: I can, I won't go until I have ever see both.
[75:30-75:32] SPEAKER_03: Right.
[76:36-76:37] UNKNOWN: Okay.
[76:45-76:59] SPEAKER_04: This description. What is it? It says, well, it's because of resource. Resource constraints on the GPU. But then that part's right. CPU only.
[77:02-77:03] UNKNOWN: Right.
[77:17-77:19] SPEAKER_04: Do you understand?
[77:20-77:24] SPEAKER_01: No, I think it's
[77:24-77:24] UNKNOWN: confused.
[77:32-77:38] SPEAKER_01: It is not a resource constraint. It is only sequencing. And. Coordination.
[78:02-78:03] UNKNOWN: Right.
[78:03-78:04] SPEAKER_04: I'm
[78:04-78:04] UNKNOWN: not
[78:04-78:11] SPEAKER_04: even inherently. Against the sequential processing. This is just not an acceptable explanation as
[78:11-78:25] SPEAKER_01: to why. Right. I agree. If there is a way to put them back together at the end is fine. Right. Or for the third service to wait. And know that it has both.
[79:09-79:10] UNKNOWN: Right.
[79:21-79:33] SPEAKER_01: That makes sense to me. That those two nodes have to be separate, but that's fine. Because we're also looking at. Processing. That is. Multiple files.
[79:33-79:33] UNKNOWN: We're
[79:33-79:34] SPEAKER_01: going to be processing.
[79:34-79:34] UNKNOWN: The other
[79:34-79:39] SPEAKER_01: thing. That's. There will be a GPU. And a CPU. At the same time.
[79:39-79:39] UNKNOWN: How
[79:39-79:42] SPEAKER_04: does the input. Okay.
[79:42-79:42] UNKNOWN: So
[79:42-79:44] SPEAKER_04: that's more expensive than.
[79:44-79:44] UNKNOWN: Them
[79:44-80:05] SPEAKER_04: running one at a time. The running the exact same process. It's not, it's claiming that like. Oh, now you're paying the high hourly rate for the GPU. While it sits idle. Why the fuck is it sitting idle? That doesn't make any sense. If it has. If diarization has an input. So does transcription. I
[80:05-80:10] SPEAKER_01: agree. I agree completely. It's confused. Or it's logic is not. Following it.
[80:56-83:26] UNKNOWN: Okay. Okay. Okay. Okay. Kill the 3G tbsp delay please.
[83:28-84:33] SPEAKER_01: I would say that that's... So I think that that's true that this fan in problem we're going to have, but which we can get to later, but secondly I want to make sure that it knows that it is also... So it's three things. It is also kicking off the infrastructure build. So when that GCS upload, it should trigger three things. It should build the infrastructure and then produce two pub sub messages, one for diarization, one for transfers. And if we're going to do them parallel, and if they're in sequence, then it was going to produce one. But it's going to, at a minimum, does two things. It kicks off the infrastructure and let that go, and then these other pubs up are just waiting until the infrastructure is ready to process
[84:33-84:34] SPEAKER_03: them.
[84:35-85:30] SPEAKER_01: And then I have other questions about how that works. I'll let you finish typing that. I don't know what consumes the diarization queue, for instance. There's two queues. There's diarization and transfers. Yes, the service. Does the service consume it directly or does the controller consume the pub sub and kick off a job? Do you understand what I'm saying? I think the way it has been designed is the fourth service, this controller,
[85:30-85:30] UNKNOWN: which
[85:30-86:27] SPEAKER_01: is running on the VM, consumes the topic, understands what it needs to do, and sends a job to the cluster service to process, which then it sends it back to the GCS bucket. And so the services that are processing are independent of this controller, and the controller is the one that's controlling these queues and doing things. So the controller does two things, at least in my understanding. I'm not sure because we never really dove into it. It instantiates and controls the infrastructure. It creates the cluster, deploys the services to it, makes them sure they have the right service account, gets all of that set up, and it serves as the controller for, like it's consuming these, and it uses jobs. It sends jobs to the service. So the service is done. It just sits there, waits for a job, processes it done, and it's sitting idle again. That's the way I think it's supposed to be.
[86:27-86:27] UNKNOWN: So
[86:27-86:41] SPEAKER_01: then that, I don't know if we're ready to do that, but we just, right now we're throwing stuff into the pub sub, but I'm not sure how it gets consumed. I agree. I just think we're jumping ahead. Yep, you're right.
[86:41-86:42] UNKNOWN: Sorry.
[87:27-87:36] SPEAKER_01: Yeah, that's what I thought. That's what I think it should do. The VM controller itself is consuming the queues and sending jobs.
[87:37-87:37] UNKNOWN: Yeah.
[87:57-88:01] SPEAKER_01: We need some coffee. Yeah, I'm ready for that too. We
[88:01-88:03] SPEAKER_02: just want to see that last part.
[88:52-88:53] SPEAKER_04: Yeah.
[89:44-89:45] UNKNOWN: Okay.
[90:00-90:02] SPEAKER_00: What
[90:02-90:02] UNKNOWN: do
[90:02-90:24] SPEAKER_01: you say? This is how I think it should work. So you trigger transcription pipeline. So GCS event, the arc, whatever, it has a function that just goes to cluster manager.
[90:24-90:24] UNKNOWN: And
[90:24-91:06] SPEAKER_01: the only purpose is, or it has two purposes, is to create the, check to see if the VM is created, and if it is not, it creates the VM, and it forwards a job to that same VM. And so we could even separate that. That says that the GCS upload, and all it does is check to see, it goes into a queue, or it's a function that checks to see if the controller exists, and if not, create the controller. That's it. And the second thing, it publishes a job to a pub sub queue. Right, so whereas this is potential to get lost right here, because it says, hey, it's responsibility to send
[91:06-91:06] UNKNOWN: a
[91:06-91:12] SPEAKER_01: message to the cluster manager topic. It says that to make the VM.
[91:14-91:14] UNKNOWN: Right.
[91:14-91:31] SPEAKER_01: Or it says the cluster manager topic, or cluster manager function, it says a topic. I'm confused a little bit by this, right, because it says only responsibility is to send a simple message to the cluster manager's topic, which I think that's a function.
[91:31-91:31] UNKNOWN: Like
[91:31-91:32] SPEAKER_01: all it does is,
[91:32-91:32] UNKNOWN: cluster
[91:32-91:35] SPEAKER_01: manager is a function, but it has to have a trigger that
[91:35-91:35] UNKNOWN: creates it.
[91:35-91:52] SPEAKER_01: Okay, maybe that's what it says. And so in that function, check to see if the VM controller if not creates it, and it forwards a job to this VM, to the controller itself. Right, so I don't know if that's a queue, but I think that should be a queue. So all it should do
[91:52-91:53] SPEAKER_04: is
[91:53-91:53] UNKNOWN: send a message to
[91:53-91:55] SPEAKER_04: the VM controller's job queue.
[91:56-92:09] SPEAKER_01: Okay, there you go. Yeah, so it creates the controller, and so then the VM controller is consuming this queue. And the only thing in that queue is the input URL.
[92:09-92:09] SPEAKER_04: It
[92:09-92:11] SPEAKER_01: hasn't created these other ones.
[92:11-92:11] UNKNOWN: There might
[92:11-92:11] SPEAKER_01: be
[92:11-92:11] UNKNOWN: a
[92:11-92:13] SPEAKER_04: list of them, but. Yeah, there might be multiple.
[92:14-92:18] SPEAKER_01: Yeah. And then when it pulls a job from the queue, it controls everything else.
[92:19-92:19] UNKNOWN: It
[92:19-92:49] SPEAKER_01: says, hey, it sends jobs to the cluster. Actually, it needs to then do the same thing that the other one did, and it's not in here right now. It needs to check if the cluster is up. And if the cluster is not up, it should create it. Yeah, so yeah, and if it's not available, it should create it. So I think that maybe that's implied in there, that it has a queue sitting, waiting, but the very first thing it's going to do is look to see,
[92:50-92:50] UNKNOWN: is
[92:50-92:58] SPEAKER_01: the cluster up? If not, build the whole cluster, make sure you can talk to it, make sure it has all of its services up, authenticated, blah,
[92:58-92:58] UNKNOWN: blah,
[92:58-93:08] SPEAKER_01: blah, then start consuming this queue and sending jobs to the cluster as necessary, and whether we send them parallel or whatever, and do alignment. So I think this
[93:08-93:08] UNKNOWN: is
[93:08-93:14] SPEAKER_01: where, this makes sense to me. I don't know if this is what it was doing before, but this
[93:14-93:14] UNKNOWN: is
[93:14-93:16] SPEAKER_01: what it should be doing.
[94:10-95:42] UNKNOWN: Okay. Okay. Okay. Okay. Okay.
[96:40-96:42] SPEAKER_01: Okay.
[96:45-97:36] UNKNOWN: Okay. Okay.
[97:54-97:59] SPEAKER_01: I don't know what's going on with the drawings, so that is messed up, but I think the thinking is right.
[97:59-98:11] SPEAKER_04: Yeah. Oh yeah, the mermaid stuff. We could still get that. Okay. Create the new, correct me if I was up topic.
[98:14-98:15] SPEAKER_05: Let's do
[98:15-98:16] SPEAKER_01: that.
[98:17-98:19] SPEAKER_04: Surely you're going to delete the ones that don't fall out.
[98:19-98:27] SPEAKER_01: No, I think this is going to be a new one, like because what we were using was diorization requests. I agree. And it still needs to exist. That's true,
[98:27-98:28] SPEAKER_04: you're right. It
[98:28-98:28] UNKNOWN: drastically
[98:28-98:30] SPEAKER_04: simplified the sugar bar shape,
[98:30-98:30] UNKNOWN: isn't
[98:30-98:32] SPEAKER_04: it?
[98:32-98:34] SPEAKER_05: Code.
[98:59-99:00] SPEAKER_04: All
[99:00-99:05] SPEAKER_01: it's doing is during the infrastructure or checking to see if it's already existed.
[99:07-99:10] SPEAKER_04: So this is going to deploy that function
[99:10-99:11] UNKNOWN: now.
[99:12-99:23] SPEAKER_01: But it should also have this queue for the follow on job. Does that make sense?
[99:29-99:30] UNKNOWN: I
[99:30-99:31] SPEAKER_01: don't understand how it does that.
[99:32-99:32] UNKNOWN: It
[99:32-100:00] SPEAKER_01: may be thinking about it. Yeah, there you go. No, that's publishing. That's to infrastructure requests. That's all this function does. It receives GCS file says, yes, publish infrastructure. So the infrastructure topic then needs to do two things. Somewhere it needs to do two things. Produce the infrastructure and create the first jobs.
[100:07-100:17] SPEAKER_04: One message to one topic to kick off the cluster manager. This makes our trigger function robust and decoupling from
[100:17-100:17] UNKNOWN: the content.
[100:20-100:27] SPEAKER_04: So it's going to pass along the URI of the new file and the cluster manager is going to make the
[100:27-100:39] SPEAKER_01: jobs. I assume. Something has to do it. If it's not doing it, because that's where the complexity was. It was trying to manage the infrastructure and kick off the infrastructure build and manage these jobs.
[100:40-100:40] UNKNOWN: Well,
[100:40-100:57] SPEAKER_01: then the next they just kicked it down the road. But I think that's the place where they should be because the VM is also the orchestrator of not just the infrastructure. It is managing jobs too. And that's where they should be. Yeah. And the cluster
[100:57-101:09] SPEAKER_04: manager or VM manager controller. The first thing it's going to do is just keep checking to make sure that it's just to see when it's running.
[101:09-101:09] SPEAKER_01: I want
[101:09-101:10] SPEAKER_04: to
[101:10-101:14] SPEAKER_01: change the name of that. It doesn't matter.
[101:14-101:14] UNKNOWN: We
[101:14-101:28] SPEAKER_01: know that it is a it really is the cluster control. At some point, we called it that. Like the. I don't know if it's a cluster controller, whatever. It's got a
[101:28-101:32] SPEAKER_04: cluster manager function. The cluster manager function makes it. It's
[101:32-101:32] UNKNOWN: got a
[101:32-101:34] SPEAKER_04: cluster manager that pie in the VM controller.
[101:37-101:38] SPEAKER_01: That's the one
[101:38-101:39] SPEAKER_04: we've been working with.
[101:40-102:00] SPEAKER_01: Right. The cluster manager creates the cluster and builds the services that I think is named correctly. And the controller is named correctly. It is the application controller like it's doing jobs and things like that. But it doesn't matter. Never mind. I'm going
[102:00-102:00] UNKNOWN: to
[102:00-102:05] SPEAKER_01: stop. It doesn't matter. I understand.
[102:29-102:30] UNKNOWN: It
[102:30-102:36] SPEAKER_01: is the service account used by the event arc service to trigger the.
[102:40-102:41] UNKNOWN: Yeah.
[102:48-102:56] SPEAKER_01: And that will kick off the cluster manager and build the cluster. And the controller to manage jobs.
[102:58-102:58] UNKNOWN: Right.
[103:01-103:03] SPEAKER_01: That's that's fuzzy to
[103:03-103:22] SPEAKER_04: me. How you haven't gotten there yet. So we haven't even begun to have it explain us to because we've literally all we have done now is kick it down the road. But really what we've done is design in a more optimal way up to this point.
[103:22-103:25] SPEAKER_01: I agree. That's but I think this is where we're at though. I agree.
[103:27-103:27] UNKNOWN: The
[103:27-103:53] SPEAKER_01: is going to invoke the cluster manager, which is going to build a cluster, the plug cluster, deploy the services to the cluster. But it also needs to know that original GCS you are. It gets past it. But where does that live while for the 10 minutes while the clusters being created? Because that is also the basis of the first job. You see, it's like it's almost like that needs to go into a queue and be waiting.
[103:53-104:11] SPEAKER_04: I mean, it's sending it to a pub. So. Yeah, the whole function of that first function is it starts the. There it sends to the cluster manager queue that you are. It does the only thing it says.
[104:13-104:47] SPEAKER_01: I agree. And that queue needs to do two things. Right. It needs to build our infrastructure. And that at this point includes both the V or it is only building the VM. Right. At that point, it is only building the VM. And the so the VM is responsible for two things, building and managing the Kubernetes cluster and orchestrating jobs.
[104:48-104:48] UNKNOWN: Right.
[104:49-105:18] SPEAKER_01: So this path we're on is building and managing the cluster. Right. But what I'm saying is it also has its first job. And there is no like there's just the queue that is going to kick off the VM building process. It needs to kick off effectively in the VM controller because this is the stuff that's on the VM. Right. It is going to kick off the cluster manager process, which builds the cluster. But it also needs to kick off the controller process.
[105:19-106:32] SPEAKER_04: Yeah, I just don't know that it's not doing that. I think we need to wait on all of this to get done before we can even know where I'm at. Function worked. See if cluster managers see the controllers already. OK. We successfully rebuilt the first stage of the pipeline to be simple, robust, and secure.
[106:58-107:08] SPEAKER_01: I agree. That's I guess I was ahead of myself. That is the next step of how does the cluster manager and VM controller implement this.
[107:09-107:09] UNKNOWN: Right.
[107:12-107:12] SPEAKER_04: Motherfucker.
[107:12-107:12] UNKNOWN: I guess
[107:12-107:16] SPEAKER_04: it's time for an insertion.
[107:17-107:21] SPEAKER_01: Do you mean to delete this? I think it's doing it. OK.
[107:38-107:38] UNKNOWN: I
[107:38-107:43] SPEAKER_04: guess yeah, go ahead and delete it. I'm going to have it insertion.
[107:45-107:46] UNKNOWN: Yeah.
[107:52-107:55] SPEAKER_01: I'm going to delete these files too. Yeah. Really.
[108:46-109:09] UNKNOWN: OK. OK.
[109:14-109:22] SPEAKER_01: I think it's worth starting the next session and talking about the VM controller.
[109:31-110:00] UNKNOWN: OK. OK. OK. OK. OK.
[110:15-110:17] SPEAKER_04: OK. OK.
[110:17-110:17] UNKNOWN: I
[110:17-110:22] SPEAKER_04: agree. Yeah. Fuck that. Where is it conflicting?
[110:32-110:33] UNKNOWN: Yeah.
[110:33-110:39] SPEAKER_01: Yeah. Like the test driven design,
[110:39-110:39] UNKNOWN: I
[110:39-110:42] SPEAKER_01: think maybe compared to what we're
[110:42-110:42] UNKNOWN: doing.
[110:55-110:57] SPEAKER_04: You going to tell me
[110:57-111:07] SPEAKER_01: to delete all that shit? Yeah. I think we have enough actually in our heads now that we didn't. I think we understand as much or more than the AI.
[111:39-112:09] SPEAKER_04: Do you want to prompt it with where your head is at? It's like a different skill
[112:09-112:17] SPEAKER_01: to be the keyboard. I agree. I agree completely. It really is different. It's a very different thing.
[112:47-113:11] SPEAKER_04: Whatever the fuck it wants. Go to the top of that. That looks like it's on its chat. Did it tell you to apply these? Yeah.
[113:12-113:12] UNKNOWN: I
[113:12-113:18] SPEAKER_04: thought I'd just change it. Like I would say, do that. Maybe it did.
[113:23-113:24] SPEAKER_01: Oh, so it's saying,
[113:24-113:24] UNKNOWN: yeah,
[113:24-113:27] SPEAKER_01: copy this and just write over it. Like I
[113:27-113:27] UNKNOWN: basically
[113:27-113:38] SPEAKER_01: said, I rewrote it. Copy this and put it on there. That's fine for now. Just to get to where we're going. It's pretty small. My guess is it's
[113:38-113:38] UNKNOWN: small.
[113:38-113:41] SPEAKER_01: Oh, it's not record.
[113:51-114:25] SPEAKER_04: Yeah, it is still pretty small. But this is the current status. And actually I do like, so I almost pitched deleting that entire project on GCP. But I think this makes more sense to treat the ReadMe as though we did that. And then go design truly the ReadMe correctly like it currently is. And then get to like address the stuff that's not on the ReadMe yet. It might as well not actually exist yet. It does. I agree. I'm good with it.
[114:40-114:40] UNKNOWN: Wow.
[114:43-114:44] SPEAKER_01: My hands were not in the right place.
[115:19-115:21] SPEAKER_04: Hey, you might want to step in before
[115:21-115:22] SPEAKER_05: it.
[116:03-117:01] UNKNOWN: Okay. Okay. Okay.
[117:22-117:26] SPEAKER_01: It does. Like so it is doing the queue. Yeah,
[117:27-117:27] UNKNOWN: so
[117:27-117:33] SPEAKER_01: it says that it receives this when triggered,
[117:35-117:35] UNKNOWN: it
[117:35-117:40] SPEAKER_01: receives this audio file. That's the only thing it receives in the job or even
[117:40-117:40] UNKNOWN: the job.
[117:40-118:40] SPEAKER_01: It checks to see if the controller, the VM is running. And if it is not running, if it is running, this VM state logic, it does nothing. That function is done. Right. And if it is not running, it then starts up a VM. And either way, the secondary action it takes is to publish this GCS URI to the VM controller jobs queue. Which is a different PubSub topic. So that's what I wanted to make sure. It is doing two things. It is responsible for maintaining the state of the VM that is the job controller and adding jobs to the queue. It adds that first job to the queue. And that those queues are separate. Yes, exactly. So then from this point forward, every time a GCS file gets uploaded, it should just go to path A. Right. Running, pass to the queue. Running, pass to the queue.
[118:40-118:47] SPEAKER_04: Well, not from this point forward. Once. Because the VM should still destroy itself at the end.
[118:47-118:47] SPEAKER_01: No,
[118:47-118:47] UNKNOWN: I'm
[118:47-119:02] SPEAKER_01: saying while it's running. So if there's a queue, like so multiple of files, like it's already running, I'm going to, if I upload new ones, it's going to do this. It's going to go through the same process, hit this and say running. All good. Pass to the queue and good. Yeah.
[119:02-119:02] UNKNOWN: And
[119:02-119:02] SPEAKER_01: then.
[119:02-119:07] SPEAKER_04: Even if the queue is empty because it's running because it's done and hasn't shut down yet, doesn't matter. Give it to the queue.
[119:07-119:10] SPEAKER_01: It's going to give it to this controller, job controller queue.
[119:10-119:10] UNKNOWN: Right.
[119:10-119:13] SPEAKER_01: That's the thing that I was wanting to make sure that it was separate.
[119:14-119:14] UNKNOWN: That
[119:14-119:20] SPEAKER_01: it is controlling the VM and queuing the first job. And then. Yeah.
[119:21-119:22] UNKNOWN: So
[119:22-119:40] SPEAKER_01: it has two potential outputs. Pub sub message containing the job details. Yes to that. This is the queue that the VM monitors for work. The VM controller. Yes. So the VM, once the VM comes up, it's monitoring this queue.
[119:40-119:41] UNKNOWN: Right.
[119:41-120:11] SPEAKER_01: And it sends jobs to the VM controller. Then we haven't done that yet. It is or it has two things to it is orchestrated into GKE cluster and submitting jobs. So it has two functions to when it receives a job, it has to then do the same thing that this other one just did. Is the cluster up? Yes or no. And if no, it is. Okay. Instantiate the cluster. Build it. Make sure it's running well. And if it is,
[120:11-120:11] UNKNOWN: and
[120:11-120:14] SPEAKER_01: after that, then submit jobs to
[120:14-120:14] SPEAKER_04: it.
[120:15-120:28] SPEAKER_01: And if it is already up, just send submit jobs. So there's two parallel steps that are doing similar things. One is monitoring the VM and the other is monitoring the cluster. I think this makes sense to me. This is what I wanted to see. I
[120:28-120:30] UNKNOWN: agree. And
[120:30-120:31] SPEAKER_01: then I gotta go.
[120:42-120:42] UNKNOWN: I
[120:42-120:48] SPEAKER_01: put some extra punctuation inside. It's fine. All right.
[120:49-120:49] UNKNOWN: I
[120:49-120:49] SPEAKER_01: gotta go.
[121:27-125:58] UNKNOWN: Ah. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Shh. Shh.

==================================================
Generated on: 2025-07-28 22:59:41
Total words: 8754
Total speakers: 7
==================================================




Summary:
creation_date: 2025-07-28 source_file: 2025-07-28_2242_ZOOM0029_transcript.txt participants: SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04, SPEAKER_05, UNKNOWN
Executive Summary
The team pivoted from end-to-end testing of the [[Transcription Service]] to a more granular, component-by-component validation approach due to persistent, unidentified failures. The core of the discussion was re-architecting the initial stages of the pipeline, focusing on how a file upload triggers the infrastructure creation and job queuing. They decided to implement a step-by-step verification process, using [[Mermaid]] diagrams to document and understand the exact flow of data and triggers. The key architectural decision was to decouple the infrastructure setup from the job processing by having the initial [[Cloud Function]] only check the [[VM controller]]'s state and add the job to a new [[Pub/Sub]] queue. This ensures a more robust and debuggable system where the [[VM controller]] is responsible for both cluster management and job orchestration.
Key Topics Discussed
	•	Pivoting to Component-Level Testing: The team acknowledged that their current approach of end-to-end testing was ineffective because the system has "ghosts and gremlins." They agreed to shift to a more deliberate, step-by-step validation process.
	•	Instead of letting the AI build a complete testing framework, they will manually walk through each component of the pipeline.
	•	The goal is to verify the input and output of each step individually, starting from the initial file upload to the GCS bucket.
	•	Architectural Re-design of the Initial Trigger: A significant portion of the meeting was spent redesigning the initial workflow triggered by a file upload.
	•	Current Flaw: The existing "publish diarization request" [[Cloud Function]] was a remnant of a sequential design and was trying to do too much, leading to confusion and failure. It was creating URIs and kicking off a process that wasn't properly decoupled.
	•	New Design:
	•	A GCS file upload triggers an [[Eventarc]] trigger.
	•	This trigger invokes a simple [[Cloud Function]] (renamed to something like "pipeline orchestrator").
	•	This function's sole responsibilities are:
	•	Checking if the [[VM controller]] is running. If not, it initiates its creation.
	•	Publishing a message with the new file's URI to a dedicated "VM controller jobs" [[Pub/Sub]] topic.
	•	Role of the VM Controller: The team clarified and solidified the dual responsibilities of the [[VM controller]].
	•	Infrastructure Management: It checks if the [[GKE]] cluster is running. If not, it creates the cluster and deploys the services.
	•	Job Orchestration: It monitors its dedicated [[Pub/Sub]] jobs queue. When it pulls a job, it then sends it to the appropriate service on the [[GKE]] cluster.
	•	Parallel vs. Sequential Processing: There was a debate about whether the diarization and transcription services should run in parallel or sequentially.
	•	The AI suggested sequential processing due to [[GPU]] resource constraints, but the team identified this reasoning as flawed.
	•	They concluded that parallel processing is more efficient, and the real challenge is the "fan-in" problem: ensuring the final alignment step only runs after both preceding steps are complete. They decided to solve this later.
	•	Using [[Mermaid]] for Visualization: The team decided to use [[Mermaid]] diagrams to visually map out the architecture as they confirm each step. This will serve as living documentation and a tool for shared understanding, which can be used in [[Obsidian]] or Lucidchart.
Action Items & Decisions
	•	Decision: Pivot from building a comprehensive, automated testing framework to a manual, step-by-step, component-level validation of the entire pipeline.
	•	Decision: Re-architect the initial trigger mechanism. A new [[Cloud Function]] will be created that separates the concern of infrastructure state management from job queuing.
	•	Action: Create a new, dedicated [[Pub/Sub]] topic named "vm-controller-jobs-queue" to handle incoming transcription jobs.
	•	Action: Modify the [[VM controller]] to monitor the new jobs queue and to manage the state of the [[GKE]] cluster (creating it if it's down) before submitting jobs.
	•	Action: Use [[Mermaid]] to create a detailed diagram of the architecture as each component's functionality is verified.
Suggested New Links/Tags
	•	[[Pipeline Orchestrator]]
	•	[[Component Testing]]
	•	[[Test Driven Development]]
Linked Concepts
	•	[[AI Agents]]
	•	[[Cloud Function]]
	•	[[Cloud Run]]
	•	[[Cluster Manager]]
	•	[[Cursor]]
	•	[[Diarization Service]]
	•	[[Docker]]
	•	[[Eventarc]]
	•	[[GCP]]
	•	[[GKE]]
	•	[[GPU]]
	•	[[Mermaid]]
	•	[[Obsidian]]
	•	[[Pub/Sub]]
	•	[[Service Account]]
	•	[[Transcription Service]]
	•	[[VM controller]]
#Tags
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting
	•	#Automation
	•	#Deployment
	•	#AI

zoom30
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-28_2220_ZOOM0030_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:02-00:06] SPEAKER_04: Did you see that they were walking and people were reaching over and touching the trophy?
[00:07-00:07] SPEAKER_03: I did.
[00:08-00:21] SPEAKER_04: I didn't know that was going to be the situation. I did see that. Try to get Kyle and his hands on the trophy, that would have been sick. Go over and drop like $500 for a pair of shoes at Shae's Mural. Is that how much they
[00:21-00:21] UNKNOWN: cost?
[00:21-00:23] SPEAKER_04: I don't know, I just assume it's sick.
[00:36-00:37] SPEAKER_01: I have
[00:37-00:37] UNKNOWN: a
[00:37-00:43] SPEAKER_01: phs subblock. Google is too great to block your
[00:43-00:43] UNKNOWN: network,
[00:43-00:49] SPEAKER_01: your account or network due to assistive automated requests. Oh, maybe because I
[00:49-00:49] UNKNOWN: had
[00:49-00:53] SPEAKER_01: logs
[00:53-00:59] SPEAKER_03: in streaming. Maybe. They're like, bro, stop, it's free,
[00:59-01:07] SPEAKER_04: but come on. And it wasn't streaming anything?
[01:07-01:13] SPEAKER_01: Oh, I literally... I can't go back to the cloud console.
[01:14-01:14] SPEAKER_05: What?
[01:19-01:19] SPEAKER_01: Yeah.
[01:21-01:28] SPEAKER_04: Can you like close everything and try to just go clean
[01:28-01:31] SPEAKER_03: and clear your history? Maybe.
[01:50-01:54] SPEAKER_01: It is not the internet connection, at least not right now.
[01:55-02:01] UNKNOWN: Yeah. Oh,
[02:01-02:08] SPEAKER_01: good. It's back. Yeah. I was concerned about that. Okay.
[02:10-02:15] SPEAKER_04: Yeah, and that stream does stay as long as you don't disturb it. Yeah. It'll keep going.
[02:19-02:25] SPEAKER_01: So you want to try it again? Do you want to? I'm a little like... Okay, no, I'm good.
[02:25-02:25] UNKNOWN: I
[02:25-02:26] SPEAKER_01: will. I will.
[02:33-02:40] SPEAKER_04: Basically, there's... It should be in here that there's a little discrepancy in the diarization
[02:40-02:45] UNKNOWN: manifest. Okay.
[02:45-02:47] SPEAKER_04: And that should be the next test
[02:47-02:47] SPEAKER_03: for you.
[03:00-03:01] SPEAKER_04: I have a
[03:01-03:01] UNKNOWN: billion
[03:01-03:07] SPEAKER_04: images for the VM controller, but I think we get it to where it's a working thing.
[03:07-03:07] UNKNOWN: So, I'm going to try to do a full clean out next
[03:07-03:09] SPEAKER_04: day and then do a full clean out.
[03:09-03:09] UNKNOWN: I
[03:09-03:39] SPEAKER_04: agree. Or maybe like once or twice a week, go ahead and clean it out. So one thing, I haven't added it to rules, but I am telling it to check the design docs directory, which is where I put just all the stuff. It's not all designed, but like the last one, I think,
[03:39-03:44] SPEAKER_03: was debug session 2025624. And that's in design docs.
[03:45-03:45] UNKNOWN: Okay.
[03:48-03:52] SPEAKER_01: It basically said like, can
[03:52-03:57] SPEAKER_04: you reuse... Oh, two things in... Yeah, I think you have to do it explicitly, like in the... with the add.
[04:10-04:12] SPEAKER_05: That's all those raw arms.
[04:19-04:20] SPEAKER_04: You may be able
[04:20-04:20] UNKNOWN: to
[04:20-04:21] SPEAKER_04: give it that whole folder, but
[04:21-04:21] UNKNOWN: I
[04:21-04:49] SPEAKER_04: guess the folder's a little messy. That's actually better. Just give it that one. Man, the first time I sat down after we finished, I did a couple things, like some cleanup things and then said like start a new session or do an in session. And it made a date of like January 2nd. And I thought I was going to lose my mind.
[04:49-04:49] UNKNOWN: And
[04:49-04:54] SPEAKER_04: then it kept that energy for like 30 minutes on just some simple shit. What
[04:54-05:01] SPEAKER_01: are we doing? I mean, these tools are fantastic. They're brilliant and dumb at the same time. Right. Every
[05:01-05:33] SPEAKER_04: once in a while, that was my thought on the talking, like the audio. Yeah. Oh, yeah. That's right. I don't even know if it's native or the time I saw that somebody was doing something with like another tool. But the only time I've ever seen people use it, they're being very careful. It's not like conversational. Like it's like talking to Siri. Right. Or even the AI, like the open AI ones are really, really good for a voice assistant interaction. Right. It's not like, oh man, this is like a
[05:33-05:33] UNKNOWN: human.
[05:33-05:37] SPEAKER_04: It's like a human. Yeah. It just knows what I'm talking about. You still have to be careful.
[05:37-05:37] UNKNOWN: And
[05:37-05:46] SPEAKER_04: like when you pause and all that stuff like that. And that's with one person being aware that they're talking to the thing. Let alone two.
[05:46-05:46] SPEAKER_02: Yeah.
[05:46-06:27] SPEAKER_04: Yeah. Yeah. I don't know where we would do that concept of pulling off and both type it into a doc. But like whenever it really does some big plans and goes through like here's everything or here's what I saw, what do you think? I think it's valuable because literally like this is not a good example, but if it was scrolling, I would go through and be like, okay, well explain to me what happened in that first one because I wasn't here or something like that. And then as I read through it, now I've got, I usually put like double return in between them. I've got four or five things written and I just send it and it comes back with, it's like,
[06:27-06:27] UNKNOWN: oh.
[06:27-06:27] SPEAKER_04: Yeah.
[06:27-06:27] UNKNOWN: So
[06:27-06:29] SPEAKER_04: you're just processing a conversation.
[06:30-06:37] SPEAKER_01: Right. So I think that in moments where we're designing or troubleshooting.
[06:37-07:09] SPEAKER_04: Yeah. Yeah. If there's a natural, if we're actually talking, I think that's, we shouldn't artificially go, oh, let's go do this separately. But like on times where you're naturally doing that or whoever's driving is sitting there just like jamming, that's probably a good time to be like, Hey, send that to the doc. You can keep, you can stay in cursor and then I'll have it and I'll go through it. If I have anything I want to add, I can. And if not, then it's fine. And I think even if there's overlap, we like don't necessarily have to compare what we've said.
[07:09-07:09] UNKNOWN: No,
[07:09-07:19] SPEAKER_04: just put all of it in. Maybe tag that this is Daniel and this is Mark just so like it starts to even like absorb that concept that there's
[07:19-07:19] UNKNOWN: three
[07:19-07:22] SPEAKER_04: people, three entities working on it.
[07:23-07:23] UNKNOWN: But
[07:23-07:23] SPEAKER_04: yeah.
[07:23-07:24] SPEAKER_01: I think that will be very
[07:24-07:27] SPEAKER_04: valuable. Just keep that concept in mind as we move forward. I
[07:27-07:31] SPEAKER_01: think it'll be a very good tool because that's one of the things I was,
[07:31-07:31] UNKNOWN: you
[07:31-07:44] SPEAKER_01: know, the still or maybe the opposite or it go higher. Say that that's one of the objectives of everything we're trying to do is try to integrate this agent into our workflow.
[07:44-07:58] SPEAKER_04: Yeah, we're not trying to necessarily build the perfect agent. We're trying to build the perfect agent, human, workflow. Yeah. Team concept. Yeah. Yeah. And I think the Google doc is the move because like as soon as I type it,
[07:58-07:58] UNKNOWN: you
[07:58-07:58] SPEAKER_04: have
[07:58-08:03] SPEAKER_01: it. Sounds good. Yeah. Whenever we just need to remember that. Yeah, when
[08:03-08:10] SPEAKER_04: we get into that. And basically, I think the trigger is and you got to experience it yesterday whenever you have something to say,
[08:10-08:10] UNKNOWN: but
[08:10-08:20] SPEAKER_04: you're like, oh, that's going to like your I got something and I'm like, oh, wait until you finish that. Yeah. And then it's like you may have already processed or maybe that changes your thoughts on something, but it's already time.
[08:20-08:20] UNKNOWN: Or you
[08:20-08:21] SPEAKER_04: forget or whatever.
[08:21-08:41] SPEAKER_01: Yes, I agree. That's a good. That's a good point because that happened to me a few times and I just didn't want to interrupt because it's hard to listen and type. Like you keep your thoughts and I'm reading it too at the same time. Yeah, just keep them separate. Just want to read this and see because you did a lot of work yesterday. You fixed a lot of stuff.
[08:41-08:44] SPEAKER_04: And a few steps.
[08:45-08:45] UNKNOWN: I
[08:45-08:54] SPEAKER_04: mean, that's what the debugging thing is. And it's probably in the read me, but it kept going like that's the power of debugging with like very strong
[08:54-08:55] SPEAKER_03: documentation. All right.
[09:16-09:19] SPEAKER_01: Okay. That should be simple.
[09:19-09:20] SPEAKER_04: Yeah, that diarization job.
[09:25-09:29] SPEAKER_01: So, yes, we want to investigate and fix
[09:29-09:37] SPEAKER_04: this. So the reasoning for this, what's happening here is whenever I pushed back on it because it tried to do the thing and say like,
[09:37-09:37] UNKNOWN: oh,
[09:37-09:56] SPEAKER_04: like basically the transcription service did start. It never did an output. I stopped the test at some point. But it tried to do the up successful test. Everything's working end to end test done. And so I was like, no, and like pushed back pretty hard. So that's what's going on there with like the okay. Now we need to validate everything.
[10:06-10:07] UNKNOWN: So
[10:07-10:08] SPEAKER_01: are we going to do this by doing an end
[10:08-10:08] UNKNOWN: to
[10:08-10:11] SPEAKER_01: end test or obviously get to that place and just.
[10:11-11:27] SPEAKER_04: So what I was doing yesterday and what that markdown file up there, the debug session came from was I said, okay, we're going to we've already done this. So there's another file that is the other one that's dated in there. I've got verification run. And if you look at them. So there's the plan. And then you scroll down and it starts to log exactly the steps as we go. Okay. And then I said basically there's a multiple tests in this file. And what I did on that other file was say, hey, look at that. I want to do this again and explicitly test all the things that are supposedly confirmed as successful. Like basically do the full end to end. And as we're going, we might as well look at those logs and make sure they're actually running today. Maybe mention the words test driven development.
[11:48-12:18] UNKNOWN: Okay. Okay. Okay.
[12:37-12:50] SPEAKER_01: You're going to like this. And then it
[12:50-12:52] SPEAKER_04: started doing it runs date in the terminal. It's like,
[12:53-12:53] UNKNOWN: oh,
[12:53-12:54] SPEAKER_04: let me figure out what they like.
[12:55-12:55] UNKNOWN: Like, I
[12:55-13:01] SPEAKER_04: know, you know, what the date is. I'm
[13:01-13:02] SPEAKER_01: going to fix it.
[13:05-13:08] SPEAKER_04: And like context clues.
[13:54-13:55] UNKNOWN: I
[13:55-14:15] SPEAKER_04: talked to it about splitting the VM controller into like architecture. And then jobs that should be split into services. It was like, yeah, in an optimal environment. But then you got to do a whole bunch of stuff and can't necessarily just use cube CTL.
[14:15-14:15] UNKNOWN: So
[14:15-14:18] SPEAKER_04: let's not was basically responsive. Okay.
[14:24-14:24] UNKNOWN: So
[14:24-15:45] SPEAKER_04: looking at the read made actually did a really good job of referencing those files. Okay. So we don't have to actually go over the top with it. Yeah. It's actually doing pretty good. Starting to maybe learn a little bit. There's nothing. Yeah, I did it. It didn't give me any notifications. Yeah. It was a good Christian. I don't know if you prepped that or if you were just winging it, but it was good. It was a good speech. The J will try with a fucking champion. Did you see that? No, I didn't see that. He's on stage with like everybody, but the mayor was standing next to him and he was just going like, I don't even, it was kind of similar to Wiggins, like the buildup. And he was like, at the end, he was like, we're the motherfucking. No, I didn't
[15:45-15:45] UNKNOWN: see
[15:45-15:45] SPEAKER_04: it. I'm sure.
[15:46-15:46] UNKNOWN: Hands
[15:46-15:47] SPEAKER_04: in his face.
[15:52-15:55] SPEAKER_01: Do both at the same time.
[15:55-16:09] SPEAKER_04: Yeah, it was doing that yesterday as well. It works typically. So. At least after this first one. It'll be quick and even.
[16:10-16:15] SPEAKER_01: Yeah, just changing the Python layer. It's super simple.
[16:15-16:15] UNKNOWN: I'm
[16:15-16:15] SPEAKER_01: not
[16:15-16:29] SPEAKER_04: sure if it was where like where your bill was. Oh, yeah. Oh,
[16:58-16:59] UNKNOWN: it's
[17:10-17:17] SPEAKER_04: even that thing. How do you know? How do you not know? Text file is not accepted.
[17:18-17:18] UNKNOWN: It
[17:18-17:18] SPEAKER_01: should.
[17:19-17:34] SPEAKER_04: That's what I'm saying. Like context wise, it knows. Yeah. Like it has access to the code base. Yeah. It has the read me that has everything described as to what goes and it always tries to send a text file. Why are we
[17:34-17:35] SPEAKER_01: doing this?
[17:36-17:39] SPEAKER_04: I understand you can't generate an audio file, maybe,
[17:41-17:41] UNKNOWN: but
[17:41-17:54] SPEAKER_04: you should know that you don't need to. At the very least, even if you can't see that audio file in the code base, you should go, hey, you got an audio file for me. Right. Not try to do something that won't
[17:54-17:57] SPEAKER_01: work. Let's go on the Internet and find a simple audio
[17:57-17:58] SPEAKER_04: file.
[18:02-18:03] UNKNOWN: But
[18:03-18:10] SPEAKER_04: that is nitpicking one of the greatest miracles humans have ever produced.
[18:16-18:17] SPEAKER_01: Guess is, is not there.
[18:18-18:20] SPEAKER_04: It should be like provision here.
[18:20-18:20] UNKNOWN: It
[18:20-18:22] SPEAKER_04: might not be yet, but
[18:22-18:22] SPEAKER_01: it'll
[18:22-18:47] SPEAKER_04: get there. I started adding a zero to 30. Make it wait five minutes. You can interact with that. And just not even acknowledging it. Like whenever I like if it does something you don't want, just interrupt it. If it's trying to like, hey, run this, let me generate a command to delete a file.
[18:48-18:48] UNKNOWN: I'll
[18:48-19:09] SPEAKER_04: be like, yeah, I did it. Yeah. Like that type of stuff. Those are little optimizations, but it's like there's stuff you don't need to use the app for. Right. Just go do it. It's probably beneficial to do those, to figure out like, well, that's a thing that we can automate not with AI, but with a tool. Right. Like we're working. It's like delete files. That just needs to be like a run this thing.
[19:09-19:10] SPEAKER_01: I agree completely.
[19:12-19:16] SPEAKER_04: And that's, that's the magic right now is taking AI out of the
[19:16-19:17] SPEAKER_01: process.
[19:17-19:17] UNKNOWN: Where
[19:17-19:26] SPEAKER_01: it doesn't need to be. Right. And only putting it where it should be. Like it's not necessarily need to be. Is this good at some things and also dumb at some things. Yeah.
[19:26-19:26] UNKNOWN: Only
[19:26-19:29] SPEAKER_01: give it the things that it's strong, but it's not very good at
[19:29-19:29] UNKNOWN: math.
[19:29-19:29] SPEAKER_01: Yeah.
[19:29-19:42] SPEAKER_04: There's a Python math package that's great at all of the math. So do that. And even if AI was as good as that Python math package, that Python math package is free. Right. And
[19:42-19:44] SPEAKER_01: AI is slow and expensive.
[19:44-19:51] SPEAKER_04: Exactly. Yeah. That Python math is going to run on some lightning fast VM or Kubernetes cluster.
[19:51-19:51] UNKNOWN: And
[19:51-19:52] SPEAKER_01: just
[19:52-19:52] UNKNOWN: kill
[19:52-19:56] SPEAKER_01: it. Exactly. And it's been optimized all the way down to the memory it uses.
[19:58-20:11] SPEAKER_04: And doing math that is more complex than you need. In like 99 .9 % of cases. Yeah. And then they're like, it's going to try to run these different ones. I guess you gave it the five minute sleep.
[20:12-20:12] UNKNOWN: But
[20:12-20:17] SPEAKER_04: at some point I either just let it sit there with its log check.
[20:19-20:20] SPEAKER_01: Make that one less without trying to
[20:20-20:20] UNKNOWN: do.
[20:20-20:21] SPEAKER_01: I don't normally do that.
[20:21-20:27] SPEAKER_04: Uh oh. Yeah. Just let its log check sit there. Like don't say,
[20:27-20:27] UNKNOWN: hey
[20:27-20:29] SPEAKER_04: I'll let you know. Or something just like,
[20:29-20:29] UNKNOWN: hey,
[20:30-20:36] SPEAKER_04: either you're going to time out and wait for me to respond or it's still going to be there whenever I see that it's ready. Right. Either way.
[20:39-20:45] SPEAKER_01: Yeah. It just ends up using more context window letting it do stuff. Like just, you're right. That makes more sense.
[20:48-20:55] SPEAKER_04: And it's quicker for us. Like the, if you wanted to get rid of the read me for some reason, just go delete it and maybe say,
[20:56-20:56] UNKNOWN: hey
[20:56-21:08] SPEAKER_04: I deleted it because this, this, and this. Let's move on as opposed to, hey I want to delete this and say, okay well let me find it. Let me generate this. Yeah. Sometimes generating that simple RM command takes it a minute. I agree.
[21:09-21:22] SPEAKER_01: Makes sense. So what was the issue that it was having trouble mounting?
[21:24-21:40] SPEAKER_04: The, some kind of driver, something for the diarization service. It was at the end of my session and it's one of those like, seems simple enough and I was still just like what, so I stopped. GCS input.
[21:41-21:45] SPEAKER_01: Oh yeah. Like the mounting the volume.
[21:45-21:50] SPEAKER_04: Right. So it can actually interact with GCS which is pretty fucking important.
[21:50-21:58] SPEAKER_01: Yeah. I didn't know you could make that symbol right there.
[21:59-22:03] SPEAKER_04: I don't know. I mean there's definitely like command shift like different
[22:03-22:03] UNKNOWN: keys.
[22:03-22:14] SPEAKER_04: Yeah. You can do all the different languages and shit. I don't know how to do it. I've looked up how to bring up the emoji keyboard on the MacBook probably ten times.
[22:14-22:14] UNKNOWN: Still
[22:14-22:24] SPEAKER_04: don't know. Because it's literally every single time that I can remember is to generate a green check mark for my tattoo list. Right. And then I'll copy paste them for the rest of the time.
[22:31-22:45] SPEAKER_01: Yeah. This I think before it was getting confused. Right. Between a job and just the service being separate. Like the service runs, send it jobs and the service continues to run.
[22:45-22:53] SPEAKER_04: Right. It still struggles with the concept of this being a full on development environment too no matter how many times you tell
[22:53-22:53] SPEAKER_02: it.
[22:57-23:21] SPEAKER_04: So I asked it about that one little command that it runs sometimes and seems like it breaks and apparently what that command specifically does is filters all the error logs to a file that they call basically a black hole. It like auto deletes everything. So it's like I'm looking for everything but because I know there's going to be some errors I'm looking for some other shit.
[23:21-23:23] SPEAKER_01: Got it. Okay.
[23:23-23:29] SPEAKER_04: I don't understand exactly why. Like I feel like the errors of what I'm looking for but whatever.
[23:29-23:30] SPEAKER_01: But whatever you say man.
[23:30-23:41] SPEAKER_04: Yeah. It's specifically doing that I think around times where it's like I'm waiting for the cluster to come on and I know I don't really care because it's in startup and I know it's going to be a lot.
[23:50-23:52] SPEAKER_05: It's going to take longer than
[23:52-23:59] SPEAKER_04: 30 seconds. Why would you sleep 30 if it's a while?
[24:00-24:02] SPEAKER_01: Yeah I think it's going to keep looking
[24:02-24:04] SPEAKER_04: and I don't want to
[24:04-24:07] SPEAKER_01: do it because I can see it.
[24:07-24:16] SPEAKER_04: Yeah exactly. This is kind of where that story that conceptualized in my mind man the cost goes up every time I wonder what it's all about.
[24:16-24:19] SPEAKER_01: It probably never mind.
[24:19-24:19] UNKNOWN: I
[24:19-24:25] SPEAKER_01: don't know. I was going to say it probably has more pods active on it and stuff but it's not even created yet.
[24:26-24:35] SPEAKER_04: Or it's just literally like the for the account this month it's not this cluster necessarily. Maybe.
[24:37-24:38] UNKNOWN: I
[24:38-24:39] SPEAKER_04: guess.
[24:41-24:43] SPEAKER_01: Well I can handle 40 cents so.
[24:44-24:54] SPEAKER_04: Yeah and even that I think the estimated on the overall account is still like 60 something whereas it's going to end up being some 50 I assume unless we really get this thing cranking up.
[24:55-25:00] SPEAKER_01: Yeah and then next month that number is going to be like five. Yeah hopefully.
[25:01-25:10] SPEAKER_04: Unless we're doing a bunch of transcriptions and it's working. But that's fine. Even that should still be probably five to ten because
[25:10-25:18] SPEAKER_01: it's better than paying the external service first of all because it's still much cheaper and secondly we know how that we built it.
[25:18-25:21] SPEAKER_04: Yeah it's our tool. And we can build it.
[25:21-25:21] UNKNOWN: We
[25:21-25:28] SPEAKER_04: don't need API access to anybody else's shit. We can just integrate it anywhere we want.
[25:37-25:39] SPEAKER_05: It's just taking a real long time.
[25:43-25:43] UNKNOWN: Just.
[25:48-25:50] SPEAKER_01: The first round of the track is tonight.
[25:50-25:52] SPEAKER_04: Oh really. That's pretty quick.
[25:52-25:52] UNKNOWN: That
[25:52-25:53] SPEAKER_04: makes sense.
[25:53-26:11] SPEAKER_01: Yeah and second round is tomorrow. So we'll assume Prestige is making the moves today because the place where the value is all of these picks and that happens on this day. For sure. Like if you like I'm sure he could get to that number one pick if he wanted.
[26:11-26:15] SPEAKER_04: If he wanted. I don't think he does or values it highly.
[26:15-26:15] UNKNOWN: And
[26:15-26:16] SPEAKER_04: like.
[26:16-26:17] SPEAKER_01: Do you want Cooper flag or not.
[26:18-26:27] SPEAKER_04: Right. And does he change the game more than like seven or eight draft picks and a couple of players that already fit. Right. All
[26:27-26:27] UNKNOWN: of
[26:27-26:27] SPEAKER_04: that.
[26:27-26:27] UNKNOWN: I
[26:27-26:28] SPEAKER_04: don't know. I don't know.
[26:28-26:28] UNKNOWN: Just
[26:28-26:33] SPEAKER_04: one. It's like if nothing else you don't want to fuck it up.
[26:33-26:37] SPEAKER_01: But I think the big move is going to be today.
[26:38-26:50] SPEAKER_04: Oh I agree. Or it's going to be like the foundation of it is today. He's going to draft a couple of people and just get the picks people you haven't necessarily heard of and spend like trade those on down the line. Right.
[26:51-26:51] UNKNOWN: Summer
[26:51-26:59] SPEAKER_04: progresses because like the big move. Frankly like who's Alex Caruso. 18 months ago.
[26:59-26:59] SPEAKER_01: No
[26:59-26:59] UNKNOWN: I
[26:59-27:01] SPEAKER_01: agree. I agree with you completely. Yeah.
[27:02-27:02] UNKNOWN: But
[27:02-27:04] SPEAKER_01: and I get it. You're right. I don't know that we're
[27:04-27:04] UNKNOWN: going
[27:04-27:07] SPEAKER_01: to get a big player like we're
[27:07-27:07] UNKNOWN: like
[27:07-27:13] SPEAKER_01: we're talking like role players. Right. The big move is going to be role playing pieces and play us.
[27:13-27:19] SPEAKER_04: And maybe like who knows. Maybe it's like holy shit. He went and got young. There's so many nuts.
[27:21-27:28] SPEAKER_01: I feel bad for the player or players who move because you literally just won or just on the stage yesterday.
[27:28-27:36] SPEAKER_04: That's why they had to get that parade done before the draft. Maybe. Maybe. Like for real it's going to be a bummer if everybody like somebody's got to be up there.
[27:36-27:37] SPEAKER_02: Yeah.
[27:40-27:46] SPEAKER_04: We'll see. I mean no matter what happens you were there for this fucking magical year. Yeah exactly.
[27:47-28:09] SPEAKER_01: I was actually saying that a couple of days ago yesterday or whatever that I'm happy with one. Yeah. I would love to see three. Yeah. But you know having a competitive team is always the teams for sure going to be competitive going to the playoffs and all that stuff like that. Probably but even if it's like this is the only one for another 10 years or 15 years
[28:09-28:23] SPEAKER_04: even in the like if they had lost game seven that would have been a bummer. But the entire year and staying up being into it would have still happened. Yep. And that's going to happen again five or six or seven.
[28:23-28:24] SPEAKER_01: Exactly.
[28:24-28:24] UNKNOWN: And
[28:24-28:27] SPEAKER_01: that's exciting. So I'm thankful for the
[28:27-28:41] SPEAKER_04: one. Yeah. The journey is the destination type shit like that go through all of that and even the anxiety of like man are they going to. Right. They could have lost game seven to the Nuggets and that would have been a real bummer. But again all of it would have happened.
[28:44-28:45] UNKNOWN: I
[28:45-28:50] SPEAKER_01: agree. But now. Let it check
[28:50-28:50] SPEAKER_04: for a minute.
[28:50-29:03] SPEAKER_01: I think that now it's done and we won and we have all of that to look forward to. Yeah. Yeah. When it does that right there it's broken. I've never seen it come back from that group.
[29:05-29:16] SPEAKER_04: And also like that Topaz kid was our first pick last year. Yeah. And like who knows first picks end up being nothing sometimes. But Preston's pretty good.
[29:17-29:19] SPEAKER_01: Preston's pretty good at that. Yeah.
[29:21-29:31] SPEAKER_04: So I mean I don't know what his skill set is at all. He's a guard and obviously Shay is the guard and Jaydub currently the two guard.
[29:31-29:31] UNKNOWN: But
[29:31-29:50] SPEAKER_04: like if you could pressure him. Topaz could have like a quiet effect on just letting Jaydub know his spot's not safe. Maybe even that. He just pushes him to become what he can become.
[29:51-29:51] UNKNOWN: Or
[29:51-29:56] SPEAKER_01: become the third or fourth All -Star. It'd be crazy if we had four All -Stars.
[29:56-30:07] SPEAKER_04: It's not completely out of the realm of possibility. Naturally drafted. I think the Warriors had Steph Clay, KD and Draymo.
[30:09-30:10] SPEAKER_01: And they're running.
[30:12-30:21] SPEAKER_04: Yeah they, Thunderwall and I heard this this morning, 84 games total. Yep. Including the playoffs. Yep. It puts them with those Warriors and the Bulls. And the
[30:21-30:34] SPEAKER_01: Bulls. Right. Yeah. That's the two teams that we're being compared to now. So you got to prove it. You got to win and like really dominate these next couple years. But you're in that greatest ever teams discussion.
[30:35-30:46] SPEAKER_04: That's what it's all about man. The pressure is like, it can be heavy but it's also like the whole point. Like that's it. We are trying to achieve this unbelievable thing.
[31:08-31:12] SPEAKER_01: I don't know what the CSI driver issue is.
[31:47-31:47] UNKNOWN: I
[31:47-31:47] SPEAKER_04: think
[31:47-31:47] UNKNOWN: I'm going to
[31:47-32:23] SPEAKER_04: take a basic thing. That seems like it will make it break. These are errors that we were like hopeful at the beginning. Like it's not working and here's why. Let's fix it.
[32:29-32:54] SPEAKER_01: Is it the driver? Yep. Got the right date.
[32:55-33:50] SPEAKER_04: Yeah. There's that. So this is like an even more granular documentation of the individual chats. And then you have a full session breakdown of it. Like it's doing it as it's going. Right. And then a full session breakdown of what it remembers. And then
[33:50-33:50] UNKNOWN: you
[33:50-33:54] SPEAKER_04: have the fully based on those individual chat breakdowns.
[34:09-34:35] SPEAKER_01: I assume none of this is working but I'll go with it. Yeah, this may be the answer. Basically take notes. Take notes off while you're going.
[34:35-34:49] SPEAKER_04: We may be able to eliminate the end of session daily log or something and just get this super robust one, keep each one of them and then at the end of the day check that. Something like that.
[34:50-34:56] SPEAKER_01: And just maybe just keep everything. And just go back and look at it if you need to.
[34:57-35:00] SPEAKER_04: Right. Yeah, come up with a strong naming structure.
[35:00-35:15] SPEAKER_01: Right. I think this is like a debug session, name what it was in the day. And if you ever run into this again, like I know we either our instinct or hey just in periodically have we done, go look.
[35:17-35:35] SPEAKER_04: Yeah, I feel like I've done this in the last three days. Go look at all the files from the last three days and check. And like so we need to make a rule that says almost after every interaction. Right. Update the documentation, logging, whatever we call it.
[35:35-35:44] SPEAKER_01: Yeah, I don't know if it's necessary all the time but maybe I guess we're almost always debugging. That is what we're doing. Right. We're not writing. Right, exactly.
[35:45-36:14] SPEAKER_04: And so yeah there are cases where and we can come to what the syntax needs to be for that but like hey keep track of everything, especially error messages and the things that we try to fix them. I also made it add a bunch of logs and I feel like we maybe need a rule for that is like on a new project or like if indicated that this is a production or this is a development environment, just over do it on logs. Add a bunch of logs.
[36:14-36:14] UNKNOWN: Try
[36:14-36:14] SPEAKER_04: accept logs everywhere.
[36:15-36:20] SPEAKER_01: Because we're not going to know what, we're going to put stuff up there and it's going to have errors and fail silently.
[36:21-36:25] SPEAKER_04: It is going to break the first time we run it and we need to know why. Maybe
[36:25-36:26] SPEAKER_01: the first ten times we run it.
[36:26-36:29] SPEAKER_04: Right, probably. But definitely the first time.
[36:29-36:32] SPEAKER_01: And then silent failures are like you can't do anything.
[36:32-36:44] SPEAKER_04: Yeah, they make it useless. You got to come back, rebuild, push. So from jump, over do it on error messages, acknowledging that there's going to be a cleanup process at the end. And that's fun.
[36:44-36:55] SPEAKER_01: And that's better than slowly adding logs. Unless you're like the super genius, it's not going to fail. Yeah. I just know it's not going to fail because I know. And no one
[36:55-36:55] UNKNOWN: is going to.
[36:55-36:55] SPEAKER_01: I don't know that.
[36:56-36:56] SPEAKER_04: On the cloud,
[36:56-36:56] UNKNOWN: no
[36:56-37:01] SPEAKER_04: one's that. No, like this system, there's not a person in the world that could write that and push it and go
[37:01-37:01] UNKNOWN: like yeah, it's not going to fail.
[37:01-37:02] SPEAKER_04: It's too complex. And
[37:02-37:09] SPEAKER_01: we're using too many different things. We're using packages that we've never heard of. Like it should work. Go look at the documentation.
[37:11-37:37] SPEAKER_04: But if it doesn't, if somebody did a pull request and something slipped through, not even like malicious, but just a bug, it doesn't work today. Yeah, so this seems, again, like I don't know a way to do this other than building a brand new cluster when you're debugging a cluster issue.
[37:38-37:38] UNKNOWN: So
[37:38-37:44] SPEAKER_04: I agree. It's slow. We're just sitting here, but it takes a few like several minutes to tear one down. And put one back up. You
[37:44-37:47] SPEAKER_01: could go back through the process, upload a file.
[37:47-37:52] SPEAKER_04: Yeah. And the in -between steps would be ours.
[37:52-37:55] SPEAKER_01: Oh, no question. As we were going.
[37:55-37:55] UNKNOWN: No
[37:55-37:55] SPEAKER_01: question.
[37:55-37:56] SPEAKER_04: So it would
[37:56-37:56] UNKNOWN: seem
[37:56-37:57] SPEAKER_04: a lot more active.
[37:57-38:14] SPEAKER_01: I have no doubt that this is the fastest we possibly can go with the technology and tools and capabilities that we currently have. This is the very fastest that we can go. Other than hiring somebody who is better at this than we
[38:14-38:18] SPEAKER_04: are. Yeah, but again, like they would have. Which we don't have the money, so this is it. Yeah,
[38:18-38:18] UNKNOWN: so
[38:18-38:28] SPEAKER_04: that's what we're doing. Yeah. Yeah, and I think like the techniques we're developing like,
[38:28-38:28] UNKNOWN: hey,
[38:28-38:36] SPEAKER_04: ad logging. Do these, like keep thorough robust notes about everything you do and reference them when necessary.
[38:37-38:52] SPEAKER_01: Yeah, I think that when this is working, we should spend some time with Cursor talking about, hey, what is the best, I don't know if it knows its own capabilities. Like, what do you think is the best way to do this? We can make it
[38:52-38:56] SPEAKER_04: look up its capabilities and check Reddit threads and stuff like that.
[38:56-39:09] SPEAKER_01: Yeah, and use it as a general AI and not necessarily for coding. Like talk to it about coding. Like, hey, in the project we just did, what do you think is the best workflow to develop your own rules?
[39:10-39:10] UNKNOWN: The
[39:10-39:15] SPEAKER_04: philosophy of project rules versus overall account rules, whatever those are called.
[39:16-39:51] SPEAKER_01: That really worked for me. I don't think I told you this, but I did tell you that I've been using the readme loop for work, but I talked to Gemini about it and had it make its own rules. I did that and that I drop in every time. So, I have a file for each project. That's what I called it. And it's just each topic and I have subtasks and whatever. And so I load a session for that topic and sometimes the topics overlap, then I will explicitly say load one of them and say, hey, this,
[39:51-39:51] UNKNOWN: and
[39:51-39:57] SPEAKER_01: they'll be like, hey, I load notes or whatever. It's like, hey, this new thing came up where you talked about some other project.
[39:57-39:57] UNKNOWN: I
[39:57-40:00] SPEAKER_01: was like, yes, there is another project that already exists. Here it is.
[40:00-40:00] UNKNOWN: It's
[40:00-40:06] SPEAKER_01: readme. And then as I'm going through, I'll update both because in some cases it's like,
[40:06-40:06] UNKNOWN: it
[40:06-40:39] SPEAKER_01: really is two different projects. I'm not trying to combine them. It's two different sets of people. I am common to both. And I am talking about this one thing in both places. Update both things and update both readme. And it looks like, and so I've been able to keep track of, I think it has expanded my ability to keep up with lots of different things because I am not really keeping up with it or trying to remember it all in my head. I have a load of session, have a deep conversation, do some things, update some tasks, do some stuff, and then close it.
[40:39-40:39] UNKNOWN: In
[40:39-40:51] SPEAKER_01: the session it updates the readme and I don't think about it again. Then I load each one and go through my day and then at the end of the day it's all in memory. It's in these readmes.
[40:51-40:51] SPEAKER_04: That's
[40:51-40:51] UNKNOWN: the
[40:51-40:51] SPEAKER_04: AI.
[40:52-40:52] UNKNOWN: I
[40:52-40:58] SPEAKER_04: mean that's optimally using AI as we're starting to optimally use AI. It really is a great example.
[40:58-41:26] SPEAKER_01: And I've been sneaky recording these meetings for this project that we're working on. And Jeff, my director, he's like, we can record. But when we get in meetings with other people, I'm sneaky recording them. And then my notes just all of a sudden look great. And it's like, I'm taking manual notes.
[41:27-41:27] UNKNOWN: And
[41:27-41:34] SPEAKER_01: so like last night in that meeting I was like, sneaky recording and manual notes. So I gave both of those to the AI.
[41:34-41:34] UNKNOWN: And
[41:34-41:37] SPEAKER_01: it's like clean, because Jeff was like, hey, clean up the notes.
[41:37-41:37] UNKNOWN: And
[41:37-41:38] SPEAKER_01: you know, whatever.
[41:38-41:38] UNKNOWN: It's
[41:38-41:54] SPEAKER_01: like, so 20 minutes later I had this beautiful set of clean notes with every, like here's all the things we talked about. And I removed my rough notes and I put them in a place where only I have them. And just put the clean notes in there and it's like, it's magic. I'm going
[41:54-41:54] UNKNOWN: to
[41:54-41:56] SPEAKER_04: wait a couple hours before I send it.
[42:18-42:32] UNKNOWN: Okay. We
[42:32-42:34] SPEAKER_04: already built and pushed everything?
[42:35-42:50] SPEAKER_01: Okay. It did it. Right there. The VM is freaking fast.
[42:51-42:52] UNKNOWN: Yeah.
[42:55-43:02] SPEAKER_04: Yeah, I spent some time yesterday, as I said, the two hour limit on Pub Soap
[43:02-43:02] UNKNOWN: and Tent.
[43:02-43:12] SPEAKER_04: Instead of 30 seconds, which is way more than enough. But I was like, I now understand that flow a little better because I was like,
[43:12-43:12] UNKNOWN: I
[43:12-43:39] SPEAKER_04: mean, what if we upload 45 hours of recording, which we might really. And like that's going to take more than two hours. Like is this going to be a problem here? And it was like, no. Basically it takes about two to three seconds for a request to get like queued up and sent in Pub Soap. And so there's almost no amount of jobs you can stack up that could make it exceed that two hours. Oh
[43:39-43:46] SPEAKER_01: yeah. I've seen clients or customers that use Pub Soap extensively and their queues are like.
[43:46-43:46] UNKNOWN: It's
[43:46-43:58] SPEAKER_04: like, it's just going to use them right up. And so it was like basically what I'm thinking of is the processing queue inside the cluster and that could take days. Right.
[43:58-44:11] SPEAKER_01: But the Pub Soap is not, is not counting when it's in the queue. It's counting when it's up and it has sent it. Process this one and it will wait up to however, two hours to get a return back from this specific The
[44:11-44:12] SPEAKER_04: default
[44:12-44:12] SPEAKER_03: is seven days.
[44:13-44:13] UNKNOWN: So
[44:13-44:14] SPEAKER_01: like.
[44:15-44:17] SPEAKER_03: I assume this is actually done.
[44:21-44:24] SPEAKER_05: It's going to wait 30 seconds, but that's fine.
[44:46-44:54] SPEAKER_04: Yeah, things like this, like log all the stuff. Even if we quote unquote know it works.
[44:54-44:55] SPEAKER_01: Oh, it's stopping?
[44:56-44:57] SPEAKER_04: Oh.
[44:59-45:02] SPEAKER_01: Why didn't you catch that? First of all,
[45:02-45:04] SPEAKER_04: is that what it's trying to check?
[45:04-45:06] SPEAKER_01: No, it's then trying to go to the cluster.
[45:17-45:17] UNKNOWN: I
[45:17-45:18] SPEAKER_01: don't think
[45:18-45:18] UNKNOWN: it
[45:18-45:20] SPEAKER_01: did. 0844.
[45:23-45:24] SPEAKER_02: Yeah.
[45:32-45:35] SPEAKER_00: How did it get that status back?
[45:37-46:20] SPEAKER_01: Yeah, it is stopping. Yeah. And I assume there is no cluster because it gets created by that VM. Right.
[46:33-46:35] SPEAKER_06: Okay. Okay.
[46:49-46:52] SPEAKER_03: I don't think that should be gone.
[47:04-47:06] SPEAKER_05: It did not do that yesterday.
[47:08-47:08] UNKNOWN: It
[47:08-47:36] SPEAKER_01: didn't do it just a second ago. That's true. Well, there's no, you can't check the logs. Well, I guess they're in cloud log. Did we delete or remove the idle timer? It
[47:36-48:05] SPEAKER_04: should be commented out still unless it uncommented. It definitely triggered it because that's why the VM existed in the first place.
[48:26-48:28] SPEAKER_02: Yeah, it's right there.
[48:31-48:40] SPEAKER_01: I saw something that said VM has to compute and since it's deleted, it definitely got issued.
[49:19-49:36] UNKNOWN: Okay. Okay.
[49:51-50:00] SPEAKER_03: There you go. One more step. Here.
[50:21-50:26] SPEAKER_04: Yeah, so the new 4 foot 8 in the flag was wrong.
[50:31-50:32] SPEAKER_03: That's it's current
[50:32-50:32] UNKNOWN: status.
[50:32-50:33] SPEAKER_01: Unlikely,
[50:33-50:33] UNKNOWN: yeah,
[50:34-50:36] SPEAKER_01: that's the thing that got changed.
[50:38-50:38] UNKNOWN: Yeah, we
[50:38-50:51] SPEAKER_04: need goggles so
[50:51-50:51] UNKNOWN: we
[50:51-51:01] SPEAKER_04: can both actively, truly work inside of together and that the AI is monitoring visual as well. Yep, I agree. And feeding our pipeline.
[51:02-51:05] SPEAKER_01: I assume we're not the only people to have thought about this. Yeah.
[51:05-51:05] UNKNOWN: I
[51:05-51:06] SPEAKER_01: think about
[51:06-51:08] SPEAKER_04: context issues there.
[51:08-51:10] SPEAKER_01: Yeah, oh, for sure. No question.
[51:10-51:19] SPEAKER_04: That might be beyond the scope of the current technological possibilities. But that means it's up to us to figure out how to best
[51:19-51:20] SPEAKER_01: use it.
[51:21-51:22] SPEAKER_04: All those tools together.
[51:44-51:44] UNKNOWN: I
[51:44-51:48] SPEAKER_01: think in general I'm fine with it probably auto searching and using the internet.
[51:50-52:05] SPEAKER_04: Yeah, I agree with that. Especially when you kind of suggested, hey, I want you to go look for this. It might be helpful for it to run gcloud help dash dash search terms.
[52:06-52:06] UNKNOWN: For
[52:06-52:06] SPEAKER_02: sure.
[52:12-52:14] SPEAKER_05: I wouldn't do that.
[52:14-52:15] SPEAKER_03: I would go to the internet.
[52:35-52:35] UNKNOWN: I
[52:35-52:38] SPEAKER_04: did cardio in the pool yesterday.
[52:38-52:38] UNKNOWN: It
[52:38-52:41] SPEAKER_04: was legit. Yeah, I believe it. No question.
[52:41-52:41] UNKNOWN: All
[52:41-53:02] SPEAKER_04: I was doing, I set up, I've got this interval time and it was one minute on, 30 seconds off, which ended up being I could go from the steps to the end about three times in a minute. So that's what I ended up getting down to. And then you do that four times in a set and do four sets. That's
[53:02-53:02] UNKNOWN: cool.
[53:03-53:09] SPEAKER_04: I got tired from swimming a lot faster than I thought I was going to. That's not surprising to me.
[53:10-53:11] SPEAKER_01: It's a full body workout.
[53:12-53:24] SPEAKER_04: And then I would do sometimes just run the shallow in basically to give my upper body a break but I would still keep my arms under. It was legit. I
[53:24-53:24] UNKNOWN: think
[53:24-53:24] SPEAKER_04: I'm going
[53:24-53:24] UNKNOWN: to
[53:24-53:32] SPEAKER_04: start doing it regularly because I was doubled over on the steps whenever I would finish, which is kind
[53:32-53:32] UNKNOWN: of
[53:32-53:33] SPEAKER_04: what I was going for.
[53:52-53:55] SPEAKER_01: So that flag is only valid for standard clusters.
[53:55-53:58] SPEAKER_04: Because it's always enabled?
[53:58-53:59] SPEAKER_01: Yeah.
[54:10-54:18] SPEAKER_04: Yeah, it was weird because I felt like sore but nothing hurt because I didn't beat the shit out of anything.
[54:19-54:20] SPEAKER_01: Which is perfect. Running on
[54:20-54:34] SPEAKER_04: the road. And at that point I had no excuse to not go get in the cold plunge because I already got a bunch of it in the pool.
[54:34-54:36] SPEAKER_02: Yeah, fine.
[54:49-54:52] SPEAKER_01: We have no resources running on
[54:52-54:53] UNKNOWN: that.
[54:55-54:59] SPEAKER_05: There's a stream over here. The last one was from ten minutes ago.
[54:59-55:00] SPEAKER_01: Okay.
[55:02-55:02] UNKNOWN: Well at
[55:02-55:05] SPEAKER_01: least we don't have to wait for those
[55:05-55:06] SPEAKER_03: to stop.
[55:16-55:17] SPEAKER_04: I think I'm going
[55:17-55:17] UNKNOWN: to
[55:17-55:21] SPEAKER_04: get some goggles because it's actually a better workout than I thought
[55:21-55:21] UNKNOWN: I
[55:21-55:22] SPEAKER_04: could get.
[55:22-55:33] SPEAKER_01: That's cool. There's a bunch in there. I don't know if they're adult size or quality.
[55:33-55:34] SPEAKER_04: I will check
[55:34-55:36] SPEAKER_03: but I want that.
[55:37-55:40] SPEAKER_01: They all came from Costco. So there was a multi pack.
[55:41-55:45] SPEAKER_03: Yeah, they're worth it. I'm not bougie on goggles.
[55:52-55:56] SPEAKER_04: Also, last night I got some
[55:56-55:56] UNKNOWN: of
[55:56-55:59] SPEAKER_04: those portobello mushrooms. They're thin and long sliced.
[56:00-56:00] UNKNOWN: And
[56:00-56:25] SPEAKER_04: put butter in a pan. Saute or fry them for a little bit. Flip them over. Put garlic in there. And then shaved parmesan over top whenever it was done. I could go vegetarian on that shit. I'm down with that. There's more in the fridge. The mushrooms are in the drawer. And then there's Canadian bacon. On the bottom drawer there's the mushrooms. Canadian bacon is in
[56:25-56:25] UNKNOWN: the
[56:25-56:26] SPEAKER_04: middle.
[56:26-56:29] SPEAKER_01: I ate meatloaf again yesterday.
[56:30-56:30] UNKNOWN: But
[56:30-56:32] SPEAKER_01: today, for the rest of the week,
[56:32-56:32] UNKNOWN: I
[56:32-56:36] SPEAKER_01: don't have anything. So would you want to cook? I've been thinking about it
[56:36-56:36] UNKNOWN: and
[56:36-56:45] SPEAKER_01: I don't know if there's any good... What I was thinking is we cook for the weekend. Just like our... Snacks, stuff to have in the fridge.
[56:46-56:46] UNKNOWN: So
[56:46-56:52] SPEAKER_01: it really needs to be done Saturday. Saturday midday -ish.
[56:52-56:55] SPEAKER_04: Yeah, we could start it Friday.
[56:56-56:56] UNKNOWN: And
[56:56-57:01] SPEAKER_04: then basically, well... Do we want to have it done at a time? Or do
[57:01-57:01] UNKNOWN: we
[57:01-57:04] SPEAKER_04: go straight into its leftovers as soon as it's
[57:04-57:14] SPEAKER_01: done? I think eating it fresh on Saturday would be good. So that it's done midday, Saturday, that means we basically need to do Friday
[57:14-57:17] SPEAKER_04: night. And if the hopper will... I think it will.
[57:18-57:20] SPEAKER_01: I think that's part of the test.
[57:20-57:20] UNKNOWN: The
[57:20-57:21] SPEAKER_01: test is
[57:21-57:40] SPEAKER_04: to see. We can maybe start... So we need to determine if the Traeger will adjust its temperature. When... based on the probe. I agree. And if so, then we just... We
[57:40-57:40] UNKNOWN: can start early.
[57:41-58:15] SPEAKER_04: So we can try to gauge the usage of the wood pellets. Like, hey, in an hour it went down an inch and a half, so that equals X hours. And we can try to be a bummer to wake up to an empty hopper. Well, I think the laziest version would be... Like, can the Traeger do the entire thing? Just put it in there and leave it. Yeah, and to the extent of dropping down to 150 and holding until we come and turn it off.
[58:15-58:16] SPEAKER_01: Right.
[58:18-58:25] SPEAKER_04: Because then it's literally like... Man, they put it in there. Go to bed, what time are we eating? Okay, I'll go grab it at that time. Right.
[58:26-58:28] SPEAKER_01: That would be fantastic.
[58:30-58:30] UNKNOWN: Yeah.
[58:34-58:52] SPEAKER_04: That... even if we do the smoker, like the offset, not in this instance, but in the future, it might make sense for the final step to be the Traeger if that probe thing works. I agree. So you don't have to get up and turn the temperature down on the roaster oven.
[58:52-58:56] SPEAKER_01: I'll do some research today.
[58:56-59:00] SPEAKER_04: Yeah, if that's reliable. Done.
[59:00-59:00] UNKNOWN: That
[59:00-59:22] SPEAKER_04: would be huge. Yeah, and like, if it puts any kind of smoke on it, fuck that offset. Right, right. For any special occasions.
[59:22-59:22] UNKNOWN: Like,
[59:23-59:25] SPEAKER_04: it is better, almost certainly, but... But
[59:25-59:27] SPEAKER_01: it's so much easier.
[59:27-59:34] SPEAKER_04: It's special occasion better. Yeah. It's not like random Wednesday afternoon, or random birthday party.
[59:34-59:39] SPEAKER_01: I definitely think it's going to put some smoke on it. Like, certainly at that low temperature, there's a smoke setting. Oh, yeah,
[59:40-59:40] UNKNOWN: yeah.
[59:40-59:43] SPEAKER_01: That if you keep the temperature low, it actually makes smoke.
[59:44-59:44] UNKNOWN: And
[59:44-59:46] SPEAKER_01: I think...
[59:46-59:51] SPEAKER_04: It's going to be very good on the low end, is my guess. The
[59:51-59:55] SPEAKER_01: question is, is it great, or is it just good, and especially... Is
[59:55-59:58] SPEAKER_04: it enough worse to bother us? Right,
[59:59-59:59] SPEAKER_01: exactly.
[60:00-60:05] SPEAKER_04: Because the potential, if it goes exactly how we want it to, is like so easy.
[60:23-60:24] SPEAKER_00: Provisioning.
[60:27-60:33] SPEAKER_04: Yeah, and this is unfortunately the debugging process for the architecture side.
[60:33-60:36] SPEAKER_01: Yep, I agree. There's nothing that can be done.
[60:36-60:39] SPEAKER_04: Yeah, you can do a lot of pre -steps if you want to, but ultimately,
[60:41-60:41] UNKNOWN: like,
[60:41-60:44] SPEAKER_04: that cluster either works or it doesn't when it spins up.
[60:45-60:45] SPEAKER_02: Yep.
[60:46-60:55] SPEAKER_04: We might be able to do some debugging, like, not killing it and spinning it back up once we have it, like, checking the actual code, but... I agree. We'll see.
[60:57-61:04] SPEAKER_01: But for the auto -loading type stuff, the only way you can test it is to make it auto -load. And...
[61:04-61:25] SPEAKER_04: And that takes a while, every single time. Yeah,
[61:26-61:27] SPEAKER_01: I want to.
[61:27-61:28] SPEAKER_04: Where do
[61:28-61:28] UNKNOWN: you
[61:28-61:28] SPEAKER_04: want to go?
[61:29-61:55] SPEAKER_01: I think we should try... Mel thinks that we should try research again. Okay. That by 6 o 'clock and there's shade, we'll see. But if it's 95 degrees sitting on the... Like, no. But I want to see. It is feasible. I'm scared to turn on streaming. Turn
[61:55-61:56] SPEAKER_06: it off.
[62:23-62:24] UNKNOWN: Go
[62:24-62:25] SPEAKER_02: do coffee.
[62:25-62:27] UNKNOWN: Let me
[62:27-62:28] SPEAKER_06: do that. Oh yeah.
[62:50-62:54] UNKNOWN: I had this silver that happened when we were doing tree trees.
[62:54-62:54] SPEAKER_01: Oh yeah, I
[62:54-62:54] UNKNOWN: saw
[62:54-62:57] SPEAKER_01: it sitting over there. How did that go?
[62:57-63:24] SPEAKER_04: I had it re -tested, but the test I did... Like, last week I got 30 to 40, and this week I got 65. That doesn't surprise me. Still a lot more water in there. And it has to still down a little bit. Yeah, so it was already closer to the target range anyway, so I literally didn't even measure it. Like, it recommended like 9 pounds or something, and that's 10. And so I just took a couple of scoops. I put like less than a pound in. I
[63:24-63:24] SPEAKER_01: just wanted to see
[63:24-63:25] SPEAKER_04: it.
[63:26-63:38] SPEAKER_01: That doesn't surprise me, and I thought that it would come up just based on this now. In fact, the regular level, and my guess is it will stay there forever or for a long time. Because the sun is brutal,
[63:38-63:38] UNKNOWN: and
[63:38-63:38] SPEAKER_01: it's...
[63:39-63:39] UNKNOWN: If
[63:39-63:55] SPEAKER_01: anything, like it is continually adding water. So every gallon that evaporates is getting continuously filled. Whether it looks like it or not, that is happening. It is continuously water being added.
[63:57-64:12] SPEAKER_04: Yeah, so it's in a... I mean, I will continue to test it and bring it up gradually. But it's in a good spot. Other than that, the chlorine was low. But that's also expected because the sun's cooking.
[64:15-64:20] SPEAKER_01: I think this is the normal regime of pool management.
[64:20-64:20] UNKNOWN: It
[64:20-64:26] SPEAKER_01: just wasn't before that. It's fine to reach it. And this is what it's going to be like for the next two months.
[64:26-64:31] SPEAKER_04: We just need to do the pressure release thing. What did
[64:31-64:31] UNKNOWN: you
[64:31-64:32] SPEAKER_04: say? We
[64:32-64:32] UNKNOWN: need to
[64:32-64:33] SPEAKER_04: do the pressure release thing.
[64:34-64:34] UNKNOWN: Whatever
[64:34-64:34] SPEAKER_04: we
[64:34-64:34] UNKNOWN: want to do.
[64:34-64:36] SPEAKER_01: Oh, yeah. Yep, we definitely need to do that.
[64:36-64:36] UNKNOWN: I
[64:36-64:49] SPEAKER_01: think that probably... Friday? Depends on who... Because it's kind of down for like 12 hours after that. Yeah. We don't
[64:49-64:53] SPEAKER_04: have to drop the entire level to do that. No,
[64:53-64:53] UNKNOWN: I
[64:53-64:54] SPEAKER_01: agree with you.
[64:55-64:55] UNKNOWN: It
[64:55-65:13] SPEAKER_01: is that it just gets cloudy and stuff. I did watch a video about backflushing and there's a rinse step. That you're supposed to rinse the filter. It doesn't do all that. So it may not be as bad. You're not supposed to go directly from backflushing to the filter.
[65:13-65:16] SPEAKER_04: That's one of the other spots on the thing. There's
[65:16-65:16] UNKNOWN: a rinse to
[65:16-65:22] SPEAKER_04: rinse all of that out. And it kind of just pushes it to the side until you let it go or something. Yeah, something like
[65:22-65:25] SPEAKER_01: that. So there's another...
[65:25-65:25] UNKNOWN: Like I
[65:25-65:29] SPEAKER_01: said, basically rinse for two minutes and then go back to the filter.
[65:29-65:31] SPEAKER_04: Okay, that's useful.
[65:33-65:44] SPEAKER_01: And basically only run it enough until the filter clears up. Or the water clears up so you don't drain a bunch of water. That has to go back in there. Which is fine, the issue is not the water going back
[65:44-65:44] UNKNOWN: in
[65:44-66:02] SPEAKER_01: there. It just messes up your chemistry. That makes sense. You need that? No, no, no, I
[66:02-66:02] UNKNOWN: need
[66:02-66:02] SPEAKER_01: it.
[66:23-67:10] UNKNOWN: Okay. Okay.
[67:27-67:59] SPEAKER_04: Yeah, so the cluster, when it was spinning up previously, not only was the VM ultimately shutting itself down too quick because the cluster wasn't responding, the cluster also could not mount or interact with any storage devices which is where it has to get that audio from and right to the buckets. And it wasn't able to mount secrets so there's no chance it was touching hugging face.
[67:59-68:01] SPEAKER_01: Right, exactly. There was just
[68:01-68:01] UNKNOWN: a
[68:01-68:03] SPEAKER_01: ton of these little things and...
[68:03-68:04] SPEAKER_04: All of that was quiet.
[68:04-68:10] SPEAKER_01: Right, and it was all quiet. And we had no idea what was going on. There was multiple things and we didn't know about any of
[68:10-68:13] SPEAKER_04: them. Right. That's good. This is the learning experience we needed for this.
[68:52-68:53] UNKNOWN: No.
[69:04-69:05] SPEAKER_04: These bits there?
[69:07-69:08] SPEAKER_06: Hmm, okay.
[69:12-69:26] SPEAKER_04: But this failed to get CSI traffic. Yeah, but it's saying that's what like, impachos, it's running, which means that few CSI is what is still being set up. I don't know that it's not broken.
[69:34-69:35] SPEAKER_05: I like this though.
[69:36-69:39] SPEAKER_01: Yeah, this is a unique and specific issue.
[69:39-69:48] SPEAKER_04: Yeah, that was a good call because I was, basically had pushed the test driven thing off to the next project. I'm glad you...
[69:48-69:48] UNKNOWN: Yeah,
[69:48-69:57] SPEAKER_01: I think that is, that we were chasing, it turns out it was right. Like, we were running around and spinning like, and we had no idea what was going on.
[69:59-70:00] UNKNOWN: Yep.
[70:05-70:23] SPEAKER_01: That is one of the things that my brain does relatively well. Like, what are we doing? Like, all the time, like... This isn't moving forward. Why? Why are we, where am I supposed to be putting my effort? Yeah. If it's just kind of, hey, we're, no, well I'm going to go over here until you guys decide what the plan for it is.
[70:23-70:23] SPEAKER_04: Until
[70:23-70:23] UNKNOWN: you get
[70:23-70:26] SPEAKER_04: done with this, whatever this bullshit is that you're doing. And
[70:26-70:26] UNKNOWN: then you
[70:26-70:26] SPEAKER_04: actually
[70:26-70:33] SPEAKER_01: talk about what is wrong. Exactly. I'm going to leave. It's still stuck in that status.
[71:07-71:08] SPEAKER_00: I'm going to turn them
[71:08-71:24] UNKNOWN: off. Okay.
[71:24-71:35] SPEAKER_01: That was one of the things that I was, I searched with Jim and I, that like, the CSI is like, it stands for, it's like a driver that's built into the Kubernetes system.
[71:36-71:36] UNKNOWN: Like,
[71:36-71:38] SPEAKER_01: and people can make them. And so it's an add -on.
[71:38-71:38] UNKNOWN: And
[71:38-71:44] SPEAKER_01: then it allows it to talk to other things. And so there's a secrets manager CSI.
[71:44-71:44] UNKNOWN: That
[71:44-71:49] SPEAKER_04: makes sense. And you just have to explicitly put all those in there?
[71:54-72:17] SPEAKER_01: And that's what all of these, I guess you can go look at them, but there's a file store CSI so it can go talk to. So there's a bunch of CSIs that allow the cluster natively to talk to any other type of service. And it just knows how to do it. And so we just need to add that these two,
[72:18-72:18] UNKNOWN: the CS,
[72:18-72:29] SPEAKER_01: the GCSFuse and secrets. I don't know if you know what GCSFuse is. I don't know why we're using it, but GCSFuse is it takes a bucket and turns it into a file store.
[72:30-72:31] SPEAKER_04: Yeah, that's what it says it's trying to do.
[72:32-72:32] UNKNOWN: Like
[72:32-72:35] SPEAKER_04: if the Kubernetes doesn't have file store, then that's what it's using.
[72:36-72:54] SPEAKER_01: I didn't know about that until like some job that MSI that we're just doing when we're using GCSFuse. And apparently it has a CSI for GCSFuse.
[72:56-72:59] SPEAKER_04: Apparently people in the Philippines thought you just came back?
[72:59-73:00] SPEAKER_01: Really?
[73:00-73:02] SPEAKER_04: Alex sent me this.
[73:23-73:26] SPEAKER_01: That's interesting. You heard about J. Bluebeam? No,
[73:27-73:27] UNKNOWN: never
[73:27-73:28] SPEAKER_01: heard those words in my life.
[73:29-73:38] SPEAKER_04: It's a theory on the alien invasion and it's going to be fake, but you're going to see it happen in the sky.
[73:40-73:40] UNKNOWN: Or
[73:40-73:42] SPEAKER_04: a Jesus coming back type thing.
[73:43-73:54] SPEAKER_01: Freaking people suck. To get something or some sort of control. This
[73:54-73:54] SPEAKER_04: is Jesus everybody.
[73:55-74:13] SPEAKER_01: Yeah, and he said that you should give me all your money. What do you think about doing a end in the session? Where do you think we'll keep going?
[74:13-74:39] SPEAKER_04: This was a lot of good progress. And I think there's still some disconnect between its summary and starting the new one. I don't know that I have the answer, but I think we need to just be aware of how much when you press new session, does it ultimately get to where you were when you stopped?
[74:40-74:49] SPEAKER_01: I agree with you. In this case it's pretty easy because the fix is already in and the next step is test.
[74:49-74:58] SPEAKER_04: Right, but even that is like, is it certain of what we're trying to get out of this next test? There's just like a couple of gaps.
[74:58-74:58] UNKNOWN: I
[74:58-75:02] SPEAKER_04: think those are the things we just need to pay attention to. Specifically,
[75:02-75:02] UNKNOWN: maybe
[75:02-75:13] SPEAKER_04: those are the focus points that we really need to zero in on are like the changeovers and that's where human interaction might be necessary and we can maybe pull some of it out.
[75:13-75:22] SPEAKER_01: I mean the alternative is we'll just keep going and not start a new session just to say we did because the context hasn't really changed very much.
[75:22-75:23] SPEAKER_04: It
[75:23-75:30] SPEAKER_01: was just kind of a wild -haired, nothing has suggested that we'd start a new session other than we normally would have already at this time.
[75:30-75:45] SPEAKER_04: So one theory that I've got in my head and I don't have proof of it, but is when it's running these terminal commands it's not good at keeping that context. So this is one chat and we haven't gotten triggered and
[75:45-75:45] UNKNOWN: we
[75:45-75:50] SPEAKER_04: haven't done that many prompts really. But there's a lot of interaction and it's looking at logs.
[75:50-75:54] SPEAKER_01: Oh I agree. So I think that's
[75:54-75:54] SPEAKER_04: good
[75:54-76:13] SPEAKER_01: in the big scheme of things in that it's not keeping all that context we are and it is writing to this debug file and so it should be good and if it hasn't triggered meaning like hey I feel like my context window is getting full we should probably just keep going.
[76:13-76:35] SPEAKER_04: Yeah, we just need to incorporate that basically optimize the log that it's keeping and make sure that you're checking back on that so you have the context of what we've looked at. Because a couple of times I've been like you just said something that is opposite to something that was said in this chat, this
[76:35-76:36] SPEAKER_01: session. I agree.
[76:37-76:37] UNKNOWN: So
[76:37-77:25] SPEAKER_01: I think that then I changed my mind. I think we should just keep going and monitor the debug, monitor everything but specifically making sure it's keeping up with the debug session and I think that's the answer to debugging or to context over sessions is if you are troubleshooting it's not that big of a deal in this specific case right now because he thinks it fixed it and we just need to do another test but still here's where we're at in debugging keep a detailed debugging session logs and that doesn't necessarily go in the README because the README is higher level and just like when we loaded it look at the last two debug session logs first of all to see how we want to run it but also keep
[77:25-77:47] SPEAKER_04: another one and to keep the format of how we're doing logs and yeah I think it's worth trying at the very least keep this chat going with the understanding that we're actively updating the debug logs and see how it does that because especially in interacting with cloud basically CLI stuff it doesn't actually use a lot of prompts
[77:48-77:49] UNKNOWN: right
[77:53-78:10] SPEAKER_01: where is the debug session log that is currently this one it is CSI drivers yeah so it's good that it doesn't use a lot of prompts because then it can go for a long time theoretically
[78:20-78:26] SPEAKER_04: but it has to like that's why I have that theory it has to not be tracking that context right
[78:26-78:29] SPEAKER_01: for sure because otherwise it would be filling up
[78:29-79:33] SPEAKER_04: yeah and then an end session is a much bigger it's really kind of what end of day would have been in some extent but I also think we need to polish that up a little bit because like literally yesterday there were multiple end of day events and it doesn't know how to handle those right that makes sense because so soon as it's the end of the
[79:33-79:33] UNKNOWN: day
[79:33-79:54] SPEAKER_04: you're done for today this is it and so we can probably get rid of slash or keep to the side the end of session logic for now modify end of day a little bit and then have a true like final end of day check or something like if there's whatever I don't
[79:54-79:54] UNKNOWN: know
[79:54-80:25] SPEAKER_01: yeah so here's what I this is new thoughts as responded to you so maybe think about a session as a given topic for instance we're trying to troubleshoot all these driver issues whatever and we're not actually going to run end session in between sessions what we're going to do is bring it use the debug session log to give you context
[80:25-80:26] SPEAKER_03: and
[80:26-80:52] SPEAKER_01: then when we're done with multiple sessions of CSI driver whatever that we found the issue then log that as a session which was actually was multiple sessions so maybe we need another term and then it kicks the day down a bit so there's these sessions that are handled by whatever we call it sessions that's handled by a single file just keep updating this single file and then
[80:52-80:59] SPEAKER_04: with like a one line description and a reference to the name of the file that the work was done
[80:59-81:26] SPEAKER_01: and then whatever the multiple session name is like a given topic like hey we're troubleshoot whatever the issue an issue session or whatever whatever we're going to call it and then when that's done and resolved then you log a session that says okay update the readme based on these five sessions that we did and then go to the next thing until you and you pack multiple of those into a day something like that so that there's
[81:31-81:31] UNKNOWN: tiered
[81:31-81:33] SPEAKER_01: I assume you're actually
[81:33-81:34] UNKNOWN: done
[81:34-82:24] SPEAKER_04: yeah I think you could almost even like hey let's say on the VM controller docs like once it's done hey go into the readme say hey VM controller like it currently is finish, deployed, whatever thumbs up and here's the document where we got it finished and say there's like ten of those documents right well I made a directory with all of the documents some of them might even be like a copy because that document was also used like you're talking with your different projects at work and so hey go in and make a collection of all the documents you used to get through the process of building and deploying this thing like all the debug documents and keep them in a directory inside the debug doc we're
[82:24-82:24] UNKNOWN: gonna
[82:24-82:27] SPEAKER_04: have a fucking mess but that's fine that's what it starts to look
[82:27-82:32] SPEAKER_01: like because that's how you keep your brain those are memories it's
[82:32-82:33] SPEAKER_04: the obsidian cloud these
[82:33-83:01] SPEAKER_01: are memories for this project that's what it looks like if you want to actually remember what happened and get through it so theoretically you could give it back to any AI to say hey because they're dated and stuff like that and their topics like walk through this and describe what happened and maybe that's what we do is like at the end of this we put all these files together and say hey go look through this and talk about the best way we should have done
[83:01-83:29] SPEAKER_04: this yeah and it doesn't hurt having copies of those files because they're not being actively updated and there's tiny well I'm saying because you're gonna update them so you don't have to go remember to update three different files because those are archival logs and so you can do the copying and putting in different places because I did use this file for this thing and I did use it for this thing and I'm not combining them to show like I want you to get the context of this thing
[83:29-83:41] SPEAKER_01: 100 % I
[83:41-83:41] UNKNOWN: wonder
[83:41-83:53] SPEAKER_01: where this number comes from how do I make sure that is he me? they probably don't they're just like the chances are very very very very slow so I mean they
[83:53-83:55] SPEAKER_04: could literally just be counting up
[83:55-84:03] SPEAKER_01: yeah maybe they generate the number and check yeah like make sure generate this name and then check once
[84:03-84:12] SPEAKER_04: yeah the chances of there being a transcription controller dash that number or have to be so near zero it's not even worth thinking about
[84:12-84:16] SPEAKER_01: and then but check once anyways and if so generate again
[84:16-84:17] UNKNOWN: yeah
[84:18-84:24] SPEAKER_01: yeah I can't imagine I wouldn't do that I wouldn't make an algorithm that it should be fine right no
[84:24-84:27] SPEAKER_04: way eventually it will not be no way I would make an algorithm and
[84:27-84:33] SPEAKER_01: I know these people who are actually system level coders yeah no way it has to be guaranteed
[84:33-84:39] SPEAKER_04: they're talking about like C level assigning memory like the memory being in the right place no
[84:39-84:45] SPEAKER_01: way like oh it's fine don't worry about it there's no way those files are going to be no way I wouldn't do
[84:45-84:51] SPEAKER_04: that tell you how many zeros after they die it is in probability and why that's unacceptable
[85:11-85:12] SPEAKER_00: yeah
[85:12-85:12] UNKNOWN: shut
[85:12-85:13] SPEAKER_00: yourself down
[85:22-85:27] SPEAKER_05: request process successfully by the cluster manager
[85:35-85:56] UNKNOWN: he doesn't sequence tease
[85:56-86:48] SPEAKER_01: and do compute addresses insert the chain I don't know why that is. I don't want to start thinking about networking and stuff. Yeah. Just want to get it working. We'll go back and do that later or never. I do know the answer to this.
[86:49-86:49] UNKNOWN: And
[86:49-87:11] SPEAKER_01: the answer is delete the default network, create a new one that's a custom network, and only put subnets in the place, in the regions where you're actually running resources. I do know the answer to that. But doing networking for GKE is a little bit complex, and I don't want to do
[87:11-87:11] SPEAKER_06: it.
[87:21-87:26] SPEAKER_01: But if we were to go to production with this specific project, we'd have to fix that.
[87:26-87:27] SPEAKER_05: For sure.
[87:28-87:37] SPEAKER_01: And it's not that bad. It's not that hard. It's just, it is something that you can put on the to -do list of yes, at some point, we have to do that and test everything.
[87:37-87:43] SPEAKER_04: Right. And do a full security hardening pass and do all this stuff. There's a lot of push to the back.
[87:43-87:53] SPEAKER_01: I work with customers who have found themselves successful. Well, maybe not even that. It's like big companies, but there's these projects in there, especially like,
[87:53-87:53] UNKNOWN: hey,
[87:53-87:54] SPEAKER_01: we're going to try out cloud.
[87:54-87:54] SPEAKER_03: Right.
[87:54-88:05] SPEAKER_01: And then, OK, we're going to start doing this. OK, now we're going to move this. And now they find themselves in like, how did you get here? And it's like this. It's like, hey, we're just going to, we'll see. We're going to get it working. We'll
[88:05-88:06] SPEAKER_04: deal with that at some point.
[88:06-88:14] SPEAKER_01: And then it's like, it's on production load and making money. And it's like, don't touch it. Like, well, you need to do all, you need to completely revise this.
[88:15-88:15] UNKNOWN: We
[88:15-88:16] SPEAKER_01: can't. Like, OK.
[88:17-88:18] SPEAKER_04: OK, I guess.
[88:35-88:43] SPEAKER_01: It's interesting that it shut down access from that specific browser. I assume that when you delete it or close it and reopen it,
[88:43-88:43] UNKNOWN: it
[88:43-88:46] SPEAKER_01: gives it a new identity or something like that. It's
[88:46-88:46] UNKNOWN: like
[88:46-88:46] SPEAKER_01: a
[88:46-88:48] SPEAKER_04: tag on the end of the IP or some shit like
[88:48-88:48] UNKNOWN: that.
[88:48-88:48] SPEAKER_04: Right.
[88:48-88:49] SPEAKER_01: It's like,
[88:49-88:49] UNKNOWN: no
[88:49-88:51] SPEAKER_01: more from you. You're done.
[88:52-88:55] SPEAKER_04: It's like you're doing nothing actively for 16 hours.
[88:58-89:15] UNKNOWN: OK, so now we're going to start doing this. I
[89:15-89:19] SPEAKER_01: don't even know what. Oh, it is the CSI driver.
[89:21-89:21] UNKNOWN: Or
[89:21-89:24] SPEAKER_01: I think the secret one was missing.
[89:25-89:29] SPEAKER_04: Right. I think it was both missing. Maybe. But it caught both of them at
[89:29-89:29] UNKNOWN: the
[89:29-89:30] SPEAKER_04: same time.
[89:40-89:41] SPEAKER_02: Yeah.
[89:42-89:45] SPEAKER_01: The issue. This is the CSI driver. There you go.
[89:45-89:45] UNKNOWN: He's getting
[89:45-89:48] SPEAKER_01: cluster. Yeah, both of them.
[89:53-90:00] SPEAKER_04: The only reason I know that is because that's the only reason I know what those are is because I read it earlier this morning.
[90:05-90:19] SPEAKER_01: Yeah, that when I talk to Jim and I to talk about how to access the hugging face secret, that's what it said to do. It said to load the CSI driver for secret manager,
[90:19-90:19] UNKNOWN: and
[90:19-90:20] SPEAKER_01: then it would just be able to get
[90:20-90:21] SPEAKER_03: it. There you go.
[90:27-90:29] SPEAKER_01: But we had a ton of other.
[90:29-90:37] SPEAKER_04: Right. Yeah, not only is this the way to get it working, this is the way to learn. Learn. We are learning literally what CSI is all
[90:37-90:37] UNKNOWN: about.
[90:39-90:44] SPEAKER_01: Yeah, I don't know what it stands for. It's like, I don't know. Let's
[90:44-90:45] UNKNOWN: get that.
[90:52-91:14] SPEAKER_01: In the context of Kubernetes, what does CSI stand for in the context of a CSI client driver? Container storage interface.
[91:14-91:15] SPEAKER_03: It's
[91:15-91:23] SPEAKER_01: a standardized API specification that allows container orchestration platforms like Kubernetes to integrate with a wide range of storage systems.
[91:24-91:30] SPEAKER_04: That's a good name. Container, i .e. Kubernetes, storage, what we're talking about, and how they
[91:30-91:31] SPEAKER_01: interface. Yes.
[91:32-91:32] UNKNOWN: So, what does that mean?
[91:35-91:37] SPEAKER_01: I think before that,
[91:37-91:37] UNKNOWN: and
[91:37-91:53] SPEAKER_01: the reason I know this is from the Kubernetes book. Before that, to make Kubernetes work with an external system, you had to add it to the kernel. And you had to go to, or add it to the project. So you had to go talk to the people who
[91:53-91:53] UNKNOWN: were
[91:53-91:54] SPEAKER_01: managing the project and say,
[91:54-91:54] UNKNOWN: hey,
[91:55-92:04] SPEAKER_01: I would like. I need some storage on this. I would like my storage system to work with your project. Can you put me in there? And
[92:04-92:05] SPEAKER_04: they
[92:05-92:15] SPEAKER_01: got tired of people doing that. So it's like, I'm going to make a standard interface format so that any CSI, if you put it in this format, it will know how to do
[92:15-92:19] SPEAKER_04: it. That's how APIs become a thing.
[92:28-92:28] UNKNOWN: My
[92:28-92:32] SPEAKER_01: guess is that's going to fail. But whatever.
[92:56-92:57] UNKNOWN: Okay.
[92:57-93:01] SPEAKER_01: I probably have so many freaking cluster credentials on my computer.
[93:01-93:16] SPEAKER_04: Yeah. That's what I was SSHing into the VMs, or cursor was. And it was throwing this like, permanently added to your list of whatever profiles. And I was like, what the fuck is that cursor? And it was like, that's just a thing.
[93:17-93:20] SPEAKER_01: Incredible success. Yeah, it's just they're going to be on there.
[93:21-93:22] SPEAKER_04: Like,
[93:22-93:22] UNKNOWN: bomb.
[93:22-93:32] SPEAKER_04: It's a text file, basically. It is. It points to a thing that doesn't exist anymore. Or it's like a hundred gigabytes of system data. One of those two.
[93:32-94:12] SPEAKER_01: Yeah. Hopefully it's not number two. So it may be making the type of nodes necessary to run those jobs.
[94:12-94:13] UNKNOWN: Yeah.
[94:14-94:16] SPEAKER_01: An untolerated tank.
[94:24-94:25] SPEAKER_04: TKE quick remove
[94:25-94:26] SPEAKER_03: equals true.
[94:28-94:29] UNKNOWN: Okay.
[94:29-94:48] SPEAKER_01: Yeah. So it may be in the process of provisioning the right nodes for those jobs. Or some issue with we can't make the right nodes for the jobs.
[94:49-94:50] SPEAKER_04: Yeah. There might be like,
[94:50-94:50] UNKNOWN: you
[94:50-94:58] SPEAKER_04: have to like that tank is basically don't do this. Right. And it might be a default with storage stuff that needs to be.
[94:58-95:02] SPEAKER_01: No, I don't know what tank that word means, but I think it is matching.
[95:03-95:03] UNKNOWN: It
[95:03-95:13] SPEAKER_01: is the process of saying, hey, here's the requirements for this job. Yeah. And it needs to run on a certain type of node, i .e. one with a L4GB.
[95:15-95:31] SPEAKER_04: Specifically says like, hey, don't use this type of node for this or this type of node can't receive those. So it might be doing the GPU CPU split thing. Yeah. And that's an expected like don't send the CPU job to the one with the GPU and don't send the GPU job to the one with just CPU.
[95:32-95:38] SPEAKER_01: I think we're saying the same thing, but opposite. So yeah, I don't know where the tank means. Don't do don't use this type of
[95:38-95:38] UNKNOWN: or
[95:38-95:41] SPEAKER_01: specifically use this type of node, but that is doing matching is like,
[95:41-95:41] UNKNOWN: hey,
[95:41-95:47] SPEAKER_01: here are the requirements for this pod. Do you have a node? Kubernetes is what you're saying. Yes, you're right.
[95:47-95:51] SPEAKER_04: It's like use it, look for this, whereas tank is avoid this.
[95:51-95:52] SPEAKER_01: Right. Got it.
[95:52-95:52] UNKNOWN: Makes
[95:52-95:53] SPEAKER_01: sense.
[95:53-95:55] SPEAKER_04: That's from the fucking...
[95:55-95:56] SPEAKER_01: Kubernetes book?
[95:56-95:59] SPEAKER_04: No, the PCA
[95:59-95:59] UNKNOWN: exam.
[95:59-96:00] SPEAKER_04: Got it.
[96:01-96:09] SPEAKER_01: Yeah. I think now is a good time for doing a new session.
[96:10-96:15] SPEAKER_04: Yeah. So what's it claiming is the current status like is working?
[96:15-96:19] SPEAKER_01: Well, it solved the problem that we set out to do. I agree.
[96:19-96:19] UNKNOWN: That
[96:19-96:20] SPEAKER_01: was the mounting issues.
[96:20-96:28] SPEAKER_04: Which is good. I'm glad that it's treating it that way. So yeah, this is probably so maybe maintain the chat.
[96:29-96:37] SPEAKER_01: Yeah, I don't think I'm going to I'm not going to do it right now. I actually want to see if it completes. Right. I actually think that's a possibility.
[96:37-96:48] SPEAKER_04: Yeah, I think it might be a good time for a new markdown in there. Like, OK, assuming wherever we get on this, let's move on. That's blinking for you too,
[96:48-96:48] UNKNOWN: right?
[96:49-96:50] SPEAKER_04: The light.
[96:51-97:21] SPEAKER_01: Yes. Yeah, you may be getting ready to get a power outage or those voltage fluctuations on the line. Oh, it's like, whoa, that's not good. So I'll just have a comment like so where are
[97:21-97:21] UNKNOWN: we
[97:21-97:22] SPEAKER_01: at?
[97:22-97:26] SPEAKER_04: Yeah, let me read this. You said you can type all your own.
[97:31-97:33] SPEAKER_01: Are you reaching and you're not looking at that? No,
[97:33-97:35] SPEAKER_04: I'm on the chat.
[97:40-97:44] SPEAKER_05: So number four is a problem that can avoid.
[97:45-97:45] SPEAKER_04: Right.
[97:50-97:51] UNKNOWN: And
[97:51-97:56] SPEAKER_04: you could be right. No retries for me. I just saw some sort of failure.
[97:57-98:21] SPEAKER_01: Yes. So if you look back at this, it says, hey, yeah, the drivers are running jobs are running the. Wherever the like the. It's basically saying it's waiting for no schedule. Right. And it's not so it resolved the CSI driver issue, which is good. It's like I'm focused on that. It's resolved. I'm good.
[98:21-98:36] SPEAKER_04: What came out of this? So let me check the note. Perfect. I see the issue. The note has that means you can't plan to replace remove this. This is normal. Completely unrelated.
[98:37-99:04] SPEAKER_01: Right. So that's one of the things that GK especially autopilot can do is like, hey, the node I created doesn't meet your requirements. I'm going to give you a new one. And theoretically, the job should run after that. And so but it stopped looking at it. So what I want to do is say, OK, what do you think we should do next? Right. And get that into the README and all of that stuff like that. And then we'll do a
[99:04-99:04] UNKNOWN: new
[99:04-99:04] SPEAKER_01: session. That
[99:04-99:05] SPEAKER_05: fucking ass.
[99:06-99:06] SPEAKER_01: Yes.
[99:39-99:43] SPEAKER_00: This week, bro, I'm talking about right now.
[99:54-100:06] SPEAKER_01: Yeah, I mean, I think we should do the yeah, the current monitoring like and determine if the pods are working correctly. If they're working correctly, then we're literally done. Yeah, I think you need
[100:06-100:20] SPEAKER_04: to explicitly say to them that like they aren't or they probably aren't. And we need to pick up the test driven development from the CSI drivers moving forward.
[100:21-100:22] SPEAKER_01: Say that again.
[100:24-100:29] SPEAKER_04: Like nothing is confirmed working at all. Right. And we need to pick up. We're still testing.
[100:29-100:31] SPEAKER_01: Here, you want to jump in?
[100:31-100:32] SPEAKER_04: Like rather
[100:32-100:32] SPEAKER_01: than trying to.
[103:31-103:32] UNKNOWN: I
[103:32-103:52] SPEAKER_04: have started. I'm having to update the README real quick, but it started a new debug session file and pod execution. And we're going to start the testing from there. So it should update the README and then start recommending logging commands.
[103:56-104:00] SPEAKER_01: So did you check to see if things are running correctly?
[104:00-104:05] SPEAKER_04: That's going to go ahead and create the plan for continued testing. So
[104:05-104:11] SPEAKER_01: just leave everything up and start going. So we're going to do a new session. But yeah, go look at the running cluster.
[104:11-104:49] SPEAKER_04: Right. It could be right. I don't think it is, but could be right that fixing that CSI thing solved it. But I don't think so. So does the README is. All infrastructure issues resolved. Maybe. So it could be the code that's broken now.
[105:00-105:01] UNKNOWN: You
[105:01-105:04] SPEAKER_04: could say known issues.
[105:04-105:09] SPEAKER_01: Yeah, exactly. So what's next? Does it have a
[105:09-105:17] SPEAKER_04: next up section? Yeah, that other document you've got there, that one that you just posted. I think it's
[105:17-105:18] SPEAKER_03: pod execution.
[105:29-105:34] SPEAKER_01: Okay. So you want me to do an end session? I don't think so. I
[105:34-105:36] SPEAKER_04: think we just continue with this
[105:36-105:36] UNKNOWN: document.
[105:36-105:54] SPEAKER_04: Oh, just continue going. Okay. But basically I'm reducing some of the context that it's using from that other file because those things are done. And hopefully it's got enough context in this one that it created to be able to move forward.
[106:38-107:38] UNKNOWN: Okay. Okay. Okay. Okay.
[107:46-107:49] SPEAKER_00: Interesting. That's
[107:49-107:54] SPEAKER_01: what we want. Still getting CSI driver errors.
[108:55-109:45] UNKNOWN: I don't see this. Okay. Okay.
[109:45-109:54] SPEAKER_01: I don't know why we have to use GCS fuse. We should just be able to use the buckets as object storage.
[109:55-110:07] SPEAKER_04: Yeah. It may have written it somewhere in the code that we needed file storage for reasons. Right.
[110:08-110:13] SPEAKER_01: When it's latched onto that. Yeah. Because I don't know that we specifically need file storage. We can use object storage.
[111:10-111:12] UNKNOWN: Excellent.
[111:26-111:27] SPEAKER_01: That's beautiful.
[111:30-111:30] UNKNOWN: I
[111:30-111:38] SPEAKER_01: love the just I know it sounds silly to kind of that you just grow food like it's you put it in the ground and then you can
[111:38-111:38] UNKNOWN: eat
[111:38-112:18] SPEAKER_01: it. And you can live and you sustain yourself based on this process that just happens. Right. I don't know if we're in a meaningless loop or not, but it's starting to feel like
[112:18-112:32] SPEAKER_04: it's got the early signs, but it's not quite there yet. Like these are all like this all could make sense. There we go.
[112:35-112:42] SPEAKER_01: What is this? What is the difference? Looking for secret store dot CSI.
[112:44-112:46] SPEAKER_04: Driver name is secret store dot GKE.
[112:46-112:58] SPEAKER_01: Yeah. There we go. That'll do
[112:58-113:04] UNKNOWN: it. We
[113:04-113:05] SPEAKER_01: got to do the whole thing.
[113:08-113:11] SPEAKER_03: That's probably the last swing. Yep. That is
[113:11-113:11] UNKNOWN: that
[113:11-113:16] SPEAKER_03: is definitely going to be like go start the cluster destruction.
[113:21-113:22] UNKNOWN: We
[113:22-113:23] SPEAKER_01: got
[113:23-113:23] SPEAKER_03: that.
[113:23-113:26] SPEAKER_01: Yeah. I'm going to delete the
[113:26-113:28] SPEAKER_03: VM. What the fuck?
[113:37-113:53] UNKNOWN: Hold on. Oh, no,
[113:53-114:02] SPEAKER_01: don't change the Docker freaking.
[114:02-114:11] SPEAKER_04: Yeah, it should like it's doing a thing where it's copying the root. Yeah, no,
[114:11-114:11] UNKNOWN: I
[114:11-114:40] SPEAKER_04: think it's right. Okay. I need to build from the parent directory. So yeah, so there's a what I did yesterday. We needed that Kate's folder, obviously, and from that other one. And when you build a Docker file, it only has the root is where you built it at. Right. And so it has to go up and build from the root. And I added a Docker ignore. It ignores everything but a couple that we explicitly want. Okay. So it is correct.
[114:47-115:08] SPEAKER_01: Did you do that? You can delete that now. Oh, and I'm going to delete the VM. Which is much easier than that. You just have to click that button right there, which is automatically clicked after the first time. Okay. I think we should be good.
[115:09-115:12] SPEAKER_04: Definitely not true. I think it's fine. I think
[115:12-115:13] SPEAKER_01: it's a mega second.
[115:14-115:16] SPEAKER_04: Can it? I mean, yeah,
[115:16-115:16] UNKNOWN: I
[115:16-115:45] SPEAKER_04: think worst case it doesn't. And we wait until it's gone. Wait a second. You see what it's uploaded. Copy local testing sample audio upload transcription Jason.
[115:45-115:48] SPEAKER_00: Stop it.
[115:50-115:54] SPEAKER_04: It's testing. No, it's going to him.
[116:49-117:31] UNKNOWN: Okay. Okay. That's
[117:31-117:38] SPEAKER_01: an awfully complicated command. And they're just GSU till
[117:38-117:40] SPEAKER_04: the fucking.
[118:25-118:27] UNKNOWN: Okay.
[118:45-118:57] SPEAKER_04: I think you might be able to do side to side sprints in the pool. Yeah. I'm thinking especially if you do it on the where it's angling down into the deep end, throw your balance off.
[118:57-118:57] UNKNOWN: Just
[118:57-118:58] SPEAKER_04: enough that
[118:58-119:00] SPEAKER_01: you got to stay active going this way, but it's back.
[119:00-119:00] UNKNOWN: It
[119:00-119:02] SPEAKER_01: goes both directions because you're going back and forth.
[119:02-119:04] SPEAKER_04: Exactly. So you work both legs
[119:04-119:05] SPEAKER_01: evenly. Yeah.
[119:07-119:15] SPEAKER_04: I'm going to start fucking around in there and see if I can get a workout. Swimmers are like the most shredded people on the planet.
[119:16-119:24] SPEAKER_01: For sure. Okay. It wants to wait. I'm going to go. You're
[119:24-119:24] UNKNOWN: going
[119:24-119:27] SPEAKER_01: to just work here for a bit. Yeah. You can close the
[119:27-119:29] SPEAKER_04: session. Yeah.
[119:32-119:32] UNKNOWN: I think
[119:32-119:49] SPEAKER_01: I'm feeling pretty good. I feel better than I'll do this. I feel better than I did two days ago when we were like, I don't know what's going on. Now, at least the current issue is the those drivers,
[119:49-119:49] UNKNOWN: the
[119:49-119:50] SPEAKER_01: CSI drivers.
[119:50-119:54] SPEAKER_04: And the fact that we're seeing errors and it's not going well, that didn't work. Let
[119:54-119:54] UNKNOWN: me
[119:54-119:55] SPEAKER_04: try something else. Let me
[119:55-119:55] UNKNOWN: try
[119:55-119:56] SPEAKER_04: something else.
[119:56-120:04] SPEAKER_01: Yeah. So we're specifically trying to burn down the CSI driver issue and that may make everything work. But if not, it'll at
[120:04-120:04] UNKNOWN: least
[120:04-120:11] SPEAKER_01: get to the code. Right. So like you were saying, like the code works. We've proved it works. We didn't really write the code.
[120:12-120:12] SPEAKER_04: Transcription
[120:12-120:12] SPEAKER_01: works.
[120:13-120:18] SPEAKER_04: Right. No diarization output works. Like it writes to its bucket. And we've seen
[120:18-120:18] UNKNOWN: it. Pretty
[120:18-120:21] SPEAKER_04: sure that same transcription output. In Cloud Run. Yep.
[120:21-120:27] SPEAKER_01: We've seen it in Cloud Run. And we've seen transcription. I don't know if it's not in Cloud Run.
[120:27-120:27] UNKNOWN: It
[120:27-120:29] SPEAKER_01: was locally. Whatever. We've seen it work.
[120:29-120:35] SPEAKER_04: We ran the medium model at least once. Right. Which would not run locally. So we got the output. So
[120:35-120:40] SPEAKER_01: we've seen both of them in Cloud Run. So the code should work. But we have not. Every.
[120:40-120:40] UNKNOWN: Yeah,
[120:40-120:52] SPEAKER_01: that's true. We haven't gotten to there. But everything, every error we've had up to this point has been infrastructure and pipeline. Yep. And they were silent for two weeks. So we're at least moving towards getting to
[120:52-121:09] SPEAKER_04: actually running the code. And then it should be fairly quick coming up. If it's passing to the buckets, it's a matter of a trigger that only goes when both are done. And debugging any alignment weirdness, which is going to take a little bit of time,
[121:10-121:10] UNKNOWN: but
[121:10-121:12] SPEAKER_04: not much. Too bad. I don't think so.
[121:13-121:13] SPEAKER_00: All right.
[121:13-121:14] SPEAKER_02: All right. Good luck.

==================================================
Generated on: 2025-07-28 22:40:41
Total words: 12574
Total speakers: 8
==================================================




Summary:
creation_date: 2025-07-28 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-28_2220_ZOOM0030_transcript.txt participants: SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04, SPEAKER_05, SPEAKER_06
Executive Summary
This transcript captures a technical working session focused on resolving a persistent authentication and infrastructure issue with the on-demand [[GKE Autopilot]] cluster. The primary problem was identified as the [[Kubernetes]] services' inability to mount necessary resources, such as secrets from [[GCP]]'s [[Secret Manager]] and volumes via [[GCS Fuse]], due to misconfigured Container Storage Interface (CSI) drivers [31:08-31:12]. The team decided to pivot from chaotic end-to-end testing to a more structured, component-by-component validation process, which they dubbed "[[Test Driven Development]]" [11:22-11:48]. This new approach involves tearing down the existing infrastructure and methodically testing each step of the pipeline, from file upload to final cluster shutdown, while documenting the process in detailed debug logs for their [[AI Tools|AI tool]], [[Cursor]] [79:54-82:32]. The conversation also included a lengthy celebration of the [[OKC Thunder]]'s recent [[NBA championship]] [25:48-27:46].

Key Topics Discussed
	•	Pivoting to [[Test Driven Development]]:
	•	Acknowledging that the current end-to-end testing approach is failing due to numerous silent infrastructure issues, the team consciously decides to shift to a more granular, component-level testing strategy [06:08-07:21].
	•	The new plan is to validate each step of the architecture individually, starting with the initial file upload and [[Eventarc]] trigger, to isolate the exact point of failure [16:50-17:55].
	•	This is seen as a more robust way to learn the intricacies of the [[GCP]] services and build a reliable system [35:45-36:44].
	•	Debugging [[GKE]] Infrastructure and [[Secret Manager CSI driver]]:
	•	The core issue preventing the services from running is the failure of pods to mount necessary resources, specifically secrets and file system volumes [21:09-21:40].
	•	Root Cause: They identify that the Container Storage Interface (CSI) drivers for both [[Secret Manager]] and [[GCS Fuse]] are not being provisioned or configured correctly on the cluster nodes [90:05-92:15].
	•	They found a specific error where the driver name in their deployment manifest was incorrect (secret-store.csi.k8s.io instead of the correct secrets-store.csi.gke.io), which is the likely culprit [112:35-113:11].
	•	The plan involves tearing down the current cluster, redeploying with the corrected CSI driver configurations, and then re-running the tests step-by-step [37:11-37:37].
	•	Human-[[AI Tools|AI]] Workflow Refinement:
	•	The team discusses strategies for improving how they work with [[Cursor]] on complex, multi-session problems.
	•	They propose a system of creating detailed, dated debug session logs (e.g., debug-session-YYYYMMDD.md) that exist separately from the main [[README]] [32:55-34:49].
	•	This creates a tiered memory system: the [[README]] holds the high-level plan, while the debug logs provide granular, historical context that the AI can reference to understand the project's history and avoid repeating mistakes [79:54-82:32].
	•	They also suggest a collaborative prompting technique using a shared Google Doc for real-time work, allowing both participants to contribute to a prompt without interrupting the person driving the session [06:37-07:58].
	•	[[OKC Thunder]] [[NBA championship]] Celebration:
	•	A significant portion of the session is dedicated to discussing the [[OKC Thunder]]'s championship victory and parade [50:18-50:40].
	•	They talk about the team's future as a potential dynasty, comparing the core players to past legendary teams like the Bulls, and praise the front office's long-term strategy [29:05-30:46].

Action Items & Decisions
	•	Decision: Pivot from broad end-to-end testing to a focused, step-by-step [[Test Driven Development]] approach to isolate infrastructure and pipeline failures [11:22-11:48].
	•	Action: Correct the name of the [[Secret Manager CSI driver]] in the [[Kubernetes]] deployment configuration to secrets-store.csi.gke.io to fix the secret mounting issue [112:44-113:11].
	•	Action: Tear down the existing [[GKE]] cluster and the associated [[VM controller]] to ensure a clean slate for the next test [113:23-113:26].
	•	Action: Re-run the deployment and testing process, starting with a file upload and manually verifying each subsequent step (cluster creation, service deployment, pod execution) [31:32-32:27].
	•	Decision: Adopt a new documentation strategy using separate, detailed debug session logs to provide better historical context to [[Cursor]], complementing the high-level [[README]] [79:54-82:32].

Suggested New Links/Tags
	•	[[GCS Fuse]]

Linked Concepts
	•	[[AI Agents]]
	•	[[AI Tools]]
	•	[[Artifact Registry]]
	•	[[Cloud Function]]
	•	[[Cloud Run]]
	•	[[Cluster Manager]]
	•	[[Component Testing]]
	•	[[Cursor]]
	•	[[Diarization Service]]
	•	[[Docker]]
	•	[[Eventarc]]
	•	[[Firestore]]
	•	[[GCP]]
	•	[[GCS Fuse]]
	•	[[Gemini]]
	•	[[GKE]]
	•	[[GKE Autopilot]]
	•	[[GPU]]
	•	[[Hugging Face]]
	•	[[Job Template]]
	•	[[Kubernetes]]
	•	[[Mermaid]]
	•	[[NBA championship]]
	•	[[OKC Thunder]]
	•	[[Pipeline Orchestrator]]
	•	[[Project Plan]]
	•	[[Pub/Sub]]
	•	[[README]]
	•	[[Secret Manager]]
	•	[[Secret Manager CSI driver]]
	•	[[Service Account]]
	•	[[Test Driven Development]]
	•	[[Transcription Service]]
	•	[[VM controller]]
	•	[[Whisper]]
	•	[[Workflow Automation]]

#Tags
	•	#AI
	•	#Automation
	•	#Deployment
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom31
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-28_2211_ZOOM0031_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:01-00:12] UNKNOWN: I guess I haven't checked that it's actually recording all of those vives. Yeah. I think it is. I think it is too, but
[00:12-00:16] SPEAKER_02: we'll recover even if not.
[00:17-00:18] UNKNOWN: So
[00:18-00:21] SPEAKER_02: what did we want to talk through? We mentioned,
[00:21-00:21] UNKNOWN: I
[00:21-00:34] SPEAKER_02: know we talked about like the flow of documentation working with Kerscher, but I think there was some, oh, the pork. Talked about figuring out, so are we going to get like a regular size? I think we'll get like one
[00:34-00:44] SPEAKER_00: that's regular size. Not even just for how long it'll feed us, but more just like do a full test. Yep, to actually get
[00:44-00:49] SPEAKER_02: a proof of concept. I'm going to ask Jim and I about seasoning the night before.
[01:01-01:09] SPEAKER_00: Tray is the way to go if it can maintain temperature. How? It can definitely maintain temperature. Like
[01:09-01:19] SPEAKER_02: especially control the cook. Yeah, actually reduce the temperature and one hopper lasts nine to 12 hours or whatever it ends up being. Right.
[01:21-01:31] SPEAKER_00: Basically fill it. Well, in this case, we're going to do it. We're going to do it during the day, so we can fill the hopper during the day. Right. Yeah, that's true. But
[01:31-01:34] SPEAKER_02: under normal circumstances,
[01:34-01:34] UNKNOWN: yeah,
[01:34-01:52] SPEAKER_02: exactly. At least track like we probably need to go out there once every two or three hours just to see it and be like, hey, in three hours it went down to here. If we can get all the way through the cook without refilling, great. But if not, then we'll at least know how long. Right. Oh,
[01:56-01:56] UNKNOWN: yeah.
[02:13-02:28] SPEAKER_00: It's my first time leaving the house since Friday. Oh, geez. Maybe. That's why. No, I went somewhere Saturday, I think, didn't I? Probably all into like Costco or something. Yeah, so since Saturday.
[02:34-02:48] SPEAKER_02: Yep. So, well, we're going to disseason it tonight. Just have it sitting in the fridge. And it's coming in hot. Yeah,
[02:49-02:49] UNKNOWN: so
[02:49-03:01] SPEAKER_02: tomorrow I'll just wait until you get up and not try to like get anything. We're not in a rush, I don't think, because even if it were to take 12 hours, that'd be like seven
[03:01-03:13] SPEAKER_00: tomorrow night. Yep. I anticipate it taking like 14. Well, maybe that's when we cool it down in the middle. And that's the total number of hours after that. Maybe.
[03:14-03:24] SPEAKER_02: I mean, regardless, we'll gather data and if it looks like it's going to take 14 hours, we'll crack the fucking temperature and get the pitch done. Or bring it inside and put it in the
[03:24-03:36] SPEAKER_00: roaster. I mean, I think it'll be so close because then it'll be like nine o 'clock at night. That's true. I'll stay up and finish it. I'm going to just get it on as soon as we can in the morning in case it's more than 12 hours. Yeah.
[03:43-03:43] UNKNOWN: But
[03:43-03:52] SPEAKER_00: then otherwise, I mean, I think we will know the functionality of the Traeger today. I just haven't done the research.
[03:53-03:53] UNKNOWN: Right.
[03:54-04:06] SPEAKER_02: Yeah. I mean, in theory, it's not going to be disastrous even if it were late tomorrow night. If it will reduce its temperature to literally leave it sitting there. I mean, it goes into
[04:06-04:34] SPEAKER_00: warmer. Worst case is we use the meter probes and it alarms and we go do the same thing. Right. Yeah. And just do it. I mean, because we will be awake. Right. But so it will do the job today. But what we're trying to do is test to see if we can do it hands on. Right. We know it will get done. What we don't know is the quality of the smoke. Right. And the full functionality of how hands off it can
[04:34-04:34] UNKNOWN: get.
[04:34-04:35] SPEAKER_00: Exactly.
[04:38-04:38] UNKNOWN: So
[04:38-04:45] SPEAKER_02: we'll just try to knock that out before the work session or just as the first part of our work session?
[04:47-04:48] SPEAKER_00: Meaning? Like in the
[04:48-04:48] UNKNOWN: morning. In
[04:48-04:54] SPEAKER_00: the morning? I think we do it as soon as, like that's the first thing we do. Can
[04:54-05:05] SPEAKER_02: you turn the Traeger on from your phone? I can. So maybe like when you wake up, turn it on. Right. And then do your morning routine because that doesn't actually add anything. Let me do this
[05:05-05:20] SPEAKER_00: real quick then. Remind me to turn on the Traeger tomorrow morning at 5 a .m. Okay. I added turn on the Traeger for tomorrow 5 a .m.
[05:22-05:36] SPEAKER_02: And then it takes 30 minutes or whatever to warm up. I can go out there because I'm already up and doing stuff at that point and just throw it on there. Put the probe in and then close and that's it.
[05:37-05:47] SPEAKER_00: I actually don't think you can start it from remotely. Which I think is probably a good thing. Because it gets hot like what if it's covered or things like that. It's not.
[05:47-05:47] UNKNOWN: It's
[05:47-05:50] SPEAKER_00: a physical switch. Like you have to go to light it.
[05:50-05:50] UNKNOWN: You
[05:50-05:55] SPEAKER_00: have to physically be there. That makes sense. But I'll do that. I'll do it at 5 a .m. Okay.
[05:58-06:12] SPEAKER_02: Yeah, I'll get it put on. And then it'll be on there somewhere between 5 and 6. So even 14 hours you're looking at 7 or 8. So not too bad.
[06:16-06:34] SPEAKER_00: And I'll do some research on how the temperature probe works and everything. I guess the dumbest is that it will just monitor the temperature locally. I guess that's the worst and dumbest. Right. And then the next is monitor the temperature and
[06:34-06:34] UNKNOWN: send
[06:34-06:37] SPEAKER_00: it in the app. But don't do anything else.
[06:37-06:37] UNKNOWN: And
[06:37-06:43] SPEAKER_00: the best is monitor the temperature and your finishing point. Like the meter.
[06:44-06:44] UNKNOWN: And
[06:44-06:46] SPEAKER_00: it will also lower the temperature.
[06:46-06:46] UNKNOWN: All
[06:46-06:59] SPEAKER_02: of that stuff. I assume at the very least it would notify you again. Because that would be silly to have. You almost just don't have that if you have to be next to it to see.
[07:01-07:04] SPEAKER_00: Yeah, I imagine if you got Wi -Fi connection it'll
[07:04-07:04] UNKNOWN: send
[07:04-07:32] SPEAKER_00: it in. And this technology or that module has been in existence. It existed when we had the other one. I bought the other one. Right. I wanted it back then. So it's pretty mature. Nice. And so the other thing was talking about how we make documents and things like
[07:32-08:18] SPEAKER_02: that. Right. So right now we have our previous iteration or the current iteration of cursor rules needs a big update. And I think it's so currently you have a begin session protocol which the cursor rule for that is a new session. The cursor rule for that is check the readme. And any CLI commands you need to run to check the cloud and anything in the code base you need. And then we kick off. And it tells us okay here's where I think we should start. That should already be in the readme. In session we have update the readme with all the work we've done. And write to the daily logs. Right. Which is a standard markdown file.
[08:18-08:18] UNKNOWN: And
[08:18-09:31] SPEAKER_02: then end of day daily logs are turned into raw logs and you get a daily summary. But another thing we've added since then is this active session log basically as opposed to just the readme update at the end. And I think what it should look like is the active session log all the way through. And then the readme should be like high level with references to those active session logs. Right. I agree. And it should still track the overall progress. That should be the first thing it looks at. But there should also be some language in the rules to say also go look at these session logs from maybe we started even putting timestamps on them. And they like check the session logs from the last two hours or something. And that's where we know how ever long we've been working. Check them from all day to day. Check them since the last hour or whatever. Right. So at that point do we even have an end session where it writes to the daily log? Yeah it's almost like we're
[09:31-09:31] UNKNOWN: session. Or do we
[09:31-09:36] SPEAKER_02: each session we just have a new log whatever the other one the
[09:36-09:46] SPEAKER_00: session log? My concern about getting rid of the session log and that's probably what it should be called.
[09:50-09:51] UNKNOWN: Is
[09:51-09:59] SPEAKER_00: that the date that not daily the whatever real time. Yeah. Real time log is too fine. Yeah that's where the
[09:59-10:00] SPEAKER_02: readme I think.
[10:02-10:02] UNKNOWN: So
[10:02-11:38] SPEAKER_02: daily log is like a medium level summary of all the work that was done. What should be the session log. But the readme I think eliminates the need for that because this is the big picture and some like next steps to keep the readme pretty much like it is with more direct references to these full on robust logs. Because if we're having to go look at those I want you to have as much detail as possible. Whereas I don't want you to have to go look at them. In theory we solved that problem marking the readme that it's solved and it never comes up again because it's working. Right. But I just don't know where that middle log now comes into play because it was the session summary but we almost don't want to synthesize that. If we're having to go look at it it's because something's going wrong and we need like granular detail. What is the purpose of each one of these three documents. They're a little bit overlapping and redundant because they come from different iterations of things like I think the what is currently daily daily log. The one thing that we were doing was generating it at the end. But now we're having it generate as we go. And it may be that they're used for different things like this super granular one we want more for GCP and like cloud based stuff. Right.
[11:38-11:38] UNKNOWN: Because
[11:38-12:21] SPEAKER_02: those tests are so fucking annoying and there's more of a disconnect and all that stuff. Whereas maybe the more session recap version will be useful if we're right in the front end or something that's more local based and I don't know maybe not. But I think basically the daily log MD is the less detailed version of the actual full on session logs. And I don't think we need it. So I think basically as we were talking today like basically you don't really in sessions that much especially when you're mostly doing command line stuff. What's in my head is trying
[12:21-12:24] SPEAKER_00: to imagine do you think we'll ever
[12:24-12:26] UNKNOWN: go back to the last four.
[12:30-12:32] SPEAKER_00: And that determines
[12:32-12:45] SPEAKER_01: what should be in there. I'm trying to back my way into. Day after they were written. These
[12:45-12:49] SPEAKER_02: testers make sure you know where we're at for the last session.
[12:49-12:49] UNKNOWN: Right.
[12:50-12:52] SPEAKER_02: And most of that's from the
[12:52-12:52] UNKNOWN: read me but if
[12:52-12:53] SPEAKER_02: it decides
[12:53-12:59] UNKNOWN: it needs more granular detail. It goes for it. There's no lock on them so
[12:59-13:04] SPEAKER_00: don't cut yourself. What's up Joe.
[13:09-13:16] UNKNOWN: What is this. Holy smokes. This
[13:16-13:22] SPEAKER_02: is crazy. They just hang there you beat them up.
[13:23-13:26] SPEAKER_01: Pretty cool. That's where I
[13:26-13:27] UNKNOWN: live. That's where
[13:27-13:27] SPEAKER_01: you live?
[13:28-13:28] UNKNOWN: Yep.
[13:29-13:39] SPEAKER_01: This is wild. Okay. What another one. My goodness bro. That's six.
[13:40-13:44] UNKNOWN: You have none left before too long. It's summertime. It's alright.
[13:49-13:51] SPEAKER_01: It's okay.
[13:59-14:01] SPEAKER_00: You're ready to leave. Alright.
[14:05-14:21] UNKNOWN: Oh nice. Say hi to the kids. Say hi. Alright. Alright.
[14:22-14:24] SPEAKER_02: See you guys.
[14:25-14:25] SPEAKER_01: Bye. I
[14:25-14:25] UNKNOWN: love
[14:25-14:27] SPEAKER_01: you. You're too walking. I can't even
[14:27-14:28] UNKNOWN: do it.
[14:28-14:29] SPEAKER_02: Bye Bo. Thank
[14:29-14:31] SPEAKER_01: you. I'll bring you back
[14:31-14:43] UNKNOWN: later. I'm not sure
[14:43-14:45] SPEAKER_01: enough about
[14:45-14:45] UNKNOWN: Ford
[14:45-14:51] SPEAKER_02: but...
[14:51-14:51] UNKNOWN: I
[14:51-15:15] SPEAKER_02: think that's the thing about that question is kind of like why I think the current one that is part of the in session so the daily log MD is unnecessary because like you said when are we ever going to look at it well it's when usually we're not but when we do we don't want a summer we want like
[15:15-15:43] SPEAKER_00: the work that was done like I'm imagining this situation where we want to go back and try to summarize what we've done over a long period of time let's call it like oversee the whole project but that actually might be valuable like I want to make a final read me that documents all of it or whatever say I want to make a YouTube video yeah I don't know that that's a realistic reason to put into this discussion
[15:44-15:45] UNKNOWN: but
[15:45-15:52] SPEAKER_00: then the daily ones or whatever not the daily the real time ones are too granular I don't think like you just have to have
[15:52-16:08] SPEAKER_02: it summarize those then right that's true summarize them in period you can always summarize them if you have some use case where you want them you can never go backwards and unsummarize them that's true you
[16:08-16:21] SPEAKER_00: cannot summarize okay there you get that did it for me like that you can always run some sort of algorithm or say hey group these into groups of two three to a week at a time and do the
[16:21-16:39] SPEAKER_02: dailies like as long as we're doing good naming conventions then hey break these down into days or weeks or whatever the ultimate stance is and summarize them down then add all the weeks together do that then make YouTube
[16:39-16:59] SPEAKER_00: video I am I have another thought now okay and it's back towards why we should have both all three okay so we started doing these detailed ones and the first few document names say this that we were doing only while
[16:59-16:59] UNKNOWN: we
[16:59-17:29] SPEAKER_00: were doing troubleshooting and I actually think that makes sense so rather than even saying do this level of detail all the time only do it when we hey there's an issue and we're trying to troubleshoot and you know go granular on what we're doing right now because we don't know what we're doing and we're trying to figure it out and then if it's not like that then we just do just keep going and you don't need that level of detail just summarize it in the session yeah we could
[17:29-18:07] SPEAKER_02: define types of in session protocol which are like basically in session granular in session standard or something like that and that makes sense to me and it keeps it in the same flow like hey this super granular one should be put into the same summarization pipeline and go to these raw logs and do all this other stuff because I agree like if we were to go through and say set up a front end it doesn't need to super document like run and create VEAT and doing Firebase stuff because we know but
[18:07-18:19] SPEAKER_00: when it's like I'm not sure what's happening what have we tried what you know all of that level of detail you definitely that's when you want all that granular detail but I don't think I think it's overboard for routine
[18:19-18:20] SPEAKER_02: yeah
[18:20-18:21] SPEAKER_00: I think it's worth
[18:21-18:42] SPEAKER_02: the going through and learning that granular detail I don't know that I agree that you don't necessarily need it but that's how we know what's going on right in the in the era of vibe coding there has to be a step where you go back and learn what it did right but all
[18:42-18:44] SPEAKER_00: that being said I'm good either way if we want to get rid of it
[18:44-18:44] UNKNOWN: when
[18:44-19:13] SPEAKER_00: we just keep the more detailed ones there's like levels of in session protocol right basically yeah like if depends on what we're working on if we're working on something that's particularly challenging and we are particularly far away from it like knowledge wise well go more detail so I can really understand it and go back and look at it but if we don't need more then just keep pushing keep
[19:13-19:14] SPEAKER_02: a big high level overview
[19:15-19:15] UNKNOWN: right
[19:19-19:41] SPEAKER_02: also I think the readme in theory is that in real time as well like what it should be is this overall arching plan that is the whole thing and as we do things it should plug in references or to these other places exactly and there should be like a to -do list and maybe some future stuff that we'd like or whatever but
[19:41-19:55] SPEAKER_00: yeah I think that that makes the most sense to me is create a system that's almost general meaning it is designed to say the readme is the overarching document and
[19:55-19:56] UNKNOWN: the
[19:56-20:41] SPEAKER_00: detail like if you need more detail or if we have more detailed files or we go into a more detailed diagnostic or logging period refer to that in the into the next level document right and to the next level like always like so some sort of wording to say that right that hey anytime you create any level of detail like so we may just say hey for this troubleshooting period go into ultra detail mode whatever we call it right and you know continue to log but always as you then go up a level right however far you go up reference those and say if you basically if you need additional detail yeah see whatever in this place if
[20:41-20:49] SPEAKER_02: you look at the readme I mean it may have deleted at this point this morning it had it did that basically what I wanted to do
[20:49-20:49] UNKNOWN: is take
[20:49-21:31] SPEAKER_02: out the umbrella sounds oh yeah you want to even try to go over there okay I know how hot it is out there exactly from where it's the exact same hot as it is outside at home right but it does like literally like the file path like if you need to escalate here's this and that's where I think like we do all three and it's like here's the first path of escalation second and do that at each step and so the first path would be like the higher level and then if you need to go granular if that's available or yes you need to keep thinking through it do you want to take this in or just
[21:31-21:31] UNKNOWN: I
[21:31-21:32] SPEAKER_02: think we just stop it okay

==================================================
Generated on: 2025-07-28 22:19:10
Total words: 3030
Total speakers: 4
==================================================




Summary:
creation_date: 2025-07-28 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-28_2211_ZOOM0031_transcript.txt participants: SPEAKER_00, SPEAKER_01, SPEAKER_02
Executive Summary
This meeting is a strategic discussion focused on refining the team's human-[[AI Tools|AI]] collaborative workflow and documentation practices for their ongoing development projects. The participants analyze their current system of using a [[README]] file, daily logs, and real-time session logs, ultimately deciding to move towards a tiered documentation system where the [[README]] serves as a high-level plan with references to more granular, detailed session logs that are always preserved [15:15-16:21]. This approach aims to provide maximum context to their [[AI Agents|AI assistant]] ([[Cursor]]) during complex troubleshooting without cluttering the main project overview. The conversation also includes detailed planning for an upcoming cooking project involving a pork butt on a [[Traeger]] grill, which will serve as a hands-on test of its automated cooking features [02:34-04:35].
Key Topics Discussed
	•	AI Development Workflow and Documentation Strategy
	•	The team conducts a deep dive into their documentation and session management protocols for working with [[Cursor]].
	•	Debate on Logging Granularity: They discuss the purpose and necessity of three distinct document types:
	•	The high-level [[README]] as the main project plan.
	•	A medium-level summary log (daily_log.md).
	•	A highly-detailed, real-time session log [09:36-11:38].
	•	Decision on Tiered Documentation: They conclude that the medium-level summary is unnecessary because you can always synthesize a summary from detailed logs, but you cannot "unsummarize" to regain lost detail [15:44-16:21].
	•	New Workflow:
	•	The [[README]] will remain the high-level strategic document.
	•	Detailed, real-time session logs will be preserved as the primary source of historical context.
	•	The [[README]] will link to these granular logs, creating a tiered system for the AI to "escalate" its search for context when needed [19:19-20:49].
	•	Contextual Logging: They propose having different logging levels (e.g., "granular" vs. "standard") to be invoked based on the task. Troubleshooting sessions would use the most detailed logging, while more routine development would not require it [16:39-18:19].
	•	Planning a Cooking [[Proof of Concept]]
	•	The group plans to cook a pork butt on a [[Traeger]] grill to test its hands-off capabilities [00:18-00:49].
	•	Objective: To determine if the [[Traeger]] can complete a long cook, including automatically reducing the temperature to a "warm" setting, without human intervention [03:54-04:35].
	•	Plan: They will season the meat the night before, start the smoker at 5 a.m., and monitor the hopper usage and temperature probe functionality throughout the day [04:47-06:12]. This serves as a real-world test of a complex, automated process.
Action Items & Decisions
	•	Decision: The team will eliminate the medium-level summary log (daily_log.md) in favor of preserving the most granular real-time session logs [15:44-16:21].
	•	Decision: They will adopt a tiered documentation strategy where the [[README]] is the high-level plan that references the detailed session logs for deeper context [19:19-20:49].
	•	Decision: To implement different logging levels (e.g., granular, standard) within their [[Cursor]] rules, to be used depending on the complexity of the task (e.g., troubleshooting vs. routine coding) [17:29-18:19].
	•	Action: Season a pork butt the night before for a long smoke session [02:34-02:48].
	•	Action: Start the [[Traeger]] grill at 5 a.m. the next day to begin the cooking [[Proof of Concept]] [05:37-05:55].
	•	Action: Research the specific functionality of the [[Traeger]]'s temperature probe and its ability to automatically control the cooking process [06:16-06:46].
Suggested New Links/Tags
	•	[[Cursor Rules]]
	•	[[Proof of Concept]]
	•	[[Session Log]]
	•	[[Traeger]]
Linked Concepts
	•	[[AI Agents]]
	•	[[CLI]]
	•	[[Cursor]]
	•	[[Cursor Rules]]
	•	[[GCP]]
	•	[[Proof of Concept]]
	•	[[README]]
	•	[[Session Log]]
	•	[[Traeger]]
#Tags
	•	#AI
	•	#Automation
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom32
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-29_0935_ZOOM0032_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:04-00:15] SPEAKER_00: Alright. Excited about that. If we can make that even easier. Yeah, for sure. And if this is a good test,
[00:15-00:15] UNKNOWN: I
[00:15-00:23] SPEAKER_00: mean we have to try a brisket obviously. Even though everybody fucking likes brisket now so it costs a thousand dollars.
[00:23-00:23] UNKNOWN: It
[00:23-00:29] SPEAKER_00: does cost so freaking much money. It's like almost economical to go buy it somewhere. Like
[00:29-00:29] UNKNOWN: at a local grocery store.
[00:29-00:30] SPEAKER_00: At
[00:30-00:30] UNKNOWN: a
[00:30-01:08] SPEAKER_00: barbecue place. Right. Because thirty dollars a pound is what we're approaching. I split my, this time I was in the pool working out. I was doing three back and forth for a minute. But then I was doing four fours right? Four sets of four. And so on the second rep or whatever I would tread water instead for a minute. So it was basically
[01:08-01:08] UNKNOWN: do
[01:08-01:11] SPEAKER_00: the sprint back and forth three times.
[01:11-01:11] UNKNOWN: And
[01:11-01:22] SPEAKER_00: then tread water for a minute. Then sprint back and forth three times. Then tread water. And then you get a break. And it's a fucking good workout. I believe that. No question.
[01:25-01:25] SPEAKER_01: Yeah
[01:25-01:25] UNKNOWN: I
[01:25-01:31] SPEAKER_01: need to do that. Certainly if my calf feels like this next time I go to run I'm definitely
[01:31-01:52] SPEAKER_00: not doing that. Yeah I don't feel beat up at all. Like this is pretty long term sustainable. Obviously one too is about to figure something out. But. I mean you can do it. Yeah it becomes a different thing. It won't feel great. But yeah it's like I feel no like not beat up at all. Right.
[01:54-01:54] UNKNOWN: I
[01:54-01:59] SPEAKER_01: mean that's what it's known for. For sure. Being a good cardio workout and low impact.
[02:00-02:00] SPEAKER_00: Very
[02:00-02:00] SPEAKER_01: low. The lowest.
[02:02-02:23] SPEAKER_00: Near zero. Yeah and I at the end of my especially the sprints I like literally stop and sit like get down on my knees on the steps like I'm actually cooked. And there's pretty clear like I can go up to four down and back. And that would push it even harder.
[02:24-02:24] UNKNOWN: Right.
[02:30-02:40] SPEAKER_00: It's like my arms are tired. Which makes sense because you're paddling and all but it's just like swimming doesn't seem like a workout. It definitely is.
[02:51-02:59] SPEAKER_01: What do you think about the next level project after getting this done.
[02:59-02:59] UNKNOWN: So
[02:59-03:07] SPEAKER_00: like we get a transcribed output. Yeah. Dyrus output. Whatever that happens next week. Yeah.
[03:08-03:08] UNKNOWN: Next
[03:08-03:48] SPEAKER_00: month. It could be in the next couple of days. Let's see. So we've got this I guess the next one would be kind of teaching it how to find keywords or like how to tag or whatever the thing is because that really kind of is like the foundational aspect of the next whatever we do with it is making connections in the text and creating standardized outputs.
[03:49-03:49] UNKNOWN: So
[03:49-03:56] SPEAKER_01: I think some summarization and tagging. Right. Right. So the document the next after that because what's going to come out
[03:56-03:56] UNKNOWN: of
[03:56-04:16] SPEAKER_01: this is a raw transcript. Not raw but it's going to be marked. But then turn that into a summary and some sort of tagging system which I think we go with the same format as obsidian for now or maybe that's something we talk about.
[04:16-04:40] SPEAKER_00: I mean it's all marked down so it's very well known by the AIs. Right. Even if obsidian explicitly is not. My guess is we're going to end up writing our own obsidian extensions so it's going to be good and familiar with those. Right. Because like why would I use someone else's extension. Right. At this point. So
[04:40-04:40] UNKNOWN: yeah
[04:40-04:48] SPEAKER_00: summarize and tag makes it like that. And that's going to be a super short step. It's basically going
[04:48-04:48] UNKNOWN: to
[04:48-05:10] SPEAKER_00: be like tell it tell it to do that. So you can come up with like what we expect as an output and there might be some whatever the human assisted reinforcement learning is where we go like I like this one I don't like that one and spend like hours potentially just going like no don't like that here's why.
[05:13-05:13] UNKNOWN: What's
[05:13-05:34] SPEAKER_01: the end goal like ideal end goal of this project. I'm going to fix the end of the thrones. Okay. So at some point we want to switch over to so are we just building a tool to be our assistant and help us through projects or are we trying to or we don't want to specify or trying to build a product that can be commercialized.
[05:37-05:42] SPEAKER_00: I don't have a specific product in mind personally.
[05:44-05:44] UNKNOWN: I
[05:44-06:02] SPEAKER_00: think if it becomes like if we make a product I think it will happen not necessarily be like intentional. If you know like I don't know that we're going to sit down and go like we're going to build this tool. Let's go. Right. Like
[06:02-06:02] UNKNOWN: I
[06:02-06:49] SPEAKER_00: think we'll be working with stuff and be like holy fuck we can sell this. So I do think to some extent we're building our general personal assistant but we're also kind of developing how to work with AI agents and maybe we're going to end up making a framework of how to do that or something like I don't know and just contribute to the open source community. Right. But I think probably some pretty like good tools that are marketable are going to come out of this at some point. Yeah because we're going to try to use them and so we're interested in things that the general populous is also interested in. What do you think.
[06:52-07:05] SPEAKER_01: I don't know. I think that trying to make a marketable tool is probably too challenging. Maybe not. We don't have funding.
[07:05-07:17] SPEAKER_00: Yeah. It's a flawed philosophy. Right. I think like go and find people's problems and then solve them. Don't try to build a tool that is going to solve the problem. I agree that
[07:17-08:04] SPEAKER_01: those are kind of the words that I was looking for but I would add solve our problems. Exactly. So decide what we want to do and figure out the tools how to integrate or create the AI based tools if necessary but the tools to do the thing we want to do. So it is almost like if what we want to do is create an AI based studio we should do that and learn slash build the tools and tactics and techniques to make movies and make shows and that will tell us which tools we need to create but rather than saying hey I'm going to make tools and try to sell them. That is too general and it doesn't have a you won't
[08:04-08:21] SPEAKER_00: make anything good. Right. I think if we were doing that step one is not just general what are we going to build. It will go to some business that you know a person and find out a problem that they actively have that you can solve. I turned it on. Oh did you?
[08:21-08:54] SPEAKER_01: Okay. So I think then that the value of this tool is capturing our thoughts and notes in a way that we can then harness them into using just like I'm doing at work. It's an extra brain. Yeah it's an extra like capturing everything and helping us think through and solving our problem. It's an extra brain and a scalable team of assistants. Right exactly. And so that's what I think that this project should become because that's what we need to help us learn and build and grow at the actual project that we want to do.
[08:54-09:20] SPEAKER_00: I think like a thing that might happen is it goes like hey you guys should do this as a business. Not like necessarily the AI thing but like you guys talk about this shit a lot. Maybe do it. And it's like stuff we don't even think about. Or like I think it would be cool to build Alex's little pool table thing. Like that really is a great fucking idea you can execute on. It really is. But I think
[09:20-09:25] SPEAKER_01: the problem with that is it takes time and capital.
[09:27-09:44] SPEAKER_00: But you can do like it takes time for sure. But once we have this tool that can prototype and I mean in this case we would want a 3D modeling tool or a 3D modeling agent I mean that knows how to build 3D models and print them and stuff like that.
[09:44-09:44] UNKNOWN: But
[09:44-10:00] SPEAKER_00: yeah generally I think as of right now and this could change by the time we make it to the house. Once we get this thing done we should sit down and discuss where our first film project is. Right. And then feed that to it and have it start to work with us.
[10:00-10:00] UNKNOWN: And how do you get from where
[10:00-10:01] SPEAKER_00: we're at to there.
[10:01-10:03] SPEAKER_01: Exactly. How do I get there.
[10:03-10:03] SPEAKER_00: Yep.
[10:03-10:03] UNKNOWN: And then we
[10:03-10:19] SPEAKER_00: can back engineer the finished movie. Right. And here's all the steps. We'll probably miss more than 50 percent of them whenever we first map them out. But that's fine. Once we get to the end of it we'll go hey here's how you make a movie with an AI. Right. And we'll know. Make a fucking movie about it.
[10:19-10:25] SPEAKER_01: And I think that the process of going through it we will keep these detailed notes.
[10:26-10:26] UNKNOWN: 100
[10:26-10:41] SPEAKER_01: percent. Build the brain. Yeah. And we'll be able to go back and either make a documentary about doing it or like go and describe and you know make a process and refine our process because we know what
[10:41-10:48] SPEAKER_00: works and what doesn't. I think I even would have like at the end this project will have its own brain basically at the end.
[10:49-10:49] UNKNOWN: And
[10:49-11:16] SPEAKER_00: I think it would represent a completed project but then we could have AI go and be like hey compare all the techniques we did to like industry leading standards. Like here's how we chose to do lighting or whatever. Like compare that to all the best in the world previously. Right. And then give us ideas about how we could do it differently in the future or maybe we're fucking nailing it. Maybe we are. Right.
[11:16-11:16] UNKNOWN: I
[11:16-11:17] SPEAKER_00: mean
[11:17-11:35] SPEAKER_01: theoretically we should be pretty close because my guess is tell me how I should do this or help me make the plan. It's like well it should recommend the best practices. It should. Or especially if you use that phrase of hey give me a plan that implements the best practices throughout the whole process.
[11:37-11:44] SPEAKER_00: But if you're not talking about very very small steps it's going to go like here's a good plan. Yeah. Five steps.
[11:46-11:46] UNKNOWN: And
[11:46-11:49] SPEAKER_01: you're a millionaire. Exactly. Like you know.
[11:49-11:50] SPEAKER_00: Everything worked
[11:50-11:51] SPEAKER_01: perfectly. Yeah.
[12:02-12:03] UNKNOWN: I'm
[12:03-12:04] SPEAKER_01: going to stop this.

==================================================
Generated on: 2025-07-29 09:41:01
Total words: 1782
Total speakers: 3
==================================================




Summary:
creation_date: 2025-07-29 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-29_0935_ZOOM0032_transcript.txt participants: SPEAKER_00, SPEAKER_01
Executive Summary
This transcript captures a strategic planning session about the long-term vision for the project after the foundational [[Transcription Service]] is complete. The participants decide that instead of aiming to build a specific commercial product, their primary goal is to create a powerful personal assistant and [[Knowledge Management]] system—an "extra [[brain]]"—to help them solve their own complex problems. They agree that the first major project to be tackled with this new system will be the creation of an [[AI Tools|AI]]-generated film. This film project will serve as the initial use case, allowing them to build and refine the necessary tools and techniques for their AI-powered "studio" while documenting the entire creative process within their new knowledge base.
Key Topics Discussed
	•	Next Steps After the [[Transcription Service]]
	•	The immediate follow-on step after getting a diarized transcript is to create another service for summarization and automated tagging.
	•	The output format will be Markdown to ensure compatibility with [[Obsidian]] and other [[AI Tools]].
	•	Defining the Project's Ultimate Goal
	•	The group discusses whether to build a commercial product or a personal tool.
	•	They decide the most effective approach is to focus on "solving our own problems" first, with the belief that any marketable products will emerge organically from that process.
	•	The core vision is to build a personal assistant or an "extra [[brain]]" that functions as a comprehensive [[Knowledge Management]] system, capturing all their ideas and conversations to assist in future projects.
	•	New Project: Creating an [[AI Tools|AI]]-Generated Film
	•	The first major project they will undertake using their new system is to create a film entirely with [[AI Tools]].
	•	The process will involve feeding the film concept into their "[[brain]]" and using their system of [[AI Agents]] to help plan, create, and document every step of the production.
	•	This project serves as a practical application to drive the development of their AI-powered creative studio, with the potential to create a "how-to" documentary or guide as a final product.
	•	Development Philosophy
	•	The conversation reinforces their belief that the most valuable products come from identifying and solving real problems, rather than building a tool in search of a problem.
	•	They see their system of [[AI Agents]] and the [[brain]] as a "scalable team of assistants" that enhances their own creative and problem-solving capabilities.
Action Items & Decisions
	•	Decision: The next technical step after completing the [[Transcription Service]] is to build a service that summarizes and automatically tags the transcript output.
	•	Decision: The overarching project goal is to build a personal assistant and [[Knowledge Management]] system (the "[[brain]]") to solve their own problems, rather than focusing on a specific commercial product from the outset.
	•	Decision: The first major project to utilize the new system will be the creation of an [[AI Tools|AI]]-generated film.
	•	Action: Once the [[Transcription Service]] is functional, the team will formally define the concept for their first film project to begin the next phase.
Suggested New Links/Tags
	•	[[AI Studio]]
	•	[[Film Project]]
Linked Concepts
	•	[[AI Agents]]
	•	[[AI Studio]]
	•	[[brain]]
	•	[[Film Project]]
	•	[[Knowledge Management]]
	•	[[Obsidian]]
	•	[[Pool Table Queue System]]
	•	[[Transcription Service]]
#Tags
	•	#AI
	•	#Automation
	•	#BusinessDevelopment
	•	#SoftwareDevelopment

zoom33
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-29_1017_ZOOM0033_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:34] UNKNOWN: and I wish
[00:34-00:45] SPEAKER_00: I had a device to connect to the meter and leave it out there. Maybe I do. Maybe I
[00:45-00:45] UNKNOWN: do.
[00:45-00:54] SPEAKER_00: IPhone. Yeah, I don't have an IPhone. I do have an Android device.
[00:55-00:55] UNKNOWN: I
[00:55-00:55] SPEAKER_00: don't know who
[00:55-00:55] UNKNOWN: it
[00:55-00:56] SPEAKER_00: is.
[00:56-00:56] UNKNOWN: I
[00:56-00:56] SPEAKER_00: don't
[00:56-00:57] SPEAKER_02: think it has a
[00:57-00:57] UNKNOWN: meter
[00:57-00:58] SPEAKER_02: on it right now.
[01:01-01:04] SPEAKER_00: Yeah, if you don't mind, do you ever use it?
[01:04-01:07] SPEAKER_02: Not really. It's at 26%.
[01:07-01:10] SPEAKER_00: No, I figured we'd plug it in out there. Yeah. It's
[01:10-01:11] SPEAKER_02: not raining or
[01:11-01:12] UNKNOWN: anything.
[01:13-01:17] SPEAKER_02: The times I use it is for like yoga. Yeah. To play video
[01:17-01:17] UNKNOWN: games.
[01:42-01:46] SPEAKER_00: But it doesn't really matter that much, actually. We're
[01:46-01:46] UNKNOWN: going
[01:46-02:00] SPEAKER_00: to be awake. Going in the living room will make disconnect. That's true. It connects from the living room.
[02:00-02:01] SPEAKER_02: We've
[02:01-02:01] UNKNOWN: got
[02:01-02:08] SPEAKER_02: to go through the whole connection process. It's fine. It's not going to sneak up on
[02:08-02:09] SPEAKER_00: us. No.
[02:13-02:22] SPEAKER_02: All right, so yeah, do you want to... How should we approach this, like coming up with the management?
[02:24-02:46] SPEAKER_00: I think we should talk to Kerser about it. And like maybe start with Gemini. And come up with... Maybe, yeah, so maybe start with Gemini, come up with a plan, and then give it to Kerser and say, hey, this is what we want to do. Or what rules should we use for Kerser?
[02:47-02:47] UNKNOWN: Yeah,
[02:47-02:59] SPEAKER_02: I think it'll be... I don't know. There's maybe value to the disconnect, like talking to Gemini not cluttered by this, but also there's value to talking to Kerser. Yeah,
[02:59-03:02] SPEAKER_00: so maybe both, but maybe start with Gemini.
[03:03-03:06] SPEAKER_02: Escalate from Gemini to Kerser.
[03:09-03:11] SPEAKER_00: Yeah. All right. And
[03:11-03:11] UNKNOWN: then
[03:11-03:24] SPEAKER_00: just maybe start with our current set of rules. Are our rules matched or have you added ones? Let's
[03:24-03:57] SPEAKER_02: do it. Test, I think I might actually be one behind you on the EOD pushing. To get home. I have terminal output, the bossity. Terminal output. It's the, never used the quiet line. It was in the text you sent me. Really? I did some formatting a little bit. I'm going to make a
[03:57-03:58] SPEAKER_01: document.
[04:06-04:16] SPEAKER_00: I'm going to just take mine out. Is there another way to copy them? I don't think so.
[04:31-05:22] SPEAKER_02: So that's the text that you sent me that I used. And then I did some, like it had marked down stuff with it. And so I did a little bit of formatting myself. Do you want me to just send my current rules to you? I guess, I mean, it kind of doesn't matter. As long as it's close. If you give it that entire text, because we're not, like the formatting doesn't matter right now. We're making new rules. So that will tell it the story. And the thing that's not in that text is pushing a GitHub as part of, I think, as part of an end session. Basically, anytime you solve a problem, you should push.
[05:39-05:41] SPEAKER_00: Yeah, I think this is good enough.
[05:46-06:06] SPEAKER_02: Do you want to add the GitHub? Yep. Do you have that rule? I don't. I made that rule and sent it to you. So you do. But that was before I updated all of my rules with the ones that you had sent me.
[06:09-06:12] SPEAKER_04: Thank you. Did you pull? I did.
[06:28-06:29] SPEAKER_00: I don't think I have it either.
[06:30-06:31] SPEAKER_02: It's not an end of day.
[06:31-06:40] SPEAKER_00: Yeah, I have two end of days, first of all. Which may be a problem because I added that stuff and then didn't delete any of the other ones.
[06:41-06:41] UNKNOWN: Right.
[06:43-06:45] SPEAKER_04: I thought this ended.
[06:46-06:46] UNKNOWN: Yep.
[06:46-06:49] SPEAKER_04: Step five, get operations.
[06:59-07:09] UNKNOWN: I'm going to
[07:09-07:12] SPEAKER_02: do that forever. I'm going
[07:12-07:12] UNKNOWN: to
[07:12-07:16] SPEAKER_02: do that.
[07:19-07:21] SPEAKER_01: So, I'm just going
[07:21-07:22] UNKNOWN: to cut this.
[07:34-07:35] SPEAKER_02: Do
[07:35-07:35] UNKNOWN: you
[07:35-07:39] SPEAKER_02: think we should do it at the end of sessions instead of end of days?
[07:39-07:42] SPEAKER_00: I do.
[07:42-07:47] SPEAKER_02: I do too.
[08:07-08:08] SPEAKER_05: Okay.
[08:10-08:12] SPEAKER_03: Okay.
[09:04-09:05] UNKNOWN: Okay.
[09:08-09:18] SPEAKER_02: I actually got an email today. It's basically a new term. It's exactly what we're talking about.
[10:08-14:27] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[15:02-15:49] SPEAKER_02: Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[16:06-16:07] SPEAKER_00: Okay.
[16:18-16:23] SPEAKER_02: Okay. compression whatever it calls it over there. Yeah, that's what we're doing. Context
[16:23-16:23] SPEAKER_00: compression.
[16:24-16:24] UNKNOWN: Yes,
[16:24-16:30] SPEAKER_00: those terms make sense to me. That's interesting because we are writing, we probably could have written this paper.
[16:31-16:40] SPEAKER_02: That's what our model does. Right. Like right now, we don't have fancy words that we spend a bunch of time thinking about. Yeah. But that's what our shit is doing. And this is,
[16:40-16:40] UNKNOWN: I
[16:40-16:44] SPEAKER_02: think Cognition, I think they do the news feed -e one.
[16:44-16:48] SPEAKER_00: I feel like we are at the front end. We're
[16:48-16:48] UNKNOWN: in this bitch.
[16:48-16:53] SPEAKER_00: Like although we're not publishing like this, we are thinking at the front end of like,
[16:53-16:53] UNKNOWN: hey
[16:53-16:55] SPEAKER_00: what's the best way to use these
[16:55-16:55] UNKNOWN: terms.
[16:55-16:56] SPEAKER_00: We could write a paper at
[16:56-16:56] UNKNOWN: the
[16:56-16:58] SPEAKER_00: end of this. 100%. If we felt like it. I
[16:58-17:03] SPEAKER_02: don't know, that's my jam. No, I want to build things. Exactly.
[17:39-17:41] UNKNOWN: Okay.
[18:05-18:10] SPEAKER_02: So I think this is where we go through and try to like answer each form.
[18:11-18:14] SPEAKER_00: Well, I mean I think she is thinking that,
[18:14-18:14] UNKNOWN: hey
[18:14-18:16] SPEAKER_00: we want to start a select. I
[18:16-18:30] SPEAKER_02: agree, but like right here in session protocol, how would you prefer I present these suggestions? So a list of proposed changes, like that's asking about how to do those things. Is that different than what you're thinking? No, well.
[18:30-18:30] UNKNOWN: The
[18:30-18:44] SPEAKER_02: second question specifically makes sense to me, like the second bullet. And maybe also the third, like not the first bullet. Full code snippets don't need that. Those code snippets are in the files. Yeah, I think that.
[18:45-18:45] UNKNOWN: We're going to
[18:45-18:45] SPEAKER_02: reference it
[18:45-19:06] SPEAKER_00: here. Oh, I agree with you with those decisions, but I think that it thinks it's cursor. It needs to act as cursor. Like saying, hey, okay, I understand. I'm ready to do a session. Like, no, that's not what I'm trying to get you to do. I'm trying to get you to review the session rules and improve the context management. I want to see what it says when I say that.
[19:14-19:16] SPEAKER_03: Oh, thank you. That's so insightful.
[19:16-19:19] SPEAKER_01: Yeah, something dumb like that.
[19:25-19:30] SPEAKER_00: So maybe we still need to address those clarifying questions. Yeah, because we definitely didn't.
[19:31-19:37] SPEAKER_02: And now it's saying that we did. Oh. I mean, we can read what it actually said down there,
[19:38-19:38] UNKNOWN: I
[19:38-19:42] SPEAKER_02: think, to see where it's at now. Or we need to copy the first
[19:42-19:55] SPEAKER_00: prompt. Yeah, that's literally what I was getting ready to do. And add that second part to it. I think let's just do that. I want to read this.
[19:55-19:55] UNKNOWN: Oh,
[19:55-20:00] SPEAKER_00: okay. You can text it to me. No, no, no, I'm good. To where?
[20:04-20:08] SPEAKER_01: AI space is external memory.
[20:15-20:19] SPEAKER_02: Human readable, yes, kind of.
[20:19-20:20] SPEAKER_00: Yeah.
[20:20-20:33] SPEAKER_02: But yeah. I think it's kind of there where we're at. Yeah, I agree.
[20:42-20:46] UNKNOWN: Oh. I
[20:46-20:58] SPEAKER_02: don't think I get what it's saying there. But like,
[20:58-20:58] UNKNOWN: at
[20:58-21:04] SPEAKER_02: least my vision of the read me is concise and it is the project planning to do this.
[21:04-21:04] UNKNOWN: Like
[21:04-21:12] SPEAKER_02: it specifically doesn't have extensive notes. Right. That is the other file.
[21:12-21:12] UNKNOWN: Here,
[21:12-21:13] SPEAKER_02: you want to jump.
[21:13-21:24] SPEAKER_00: Like, I think this is the place where you've been thinking about and working on. You came up with this system. Yeah. So it may be good for you to jam here and respond to. I'm going to go get a glass of water. Okay.
[21:42-23:22] UNKNOWN: Okay. Okay. Okay. Okay.
[23:30-23:35] SPEAKER_02: What do you think on daily log that we talked about? That should be session log.
[23:36-24:19] SPEAKER_00: Yeah. Yeah. Say we've gone whatever we've been lately thinking to change it from more of a daily log to a session log because it has multiple entries in it for multiple, like over the sessions. So it may be worth saying there that what I'm trying to say is what we were talking about in the car that we have some sort of tiered, what we've been going for is some sort of tiered level of granularity.
[24:21-24:21] UNKNOWN: But
[24:21-24:24] SPEAKER_00: I don't know if that's best. That's kind of what we're trying to value.
[24:58-24:59] SPEAKER_04: I don't know.
[24:59-24:59] UNKNOWN: You
[24:59-25:05] SPEAKER_04: can switch to the screen over here. I just want to see what it's thinking they're called.
[25:10-25:15] SPEAKER_00: I don't know that the session logs ever. Daily report.
[25:17-25:21] SPEAKER_02: That's not exactly correct.
[25:21-25:21] UNKNOWN: I'm going
[25:21-25:51] SPEAKER_00: to
[25:51-25:51] UNKNOWN: say.
[26:10-26:47] SPEAKER_02: Systematic or the same. What's that word? Sure. That's where we're getting to.
[26:47-26:48] SPEAKER_01: Well, I didn't see.
[26:54-27:02] SPEAKER_02: Right. I agree. I mean, this is the simple dumbed down version of a vector database. Right. I agree. That
[27:02-27:12] SPEAKER_00: is actually the answer to what we're talking about doing is every log that we get, every document that we get, we just send it through a semantic search in a vector database.
[27:12-27:15] SPEAKER_03: Yeah. Let
[27:15-27:15] UNKNOWN: me
[27:15-27:15] SPEAKER_03: see.
[27:19-27:20] SPEAKER_00: Yeah.
[27:21-27:21] UNKNOWN: So
[27:21-27:46] SPEAKER_00: I do think that it's worth maybe my thoughts on two point one is. This these are great. I want to actually do want a combination of things that I can immediately implement with you like today. Yeah. And recommendations for how to implement a robust context management system, including, you know, doing software development and everything like that. Right.
[27:48-28:21] SPEAKER_02: Yeah. But for now, I'm going to keep it simple because we're still developing the actual project. That's what I mean by like going through an answer. And as you read that type of that, that's
[28:21-28:21] UNKNOWN: what
[28:21-28:25] SPEAKER_02: I do. I'm working solo. That makes sense.
[28:25-28:25] UNKNOWN: I
[28:25-28:26] SPEAKER_02: probably should do that.
[28:26-28:26] UNKNOWN: I
[28:26-28:38] SPEAKER_02: get. Yeah, I just caught myself several times like reading the beginning of a response and being like, oh, shit, this I want to do this other thing.
[28:38-28:38] UNKNOWN: And
[28:38-28:43] SPEAKER_02: then further down in that response, it had addressed the thing. And now I've like cluttered the context.
[28:43-28:44] SPEAKER_00: For sure. I
[28:44-28:44] UNKNOWN: do
[28:44-28:44] SPEAKER_00: that all the
[28:44-28:57] UNKNOWN: time.
[29:05-29:10] SPEAKER_02: See right there in the first one. Yeah, I may be wrong, but like, but
[29:10-29:12] SPEAKER_00: it defaults to. Oh, you were right.
[29:12-29:14] SPEAKER_02: Sorry. I'm not going to push back again. Right.
[29:14-29:14] UNKNOWN: I
[29:14-29:18] SPEAKER_02: made the suggestion you didn't like it. You're right. You're a genius. Everything's great. Right. I don't like that it does
[29:18-29:23] SPEAKER_00: that. Like, I actually want you to think about it. Think about it.
[29:23-29:30] SPEAKER_02: I did give it the readme and I do think that that is right. Right. That is the it is currently structured correct. But
[29:30-29:32] SPEAKER_00: I'm not sure that it truly processed on it.
[29:40-29:41] SPEAKER_02: I
[29:41-29:41] UNKNOWN: think
[29:41-29:56] SPEAKER_02: it
[29:56-29:58] SPEAKER_00: should be a session. I agree.
[29:58-30:00] UNKNOWN: Yeah.
[30:15-30:50] SPEAKER_02: So you might ask it or start to introduce the idea of when to write daily and the reports versus when to write raw or when do I guess the different granularity like a session log becomes a raw log. Right. And so the levels of session logs, I think that's like the debugging versus other levels. Maybe we don't get into that yet because I think it might naturally just do that stuff. Like the notes,
[30:50-30:50] UNKNOWN: it
[30:50-31:06] SPEAKER_02: feels like it needs to take in the session log. It will take it. If it needs to be more robust, like we might trigger it. Hey, be like that's up to the human that's working with it. Like, hey, we're in a loop here. Be way more granular. Let's break down into debug mode. Maybe. Right. Maybe some trigger of like,
[31:06-31:06] UNKNOWN: hey,
[31:06-31:07] SPEAKER_02: debug mode means this.
[31:07-31:14] SPEAKER_00: So the way that I read this, there are only there's the readme and then the session log and the session log.
[31:14-31:14] UNKNOWN: It
[31:14-31:16] SPEAKER_00: just gets saved daily.
[31:17-31:22] SPEAKER_02: Yeah. It basically the end of day archival stuff, daily summary is what all.
[31:22-31:22] UNKNOWN: It
[31:22-31:29] SPEAKER_00: doesn't have that daily summary in here is what I'm saying I don't see. You say put it at the top of that daily log?
[31:29-31:29] UNKNOWN: It
[31:29-31:40] SPEAKER_02: does say this file is created by the first session and deleted after the end of day archival. So I agree maybe it's by archival, it just is pushing everything.
[31:40-31:40] UNKNOWN: But
[31:40-31:45] SPEAKER_02: I think no, that's the ALMD reports is the permanent archive for synthesized data summaries.
[31:45-31:48] SPEAKER_00: The raw session log. So basically it just moves it and puts it into.
[31:48-31:56] SPEAKER_02: That's the next directory down. That's a directory inside the daily MD reports directory. Okay. Which has the synthesized data.
[31:56-32:07] SPEAKER_00: Synthesized data summaries. Got it. Makes sense. Okay. So there's the raw verbose sessions. Right. Or logs. And that's just straight up copy
[32:07-32:10] SPEAKER_02: pasting session log into this directory.
[32:10-32:16] SPEAKER_00: Yep. And then there's a synthesized daily summary once a day. Yep. And then there's the on -go, the readme.
[32:16-32:22] SPEAKER_03: Yep. There's a new session. Yeah,
[32:37-32:37] UNKNOWN: so
[32:37-32:50] SPEAKER_02: session log is now daily log. Or daily log is now session log. Yes. And there's not an individual file from a session. No. It's all of the, which
[32:50-33:01] SPEAKER_00: I think. Makes sense. It's good. Like keep the readme up high level. This is in general what we're working on. Right. And we've been slogging through this all day because we can't figure it out.
[33:01-33:01] UNKNOWN: And I think
[33:01-33:13] SPEAKER_02: now create new chats more often. Yes. Because we have the context. We have the context we want. We want to get rid of anything that's not in here. Right. In your context window. Right. I agree.
[33:31-33:38] SPEAKER_00: I think this should be just make edits. Oh, I'll present these changes as a list for you to confirm.
[33:38-33:38] UNKNOWN: I
[33:38-33:43] SPEAKER_00: think we just, maybe not. It's up to you. I think what
[33:43-33:49] SPEAKER_02: that ends up being is you have to click accept. Right. And if you don't click accept, I'm going to accept it.
[33:49-33:56] SPEAKER_00: Well, what I don't want it to do is literally put a list in there. I agree. And say, hey, do these look good? Otherwise I'll do it.
[33:57-34:14] SPEAKER_02: Yeah, I agree. Maybe removing that last sentence. But suggest changes is what it currently, like, is, I'm not opposed to any of that actually. Because you do implicitly have to approve them anyway. So we don't need to tell it to suggest.
[34:42-34:45] SPEAKER_01: Let's see.
[35:03-35:05] SPEAKER_02: Okay.
[35:06-35:06] UNKNOWN: So
[35:06-35:27] SPEAKER_02: currently we're not actively writing. Like the session log is a summary. What do you mean? Like that number three there. Append the structured summary of the session two, session log .md. So we don't have any,
[35:28-35:28] UNKNOWN: like,
[35:28-35:38] SPEAKER_02: as we're working. And basically it's not going to have, it's already synthesizing information in the session log. Oh,
[35:38-35:38] UNKNOWN: I
[35:38-35:39] SPEAKER_02: agree. It becomes the raw log.
[35:39-35:51] SPEAKER_00: That's what I was saying. It's like we did have another layer. That was like just going, like, everything we're logging, everything we're doing, keep a raw log of like literally like a transcript.
[35:51-36:16] SPEAKER_02: I think we need to tell it that like the session log structure is correct. But there needs to be another layer or either up or down. The session log needs to be more granular and actively updated as we're working. Or there needs to be like a layer down from there. I think the session log should probably be the most granular.
[36:17-36:22] SPEAKER_00: You think so? I think there should be another one. Like literally like.
[36:22-36:22] UNKNOWN: I
[36:22-36:34] SPEAKER_02: think, yeah, it's a message of what, or it's a determination of whether we're moving it down and session log super granular and putting one above it or keeping session log as it is and adding one below it.
[36:34-36:38] SPEAKER_00: I think one should go below it. Okay. Because of the name of it.
[36:39-36:45] SPEAKER_02: Right, but like what's the session? Is the session two hours here this morning or is it a chat?
[36:46-36:48] SPEAKER_00: Right. I see what you're saying. Okay.
[36:49-36:49] SPEAKER_02: I'm not.
[36:50-36:50] SPEAKER_00: Yeah.
[36:51-36:53] SPEAKER_02: I don't feel strongly in either direction.
[36:53-36:56] SPEAKER_00: I don't either. I'm going to just describe, try to describe what we're talking about.
[36:56-36:57] SPEAKER_02: Yeah.
[37:25-37:56] UNKNOWN: Okay. Okay.
[38:12-38:19] SPEAKER_02: And then becomes the raw logs. I don't know that the
[38:19-38:19] UNKNOWN: daily,
[38:19-38:47] SPEAKER_02: daily log or session log is inherently not raw. It is synthesized. And then at the end of the day, when those session logs are synthesized into a daily summary, that synthesis maybe needs to be archived somewhere. Okay.
[39:14-39:23] UNKNOWN: Does anybody here have another like. Hold
[39:23-39:26] SPEAKER_03: on just a second. I'm not done.
[39:30-39:37] SPEAKER_02: I do like the structure is put in place. Okay.
[39:44-39:45] UNKNOWN: I
[39:45-39:54] SPEAKER_02: think that commit message is not what you're looking for, given the conventional word. I think literally it's going to be like that's the entire message.
[39:55-39:55] SPEAKER_00: No.
[39:58-40:06] SPEAKER_02: You might say like disregard convention when it comes to the length or something like that of commit messages.
[40:35-40:36] UNKNOWN: I
[40:36-40:38] SPEAKER_02: would say it's significant,
[40:39-40:39] UNKNOWN: but
[40:39-40:43] SPEAKER_02: I don't want to type initiate every time. Okay. Okay.
[41:31-41:33] SPEAKER_03: I saw something.
[41:37-41:38] SPEAKER_00: Go back.
[41:38-41:58] SPEAKER_02: No, actually, I forget what it was, but I wanted to add something. Oh, we need to handle a potential second EOD protocol being run. Okay.
[42:47-42:49] UNKNOWN: Okay.
[43:15-43:22] SPEAKER_02: Okay. I don't know exactly what the syntax there should be,
[43:23-43:23] UNKNOWN: but
[43:23-43:31] SPEAKER_02: that's a big fucking deal when we're relying on it to drive the. It's a big deal for new produce new sessions.
[43:59-44:01] SPEAKER_03: Or even testing.
[44:22-44:24] SPEAKER_00: Yeah, it thinks it's running the.
[44:24-44:31] SPEAKER_02: I think that's an example, but maybe not. Like he's giving
[44:31-44:31] UNKNOWN: me
[44:31-44:34] SPEAKER_02: what it should do at the end.
[44:35-44:39] SPEAKER_00: You ready to enter this? Should have copied it because I would
[44:39-44:39] UNKNOWN: have
[44:39-44:42] SPEAKER_00: been mad. Oh, yeah,
[44:44-44:45] SPEAKER_02: but it's like,
[44:50-44:53] SPEAKER_00: oh, as it was happening. Yeah,
[44:53-45:08] SPEAKER_02: that's like some universal. It makes sense that they've addressed that. Okay. This is going to piss people off a lot. You don't retain those. It
[45:08-45:10] SPEAKER_00: has pissed me off a lot already.
[45:10-45:36] SPEAKER_02: And I'm sure they've heard about it. Do you like that?
[45:36-45:39] SPEAKER_00: I'm still like I'm I'm up here.
[45:39-45:43] SPEAKER_02: That's where I just finished the next one.
[45:53-46:08] SPEAKER_00: Yeah, this is what I think it should be. So you have to like trigger. Yes, it'd be on demand like, hey, but it know it in the rules. Right. And basically, just like you said, instead of in session, say, live debug. What are some sort of keyword that's going
[46:08-46:23] SPEAKER_02: to trigger in that early? Right. I guess if it can, if it's not writing these as it's doing it, it's going to have to look back and remember, synthesize.
[46:23-46:24] SPEAKER_00: Oh, I agree.
[46:24-46:24] UNKNOWN: I
[46:24-46:56] SPEAKER_00: think it's going to be like new session. This is a debug session. Do go deep for what until I tell you this is a specific type of debug session where you are going into like logging and everything like that. And when it will come out of it, when I say come out of it, otherwise it may be so this may be to like part of this is my comments for this section of maybe we have two types of sessions. One is a standard session where standard logging and one a debug session requires a more intense log.
[46:56-46:57] SPEAKER_02: Yeah,
[46:57-46:59] SPEAKER_00: but I'm not sure.
[46:59-46:59] UNKNOWN: I
[46:59-47:27] SPEAKER_02: think like, when would you ever not want granular logging in a situation where you're going to look back? I almost think there's like a default to the granular. And then at the end, there's there's a way to end the session that's either keep this full shit together or you can go ahead and synthesize a lot because everything works smoothly. Or some shit like
[47:27-47:27] SPEAKER_03: that.
[48:06-48:10] SPEAKER_02: It was in my head like you can never go backwards to bring the I
[48:10-48:11] SPEAKER_00: agree.
[48:11-48:26] SPEAKER_02: We could even develop like a clean out system of the logs. It's like, hey, when things are officially up and running and good, we can do a full on synthesis of the even raw logs or something to just minimize the size of the files.
[48:27-48:27] UNKNOWN: But
[48:27-48:31] SPEAKER_02: those files don't do anything sitting there. They're like fights. I
[48:31-48:31] UNKNOWN: agree.
[48:31-48:45] SPEAKER_02: I agree. If the AI isn't actively looking for them, which when things are going well, it won't. It's not clogging up the context. So when it's going to look for them, I don't want it to have summarized. I agree.
[49:01-49:01] UNKNOWN: Is
[49:01-49:04] SPEAKER_00: that capturing what I think that's what you're saying,
[49:04-49:07] SPEAKER_02: but I'm almost like leaning towards
[49:07-49:11] SPEAKER_00: just keep it like you basically you want to get rid of the session.
[49:11-49:16] SPEAKER_02: Kind of like a session log should become the granularity of tier three.
[49:19-49:19] UNKNOWN: And
[49:19-49:20] SPEAKER_02: then I
[49:20-49:31] SPEAKER_00: think that we should have all three then, especially if we're not if we're not truly concerned about memory management, not memory like storage, right? Then keep all of them. I
[49:31-49:31] UNKNOWN: think
[49:31-49:41] SPEAKER_00: have the live debug logs all the time. So it changed the name that there is a live session, an active detailed session log all the time,
[49:41-49:50] SPEAKER_02: almost over the top, like basically say the level of Divo transcript that you're talking about. That's what I mean. Right. For a standard session.
[49:50-49:57] SPEAKER_00: And then each session we write to the session log. Yep. And then each day we write a summary daily.
[49:57-49:57] UNKNOWN: Right.
[49:57-49:59] SPEAKER_00: And archive all both tiers. Right.
[50:00-50:23] SPEAKER_02: And at the end of this project, you might have a thousand files in these lists in these directories and subdirectories that are like a megabyte. Right. Because it's just text. Yeah, even the way this file is deleted after its contents are synthesized.
[50:24-50:26] SPEAKER_03: I don't want you to synthesize.
[50:34-50:36] SPEAKER_02: Maybe ask it like,
[50:36-50:36] UNKNOWN: is
[50:36-50:45] SPEAKER_02: this going to create issues like memory issues with say some number of text files?
[51:02-51:03] UNKNOWN: Maybe
[51:03-51:09] SPEAKER_02: session log is the lowest level and session summary is the next one.
[51:09-51:11] SPEAKER_00: Yeah.
[51:11-51:17] SPEAKER_02: Because logs as a word are like the thing, like super, super granular. Right.
[51:38-51:40] UNKNOWN: Okay.
[52:06-52:10] SPEAKER_00: Okay. So this is just going back through that.
[52:47-52:48] UNKNOWN: Yes.
[53:05-53:10] SPEAKER_01: Okay. Good.
[53:18-53:21] SPEAKER_02: Yeah. Okay.
[53:33-53:40] UNKNOWN: Yeah. Yeah.
[54:32-54:33] SPEAKER_05: Yeah.
[54:43-54:45] SPEAKER_00: I like it.
[54:48-54:49] UNKNOWN: Okay.
[55:00-55:01] SPEAKER_03: Let's see what it's reading.
[55:03-55:12] SPEAKER_00: Yeah, I can look at this one too. It is. Oh, I got it. Yeah, it is at 59. It
[55:12-55:12] UNKNOWN: says
[55:12-55:21] SPEAKER_00: nine hours and 36 minutes. Trigger is at 49. It's funny. Oh no, 62. So it updated. So
[55:21-55:26] SPEAKER_02: your 195 will trigger at 193. Yeah, exactly.
[55:26-55:38] SPEAKER_00: Yeah, there you go. So it's pretty close. I assume it can be. For whatever reason. Sometimes it connects and sometimes it's not. It certainly will in there.
[55:39-55:40] UNKNOWN: Yeah.
[55:41-55:43] SPEAKER_00: So we're good.
[55:45-55:48] SPEAKER_02: It's working. I'm going
[55:48-55:48] UNKNOWN: to
[55:48-56:01] SPEAKER_02: check it at three hours and we'll have a feel for whether. What it looks like. We've seen enough of them through the process that it's like, oh, this is working. We're like, oh, it's not going to be good,
[56:02-56:05] SPEAKER_00: but I don't know. Whatever. Like it's going to
[56:05-56:05] UNKNOWN: have
[56:05-56:05] SPEAKER_00: that bark.
[56:06-56:13] SPEAKER_02: I agree. I don't know. I know it's not going to be as smoky as six hours on that other motherfucker. No, because it
[56:13-56:18] SPEAKER_00: has actual wood that's burning like fire. We're burning like four bags
[56:18-56:21] SPEAKER_02: worth of those wood chips. Right. Or wood pellets. Yeah, for
[56:21-56:21] SPEAKER_00: sure.
[56:25-57:33] SPEAKER_02: But it is putting out a shit ton of smoke. If you open the back door, you'll smell smoke right now. Yes. So. All right. I really hope that works.
[57:34-57:35] SPEAKER_01: What's that?
[57:35-57:37] SPEAKER_02: The done -ness definition of done.
[57:38-57:38] SPEAKER_01: Yeah.
[57:39-57:49] SPEAKER_02: So even though it is kind of annoying and that's the main thing driving me, it is also cluttering up the context. Yeah. Every time I have to tell you some extra shit. No, that's not actually done. Exactly.
[57:49-57:52] SPEAKER_00: Like it says it's done, but it's not.
[57:52-58:04] SPEAKER_02: So if you do that at the end, I have to start a new one with a few extra lines of context and it's going to read that shit that's wrong. But that's the process. That's what we're working on.
[58:18-58:20] SPEAKER_03: So we can put that code block in there.
[58:21-58:22] SPEAKER_00: Yeah. I think you can. It's text.
[58:22-58:23] SPEAKER_03: Yeah.
[58:27-58:28] UNKNOWN: So.
[58:41-58:44] SPEAKER_04: We go back into like three
[58:44-58:44] SPEAKER_02: or
[58:44-58:44] SPEAKER_04: four.
[58:48-58:56] SPEAKER_02: Yeah. The only thing there. I get we're treating sections as separate things. What
[58:56-58:57] SPEAKER_00: do you mean?
[58:58-59:14] SPEAKER_02: Like previously it was appending to a long standing one. Whereas this one at the beginning of a new session, it's creating a new file. Yeah. So this is the super
[59:14-59:14] UNKNOWN: detailed one.
[59:14-59:14] SPEAKER_00: Yeah.
[59:14-59:14] UNKNOWN: It's
[59:14-59:20] SPEAKER_00: creating. Yeah. That's the super detailed one and it keeps each one. Like at the end,
[59:21-59:21] UNKNOWN: it
[59:21-59:24] SPEAKER_00: turns this current into.
[59:24-59:24] SPEAKER_02: Yeah.
[59:24-59:24] UNKNOWN: It's
[59:24-59:25] SPEAKER_02: done to hour, hour,
[59:25-59:25] UNKNOWN: minute,
[59:25-59:26] SPEAKER_02: minute.
[59:26-59:33] SPEAKER_00: Yeah. And it just keeps all of them. And then no. Yeah. It keeps. It's this one. Actually, it keeps this session transcript.
[59:34-59:40] SPEAKER_02: And then at the end of that session, it will write that summary and still have both.
[59:58-59:59] SPEAKER_00: Yeah.
[59:59-59:59] UNKNOWN: So
[59:59-60:05] SPEAKER_00: it's doing the session. So it's going to have for every session, there's going to be a session summary and a session structure.
[60:05-60:13] SPEAKER_02: And it has, it's like, it already mentioned in a previous, like it knows that that's an escalation path. Like if I'm trying to solve a problem, I'm
[60:13-60:13] UNKNOWN: going
[60:13-60:16] SPEAKER_02: to start at summaries and see if that will solve my problem.
[60:16-60:16] UNKNOWN: And
[60:16-60:16] SPEAKER_02: then go
[60:16-60:26] SPEAKER_00: to like the same session tag will have a summary and a transcript. Exactly. And just, there's going
[60:26-60:26] UNKNOWN: to
[60:26-60:32] SPEAKER_00: be more files, but it's fine. Yeah, they're all text files. So for every session, there's two files. Yeah. And every day there's one file.
[60:32-60:32] SPEAKER_02: Exactly.
[60:33-60:35] SPEAKER_00: And there's one, every project, there's one review.
[60:39-60:39] UNKNOWN: So
[60:39-60:49] SPEAKER_02: that's
[60:49-60:49] UNKNOWN: the
[60:49-60:56] SPEAKER_02: standard commit that's not super robust for the end of day. Right. Because it's just like, this is end of net for this day.
[61:04-61:05] SPEAKER_04: There you go.
[61:28-61:32] SPEAKER_00: Okay. I'm going to start entering these. Yeah.
[61:35-61:38] SPEAKER_02: Will you put them into a
[61:38-61:41] SPEAKER_04: doc? Yeah. I'm
[61:41-61:41] UNKNOWN: going to
[61:41-61:42] SPEAKER_04: do this.
[61:52-62:12] SPEAKER_00: I do this all the time. Yeah. I use Canvas all the time. It's fantastic for sure. It's like it knows how to write in Google Docs.
[62:13-62:13] UNKNOWN: And
[62:13-62:19] SPEAKER_00: you don't even have to export it. You can copy the contents. So if you already have something like this,
[62:21-62:21] UNKNOWN: you
[62:21-62:22] SPEAKER_00: can do that.
[62:24-62:25] SPEAKER_04: Okay.
[62:25-62:25] UNKNOWN: I'm
[62:25-62:26] SPEAKER_04: just going
[62:26-62:26] UNKNOWN: to share
[62:26-62:26] SPEAKER_04: that with you.
[62:52-62:53] UNKNOWN: Okay.
[63:03-63:07] SPEAKER_02: So you're copying like all the way up to rule one principle.
[63:09-63:09] UNKNOWN: I'm just going to copy this
[63:09-63:15] SPEAKER_00: and not number them. I'm going to put that block of text in as a rule.
[63:16-63:18] SPEAKER_04: That makes sense. Did you delete all your old ones?
[63:18-64:18] SPEAKER_00: I'm going to. I'm going to start from the bottom. So that they're in order. I'm going to remove that return after the word rule.
[64:21-64:25] SPEAKER_02: I'm going to just do that if you don't mind. Yeah. I'm going to do that. Exactly.
[64:26-64:26] SPEAKER_01: I'll
[64:26-64:26] SPEAKER_02: start at
[64:26-64:26] SPEAKER_00: the
[64:26-64:35] SPEAKER_02: top. So you want it just like. Okay.
[64:36-64:37] SPEAKER_04: Okay.
[64:55-64:56] UNKNOWN: So
[64:56-65:00] SPEAKER_02: you're doing it like that. Concluding the
[65:00-65:01] SPEAKER_04: title and
[65:01-65:01] UNKNOWN: the number.
[65:01-65:04] SPEAKER_04: Just the title. No. So I did it just like that.
[65:49-66:54] UNKNOWN: Okay. Okay. Okay.
[67:13-67:15] SPEAKER_01: All right.
[67:15-67:16] SPEAKER_00: That was good.
[67:16-67:25] SPEAKER_01: Yeah. I agree. So do I have a little thing over there?
[67:25-67:25] UNKNOWN: I
[67:25-67:27] SPEAKER_01: don't think so.
[67:28-67:29] UNKNOWN: That should
[67:29-67:34] SPEAKER_01: be good.
[67:40-67:41] SPEAKER_04: That's interesting.
[67:43-67:43] SPEAKER_01: What is that?
[67:44-67:48] SPEAKER_04: I think I did that at the end of the last
[67:48-67:48] UNKNOWN: session.
[67:51-67:51] SPEAKER_04: What is?
[67:54-68:00] SPEAKER_02: That's the summary of your last session that it automatically creates.
[68:02-68:03] SPEAKER_00: I'm confused.
[68:05-68:13] SPEAKER_02: Like whenever you start a new chat, it automatically makes a summary of the previous chat and adds it as context. I didn't know that it did that. It's
[68:13-68:13] SPEAKER_00: always done
[68:13-68:14] SPEAKER_02: that.
[68:16-68:22] SPEAKER_00: So am I in the should I be able to say. New session.
[68:24-68:24] UNKNOWN: I
[68:24-68:35] SPEAKER_02: think yes. But maybe we have it. Same new session protocol and then go, hey, we changed the rules. We need to do some cleanup. Or just let it go and see what happens.
[69:10-69:15] SPEAKER_01: Okay. What do we call that? Where we soar Nesta?
[69:17-69:17] UNKNOWN: Oh,
[69:17-69:19] SPEAKER_01: good question.
[69:25-69:43] SPEAKER_00: Daily MD reports. That's what we're keeping. I'm just going to call it reports. What's the word I'm looking for?
[69:44-69:44] UNKNOWN: Like
[69:44-69:44] SPEAKER_00: make them
[69:44-69:44] UNKNOWN: match.
[69:45-69:50] SPEAKER_00: Consolidate? No. I don't know. Yeah. Integrate,
[69:51-69:51] UNKNOWN: whatever.
[69:51-69:51] SPEAKER_00: Yeah.
[69:54-69:54] SPEAKER_02: Clean it
[69:54-70:33] SPEAKER_00: up. Yeah. It understood what I said. Yeah. Which is good. It said I'm going to start with following the new session, new start protocol. And then I'm going to look at the other stuff. That's good. Isn't?
[70:33-71:36] SPEAKER_03: I like it. There's no session on that. Okay.
[72:12-72:28] SPEAKER_02: So I now remember where I ended up yesterday was it wasn't able to see the GCS provider. It was like getting secrets and doing all this stuff. And to the point of like cursor was like, I'm perplexed. Right. This is like, it
[72:28-72:28] UNKNOWN: was
[72:28-72:32] SPEAKER_02: like, it could either be like literally an issue with the package or saying,
[72:32-72:32] UNKNOWN: I
[72:32-72:39] SPEAKER_02: was like, it's not. It's not the issue. The package works. Otherwise it would be on the news. Maybe not quite that, but
[72:39-72:40] SPEAKER_00: yeah, I'd
[72:40-72:40] UNKNOWN: have
[72:40-72:53] SPEAKER_00: heard about it. Not here. Right. Well, in fact, it wouldn't be like that because the people who are maintaining these packages are super nerds and they would have fixed it the instant that it was above and we wouldn't be talking about it.
[72:57-73:11] SPEAKER_02: Although Google did break the internet like two weeks ago. That's true. That is true. And that is an IAM thing. The theories are AI coded it. Maybe. Like because Sundar came out a week or two before, maybe a month before that and was like,
[73:11-73:11] UNKNOWN: yes,
[73:11-73:16] SPEAKER_02: something like 60 % of the code in Google is now written by AI. Yeah.
[73:17-73:17] SPEAKER_00: Yeah.
[73:17-73:52] SPEAKER_02: I believe that. And then your engineers are wildly unimpressive compared to the previous generation. I agree. I agree completely. And so they didn't catch it. They did. They're still savages over there. So in this current commit, Jupiter notebooks are 45 % of the code base. Holy crap.
[73:54-73:59] SPEAKER_00: That's crazy. It is. You've got to get rid of those freaking things.
[73:59-74:05] SPEAKER_02: Yeah, they're gone now. Yes. And now they're completely gone. And Python is 68%.
[74:05-74:06] SPEAKER_00: Okay. Much better.
[74:08-74:28] SPEAKER_02: In fact, the show, so those scripts are almost 30%. And we don't even use those. Yeah. We could clear a bunch of them out if we wanted. But it's fine. Yeah. It's not a bad base. Yeah. Really what that's like, the Python files are not very big is what that really means. Right. There's a lot going on, but there's not a lot of heavy lifting.
[74:29-74:33] SPEAKER_00: I'm not really following it. I assume that it is. Yeah, it's doing.
[74:33-74:34] SPEAKER_02: That makes sense to me at
[74:34-74:38] SPEAKER_00: least. You're deleting the do not delete stuff. I see it. It's in the red.
[74:39-74:45] SPEAKER_02: Well, it called that out like, hey, this is counter to the new structure, so I need to get rid of it. Okay.
[74:46-74:47] SPEAKER_04: That's funny.
[74:56-74:56] UNKNOWN: I
[74:56-75:14] SPEAKER_02: like it. It's flirting with over the top level of keeping detail, but like it's doing that right now whenever it's very obvious what it's doing. Right. I want that level of detail when it is complicated. That's how
[75:14-75:19] SPEAKER_00: we solve problems. Yeah. So I'm going to go, I'm going to end the session.
[75:19-75:20] UNKNOWN: Yeah. When
[75:20-75:30] SPEAKER_02: you look at it, so go to like daily and view reports. Oh, these are all open now. Yeah. Anytime it works on one, I actually open it.
[75:32-75:36] SPEAKER_00: Well, yeah. So these should just be one for the day since we've been doing
[75:36-75:41] SPEAKER_02: this. Right. Yep. So there's no nested directories in there, which is good.
[75:41-75:42] SPEAKER_00: Yeah. And
[75:42-75:47] SPEAKER_02: then. Transcripts and summaries should be down in session archive.
[75:47-76:06] SPEAKER_00: Yeah. So there's summaries and one for each session. Yeah. And we didn't have them for every session because it was only like when we were doing debugging. Right. Oh no, those are summaries. Yeah. Both of them. It's only summarized the transcripts. Right. And we had these debugging transcripts.
[76:07-76:12] SPEAKER_02: Yeah. When you look at design docs, I think that's where a lot of our actual stuff was.
[76:16-76:16] SPEAKER_03: Yeah.
[76:19-76:21] SPEAKER_01: So.
[76:48-76:55] SPEAKER_00: Like something like I think if it's an actual design, it needs to stay in there. I agree. But it is.
[76:55-76:55] UNKNOWN: It kind of
[76:55-76:57] SPEAKER_00: became a catchall. A debug session,
[76:57-76:57] UNKNOWN: it
[76:57-76:58] SPEAKER_00: needs to go to the.
[76:59-77:04] SPEAKER_02: And even designs, we can probably either decide to keep them or get rid of them. Right.
[77:05-77:05] UNKNOWN: Because
[77:05-77:09] SPEAKER_02: they're old designs that were kind of like brainstorms as much as anything. I agree.
[77:09-77:09] UNKNOWN: Yeah,
[77:09-77:18] SPEAKER_03: I
[77:18-77:20] UNKNOWN: agree. Sure.
[77:22-77:32] SPEAKER_00: Archive to debug sessions easy. Archive, session, specific analysis. I agree. Keep strategic architectural. I agree.
[77:38-77:39] UNKNOWN: Okay. Okay.
[77:39-77:43] SPEAKER_00: Yeah, so it's just going to keep like strategic documents.
[77:44-77:52] SPEAKER_02: Yeah. I'm pretty sure a couple of those are like pumps of message flow analysis was a debug session, but that's fine. Someone's up with it.
[77:59-78:00] SPEAKER_00: It doesn't really matter that
[78:00-78:27] SPEAKER_02: much. Yeah. Right. I agree. This is more of setting us up for the moving forward. Might even be worth having a design doc for this system. So on a new project, we don't have to even think about it. The rules are obviously in place in any project you work on inside of Cursor.
[78:30-78:31] UNKNOWN: But
[78:31-78:48] SPEAKER_02: I guess the rules do it. If that is, I'm going overboard. Maybe. I mean, this is the design doc for, it's just not in there. And almost all of those are copy and pasted. Like literally only the stuff that we decided is fluff and we don't need is not already in Cursor. I agree. It's going
[78:48-78:48] UNKNOWN: to
[78:48-78:48] SPEAKER_02: be.
[78:58-79:12] SPEAKER_00: And I do, this is changing subjects a little bit. I think that the next step is the database where you have it. Vector database. I agree.
[79:12-79:12] UNKNOWN: I
[79:12-79:17] SPEAKER_00: think that is, like we create a transcript.
[79:18-79:18] UNKNOWN: The
[79:18-79:24] SPEAKER_00: next thing is to create a summary of that. Or maybe we don't need a summary because that's just human readable.
[79:25-79:25] UNKNOWN: Maybe,
[79:25-79:26] SPEAKER_00: and that's the thing,
[79:26-79:26] UNKNOWN: we
[79:26-79:30] SPEAKER_00: probably need some advice of do we just index the summers, or
[79:30-79:30] UNKNOWN: not
[79:30-79:55] SPEAKER_00: the summer, index the transcripts or summarize and index the summaries. That's what my gut tells me, summarize and index those and have references inside of the summary. So keep all of the raw files with links or in some way to index that. If you get to a summary and you need additional information, you can then go to the corresponding raw file.
[79:55-80:04] SPEAKER_02: Yeah, it would be great to have an even knock -on thing where if you have to do that three times that this thing should be elevated to the summary level
[80:04-80:13] SPEAKER_00: of analysis or something. That if you're consistently going back to the same conversation, move that to the index.
[80:14-80:14] SPEAKER_02: Oh
[80:14-80:14] SPEAKER_00: yeah,
[80:14-80:24] SPEAKER_02: don't move it to summaries but index it. You're right. So you can keep a running tally almost like referenced plus
[80:24-80:33] SPEAKER_00: equals one. Right, and if you're in the area that's not indexed and you reference it multiple times, well, that's an indication that this needs to be indexed.
[80:36-80:40] SPEAKER_02: Yeah, referenced and found value or some shit.
[80:50-80:50] UNKNOWN: I
[80:50-81:22] SPEAKER_00: mean, I think that's it. A vector database does do the thing that we're, I don't know why that didn't pop in my head. But that's what a vector database is. It just looks through all of these things and then when you search for a given topic, it brings back everything that's relevant from wherever. And it's really efficient. Because it's storing numbers and it's not actually storing the data. Right. And it doesn't go look at the data until after the search.
[81:22-81:22] UNKNOWN: Because that's
[81:22-81:22] SPEAKER_00: what
[81:22-81:22] UNKNOWN: it
[81:22-81:23] SPEAKER_00: wants basically.
[81:48-81:49] UNKNOWN: Is
[81:49-81:50] SPEAKER_00: this an in session?
[81:51-81:51] UNKNOWN: Yeah.
[81:53-82:10] SPEAKER_01: Let's see how it does. I imagine it's going to do well. I agree. Okay.
[82:37-82:39] UNKNOWN: Okay.
[82:50-82:50] SPEAKER_03: So
[82:50-83:06] SPEAKER_02: it moved the summary into the folder correctly. It's inside some, oh, so that's the summary. And it also made a new transcript.
[83:08-83:08] SPEAKER_00: Yeah.
[83:09-83:09] UNKNOWN: So
[83:09-83:12] SPEAKER_00: the, no, the transcript is the live one. Like, so it's this one.
[83:12-83:13] SPEAKER_02: Right. Like made new and
[83:13-83:28] SPEAKER_00: moved it from being called that to its archived state. Like the one that was active is just temporary. And basically it just moves it there and names it. Yeah. And then it also created a summary from that. Yeah. That's this. And for the session.
[83:30-83:30] SPEAKER_02: And
[83:30-83:31] SPEAKER_00: updated the readme.
[83:33-83:34] SPEAKER_02: And updated
[83:34-83:34] UNKNOWN: the readme.
[83:34-83:43] SPEAKER_02: That's a commit message. You told it to do that. I like it. Like I'm not, I'm not going to go read them. No. If I ever need that, I'm going
[83:43-83:43] UNKNOWN: to
[83:43-83:46] SPEAKER_02: have the AI go look at the commit messages.
[84:05-84:05] UNKNOWN: Even
[84:05-84:09] SPEAKER_02: the way Jim and I added like,
[84:09-84:09] UNKNOWN: and
[84:09-84:20] SPEAKER_02: explain yourself at every step and do everything like, right. I love it. It's great. We'll see how long it takes to piss me off. Then we'll change it.
[84:34-84:34] SPEAKER_03: Yeah.
[84:43-84:46] UNKNOWN: I think
[84:46-84:58] SPEAKER_00: so.
[85:01-85:08] SPEAKER_02: So we still have a daily log in V. Maybe just needs to get rid of.
[85:12-85:15] SPEAKER_00: Yeah. I'm just going to delete it.
[85:16-85:16] SPEAKER_04: Yeah.
[85:16-85:16] UNKNOWN: I
[85:16-85:17] SPEAKER_04: think so.
[85:21-85:23] SPEAKER_03: Yeah.
[86:24-87:30] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[88:29-88:31] SPEAKER_02: Yeah.
[88:41-88:44] SPEAKER_00: Yeah. Yeah.
[89:12-89:18] SPEAKER_02: Yeah. Yeah.
[89:22-89:23] SPEAKER_00: Yeah.
[89:39-89:50] SPEAKER_02: Yeah. Yeah.
[90:06-90:18] SPEAKER_00: Yeah. Yeah. Yeah.
[90:38-90:39] UNKNOWN: Yeah.
[90:58-91:42] SPEAKER_00: Yeah. Yeah. Yeah. Yeah.
[92:10-92:12] SPEAKER_02: Yeah.
[92:18-93:19] SPEAKER_00: Yeah. Yeah. Yeah.
[93:22-93:52] UNKNOWN: Yeah. Yeah.
[93:55-94:49] SPEAKER_02: Yeah. Yeah. Yeah. Yeah. Yeah.
[94:49-94:53] SPEAKER_00: Yeah. Yeah. Yeah.
[95:22-95:23] SPEAKER_03: Yeah.
[95:33-96:04] SPEAKER_00: Yeah. Yeah.
[96:10-96:25] SPEAKER_02: Yeah. Yeah. Yeah.
[96:53-96:54] UNKNOWN: Yeah.
[97:02-97:44] SPEAKER_00: Yeah. Yeah.
[97:46-97:48] SPEAKER_04: Yeah.
[98:16-98:18] UNKNOWN: Yeah.
[98:33-98:35] SPEAKER_00: Yeah.
[98:38-98:39] SPEAKER_02: Yeah.
[99:11-100:05] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[100:44-100:45] SPEAKER_01: Yeah.
[100:58-101:05] SPEAKER_02: Yeah. Yeah.
[101:14-101:31] SPEAKER_00: Yeah. Yeah. Yeah. Yeah. Yeah.
[102:46-102:48] SPEAKER_03: Yeah.
[102:54-103:40] UNKNOWN: Yeah. Yeah. Yeah.
[103:53-104:00] SPEAKER_00: Yeah. Yeah. Yeah.
[104:02-104:03] SPEAKER_02: Yeah.
[104:21-104:24] SPEAKER_03: Yeah. Yeah. Yeah.
[104:59-105:01] SPEAKER_02: Yeah.
[105:09-105:15] SPEAKER_00: Yeah. Yeah. Yeah. Yeah. Yeah.
[105:44-105:46] SPEAKER_02: Yeah. Yeah.
[105:50-105:57] SPEAKER_00: Yeah. Yeah. Yeah.
[106:38-106:39] UNKNOWN: Yeah.
[106:51-106:54] SPEAKER_04: Yeah. Yeah.
[107:03-107:05] SPEAKER_00: Yeah.
[107:33-107:35] SPEAKER_02: Yeah.
[107:40-107:42] SPEAKER_00: Yeah. Yeah.
[108:10-108:12] SPEAKER_02: Yeah.
[108:17-109:21] SPEAKER_00: Yeah. Yeah. Yeah. Yeah. Yeah.
[109:21-109:22] SPEAKER_03: Yeah.
[109:33-109:34] SPEAKER_00: Yeah.
[109:36-109:41] SPEAKER_02: Yeah. Yeah.
[109:49-109:50] UNKNOWN: Yeah.
[110:19-110:24] SPEAKER_02: Yeah. Yeah. Yeah.
[110:28-110:36] SPEAKER_00: Yeah. Yeah. Yeah. Yeah. Yeah.
[111:03-111:04] SPEAKER_02: Yeah.
[111:33-111:34] UNKNOWN: Yeah.
[111:38-111:39] SPEAKER_02: Yeah.
[112:04-112:11] SPEAKER_00: Yeah. Yeah.
[112:18-112:20] SPEAKER_02: Yeah.
[112:30-112:57] SPEAKER_00: Yeah. Yeah.
[112:59-113:01] UNKNOWN: Yeah.
[113:13-113:15] SPEAKER_02: Yeah.
[113:32-113:53] UNKNOWN: Yeah. Yeah. Yeah.
[114:03-114:14] SPEAKER_00: Yeah. Yeah. Yeah.
[114:47-114:53] SPEAKER_02: Yeah. Yeah. Yeah. Yeah.
[114:56-114:57] UNKNOWN: Yeah.
[115:10-115:26] SPEAKER_00: Yeah. Yeah. Yeah. Yeah. Yeah.
[115:54-115:59] SPEAKER_04: Yeah. Yeah.
[115:59-116:25] SPEAKER_00: Yeah. Yeah. Yeah. Yeah. Yeah.
[116:25-116:26] SPEAKER_02: Yeah.
[116:29-116:31] UNKNOWN: Yeah.
[116:41-116:52] SPEAKER_00: Yeah. Yeah. Yeah. Yeah. Yeah.
[116:52-116:59] SPEAKER_02: Yeah. Yeah. Yeah.
[117:27-117:29] UNKNOWN: Yeah.
[117:45-117:45] SPEAKER_03: Yeah.
[117:58-118:04] UNKNOWN: Yeah. Yeah. Yeah.
[118:26-118:27] SPEAKER_03: Yeah.
[118:27-118:40] SPEAKER_02: Yeah. Yeah. Yeah. Yeah.
[119:40-119:41] UNKNOWN: Yeah.
[119:49-119:51] SPEAKER_00: Yeah.
[119:51-120:01] SPEAKER_02: Yeah. Yeah. Yeah.
[120:03-120:04] SPEAKER_00: Yeah.
[120:10-121:15] SPEAKER_02: Yeah. Yeah. Yeah. Yeah.
[121:22-121:24] SPEAKER_00: Yeah.
[121:29-121:31] SPEAKER_02: Yeah.
[122:00-123:49] SPEAKER_00: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[124:24-124:26] UNKNOWN: Yeah. Yeah.
[124:35-124:36] SPEAKER_00: Yeah.
[124:39-124:40] SPEAKER_02: Yeah.
[124:52-124:54] SPEAKER_00: Yeah.
[124:58-125:02] SPEAKER_02: Yeah. Yeah. Yeah.
[125:02-125:03] SPEAKER_00: Yeah.
[125:12-125:13] SPEAKER_02: Yeah.
[125:58-127:48] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[128:04-128:05] SPEAKER_00: Yeah.
[128:15-128:16] UNKNOWN: Yeah.
[128:24-128:26] SPEAKER_01: Yeah.
[128:26-128:29] SPEAKER_00: Yeah. Yeah.
[129:03-129:05] UNKNOWN: Yeah.
[129:10-129:11] SPEAKER_01: Yeah.
[129:13-129:15] UNKNOWN: Yeah.
[129:24-129:32] SPEAKER_00: Yeah. Yeah. Oh yeah.
[130:11-130:12] SPEAKER_03: Yeah. Yeah.
[130:41-130:42] UNKNOWN: Yeah.
[131:02-131:04] SPEAKER_02: Yeah.
[131:12-131:18] SPEAKER_00: Yeah. Yeah. Yeah. Yeah.
[131:18-131:31] SPEAKER_02: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[131:51-131:53] UNKNOWN: Yeah.
[132:09-132:11] SPEAKER_02: Yeah.
[132:21-132:22] UNKNOWN: Yeah.
[132:33-132:36] SPEAKER_00: Yeah. Yeah. I
[132:36-132:36] UNKNOWN: know.
[132:39-132:46] SPEAKER_00: I want to. And I want to. And
[132:46-133:05] SPEAKER_03: I
[133:05-133:31] UNKNOWN: want to. And I want to. Yeah. Yeah. Yeah.
[134:26-134:28] SPEAKER_03: Yeah. Yeah. Yeah.
[134:33-134:57] UNKNOWN: Yeah. Yeah. Yeah.
[135:17-135:27] SPEAKER_02: Yeah. Yeah. Yeah. Yeah. Yeah.
[135:27-135:30] SPEAKER_00: Yeah. Yeah.
[135:30-135:38] SPEAKER_02: I should be here at that. Like I said, the timers, it's got 37 minutes left. So yeah. Yeah. If you want to have like use the half hour.
[136:07-136:08] SPEAKER_00: Yeah.
[136:10-136:10] UNKNOWN: Create
[136:10-136:12] SPEAKER_00: the file.
[136:41-136:42] UNKNOWN: Okay.
[137:07-137:13] SPEAKER_00: Trying to make it. I think. When you do add it does that.
[137:42-137:44] UNKNOWN: Yeah. I
[137:44-138:02] SPEAKER_02: think we might need like a references doc or something. Or add back to the read me like here's all the service accounts. Here's all the buckets. Right. Like we don't need to be looking those up. Or make assumptions. I'm still not all the way convinced that it didn't do some breaking shit. Right.
[138:02-138:05] SPEAKER_00: It may be worth doing that
[138:05-138:05] UNKNOWN: at
[138:05-138:16] SPEAKER_00: the beginning. Like to say spend some time like add a section to the read me that includes all the references to the project and label them as do not delete. Right.
[138:17-138:17] UNKNOWN: Whatever. Yeah.
[138:17-138:19] SPEAKER_00: Something like that. I agree.
[138:20-138:23] SPEAKER_02: Should be good. Close this.
[138:23-138:30] SPEAKER_00: Sure. It's not going to say if you just close it. It's still doing that. Yeah.

==================================================
Generated on: 2025-07-29 10:34:53
Total words: 6482
Total speakers: 7
==================================================




Summary:
creation_date: 2025-07-29 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-29_1017_ZOOM0033_transcript.txt participants: SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04, SPEAKER_05
Executive Summary
This meeting marks a significant strategic pivot, where the team formally defines the primary goal of their project: to develop and refine a robust methodology for human-AI collaboration, with the [[Transcription Service]] itself being a valuable "side effect" of this core effort [44:55-45:37]. The central focus is on solving the problem of the [[AI Tools|AI's]] limited context window by creating a sophisticated, multi-tiered documentation system to serve as an "external memory" [20:04-20:19]. They design a detailed workflow that includes a high-level [[README]], a temporary and highly granular live [[Session Log]], and an end-of-day archival process that creates both a synthesized daily summary and a permanent raw log [31:14-32:22]. This entire process is formalized into a set of [[Cursor Rules]] for "begin session," "end session," and an "[[End-of-Day Protocol]]" to automate and standardize their development practice.

Key Topics Discussed
	•	Developing an AI Collaboration Framework
	•	The team's primary objective is now to create a system and set of best practices for working effectively with [[AI Agents]], specifically addressing the challenge of [[Context Compression]] [16:18-16:58].
	•	They conceptualize a multi-tiered documentation strategy to act as an [[External Memory]] for the [[AI Tools|AI assistant]] ([[Cursor]]):
	•	Tier 1: [[README]].md: The high-level, strategic [[Project Plan]] and current to-do list. This is the primary entry point for the AI in a new session [20:46-21:12].
	•	Tier 2: Live [[Session Log]] (session_log.md): A temporary, highly granular transcript of the current working session, capturing every step, command, and thought process. It is created at the beginning of a session and deleted after being archived [35:38-36:38].
	•	Tier 3: Daily Summaries & Raw Archives: Part of the [[End-of-Day Protocol]], this involves:
	•	Synthesizing the live [[Session Log]] into a concise daily summary [31:45-32:22].
	•	Archiving the full, raw [[Session Log]] into a permanent, timestamped file for deep historical context [49:11-50:23].
	•	Formalizing Workflow with [[Cursor Rules]]
	•	The team collaborates with [[Gemini]] to design and refine a set of formal protocols to be implemented as [[Cursor Rules]] [02:24-03:02].
	•	Begin Session Protocol: Automatically checks the [[README]] and the latest session logs to orient the AI.
	•	End Session Protocol: Updates the [[README]], synthesizes the live log into a summary, archives the raw log, and initiates a [[GitHub]] commit [07:19-07:47].
	•	[[End-of-Day Protocol]]: A final archival step to ensure all session data is correctly processed and stored [13:35-13:52].
	•	They also discuss having different logging levels (e.g., a "debug mode") to control the granularity of the [[Session Log]] based on the task's complexity [45:39-46:56].
	•	Cooking Project: [[Traeger]] Pork Butt Test
	•	The team plans a cooking [[Proof of Concept]] to test the automated features of a [[Traeger]] grill [55:00-56:21].
	•	Objective: Determine if the [[Traeger]] can manage a long, low-temperature cook, including automatically lowering the temperature to a "warm" setting after the meat reaches its target internal temperature, all without human intervention.
	•	This serves as a practical, real-world parallel to the automated systems they are building in software.

Action Items & Decisions
	•	Decision: The project's primary goal is to develop an optimized human-AI workflow; the [[Transcription Service]] is the initial application of this workflow [44:55-45:37].
	•	Decision: Adopt a three-tiered documentation strategy ([[README]], live [[Session Log]], and archived summaries/raw logs) to manage context for the [[AI Tools|AI]] [31:45-32:22].
	•	Decision: Formalize the workflow into a set of [[Cursor Rules]], including "Begin Session," "End Session," and "[[End-of-Day Protocol]]" [51:54-52:26].
	•	Action: Implement the newly designed [[Cursor Rules]] into their shared .cursor-rules file to standardize their development sessions [61:28-64:35].
	•	Action: Clean up and consolidate the existing project documentation (daily_md_reports, design_docs) to align with the new tiered structure [72:57-74:05].
	•	Action: Begin a [[Proof of Concept]] for the [[Traeger]] grill to test its automated cooking capabilities [55:00-56:02].

Suggested New Links/Tags
	•	[[Begin Session Protocol]]
	•	[[Context Compression]]
	•	[[End Session Protocol]]
	•	[[External Memory]]

Linked Concepts
	•	[[AI Agents]]
	•	[[AI Tools]]
	•	[[Begin Session Protocol]]
	•	[[Context Compression]]
	•	[[Cursor]]
	•	[[Cursor Rules]]
	•	[[End-of-Day Protocol]]
	•	[[External Memory]]
	•	[[Gemini]]
	•	[[GitHub]]
	•	[[Project Plan]]
	•	[[Proof of Concept]]
	•	[[README]]
	•	[[Session Log]]
	•	[[Traeger]]
	•	[[Transcription Service]]
	•	[[Workflow Automation]]

#Tags
	•	#AI
	•	#Automation
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom34
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-29_0956_ZOOM0034_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:45-00:45] UNKNOWN: I
[00:45-00:56] SPEAKER_01: think one thing, if we end up not really making any progress today, I think the pathway should look like it
[00:56-00:56] UNKNOWN: manually
[00:56-01:22] SPEAKER_01: deployed everything. See that the code is working and outputting and doing all the things like basically know that once the pipeline gets to starting the code that we'll get a transcription output and then add automation afterwards like backfitting. That makes sense to me. Especially with cursor you have that like hey here's it working let's add it like these do all that shit.
[04:51-04:58] SPEAKER_04: Sorry, but you finished. What do you got? You sent me a new rule yesterday right?
[04:58-05:02] SPEAKER_01: Yeah. I'll put that in. You put the whole thing in just
[05:02-05:03] SPEAKER_04: like
[05:03-05:14] SPEAKER_01: the way you sent it? It's there like that right now. I found out this morning right there is the settings tab. Instead of having to go up here it's just that little wheel right there. Okay.
[05:18-05:19] SPEAKER_00: Nice.
[07:02-07:16] SPEAKER_01: And I got it to the point of keeping logs like whenever I said hey I'll let you know when the cluster is ready like whenever I've done a test. Right. It kept a log of user said that they'll let me know and I was like yes. That's good.
[07:16-07:16] UNKNOWN: That's
[07:16-07:17] SPEAKER_01: exactly what I'm fucking looking
[07:17-07:17] UNKNOWN: for.
[07:17-07:17] SPEAKER_01: That's the
[07:17-07:19] SPEAKER_04: level of detail that I'm looking
[07:19-07:19] SPEAKER_05: for.
[07:48-07:55] SPEAKER_01: Yeah, like it was assuming that that code was done and we just needed to go test it. Right. Like for the batch processing.
[08:00-08:00] UNKNOWN: Yeah,
[08:09-08:21] SPEAKER_04: so I'm confused a little bit about the batch processing. So whether or not they're supposed to be running a Stats API servers. In my mind they kind of are.
[08:23-08:39] SPEAKER_01: I mean it seems to think that's not how Kubernetes works. I don't know. And because like the way it explained it is it never sends back a success message to tell it that the job is done. It's always just in one out of one run and it will never come out of it is what it claimed this morning.
[08:39-08:49] SPEAKER_04: Okay. Yeah, I don't know how to make a process a service live on Kubernetes receive a job.
[08:50-08:50] UNKNOWN: I
[08:50-08:59] SPEAKER_04: don't know. I don't know anything about I know what the word means. Receive a job process it and then continue running what type of server or process it needs to be.
[08:59-08:59] SPEAKER_00: I don't know.
[09:00-09:04] SPEAKER_01: It claims that it's called a job is what it's. Okay.
[09:07-09:13] SPEAKER_02: Okay. That's not true.
[09:43-09:46] SPEAKER_01: That's not the one I fucking asked you about.
[10:13-10:15] UNKNOWN: Okay.
[10:47-10:47] SPEAKER_04: Yes.
[10:47-10:47] UNKNOWN: So
[10:47-11:27] SPEAKER_04: that is what like the what it was saying up there is what I thought it was supposed to do. The fast API web server is doing the best process. So it receives a post message that said it gives it all the details of what it needs to do. It may not return a response but that's that's what I thought it was supposed to do. It was a web server that just receives an HTTP request that says hey here's the here's the location of the gives it all the stuff with Pub Submessage. Here's all the different GCS buckets. Here's what it knows that it's supposed to do a diarization and put it over there. Okay. Keep your.
[11:42-11:57] SPEAKER_01: Like can I trust any fucking thing you said today if that shit is so obviously wrong. Like do you see what I'm saying. It says that no the latest images built on the 19th is the 27th.
[11:58-11:58] SPEAKER_04: That's not
[11:58-12:04] SPEAKER_01: true. Like how is that fucking even possible. So is the rest of this obviously that wrong.
[12:06-12:32] SPEAKER_04: Maybe. But this the last the latest set of stuff is what I thought it was. Oh sorry. I'm not 100 percent sure but I don't understand how you can process a job with that. That's what I thought it was supposed to be a server sitting there. You just send it a post request or whatever type of request and it processes it and keeps it just like a web server. It is a web server. It's just sitting up waiting for you to give it something to do.
[12:32-12:38] SPEAKER_01: That makes sense. Motherfucker dude I'm over these fucking sentences.
[12:55-13:22] SPEAKER_04: You're right. You're absolutely correct. A lot has been. That's interesting. Oh it just likes like recently I guess it just kind of craps the bed. Oh sorry. I was looking at the complete wrong thing.
[14:16-14:22] SPEAKER_01: And then it just says like oh there are no ones. It's right. Like
[14:22-14:35] SPEAKER_04: what was it. I don't understand how that happened. What were you looking at. Nothing apparently. The readme I mean I don't know. If you look at the stuff from the 19th I can't see how you come to that conclusion. Like yes none of this stuff is implemented.
[14:35-14:45] SPEAKER_01: But like there's nothing about a build in here. None of these. No Docker builds. No pushes. I would be pretty annoyed if there aren't.
[14:45-14:58] SPEAKER_04: Yeah it's like this system is too general. So it needs something like what we're building. Meaning like when you are trying to look up stuff go talk to the brain.
[14:59-14:59] UNKNOWN: Like
[14:59-15:27] SPEAKER_04: and not just these. It's not random files. But not these files that are just kind of in here. Look at it when you want to. Like it needs like this indexed brain that says that's always up to date and has a history or whatever. That hey I want to know this thing. Go ask the brain and the brain is always tuned to give the right answers. Right. Yeah I don't know. I assume they have something like that. Maybe. Maybe.
[15:28-15:29] SPEAKER_00: Maybe far steve.
[15:34-15:40] SPEAKER_01: Yeah. On your seventh fucking. What was the issue?
[15:41-15:41] UNKNOWN: It's
[15:41-15:44] SPEAKER_01: like oh let me look for the things that are tagged latest. We just ran all of these fucking.
[16:02-16:02] SPEAKER_00: I'm still.
[16:05-16:05] SPEAKER_04: Yeah.
[16:17-16:18] UNKNOWN: I'm still I'm still I.
[16:29-16:32] SPEAKER_01: To being annoyed by this next. You
[16:32-16:32] UNKNOWN: know
[16:32-17:54] SPEAKER_01: what? So I went up like a dollar yesterday, but now the forecasted cost is lower than the current actual.
[17:55-17:57] SPEAKER_04: That makes no sense.
[17:59-17:59] SPEAKER_01: I mean
[17:59-17:59] UNKNOWN: I
[17:59-18:04] SPEAKER_01: would expect it to get closer and closer as we approach the end of the month. I mean that's
[18:04-18:13] SPEAKER_04: like this week or early next week, but whatever. I mean the projected cost next month are going to be like
[18:13-18:13] UNKNOWN: $5 ,000.
[18:13-18:18] SPEAKER_01: Yeah, they're going to start out at like a million. Like oh my gosh, this is going to be crazy.
[18:18-18:18] UNKNOWN: And
[18:18-18:21] SPEAKER_01: then oh, actually no, you guys aren't using it that much.
[18:38-18:44] SPEAKER_04: But is that warning right there? Warning filter keys not present in any resource?
[18:45-18:45] UNKNOWN: Yeah,
[18:45-19:26] SPEAKER_01: basically the same thing you're looking for isn't there. It's specifically trying to make sure it's not. So that's actually big. It's looking for the name of the cluster. And there's nothing with that property. This might be the one.
[19:27-19:28] UNKNOWN: I
[19:28-19:43] SPEAKER_01: think we'll see some progress and like some stuff that you haven't seen yet, which is I imagine we've got a VM spinning up.
[19:48-19:49] SPEAKER_04: And we do.
[19:52-20:50] SPEAKER_02: It shouldn't be too long. Let's see. I
[20:50-20:50] UNKNOWN: have a
[20:50-20:55] SPEAKER_02: certain idea that this child dispatcher
[20:55-20:55] UNKNOWN: is going to be a child.
[21:00-22:41] SPEAKER_04: You're not asking me are you? No. Like I don't know. Zero percent certain. See that? Yeah. The real violations. I
[22:41-22:47] SPEAKER_01: like it. Scald yourself motherfucker. Commitment.
[22:47-22:47] UNKNOWN: I
[22:47-22:56] SPEAKER_01: will only commit. I'm actually annoyed, but that is like the progress we need. And so like,
[22:56-22:56] UNKNOWN: yeah,
[22:56-23:05] SPEAKER_01: add it to the log at the beginning. Yes. Do not mark anything done until it's done. And I'm glad it figured that out. Still bothered.
[24:49-24:50] UNKNOWN: I
[24:50-25:04] SPEAKER_01: think I may even go so far as to say in the next chat, you are allowed to use the previous transcript to mark things as complete at the beginning of our test. Unless you change something. Right.
[25:05-25:05] UNKNOWN: Anything
[25:05-25:13] SPEAKER_01: about it changed exactly. Like every time. That's what it says in this and I'm certain it's going to ignore it whenever the time comes.
[25:13-25:13] UNKNOWN: But
[25:13-25:24] SPEAKER_01: like, this file is a single source of truth. Update it immediately when resources are created, modified, or deleted. It's not doing that. No. I don't know that it should have yet. Like, spin it up.
[25:25-25:25] UNKNOWN: It
[25:25-25:29] SPEAKER_01: shouldn't have a log of what the name of it. Any like VM or
[25:29-25:29] UNKNOWN: anything.
[25:29-26:30] SPEAKER_01: No, because that changes every time. But it's got transcription cluster because that's what it is literally every time. Should be good if it's using it. It's logging.
[26:30-26:30] SPEAKER_00: Yeah.
[26:31-26:56] SPEAKER_01: Yeah. You just have to do it. You have to tell it and know that and still pay attention to the rule where you don't mark shit completely. I think literally adding that one line to the beginning of the logics is probably the move. Like, here's what we're working on today. If you mark it complete before we even fucking seen it, I'm going to lose my shit. Don't do that.
[26:58-27:04] SPEAKER_04: And unfortunately, you have to do that in every session. Yeah. Because it doesn't load those rules.
[27:04-27:11] SPEAKER_01: Right. Which it shouldn't because the more rules you put in there, that's literally context every single time. Yeah.
[27:11-27:11] UNKNOWN: I
[27:11-27:23] SPEAKER_01: agree. And it doesn't, like the stuff that we're really happy with, the session ending and starting and daily ending, it doesn't look at that every time. No, we call it. Exactly. So it's a function.
[27:23-27:37] SPEAKER_04: But it is like a function. Yeah. It is almost like, well, they do have names. They do have titles, right? The rules. Oh,
[27:38-27:45] SPEAKER_01: they do, but not like it doesn't say, hey, what's the title of this rule? And then what's the like, we have title equals.
[27:46-27:52] SPEAKER_04: No, I agree. So you should be able to refer to it like remember. Yeah. Remember the whatever rule.
[27:52-27:53] SPEAKER_01: I mean,
[27:53-27:53] UNKNOWN: I
[27:53-27:57] SPEAKER_01: haven't even had to like whenever I say rules, it's been able to see it.
[27:58-27:59] UNKNOWN: But.
[28:00-28:04] SPEAKER_01: Continue. Yeah. So definition of them is a core principle.
[28:05-28:12] SPEAKER_04: Right. Remember the core principle definition of something like that. Yeah. Like have it standing by.
[28:12-28:27] SPEAKER_01: Right. In the begin session, whenever it creates this file at the beginning of it, it should put that line in there or something like that.
[29:01-29:02] UNKNOWN: Okay.
[29:38-29:48] SPEAKER_01: Or it doesn't necessarily log stuff is when it gets into a run of running commands, which is probably the most valuable locking. But it's fine.
[29:48-29:48] UNKNOWN: We're
[29:48-29:49] SPEAKER_01: getting there.
[29:58-29:59] SPEAKER_04: Nice
[29:59-30:20] SPEAKER_01: one of those transcription system. That's fine. This is the big one. So that's what we did yesterday. If I understand what I'm
[30:20-30:20] UNKNOWN: reading.
[30:20-30:53] SPEAKER_01: Right. Now it did not have to be done. It is this over here. It's a provider class. Explicitly pointed out to where the token is. Okay. Which makes sense to me. I don't know if that's still the CSI thing. CSI is the storage thing. But I think Secret uses a CSI
[30:53-30:59] SPEAKER_04: Secret or something like that. Yes, the provider class as well. But I also think that you need a YAML. You
[30:59-31:51] SPEAKER_01: need a YAML for everything. If you're using it, it needs to be in one of these fucking things. And we're just kind of like baby stepping our way there as we desire. We've got running jobs, supposedly. Perhaps. Where do you
[31:51-31:51] UNKNOWN: see
[31:51-31:51] SPEAKER_01: it?
[31:51-31:51] UNKNOWN: There's
[31:51-31:54] SPEAKER_01: an argument that that's
[31:54-32:05] SPEAKER_04: not bullshit. I mean, that's the evidence. It says, hey, this is a full automation success based on the following evidence in this five things.
[32:05-32:12] SPEAKER_01: Yeah. I mean, if you're calling what is potentially not succeeding a coding system,
[32:12-32:12] UNKNOWN: then you're
[32:12-32:18] SPEAKER_01: right. It specifically said automation success. Right. So architectural automation?
[32:19-32:19] SPEAKER_04: Maybe.
[32:20-32:32] SPEAKER_01: There's a fucking argument. And it doesn't claim that more than that is happening. VM controller automation worked completely without manual intervention.
[32:33-32:50] SPEAKER_04: And I think that is true. The question is whether the pods are created correctly and running the right software and ready to receive the next thing. All of that stuff. Which this is a good place to be in. This is definitely further than I have seen.
[32:50-33:06] SPEAKER_01: Yeah. And it got to at least where I saw yesterday without needing manual intervention. Right. Which maybe strengthens the argument for doing full on manual and then back engineering the automation.
[33:06-33:06] UNKNOWN: But
[33:06-34:07] SPEAKER_01: we'll see. I think we might be getting there. This proves VM controller automation. You talk to Kirster like you spend a lot of time writing business emails and chats. I do.
[34:21-34:22] SPEAKER_04: Yeah.
[34:22-34:22] UNKNOWN: What
[34:22-35:04] SPEAKER_04: I'm not sure of is these processes that are running are diarization jobs and a whisper job. Is this supposed to be the long running service or is it just going to only show the workloads that it shows are going to be single jobs? If we had 100 or whatever uploads would it just show a bunch of jobs or is there going to be one service processing of the jobs? I don't know. But that's the thing. That's where I think where I don't understand how it's designed or how it should be designed.
[35:04-35:04] UNKNOWN: Right.
[35:06-35:08] SPEAKER_04: I would like to understand.
[35:48-36:02] UNKNOWN: Okay. Which one is?
[36:24-36:48] SPEAKER_01: Yeah. I still haven't seen like the when we saw diarization work and you could see it loading the model and doing all that. Yeah. But I don't know that we will on those logs because that's happening inside of a pod in the cluster. Correct. So we might have to go to different logs for that if we wanted to explicitly see that. That's just like a recognizable pattern in logs even when it's moving fast.
[36:58-37:18] SPEAKER_04: So for now we. I'm looking inside the diarization job logs. And this is what it looks like. Interesting. This is from 17. Okay. So it's 10 minutes ago. It started up this server. It's red though.
[37:21-37:36] SPEAKER_01: Yeah. There's like levels of red too. Like error critical warning. I assume there are errors because running on cloud run and running in Kubernetes are two different things.
[37:36-37:37] UNKNOWN: Right.
[37:40-37:56] SPEAKER_01: And that is also my hesitance to be okay with the full automation success even on the architectural level. Because I guess the last architectural step is passing through what that container needs to that container.
[37:57-37:57] UNKNOWN: To
[37:57-37:58] SPEAKER_01: start. Right. To run.
[38:24-44:37] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[44:49-44:51] SPEAKER_04: I've been watching what you're doing.
[44:51-44:51] UNKNOWN: I
[44:51-45:00] SPEAKER_04: was learning about jobs. I think jobs are the way to go. I just don't think these are running right.
[45:00-45:00] UNKNOWN: They're
[45:00-45:30] SPEAKER_04: just not. What a job is supposed to do is be a discrete unit of work. So you upload a job. It runs to completion. So ideally it has all the things it needs. It processes the work. And in our case outputs to a bucket and then the process does. And you upload jobs. Like theoretically if you uploaded a thousand files it could theoretically load, upload a thousand diarization jobs. And they run independently and start jumping to the bucket.
[45:30-45:30] UNKNOWN: And
[45:30-45:41] SPEAKER_04: when they're done, they're done. And the next job will kick off when the diarization file is loaded into that bucket. It triggers the controller to say,
[45:41-45:41] UNKNOWN: hey
[45:41-45:44] SPEAKER_04: create a whisper job, whatever, alignment job, whatever.
[45:44-45:45] SPEAKER_01: And
[45:45-45:52] SPEAKER_04: then the next job. So the controller is loading jobs into the cluster using just cluster as computer. I'm
[45:52-45:52] UNKNOWN: going
[45:52-45:53] SPEAKER_04: to take a look.
[45:59-45:59] UNKNOWN: But
[45:59-47:44] SPEAKER_04: I don't think this job is running. So it should not be a server. It should not be a web server. I don't think. So I'm just kind of jamming with Jim and I a little bit. If you put a fast server, a fast API server in a job, the controller would launch the pod. The fast API server would start and the controller would be waiting for the pod to terminate successfully. Since the fast API server is designed to run forever, the job would never report as completed.
[47:45-47:45] UNKNOWN: Right.
[47:45-47:51] SPEAKER_01: Which is what it said we were seeing at the beginning. And then at some point it was like, oh no, no, no, that's good.
[47:51-48:22] SPEAKER_04: Right. So I think this, I think it's confused about, like it needs some help with the design. And I think we need to give it some of these types of words. This job controller would be running perpetually. And it's, yeah, so it's not designed to be a long running service or process. It should just be, we need to rewrite the code for that's processing these jobs, not processing, developing these job requests to not be an API server. Do you want
[48:22-48:23] SPEAKER_01: to take over?
[48:24-48:24] UNKNOWN: Like
[48:24-48:41] SPEAKER_01: I'll push. Since you just read up on that, like let me do an in session. I think that is actually an interesting thing to add to the workflow is like if we're in research mode on something, one of us go and look into some shit and be like, all right, push and get like do an in session. Yeah. Push it over here.
[48:41-48:41] UNKNOWN: Let
[48:41-49:38] SPEAKER_01: me have it. I mean, I can go ahead and push for you, but let's do this. This is super slick. I think we've got a pretty good, well developed beginning and
[49:38-49:43] SPEAKER_04: end. Good. Question is, will
[49:43-50:35] SPEAKER_01: it follow over to me? Right. And you got the same rules. And I think accepting the fact, like literally I start off saying, let's keep good logs. Let's do this. And then now I haven't told a rule to do this, but I did say, Hey, make sure you acknowledge, put a line at the top of your new log file to make sure you follow this rule. The one about not assuming or overstating. Yeah, I think we've bounced back and forth between like the jobs and the HTTP servers. I agree. A
[50:35-50:48] SPEAKER_04: few times. And it's just confused because there's a bunch of junk in the, so I really just want to work on the services themselves.
[50:49-50:49] UNKNOWN: I
[50:49-51:01] SPEAKER_04: know it's not the Docker file. It is what's in Kubernetes. This, this, I just want to focus on the diversation job. What is it doing?
[51:06-51:09] SPEAKER_00: Should be up there. Okay.
[51:19-51:24] SPEAKER_01: Did you add that rule about not overstating shit?
[51:24-51:29] SPEAKER_04: I did. The one you sent me? Yeah. I did. I'm going to go to.
[52:16-54:45] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay.
[55:21-55:25] SPEAKER_04: Okay. I will update her in a second.
[55:47-55:49] UNKNOWN: Okay.
[56:05-56:07] SPEAKER_01: So the thing it did was,
[56:07-56:07] UNKNOWN: hey
[56:07-56:12] SPEAKER_01: here's what it should be and then went, oh well the code's already built like this so let's make this
[56:12-56:12] UNKNOWN: work. So I
[56:12-56:12] SPEAKER_01: guess
[56:12-56:13] SPEAKER_04: we're going, yeah we're going
[56:13-56:13] UNKNOWN: to
[56:13-56:17] SPEAKER_04: figure out how to make it work and that's like we need to do a refactor
[56:17-56:50] SPEAKER_01: and changer. So not his fault, I should have known that that wasn't the right way. So all I did was basically when it makes the new session log transfer file that it's going
[56:50-56:50] UNKNOWN: to
[56:50-57:04] SPEAKER_01: activate to it's going to put a reference to the GCP resources file and align referencing that it's not going to overstate the success. Okay good. I think that's super important. I agree, no I don't
[57:04-57:05] SPEAKER_04: disagree with you.
[57:05-57:05] UNKNOWN: I
[57:05-57:07] SPEAKER_04: don't disagree at all.
[57:22-57:22] SPEAKER_01: Do you
[57:22-57:22] UNKNOWN: want
[57:22-57:25] SPEAKER_01: me to kill the clustering beam? Just like pre -heat it. Yeah, I
[57:25-57:25] UNKNOWN: just want to make sure that it's not going to overstate the success.
[57:25-57:27] SPEAKER_01: I completely forgot
[57:27-57:29] SPEAKER_04: about it.
[58:08-58:08] UNKNOWN: I
[58:08-58:13] SPEAKER_04: don't want to, we don't need this future use of run as servers. Maybe.
[58:14-58:14] UNKNOWN: I
[58:14-58:15] SPEAKER_01: don't think.
[58:15-58:17] SPEAKER_04: I think we'll always do it like this.
[58:17-58:24] SPEAKER_01: Yeah. It will be fundamentally different. I don't
[58:24-58:24] UNKNOWN: think that's the
[58:24-58:24] SPEAKER_01: reason.
[58:26-58:32] SPEAKER_04: I think that what I would do is move the job controller into the cluster. And
[58:32-58:34] SPEAKER_01: just queue up a billion jobs. It
[58:34-58:38] SPEAKER_04: would still queue jobs to itself. To the cluster.
[58:38-58:38] UNKNOWN: To the
[58:38-58:41] SPEAKER_04: cluster that it's inside of. Right, yeah. It will still do the same thing.
[58:41-58:41] UNKNOWN: Yeah,
[58:42-58:53] SPEAKER_01: so just wipe that out. That's another artifact of our initial structure. Is my guess. Like CloudRome does get hit in that way.
[58:54-58:55] SPEAKER_03: Right, I agree.
[59:26-59:28] UNKNOWN: I mean I
[59:28-59:43] SPEAKER_01: guess that would work in theory, but it's just cluttering shit up.
[59:43-59:44] SPEAKER_03: Right, I agree.
[61:25-61:27] UNKNOWN: I mean
[61:27-61:47] SPEAKER_04: I think the only, I'm kind of backtracking a little bit. So every pod is going to independently load this hugging face job. Or load the process, or load the model.
[61:47-61:48] SPEAKER_01: Yeah.
[61:49-61:56] SPEAKER_04: Instead of having a service that's always loaded and can process.
[61:56-62:02] SPEAKER_01: I mean there's a secret provider deployed to the cluster, right?
[62:03-62:14] SPEAKER_04: Yeah I know, but I'm saying the model itself is going to load this PyNo diarization pipeline each time. And so will Whisper. It will literally download the model.
[62:14-62:16] SPEAKER_01: No. I
[62:16-62:16] UNKNOWN: think
[62:16-62:26] SPEAKER_01: it's, like the cluster will have a, we need to have it clarify that. But I assume if nothing else it's like available quote in memory or something. Right, exactly.
[62:31-62:31] SPEAKER_00: Maybe not.
[62:43-62:45] SPEAKER_01: I have to like actually download
[62:45-63:00] SPEAKER_04: the.
[63:05-63:07] UNKNOWN: Or.
[63:23-63:28] SPEAKER_01: It's not like necessarily disastrous.
[63:28-63:29] UNKNOWN: Yeah.
[63:30-63:31] SPEAKER_01: Yeah.
[63:53-64:04] SPEAKER_04: Yeah so starting up this Whisper job, every time it's going to. Yeah. And each one is going to take two to five minutes to open this pod.
[64:04-64:05] UNKNOWN: Right.
[64:44-64:48] SPEAKER_04: Yeah so do it once and then cache.
[64:49-64:50] UNKNOWN: Yeah.
[64:50-65:23] SPEAKER_01: So explicitly as part of like the whatever finishing, or as part of the first download, you also write to the cache or whatever Kubernetes magic happens there. And even that is ephemeral in the sense of the whole cluster goes down and it's gone too, it's not again a bucket.
[65:23-65:24] SPEAKER_03: Right.
[66:00-66:01] UNKNOWN: Yeah.
[66:33-66:39] SPEAKER_01: So it just does it. Yeah. Or when it says that it's saying I'm going to write it like that.
[66:40-66:42] SPEAKER_04: I think it's going to write it like
[66:42-67:00] SPEAKER_01: this. Yeah. Yeah so there's your persistent volume set up. Is email models cache, namespace the transcription service, multiple pods can read and write simultaneously, maybe only read simultaneously but what do I know as a person who's seen
[67:01-67:02] UNKNOWN: it.
[67:02-67:05] SPEAKER_01: That we kind of only want one to write to it.
[67:06-67:07] SPEAKER_03: I agree.
[67:07-67:38] SPEAKER_01: But. That's fine. Libraries handle cache detection automatically.
[67:40-67:41] SPEAKER_04: They've thought of this.
[67:41-68:17] SPEAKER_01: Yeah. That's a fair point. Like this is not a revolutionary problem we're dealing with here. Yeah.
[68:17-68:17] UNKNOWN: So
[68:17-68:29] SPEAKER_01: you just made that cache gamble. Yep. Added the pads to the jobs. Fair enough.
[68:30-68:30] UNKNOWN: I like,
[68:31-68:32] SPEAKER_01: pretty much understand what's
[68:32-68:32] UNKNOWN: happening.
[68:32-68:33] SPEAKER_01: Right. I'm
[68:33-68:33] UNKNOWN: pretty,
[68:33-68:38] SPEAKER_04: I'm close on it. But I don't know that I'm all the way there.
[68:38-68:43] SPEAKER_01: But I'm also thinking that might make me one of the world's foremost experts on Kubernetes.
[68:43-69:07] SPEAKER_04: Right. Especially using it to manage models. Right. Yeah. Yeah. And then after the first run, it's going to take, these subsequent jobs are just going to run.
[69:07-69:20] SPEAKER_01: To at least start. Yeah. And the GPU should be like lightning still. I agree. And then when we have two, in theory, the entire process is going to take a few minutes even for like an hour of audio.
[69:34-69:36] UNKNOWN: We're going
[69:36-69:46] SPEAKER_01: to have to chunk up that. In fact, one giant audio file we're recording there.
[69:47-69:47] SPEAKER_04: What do
[69:47-69:47] UNKNOWN: you
[69:47-69:48] SPEAKER_04: mean?
[69:48-69:51] SPEAKER_01: That's not actually multiple audio files, right?
[69:51-69:51] UNKNOWN: It
[69:51-69:52] SPEAKER_01: is. Oh, it says it as
[69:52-69:52] UNKNOWN: a separate one. Yeah, each
[69:52-69:53] SPEAKER_01: time
[69:53-69:54] SPEAKER_04: it says it as a separate one.
[69:54-70:04] SPEAKER_01: Gotcha. That's good. So we can upload one, see it actually work. I guess do the sample and then hit that motherfucker with a hundred hours.
[70:04-70:12] SPEAKER_04: Yeah, once we know that it processes multiple. Yeah, maybe hit the sample and then make a copy of the sample and send them both.
[70:12-70:18] SPEAKER_01: And then eight. And at some point send it the whole bag that we have because that's probably the
[70:18-70:18] UNKNOWN: most
[70:18-70:23] SPEAKER_01: it'll get for a long time. Right. It is whenever we empty that card on this first go around.
[70:23-70:24] SPEAKER_03: I agree.
[70:29-70:40] SPEAKER_01: Unless we just default to uploading like the end of the week or something. I don't think, I would think like we might want something from this conversation tomorrow. Right, I agree.
[70:40-70:40] UNKNOWN: So
[70:40-70:41] SPEAKER_01: we can probably upload immediately.
[70:43-70:43] SPEAKER_04: At least daily.
[70:44-70:44] SPEAKER_01: Yeah.
[70:48-70:50] SPEAKER_02: At least we want to start wearing a microphone.
[70:51-71:02] SPEAKER_04: I agree with you. Or wearing those, the meta glasses are one of those things where I don't necessarily care about being the cameras. I care about that there's microphones on
[71:02-71:02] UNKNOWN: you.
[71:02-71:05] SPEAKER_04: That's probably good audio. Yeah, but or carry that literally around your neck.
[71:07-71:11] SPEAKER_01: Start wearing pocket shirts so you can put the microphone in there.
[71:11-71:13] SPEAKER_04: Yeah, all the time.
[71:14-71:14] SPEAKER_01: Yeah.
[71:18-71:19] UNKNOWN: You
[71:19-71:22] SPEAKER_01: can't actually use those pockets though, they fuck up the colors.
[71:22-71:22] SPEAKER_04: That's true.
[71:23-72:02] SPEAKER_01: Like bad, bad. It's still in manual applies.
[72:02-72:04] SPEAKER_04: The cluster is not even there.
[72:05-72:06] UNKNOWN: Yeah.
[72:07-72:20] SPEAKER_01: We need to, so this goes to like should we do some manual proof of concepts and debugging and then run the whole pipeline? I think we try to run it.
[72:20-72:22] SPEAKER_04: Yeah, I think we try to run the whole pipeline.
[72:22-72:22] SPEAKER_01: It's
[72:22-72:22] UNKNOWN: just
[72:22-72:23] SPEAKER_01: worse.
[73:05-73:07] SPEAKER_04: I'm going to find it eventually.
[73:08-73:20] SPEAKER_01: You moved it out, so this is interesting. Oh. I still have that directory for some reason. That local testing. Yeah. I don't know why. I shouldn't.
[73:56-73:57] UNKNOWN: I
[73:57-74:04] SPEAKER_01: guess it must be in the getting going. You deleting it locally had no effect on what my local looks like.
[74:04-74:06] SPEAKER_04: It's definitely in the getting going.
[74:12-74:21] SPEAKER_01: I guess that's good that it's also detecting it the other direction. Like that directory didn't re -show up in yours. Right.
[74:30-74:30] UNKNOWN: There
[74:30-74:33] SPEAKER_00: you go. It's going to pull out the O .3.
[74:33-74:40] SPEAKER_04: Yeah, I was thinking about the file itself as well. Like is it in local transcriptions?
[74:40-74:44] SPEAKER_01: I think yeah, and that was nested inside of local testing.
[74:45-74:49] SPEAKER_04: Something like that, yeah. So anything inside of there.
[74:49-74:49] UNKNOWN: So
[74:49-74:51] SPEAKER_04: it just doesn't do anything.
[74:52-74:53] UNKNOWN: Exactly.
[75:21-75:21] SPEAKER_05: All
[75:21-75:21] UNKNOWN: right.
[75:22-75:25] SPEAKER_01: Didn't break it to that point. At least, yeah.
[75:29-75:39] SPEAKER_04: It should get to the place where it's just running a job. Because we think the pipeline is running up to that point. It's going to run a new style of job now.
[75:39-75:40] SPEAKER_01: Right, exactly.
[75:41-75:41] SPEAKER_04: An
[75:41-75:42] SPEAKER_01: actual
[75:42-75:52] SPEAKER_04: job, not just spin up a server. Yeah, the question is whether all that caching and all of that stuff works. Because we changed a lot about it. We changed the job type and added caching at the same time.
[75:52-76:27] SPEAKER_01: Right, but the only reason that feels uncomfortable is because we've been working on the same thing for three weeks. Forever, yes. It's like oh, some new stuff. Usually, people writing the code don't have to think about architecture. They have an architecture that either exists or is going to and they don't have to think about and vice versa. Architecture side is like I don't give a fuck about your code. What entry points do you need? Yeah, what am I writing?
[76:27-76:39] SPEAKER_04: And we're doing both. I've mentioned that most people can't do this. They're like very, I can do this thing. And going across the spectrum. There's
[76:39-76:54] SPEAKER_01: some clear paths for us to get better at it. Because basically the next time it won't take us as long because we went through all the wheel spinning. And I think even incorporating manual deployment earlier, I think
[76:54-76:54] UNKNOWN: we
[76:54-77:11] SPEAKER_01: ironed it out. Like we went through the hard slog instead. I think doing that earlier in this specific situation would have been beneficial. Let's run it on a cluster pushing every click ops style and
[77:11-77:12] UNKNOWN: get this thing in
[77:12-77:13] SPEAKER_01: place.
[77:13-77:19] UNKNOWN: And then start adding automation backwards. But instead we
[77:19-77:21] SPEAKER_01: had the fully designed all the way to
[77:21-77:31] SPEAKER_04: start to finish. I was naive. Like oh, we're just going to design all of this and it's just going to work great. If it's amazing and it will do that, that just
[77:31-77:32] SPEAKER_02: won't work.
[77:42-77:48] SPEAKER_01: That's what that Sam Pressley quote is. Trying to do things fast takes a very long time.
[77:50-77:51] SPEAKER_04: I like it.
[78:11-78:42] SPEAKER_01: It's about to come up through the tough times. Super hot and be super dry. There, I don't know, long enough I might go so far as to get them some tomato cages to grow through and start watering them once it actually dries out. They did alright. Maybe even get some long release nutrients to throw down on the soil. I want to not put a lot of investment into them so on the day that I go out there and something devastating will come up.
[78:42-78:45] SPEAKER_05: Yeah.
[79:18-79:19] UNKNOWN: Yeah.
[79:42-79:45] SPEAKER_02: I think it will.
[79:45-79:48] UNKNOWN: Yeah. Yeah. Yeah.
[80:11-81:43] SPEAKER_01: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[81:48-81:48] SPEAKER_04: Yeah.
[82:12-82:13] SPEAKER_01: Yeah.
[82:19-82:19] SPEAKER_04: Right.
[82:27-82:28] SPEAKER_01: That.
[82:47-82:49] SPEAKER_04: Well, I'll give it to you. It's
[82:49-82:49] UNKNOWN: still
[82:49-82:50] SPEAKER_04: producing.
[82:53-82:55] SPEAKER_00: Oh no, I thought I was going to try it twice.
[82:59-83:00] SPEAKER_04: Forty cents a month.
[83:01-83:15] SPEAKER_01: Yeah, it's got to be doing just like the billing estimate. This is how much this cluster would cost. Right. That's how much we anticipate based on current usage is going to cost you the whole total.
[83:16-83:17] SPEAKER_04: Yeah, like it's going
[83:17-83:27] SPEAKER_01: up. It started out at 11 cents and that, I mean, you can't make sense of that because it's the exact same if not a more like efficient cluster.
[83:27-83:33] SPEAKER_04: I guess literally coming from the same script. Nothing about it has changed.
[83:34-83:35] SPEAKER_01: Yeah, and it's 4X10 cost.
[84:00-84:02] SPEAKER_04: Yeah. It's still not done.
[84:02-84:02] UNKNOWN: But
[84:02-84:04] SPEAKER_04: whatever. It might
[84:04-84:05] UNKNOWN: be done.
[84:07-84:09] SPEAKER_00: Getting closer.
[84:12-84:16] SPEAKER_04: Reconciling. I've never seen that status before.
[84:22-84:34] SPEAKER_01: Are you sure? I mean, it came back from the beginning, I guess. It's not like a super short step at the very end before it's
[84:34-84:34] UNKNOWN: done.
[84:34-84:35] SPEAKER_01: Maybe so,
[84:46-84:51] UNKNOWN: yeah. See,
[84:59-85:01] SPEAKER_04: I didn't want to do that on a
[85:01-85:01] UNKNOWN: two
[85:01-85:01] SPEAKER_04: -dish.
[85:16-85:41] UNKNOWN: Yeah. Okay.
[85:46-85:49] SPEAKER_04: I think it just needs to create a new node.
[85:49-86:15] SPEAKER_01: Yeah, and since we've run, one thing I saw late yesterday was the PubSub kept pushing jobs after it was done, which it's supposed to do for two hours. And so when I would run a new test, it would get those can't create pod because of a quota limit, which isn't broken, is waiting for them to finish. Which in the previous design would mean they're never going to get run because that's never going to finish because it's just a server.
[86:15-86:23] SPEAKER_04: Right. I agree. Yeah, so I don't know why there's two direct extension jobs. I assume there's one from earlier. Yeah, like that PubSub
[86:23-86:28] SPEAKER_01: obviously isn't two hours old yet. That's how long we worked. Right.
[86:28-86:32] SPEAKER_04: So it is trying to run, and now it's running it.
[86:32-86:36] UNKNOWN: Yeah. So
[86:36-86:41] SPEAKER_04: there's two direct extension jobs. Oh, there we go.
[86:47-86:53] SPEAKER_01: I mean, that's it. Getting our model. There we go.
[86:54-87:00] SPEAKER_04: Yeah, I just look at that. Yeah, there's still a... HTTP addresses is not what
[87:00-87:01] SPEAKER_01: we're looking
[87:01-87:02] UNKNOWN: for.
[87:05-87:08] SPEAKER_00: That's good though. This is not WheelStream.
[87:09-87:09] SPEAKER_04: No.
[87:38-88:02] SPEAKER_01: So the thing, the image in here with the latest tag is from 16 hours ago for the VM controller. Yeah, nothing has been pushed today in the VM controller. There's the transcription service has been pushed. The diarization service has been pushed.
[88:04-88:05] UNKNOWN: I
[88:05-88:06] SPEAKER_01: don't know if it has been
[88:06-88:07] SPEAKER_00: touched,
[88:07-88:07] SPEAKER_01: but
[88:07-88:08] SPEAKER_00: yeah.
[88:10-88:17] SPEAKER_04: Yeah, it's getting ready to update the controller .py. There you go. Yeah.
[88:18-88:18] SPEAKER_01: At
[88:18-88:18] UNKNOWN: least
[88:18-88:21] SPEAKER_01: I kind of understand what the project is looking like now.
[88:27-88:31] SPEAKER_00: There it is.
[88:43-88:51] SPEAKER_01: All those things are kind of annoying, but they're also now the things we know the most about in the project. That's the way things
[88:51-88:56] SPEAKER_04: are. I think that's how I would describe my peers.
[88:57-88:57] UNKNOWN: It's
[88:57-89:09] SPEAKER_04: that they know stuff because... Very explicit things that they've done. Things that they've done over their career. And it happens to... It aligns with what... Because they've been in the same career path forever.
[89:09-89:09] UNKNOWN: Whereas
[89:09-89:11] SPEAKER_04: I've been all over the place.
[89:12-89:12] UNKNOWN: Which
[89:12-89:20] SPEAKER_04: makes you super personal. Right, but I don't have any specific experience. I remember this nightmare when we had to do... How much
[89:20-89:25] SPEAKER_01: of that? So having worked in it for 20 years, how many of those 20 years are valuable to Dick?
[89:25-89:28] SPEAKER_04: I don't necessarily think that they are.
[89:28-89:38] SPEAKER_01: Like maybe the last five? And like some percentage of the four stuff from back in the day. But it's not a huge percentage. I agree.
[89:39-89:39] UNKNOWN: Because,
[89:39-89:45] SPEAKER_01: I mean, IPv6. How about that? What should 20 years tell you about that shit? Right, exactly.
[89:46-89:47] SPEAKER_04: Not a lot.
[89:50-89:52] SPEAKER_01: Or Kubernetes networking.
[89:53-89:53] UNKNOWN: What
[89:53-89:56] SPEAKER_01: should 20... How long has Kubernetes existed? Exactly.
[89:57-90:06] SPEAKER_04: I think that we should try to do manual. Like delete those jobs and upload a file while everything is
[90:06-90:06] UNKNOWN: still
[90:06-90:14] SPEAKER_04: running. Because I feel pretty confident... Like you're saying don't delete the cluster and... Right, like just leave everything running.
[90:14-90:21] SPEAKER_01: I don't know, we need to do a manual. With the cluster in place and the correct VM controller, we need to
[90:21-90:21] UNKNOWN: delete
[90:21-90:23] SPEAKER_01: the current VM. So it will reboot the new
[90:23-90:23] UNKNOWN: one.
[90:23-90:24] SPEAKER_01: But
[90:24-90:26] SPEAKER_04: just redo the new controller. And incentivize.
[90:27-90:27] UNKNOWN: In
[90:27-90:28] SPEAKER_04: fact,
[90:28-90:28] UNKNOWN: it
[90:28-90:34] SPEAKER_01: should get the queue. If anything is unacknowledged yet, we'll see.
[90:34-90:34] UNKNOWN: That
[90:34-90:35] SPEAKER_01: might be a thing we need to iron out.
[90:35-90:35] UNKNOWN: I
[90:35-90:40] SPEAKER_01: mean, two hours is a good time limit. And that's the hard stuff in PubStoke.
[90:43-90:43] UNKNOWN: But...
[90:43-90:50] SPEAKER_01: It might be worth... Or we'll see what happens whenever... Whether we need to upload a file or not.
[90:50-90:50] UNKNOWN: Like
[90:50-90:54] SPEAKER_01: it will either start processing something that is in the queue or... Yeah, it might just
[90:54-90:54] SPEAKER_04: start
[90:54-91:00] SPEAKER_01: doing it. The new VM will spin up, we'll get no logs for a little while other than Kubernetes stuff. And then we'll upload a new file.
[91:06-91:07] UNKNOWN: Because
[91:07-91:24] SPEAKER_04: the job should send the request back to... Send a success notification back to PubStoke. When it's done running. Otherwise, it should still be in there. And at some point it will just resend it.
[91:25-91:41] SPEAKER_01: But the VM is up, so probably PubStoke is empty. Is my guess. I think the VM is what acknowledges, like, got it. And then adds it to the Kubernetes queue. Which can exist as long as the cluster is on.
[91:42-91:54] SPEAKER_04: I don't think it should be that way. But it might be. I think the job running on the cluster should send back a notice. Like, I ran the job and I ran it successfully.
[91:54-91:54] UNKNOWN: But
[91:54-91:54] SPEAKER_04: then
[91:54-91:54] UNKNOWN: you
[91:54-91:55] SPEAKER_04: run
[91:55-91:59] SPEAKER_01: into what if it takes two hours and one minute for a job to complete.
[92:01-92:03] SPEAKER_04: That's true. Good point.
[92:03-92:30] SPEAKER_01: I think that's the... Once we're confident in the processing and everything shutting down at the true end of processing and all that. We can move the PubSub queue back to seven days, which is its default. And if we were to have processing running that long. But that's going to keep that thing on. It will. Until that PubSub is empty. Which is good. That's the functionality. That is what it's supposed to be.
[92:30-92:34] SPEAKER_04: Hopefully it's not seven... If it's seven days worth of stuff, then that means we're in a good spot.
[92:34-92:51] SPEAKER_01: Yeah, people are paying us to use the service at that point. Or we're getting so much value out of it. We're recording fucking everything and it's just always running. I hope for either of those. Like us just having so much to put into it that it's running before
[92:51-92:51] UNKNOWN: I would pay.
[92:51-92:54] SPEAKER_01: That it's just going a lot. And that's because we're getting value out of it.
[92:55-93:01] SPEAKER_04: Because if it wasn't, we wouldn't be doing it. Unless it was a mistake. We're like, crap. I forgot to turn that off. Exactly.
[93:02-93:03] SPEAKER_01: We're not just going
[93:03-93:03] UNKNOWN: to
[93:03-93:07] SPEAKER_01: do it because it makes a cool obsidian map. But doesn't actually lead to any real world
[93:07-93:16] SPEAKER_04: value. What are we doing? Oh, he's still pushing. I was like, why are
[93:16-93:16] UNKNOWN: we
[93:16-93:18] SPEAKER_04: sitting here? I got distracted.
[93:19-93:20] SPEAKER_01: I
[93:20-93:20] UNKNOWN: just
[93:20-93:21] SPEAKER_01: haven't had to actually push anything in
[93:21-93:21] UNKNOWN: a
[93:21-93:22] SPEAKER_01: little while.
[93:22-93:24] SPEAKER_04: The internet? I don't know. It's
[93:24-93:24] UNKNOWN: just
[93:24-93:25] SPEAKER_04: going slowly.
[93:28-93:29] SPEAKER_00: It's not very big though.
[93:29-93:32] UNKNOWN: I'm just going to try to get it to work.
[93:38-93:58] SPEAKER_01: Even not getting, like having a few weeks of just kind of stalled out. It's still something about getting in here and being working on a project. No question. Because I've been doing some and I have some apps out there that have some stuff that needs to be done to them. But it wasn't like, this is engaging. This is cool as shit. It
[93:58-94:05] SPEAKER_04: is and it's on the leading edge. And I'm excited about it. It gets me out of bed in the morning.
[94:06-94:06] UNKNOWN: Not
[94:06-94:06] SPEAKER_04: like,
[94:06-94:06] UNKNOWN: ugh.
[94:07-94:08] SPEAKER_04: I'm like, let's go.
[94:08-94:08] UNKNOWN: I'm
[94:08-94:09] SPEAKER_04: excited.
[94:09-94:14] SPEAKER_01: I literally think about it when I'm going to be thinking about not being disciplined.
[94:14-94:14] UNKNOWN: And
[94:14-94:14] SPEAKER_01: it's like, well,
[94:14-94:14] UNKNOWN: I
[94:14-94:18] SPEAKER_01: mean, that's going to affect everything including work tomorrow morning.
[94:24-94:25] UNKNOWN: It
[94:25-94:28] SPEAKER_01: doesn't always stop me. No, I agree. I'm with
[94:28-94:29] SPEAKER_05: you.
[94:45-94:46] UNKNOWN: So
[94:46-94:53] SPEAKER_04: it's not even actually stopping the VM. It's just changing the image. Running on it.
[94:53-94:57] SPEAKER_02: Which I assume will stop it. But maybe not.
[95:26-95:35] SPEAKER_01: So now, even if it is picking up other jobs. Like these may stay on there. Right. But that one will just get in line. Yeah.
[95:38-95:45] SPEAKER_02: Let's see what it did here. I agree
[95:45-95:47] SPEAKER_01: with that level
[95:47-95:48] SPEAKER_02: of confidence.
[96:12-96:18] SPEAKER_04: Oh, these jobs are already on there, bro. Right. No,
[96:18-96:18] UNKNOWN: new
[96:18-96:19] SPEAKER_04: ones.
[96:24-96:28] SPEAKER_01: And it's diarization is on schedule. Because there's already three running.
[96:30-96:40] SPEAKER_04: So, 6977. And there's two 6977. One
[96:40-96:40] UNKNOWN: of
[96:40-96:44] SPEAKER_04: them is Whisper, one of them is diarization. Yeah, so those are the new ones.
[96:46-96:52] SPEAKER_01: So Whisper started first, this go around. And took up the third slot. But it has no pods.
[96:53-96:57] SPEAKER_04: Yeah, because I'm sure. Well, it can run on that same node.
[97:02-97:05] SPEAKER_01: What are the unscheduled issues? Yeah,
[97:05-97:22] SPEAKER_04: it may just be. Whatever. It's fixing itself. That's what Kubernetes does. It adjusts itself. And has the right nodes to run the jobs you need. It should do that.
[97:23-97:44] SPEAKER_01: It's an orchestration system. It's a great example of taking AI out of it. Because it never had AI in it. But it's just very well written. Like super far out. And it's magical. Almost magical like AI. But it's not at all. So that's a good anchor to hold on to. You can take AI out of most of the processes.
[97:44-97:45] SPEAKER_03: For sure.
[98:09-98:10] UNKNOWN: I
[98:10-98:16] SPEAKER_01: guess it's theoretically possible that even that last change wasn't necessary.
[98:16-98:16] UNKNOWN: I'm not sure
[98:16-98:23] SPEAKER_01: if those were previous jobs from a previous test. I think it was.
[98:24-98:24] UNKNOWN: Because
[98:24-98:30] SPEAKER_01: the thing it pointed out seemed legitimate. I agree.
[98:41-98:42] UNKNOWN: Oh
[98:42-98:46] SPEAKER_01: no. There's a permission to add something in there.
[99:06-99:06] UNKNOWN: I
[99:06-99:07] SPEAKER_04: don't know
[99:07-99:07] UNKNOWN: if
[99:07-99:12] SPEAKER_04: you can take it down and bring it back up and it connect to the same cluster.
[99:12-99:15] SPEAKER_01: I think so. I'm pretty sure.
[99:33-99:37] SPEAKER_04: That's too full start I assume.
[99:45-99:48] SPEAKER_01: I don't want to clear out the postsub queue as well.
[99:49-99:50] UNKNOWN: Like
[99:50-99:55] SPEAKER_01: don't kill the cluster. Especially since that's the thing that takes forever to turn off.
[99:58-99:58] UNKNOWN: I
[99:58-100:13] SPEAKER_04: don't know if it's possible. Sorry
[100:13-100:14] SPEAKER_02: about that.
[100:15-100:15] UNKNOWN: I
[100:15-100:18] SPEAKER_04: cancelled the command to delete.
[100:18-100:20] SPEAKER_00: Oh that's fine.
[100:26-100:27] SPEAKER_04: It may have made it.
[100:27-100:34] SPEAKER_01: Yeah the VM doesn't take super long. I assume it was at least started at that point. Yeah.
[100:49-101:51] SPEAKER_04: It was. But I did see the background. It's still maybe a reference to a past API server somewhere.
[101:51-101:52] SPEAKER_02: Possibly.
[102:46-102:48] UNKNOWN: I'm
[102:48-102:51] SPEAKER_04: not sure. I can do it. I
[102:51-102:52] SPEAKER_02: assume so.
[102:53-104:33] UNKNOWN: Yeah. I'm not sure. I'm not sure. I'm
[104:33-104:33] SPEAKER_04: not sure.
[104:57-104:58] SPEAKER_02: I'm
[104:58-104:58] UNKNOWN: not sure.
[104:58-104:59] SPEAKER_02: I'm
[104:59-104:59] UNKNOWN: not sure.
[104:59-104:59] SPEAKER_02: Let's see.
[105:26-105:59] UNKNOWN: I'm not sure. I'm not sure.
[106:06-106:07] SPEAKER_02: I'm not
[106:07-106:07] UNKNOWN: sure.
[106:36-106:37] SPEAKER_01: I'm not sure.
[106:37-106:37] UNKNOWN: I'm not
[106:37-106:38] SPEAKER_01: sure if that works.
[107:36-108:07] UNKNOWN: I'm not sure. I'm not sure. I'm not sure. I'm not sure.
[108:50-108:54] SPEAKER_04: I'm not sure.
[108:54-108:59] SPEAKER_01: I'm not sure. I'm not sure. I'm not sure.
[109:27-109:28] SPEAKER_04: I'm
[109:28-109:28] UNKNOWN: not sure.
[109:54-110:27] SPEAKER_04: I'm not sure. I'm not sure.
[110:48-110:53] UNKNOWN: I'm not sure.
[111:10-111:12] SPEAKER_01: I'm
[111:12-111:13] SPEAKER_04: not
[111:13-111:22] SPEAKER_01: sure.
[111:42-112:31] SPEAKER_04: I'm not sure. I'm not sure. I'm not sure. I'm not
[112:31-112:33] SPEAKER_01: sure.
[113:00-113:01] SPEAKER_04: I'm
[113:01-113:03] SPEAKER_01: not
[113:03-113:03] UNKNOWN: sure.
[113:21-113:54] SPEAKER_01: I'm not sure. I'm not sure.
[114:13-114:17] SPEAKER_04: I'm not sure.
[114:21-115:02] UNKNOWN: I'm not sure. I'm not sure. I'm not
[115:02-115:03] SPEAKER_04: sure.
[115:28-115:29] UNKNOWN: I'm
[115:29-115:31] SPEAKER_01: not
[115:31-115:32] SPEAKER_02: sure.
[116:01-116:02] UNKNOWN: I'm not sure.
[116:28-116:30] SPEAKER_04: I'm
[116:30-116:30] UNKNOWN: not
[116:30-116:51] SPEAKER_04: sure. I'm not
[116:51-117:31] SPEAKER_01: sure. I'm not sure. I'm
[117:31-117:31] UNKNOWN: not
[117:31-117:35] SPEAKER_01: sure. Yeah.
[118:04-118:29] UNKNOWN: I'm not sure. I'm not sure. I'm
[118:29-118:46] SPEAKER_00: not
[118:46-118:59] UNKNOWN: sure.

==================================================
Generated on: 2025-07-29 10:16:29
Total words: 6621
Total speakers: 7
==================================================




Summary:
creation_date: 2025-07-29 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-29_0956_ZOOM0034_transcript.txt participants: [SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04, SPEAKER_05]
Executive Summary
This meeting was a deep-dive technical session focused on troubleshooting and refining the architecture of a [[Transcription Service]] running on [[Kubernetes]]. The participants grappled with the fundamental design of their processing pipeline, debating whether to use long-running services or discrete, event-driven jobs [44:51-45:52]. After identifying that their current approach of using a web server within a [[Kubernetes]] job was causing processes to hang, they pivoted to a job-based architecture where each audio file triggers a discrete [[Whisper]] and [[Diarization Service]] job [45:59-47:44]. A key innovation discussed was implementing a shared cache for machine learning models on the cluster to significantly reduce the startup time for subsequent jobs [64:44-65:23]. The session also involved significant debugging of their [[Workflow Automation]] and [[VM controller]], leading to a better understanding of the system's behavior and the necessity of manual deployment and testing before full automation [32:50-33:06].

Key Topics Discussed
	•	Architectural Debate: Services vs. Jobs
	•	There was significant confusion and discussion about the correct way to process transcription tasks on [[Kubernetes]] [08:09-08:59].
	•	The initial approach of running a FastAPI web server inside a [[Kubernetes]] "Job" was identified as a core problem, as the server would run indefinitely, preventing the job from ever completing [45:59-47:44].
	•	Decision: The team pivoted to a discrete job-based architecture. The new design involves a [[Job Controller]] that receives messages and creates individual [[Diarization Service]] and [[Whisper]] jobs for each audio file. These jobs run to completion and then terminate [44:51-45:52].
	•	Model Caching for Performance
	•	The team recognized that each new job/pod was independently downloading and loading the large [[Hugging Face]] models ([[Whisper]], Pyannote for diarization), which is inefficient and slow [61:27-62:16].
	•	Solution: They designed a solution to create a persistent volume cache on the [[Kubernetes]] cluster. The first job will download the models and write them to this shared cache, and all subsequent pods will read from the cache, drastically reducing startup times for new jobs [64:44-67:38].
	•	[[AI Agents]] and Workflow Automation
	•	The participants expressed frustration with the [[AI Agents|AI assistant's]] tendency to "hallucinate" or provide incorrect information, such as stating an image was built on the 19th when it was actually the 27th [11:42-12:04].
	•	They discussed the need for better logging and context management for the AI, refining their [[Begin Session Protocol]] and [[End Session Protocol]] to ensure the AI has the correct state and doesn't mark tasks as complete prematurely [24:50-26:56].
	•	A key strategy identified was the importance of manual deployment and verification. They decided it's better to get the services working manually on the cluster first and then "back-engineer" the [[Workflow Automation]] [00:45-01:22].
	•	[[GCP]] and [[Kubernetes]] Troubleshooting
	•	The team worked through various [[GCP]] and [[Kubernetes]] issues, including troubleshooting [[Pub/Sub]] message queues and diagnosing pod failures by inspecting logs [36:58-37:18].
	•	They discussed the importance of using a [[Secret Manager CSI driver]] to securely provide tokens and credentials to pods running on the cluster [30:20-30:53].

Action Items & Decisions
	•	Decision: Re-architect the processing pipeline to use a discrete, job-based model on [[Kubernetes]] instead of long-running services [45:00-45:30].
	•	Action: Refactor the [[Diarization Service]] and [[Whisper]] service code to not be API servers, but rather scripts that execute a task and terminate [47:51-48:22].
	•	Action: Implement a persistent volume cache on the [[GKE]] cluster to store downloaded [[Hugging Face]] models, allowing all pods to share them and reduce startup times [66:42-67:00].
	•	Decision: Prioritize manual deployment and [[Proof of Concept]] validation before fully automating the pipeline to ensure the core services are functional [72:07-72:22].
	•	Action: Update the [[Begin Session Protocol]] to explicitly instruct the [[AI Agents|AI agent]] not to overstate success or mark tasks as complete until they are fully verified [56:50-57:04].

Suggested New Links/Tags
	•	None

Linked Concepts
	•	[[AI Agents]]
	•	[[Begin Session Protocol]]
	•	[[Cloud Run]]
	•	[[Cursor]]
	•	[[Cursor Rules]]
	•	[[Diarization Service]]
	•	[[Docker]]
	•	[[End Session Protocol]]
	•	[[GCP]]
	•	[[GKE]]
	•	[[GPU]]
	•	[[Hugging Face]]
	•	[[Job Controller]]
	•	[[Kubernetes]]
	•	[[Proof of Concept]]
	•	[[Pub/Sub]]
	•	[[Secret Manager CSI driver]]
	•	[[Session Log]]
	•	[[VM controller]]
	•	[[Whisper]]
	•	[[Workflow Automation]]

#Tags
	•	#AI
	•	#Automation
	•	#Deployment
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom36
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1618_ZOOM0036_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:16] SPEAKER_01: What I was thinking is, I need to, I don't understand how models work. Right, also vector database is another thing. I don't really understand how models load context. Like,
[00:17-00:17] UNKNOWN: meaning
[00:17-00:26] SPEAKER_01: what's actually happening. Why is it limited? What's happening behind the scenes? I don't know. Yeah, I mean,
[00:28-00:35] SPEAKER_02: it might be worth some YouTube tutorials on even going back to LLMs and how they work and shit like
[00:35-00:41] SPEAKER_01: that. Like, if there's a context problem, does the industry just don't want to talk about it?
[00:41-00:41] UNKNOWN: Or,
[00:42-00:58] SPEAKER_01: we think there's a context problem and that's the primary limitation. Right. And I wonder what the experts think about that and why and what's the answer to it. Is there a pathway already that the industry in general is going towards?
[00:59-01:04] SPEAKER_02: I think we would've heard of that. Because that is one of the things that is part of every announcement. It's like,
[01:05-01:05] UNKNOWN: oh,
[01:05-01:36] SPEAKER_02: we expanded the context window. But the last few that I've seen have gotten better, but not like GPT -3 to GPT -4 better. And so they're getting marginally better. And where it always seems to hang up is when you do long -standing, long -lasting conversations at your context. For sure. So, I don't know. I haven't explicitly dove into people talking about it and where's the industry at and stuff like that. I
[01:36-01:36] UNKNOWN: mean,
[01:36-01:55] SPEAKER_02: I assume Jim and I could tell you, instead of looking out for videos and stuff like that. It seems to me like context is the current roadblock on the path to general AI or just like tools as promised or as suggested are possible.
[01:56-01:56] UNKNOWN: I
[01:56-01:59] SPEAKER_02: .e. I want this app that does this. Build it, please.
[01:59-02:35] SPEAKER_01: Yeah. I mean, I guess in the big, I'm stepping away from specifically context. Again, I'm thinking out loud a little bit. This is how my brain works. That's good for today especially. That what I think would be cool to build. I think it'd be cool to build something that we would use, right? I think that's the answer to being passionate about something is just build something you like or want. And so I think the tool that I want. $1 .40? We did work yesterday on that,
[02:35-02:35] UNKNOWN: I
[02:35-02:48] SPEAKER_01: guess. The tool that I want is something that is almost like a universal assistant. That not just answering Siri questions. Yeah, it's the promise
[02:48-02:52] SPEAKER_02: of Siri. Like I said, the suggestion at the very beginning.
[02:57-02:58] SPEAKER_01: Like the top right hand corner.
[02:58-02:58] UNKNOWN: Yeah, I
[02:58-02:58] SPEAKER_01: saw
[02:58-03:10] SPEAKER_02: it. But yeah, it's like what that was pitched at. It's the Steve Jobs like, oh, here it is, your virtual AI assistant. And I mean, you're talking about Jarvis. Right.
[03:10-03:11] SPEAKER_00: Yeah.
[03:12-03:21] SPEAKER_01: So it may be worth thinking about some use cases or like what capabilities would this system truly have?
[03:21-03:26] SPEAKER_02: Yeah. And so our current entry point is an audio recording or some sort of content.
[03:26-03:33] SPEAKER_01: Or always on. But whatever. I think text, because even the audio recording is going to turn it into text.
[03:33-03:33] UNKNOWN: The
[03:33-03:45] SPEAKER_01: thing we're working on is making it into text. Whether it's real time or not. And I think that is in general the basis of LL. But I mean, they can do pictures and video and things like that too. But all of those just get converted to text. Yeah,
[03:46-03:46] UNKNOWN: I
[03:46-03:57] SPEAKER_01: think so. The models themselves deal with text, I believe. So I think text input and whether it comes from audio to text either way. But assuming we have
[03:57-04:00] SPEAKER_02: some sort of text and that's where we're at
[04:00-04:00] UNKNOWN: our
[04:00-04:00] SPEAKER_02: running point.
[04:02-04:02] UNKNOWN: And
[04:02-04:24] SPEAKER_02: so yeah, the classifier, the vector database as we currently understand it or hope that it is what we currently understand is the next step, I think. Assuming you have a source text coming from wherever the hell it came from. Maybe it passed through our transcription service. Maybe it started out as text.
[04:25-04:26] UNKNOWN: Whatever.
[04:26-04:32] SPEAKER_02: What is our vector database slash classifier slash tagger slash all this?
[04:32-05:00] SPEAKER_01: Yeah, so I think it would take any conversation. I'll use that word. It would take any conversation, parse it, and put the topics into the right places. But not make new ones. Right, so even if we repeated a topic, it would add a append to that topic. Right, but it does make new ones. Yeah, it can. But yeah, it does make duplicates. It can identify that,
[05:00-05:00] UNKNOWN: hey,
[05:00-05:03] SPEAKER_01: this is a duplicate topic, append to the previous one.
[05:03-05:03] UNKNOWN: It
[05:03-05:04] SPEAKER_01: can be case
[05:04-05:12] SPEAKER_02: insensitive and catch the fuzzy logic. This is the same topic. They didn't use exactly the same word, but it can kind of...
[05:12-05:12] UNKNOWN: I feel
[05:12-05:14] SPEAKER_02: like there's
[05:14-05:14] UNKNOWN: something
[05:14-05:22] SPEAKER_02: stronger than just a regular tag that it's like, this is almost exactly the same thing, but technically different, so I'm still going to maintain the difference.
[05:23-05:24] SPEAKER_01: Right, and so just,
[05:24-05:24] UNKNOWN: I
[05:24-05:27] SPEAKER_01: think that first layer, I
[05:27-05:27] UNKNOWN: don't
[05:27-05:42] SPEAKER_01: know, I can't say that my thoughts are not formed very well. I guess they are not formed very well still, yes. That first layer is just capturing and indexing everything. Everything that you upload to it. Like,
[05:42-05:42] UNKNOWN: I
[05:42-06:00] SPEAKER_01: guess if you do real time, it would be everything, but whatever. Everything you upload to it, it can index, categorize, whatever, and keep. Then I imagine this, like a context loading. I'll use that term that, hey, we want to talk about this topic.
[06:03-06:04] UNKNOWN: And
[06:04-06:17] SPEAKER_01: it prepares us to, like it participates in the conversation on a given topic by a combination of searching the internet and searching the database. Yeah, so RAG,
[06:18-06:18] UNKNOWN: which
[06:18-06:18] SPEAKER_01: is
[06:18-06:18] SPEAKER_02: whatever...
[06:19-06:21] SPEAKER_01: Retrieval, assisted generation.
[06:22-06:22] UNKNOWN: Yeah,
[06:22-06:32] SPEAKER_02: on a vector database, we assume that's what needs to get worked on understanding -wise, and then the internet, or tools more specifically.
[06:32-06:34] SPEAKER_01: Well, I think RAG, which is not necessarily a
[06:34-06:34] UNKNOWN: bad
[06:34-06:34] SPEAKER_01: term,
[06:35-06:35] UNKNOWN: but
[06:35-06:39] SPEAKER_01: RAG is to augment a single response. Like to say,
[06:40-06:40] UNKNOWN: hey,
[06:40-06:47] SPEAKER_01: this is Gemini with, in the background, it's grounded towards this whatever database.
[06:48-06:48] UNKNOWN: But
[06:48-06:53] SPEAKER_01: I want it to, basically what I'm imagining is what we're doing,
[06:53-06:53] UNKNOWN: cursor.
[06:53-07:19] SPEAKER_01: Like that it is, it can load that much of a context. And from the way it's doing that right now is we have this README augmented with some daily files and things like that. If you really look at, when I say context, that's what I mean. So a README, but probably a little more than a README. README plus these artifacts. That's the database,
[07:19-07:19] UNKNOWN: right?
[07:19-07:20] SPEAKER_01: It's the
[07:20-07:22] SPEAKER_02: vector database, we assume. Yeah,
[07:22-07:27] SPEAKER_01: so the retrieval portion is a README. So not just a,
[07:27-07:27] UNKNOWN: hey,
[07:27-07:31] SPEAKER_01: it can load a whole, hey, I understand where we're at on
[07:31-07:31] SPEAKER_02: this. Yeah, there's
[07:31-07:33] SPEAKER_01: an entry point to
[07:33-07:51] SPEAKER_02: any project that's like a high -level README. Like what we're doing with the README that's got references to where the previous work that was done and references to any work that needs to be done, or notes on things that need to be done at a high level and references to go get lower level
[07:51-08:18] SPEAKER_01: things. It may be too much to ask, but it is, I want it to ask like our brain. Like if I were to say to you, hey, we need to plan the next vacation, or next summer's vacation, and I want to do it in the same place that we did it last year, and we talked about a couple of different options inside the neighborhood of where we want to stay. That should be, you know what I'm talking about.
[08:18-08:50] SPEAKER_02: Yeah, and if it had, I don't think it would be that hard for it to know that. We'd have to have recorded content and set it, but like realistically we would have had, so skipping forward to the next one, we'd have this conversation on record, and it would have ended up at Carlton Landing, and we would have, if not on audio, been like, hey, we need to make these updates that people are talking about, or have a sit down with seven or eight people and get the audio, but at the very least like,
[08:50-08:50] UNKNOWN: hey,
[08:50-09:05] SPEAKER_02: we like these areas that have grass around them and are several houses close together. Ideally we'd like to be able to put 15 people in one house, and we still have to give it those things or be recording.
[09:05-09:09] SPEAKER_01: Yeah, assuming we recorded our old conversations. That's what I would like. I don't think
[09:09-09:10] SPEAKER_02: that would
[09:10-09:11] SPEAKER_01: be that hard for it at
[09:11-09:19] SPEAKER_02: all without a vector database. I think it, with my hopes for what a vector database is, I think that's light work.
[09:19-09:42] SPEAKER_01: Right, so be able to have random conversations. So it does it, like if we would have sat down and said, hey, let's take this, have a conversation, condense it, do everything, make notes, create a readme for it, and put it away, and then bring that readme back and intentionally load it and say, hey, here's what we're about to talk. It can do it,
[09:42-09:42] UNKNOWN: because
[09:42-09:47] SPEAKER_01: I do it for work, but I want to automate that process.
[09:47-09:51] SPEAKER_02: Yeah, that's not even AI, it's just like plug, making a regular pipeline. I think it
[09:51-09:55] SPEAKER_01: is to a certain extent for summarizing the notes.
[09:56-10:07] SPEAKER_02: Yeah, but the actual retrieval of it is go and find this thing. It's going to be tagged in this way. I don't have to understand how it's tagged, but it will.
[10:07-10:11] SPEAKER_01: Right, it may not need to use a vector database, but either way, I mean,
[10:11-10:44] SPEAKER_02: if you think about like this right here is our daily summaries and then the whatever, the other ones are called session archives. So these are all these files, a shitload of stuff has gone on in here, and based on this completely other file, it knows what went down in this one at a high level, and if it needs to know at a lower level exactly where to go. And this is stupid text files with another stupid text file giving it a little bit more guidance. I think that if you...
[10:44-10:54] SPEAKER_01: Stupid and it's like nothing smart going on. I think that if you... you don't even need to... maybe you do need to summarize, but for a vector database, I think you can just give it all of these
[10:54-10:54] UNKNOWN: files.
[10:54-10:54] SPEAKER_01: That's my guess,
[10:54-10:54] UNKNOWN: is
[10:54-11:06] SPEAKER_02: like the smart of the... that's the magic of the vector database, is we can skip a level that we've established in the readme and gain efficiency. We can remove a step and get more efficient.
[11:06-11:15] SPEAKER_01: Right. Or get better in theory. Basically, I still think we should do summarize notes because it will help the system be that much closer. I also
[11:15-11:38] SPEAKER_02: think it's an acceleration path, so going to like the context shedding shit we're talking about, like you should be able to get like a very high level, and if that doesn't solve it, find the thing that is useful in it and lose the rest of the context and then dive deeper. Right, reload on... Yeah, start a new chat or something, completely wipe all your context that isn't actively useful on the current problem. This is a new
[11:38-11:47] SPEAKER_01: thought. Like so maybe the way the system works is it's building a real -time readme. So,
[11:48-11:48] UNKNOWN: go
[11:48-12:07] SPEAKER_01: do a research project. Like so I give you a topic, hey, we want to talk about Carlton Landing, you know, we're planning a vacation, we want to base it off, it's in there. Like go do a research project using the database, build a real -time readme, and then load a conversation, like flush all of that,
[12:08-12:08] UNKNOWN: load
[12:08-12:12] SPEAKER_01: a conversation based on I found this. Is this what you want to talk about? Exactly.
[12:13-13:13] SPEAKER_02: And basically we should be able to polish up and really like mainline its acceleration process from begin chat, some work in chat, or session and in day. Like it should be able to do all of that and like the, whatever the main, the active one is, that's its active cache. And it should be writing to that and going like I'm going to go check this page out. Okay, that didn't solve my problem, but this line right here told me I can go there. Start a new session. Completely new session with this one direct line to where you've gotten and then dive deeper. And then, I mean there's still a limitation because if it's a big enough problem, but I can imagine if that workflow were clean, like we would solve the problems we're working on much quicker because being able to shed that context off and just yet actively keep, that's what we're trying to do with the session summaries. Right. So. Or the session logs, whatever that active one is.
[13:13-13:19] SPEAKER_01: A session, right. So I think we're honing in on this concept of a session. Right. Like
[13:19-13:19] UNKNOWN: that
[13:19-13:22] SPEAKER_01: a session is this maybe not ultra focused,
[13:22-13:22] UNKNOWN: but
[13:22-13:34] SPEAKER_01: focused on a topic and shed anything else out of the context that just, I just want to talk about this. And when I'm done talking about this, log it. Right. And then start a new session. Yeah. Like
[13:34-13:47] SPEAKER_02: analyze logs, see if any are not necessary for this hyper focused task. And if so, start new session. Now we have super condensed. Like I think it could handle, if we were able to build that pipeline, it
[13:47-13:47] UNKNOWN: could
[13:47-13:59] SPEAKER_02: handle this entire project in the way I'm envisioning it because it just has to, it almost needs to be able to detect a veering off from the focus subject. Right. And go like,
[14:00-14:00] UNKNOWN: no.
[14:00-14:05] SPEAKER_02: And like even if the human is asking it, like you can't ultimately sell it. No. But like, Hey, this isn't what we're working on. Are
[14:05-14:05] UNKNOWN: you
[14:05-14:10] SPEAKER_02: sure? And like at least demand a prompt back that's saying like, yeah, I actually do want to do this other thing real quick.
[14:12-14:41] SPEAKER_01: So, and like, yeah, I forgot yesterday we were starting to talk about threads. Again, that's probably not the right term, but I have new thoughts now. So in the way that you think about a multi -agent system, like, so there's multiple agents, maybe talking to a single agent. So rather than thinking about it as an agent, or maybe you can think about as an agent, but the purpose of these agents is a topic. Right. So, Hey, I have one agent that is like, if I
[14:41-14:41] SPEAKER_02: want to,
[14:41-14:41] UNKNOWN: I
[14:41-14:43] SPEAKER_02: think the multi -agent thing is a little,
[14:43-14:43] UNKNOWN: I
[14:43-14:47] SPEAKER_02: mean, according to that one paper is a little treacherous and you should avoid it at all
[14:47-14:48] SPEAKER_01: costs. No, I agree.
[14:48-14:48] UNKNOWN: I'm
[14:48-14:53] SPEAKER_01: not necessarily using agent in the same way, but this, this concept of,
[14:53-14:53] UNKNOWN: Hey,
[14:53-14:55] SPEAKER_01: in a given conversation.
[14:56-14:56] UNKNOWN: I
[14:56-15:09] SPEAKER_02: think it's one AI, right? Like one agent, but you upload a personality to it. Like this is the movie director agent and that's the project that it uploads. And so,
[15:10-15:10] UNKNOWN: Hey,
[15:10-15:22] SPEAKER_02: just Claude, go access the, I want to direct a movie or we're going to work on the direction of the current project. Upload that personality or upload that project.
[15:22-15:22] UNKNOWN: And
[15:22-15:25] SPEAKER_02: that's the, it uploads all the context for that.
[15:25-15:25] UNKNOWN: So
[15:25-15:51] SPEAKER_02: it's still a single agent, but you can basically wipe that agent and make it a new one. It's never, I think we should try to avoid, at least based on my general feelings of AI and that paper, we should only have one agent working at a time. And I don't think agents should necessarily report back to other AIs without some human intervention in between,
[15:52-15:52] UNKNOWN: because
[15:52-15:56] SPEAKER_02: the AIs are flawed enough to just kind of go in their own direction.
[15:57-16:33] SPEAKER_01: Well, maybe it's like, then we're going to keep one thread or one agent or one session open. Because it can use tools too. Like one agent can use infinity tools. Oh, I agree. What I'm saying is like over time, especially as if it's a complex topic, it starts to be confused because the context is trying to hold too much. So it's like it needs to automatically roll from session to session, but be seamless from us. Like so, because we know when it gets either it's been a long time, but I just feel like we need to start a new session or like, what are you, like that makes no sense. Like you could
[16:33-16:35] SPEAKER_02: almost just do like a straight up token count.
[16:36-16:36] UNKNOWN: Like,
[16:36-17:21] SPEAKER_02: hey, I know Jim and I can handle two million. So at seven hundred and fifty thousand, we're restarting the shit. Right. And automatically, even if it says like, hey, like it gives you a prompt that it's doing it or whatever, like, hey, or like you should add like the billing cycle alerts. It should go like, hey, we're at 50 percent context. Might want to start looking for an exit point. And then you just keep working and you can go as long as you want. Like if you're the human, you decide to. But at some point, like it shouldn't necessarily be like hit this stopping. But there should be some automatic shit going on like it wiping stuff. Yeah. Though I think that there needs
[17:21-17:54] SPEAKER_01: to be something from the outside, a second agent or a second process that's watching this one that is taking notes that can summarize, hey, where we're at and it be the context of the next. Like so to start the next session or automatically start the next session. And like a worker and an auditor. Yeah. Like something that's just taking notes in. And its objective is to take a super detailed summary that is maybe it's the session notes. Yes. Maybe it is already what we're doing.
[17:54-17:54] UNKNOWN: And
[17:54-17:56] SPEAKER_01: it is, hey, but don't put it
[17:56-17:56] UNKNOWN: in
[17:56-18:12] SPEAKER_01: the context in the main in the primary context window. Because it's eating context to do that. Right. Like have a second one that all it's doing is taking detailed summary notes. And that is going to be the basis of the next session. And it loads the context like,
[18:12-18:12] UNKNOWN: yeah,
[18:12-18:24] SPEAKER_01: I understand exactly what we're doing because I was just whatever. That's it's new because that's the problem with the sessions or just in general is it shows up and it's very powerful. But it's dumb. It
[18:24-18:24] UNKNOWN: does.
[18:24-18:36] SPEAKER_01: It knows all the Internet, but it doesn't know what we are talking about. So we're trying to condense and improve or speed up the process of understanding what I'm talking about right now. Right. Loading context.
[18:36-18:36] UNKNOWN: I
[18:36-18:36] SPEAKER_01: don't know.
[18:36-18:36] UNKNOWN: Again,
[18:37-18:40] SPEAKER_01: I don't know. My thoughts are getting more well formed.
[18:40-19:00] SPEAKER_02: Yeah. I think we got to dive into the databases and understand like even what that actually is working. Because on one side it might be like, oh, you upload it and it does the magic. It's really good. But the other side is like it's a database that you can talk to another limit the beginning of. Right.
[19:01-19:01] UNKNOWN: Right.
[19:03-19:10] SPEAKER_02: So I almost think like find a 30 minute tutorial or something with the most upvotes we can find.
[19:10-19:22] SPEAKER_01: Oh, I agree. And my not my last thought, but this also popped up is I think that a lot of the context is eaten by these corporate models.
[19:23-19:23] UNKNOWN: They
[19:23-19:35] SPEAKER_01: have a bunch of stuff in like guardrails and stuff like like I want to make my own model that I don't want to make. I want a model with no guardrails.
[19:35-19:35] UNKNOWN: Right.
[19:35-19:39] SPEAKER_01: That give me as raw power as possible. I mean, you get one
[19:39-19:39] UNKNOWN: of the
[19:39-19:48] SPEAKER_01: Kubernetes of LLM. Like just give me bare metal. Yeah. Let me play with it. Well, it's going to give you bad response. Okay.
[19:48-19:50] SPEAKER_02: Get one of the llamas and try to see
[19:50-20:04] SPEAKER_01: if we can somehow spin it up in the closet. Oh, I would definitely not spin it up in there. We can spin it up on a Kubernetes cluster with some GPUs behind it. And it was going to cost a thousand dollars a day to run.
[20:04-20:23] SPEAKER_02: Right. Yeah. So assuming that's just not a thing, at least for the foreseeable until somebody just decides to actually just give it away. Right. I think one of the things that jumped out at me at having two agencies is literally double the API cost. Yeah. Oh,
[20:23-20:23] UNKNOWN: yeah. One
[20:23-20:27] SPEAKER_02: working and one like summarizing.
[20:29-20:30] UNKNOWN: And
[20:30-20:30] SPEAKER_02: yeah,
[20:31-20:31] UNKNOWN: I
[20:31-20:53] SPEAKER_02: think given that we are we have to use the available models on the market, it almost does have to just restart itself a lot. Like even if it's just one agent, hey, this one prompt that we just went through, especially if you ran a bunch of command line stuff, log all of that and restart almost like every fucking prompt.
[20:53-20:55] SPEAKER_01: Right. Almost like every five minutes.
[20:55-21:08] SPEAKER_02: Yeah. Yeah. Or like a token. Hey, if the maximum that the company claims you can do is two million five hundred thousand, we're looking for our exit. Right. Keep track of tokens on the track on the conversation. Yeah.
[21:08-21:11] SPEAKER_01: And just keep just this automated like tokens
[21:11-21:12] SPEAKER_02: plus
[21:12-21:47] SPEAKER_01: equals however many tokens we used in this interaction. It's restarting sessions like some automatic session starting process. Yeah. And it's continuously looking to update itself. And what is the what is the best? What's the context of what I need? I have the minimum context of what I need to do to interact and do the job I'm doing. Right. And then keep reloading that context over and over. And it will seem like it's having a perfect time. But I think my guess is eventually it's going to look like it's forgotten things, but maybe not if it can continuously maintain a focus.
[21:47-22:03] SPEAKER_02: It depends on, I think, then the person using it, maintaining that same level of focus because it will forget stuff that you didn't. But that's because it's like you have to use the tool the right way. Right. And so maybe we have modes where it's like ultra restart, stay focused,
[22:04-22:04] UNKNOWN: focus
[22:04-22:35] SPEAKER_02: mode, fix this bug. Yeah. And then just like a standard do high level summaries. I understand you'll still forget stuff, but that's when you start a new chat. Right. Like it goes back to like how I was introducing Sherry to it. Like don't get annoyed at the tool. You're not using it right. Right. And to some extent, like the tool does have to be good enough for you have to eliminate the majority of those scenarios or as many of those scenarios as you can. But you can't let, I hate this fucking, you can't let perfect get in the way of the good or whatever, the great.
[22:37-22:37] UNKNOWN: Yeah.
[22:37-22:42] SPEAKER_01: We've talked about this enough for it to be able, for this topic.
[22:42-22:42] UNKNOWN: Like
[22:42-22:43] SPEAKER_01: so. It's already
[22:43-22:48] SPEAKER_02: got like mega context though. Right. Like when we upload that, like I'm saying maybe too much already. Maybe. Well, what
[22:48-23:03] SPEAKER_01: I'm saying is when it processes all of this, all of these audio files, it's going to start making categories and everything. Theoretically, we should, the very next thing we should be able to say, okay, let's talk about the brain context management system. Yeah. We're just going to have
[23:03-23:03] UNKNOWN: a book.
[23:03-23:04] SPEAKER_01: And it
[23:04-23:04] UNKNOWN: should
[23:04-23:10] SPEAKER_01: be able to go, I know exactly what you're talking about because you've talked about it eight times in the last two months.
[23:10-23:21] SPEAKER_02: It will, because like imagine if we just took all those transcripts and uploaded them into cursor and said, hey, make a read me. It would do that. Right. So like it can't do
[23:21-23:31] SPEAKER_01: that currently. For sure. Right. But what I'm saying is, or the same like then say, okay, now I want to talk about Carlton, Lanny, because we've talked about that enough times.
[23:31-23:33] SPEAKER_02: And in cursor specifically.
[23:33-23:36] SPEAKER_01: Yeah. Like that one would work. And
[23:36-23:36] UNKNOWN: to be able to
[23:36-23:38] SPEAKER_01: collapse that and open a new session. Okay. Now let's talk about
[23:38-23:57] SPEAKER_02: this. Yeah. And so what that looks like here is going, okay, open file, open project this. And so that needs to be seen like it's just part of the chat. And instead of going over here and opening the baby naming application project over here, I just go like, hey, let's talk about,
[23:57-23:57] UNKNOWN: I
[23:57-24:08] SPEAKER_02: want to add another thing to the baby app. And it's like, oh, nice. Yeah. It automatically starts this new chat, grabs the project or the fucking whatever out of the database. I don't know what you call that.
[24:08-24:08] UNKNOWN: Exactly.
[24:09-24:15] SPEAKER_02: The file. There's probably a project as we learn about vector databases, you'll probably learn some industry standard,
[24:16-24:16] UNKNOWN: but
[24:16-24:23] SPEAKER_02: grabs that and seamlessly. It might take a few seconds, but it is now talking about that.
[24:23-24:23] UNKNOWN: Yeah.
[24:23-24:32] SPEAKER_02: And you should not go, oh, what was that thing we checked on that transcription? You should not do that. You can say, hey, let's go back to transcription and go, okay. And where did we leave off?
[24:33-24:33] UNKNOWN: I
[24:33-24:37] SPEAKER_02: wanted to ask about that. And then you could like maybe even force a,
[24:37-24:37] UNKNOWN: hey,
[24:37-24:42] SPEAKER_02: I think these things should actually be connected in the background. I don't know how to do that, but you do it.
[24:42-24:42] UNKNOWN: So
[24:42-25:11] SPEAKER_02: and like make a human created tag or something like that or connection just because I think that air purifiers and fucking basketballs are related. Like, here's my idea. It's so. Yeah, I agree. Once we get this pipeline working and running, we should be able to pivot straight into whatever environment we want to work in.
[25:11-25:11] UNKNOWN: Be
[25:11-25:32] SPEAKER_02: it just regular Gemini or cursor and just like, okay, hey, generate a read me for each one of these files. Right. Like a go through one at a time. Generate a hyper detailed read me and then summarize that hyper detailed read me hyper detailed is the transcript. Right. Maybe we skip the hyper detail. But
[25:32-25:34] SPEAKER_01: that is the automation.
[25:34-25:34] UNKNOWN: I
[25:34-25:38] SPEAKER_01: think like go parse every conversation and every time
[25:38-25:39] SPEAKER_02: you
[25:39-25:39] UNKNOWN: start.
[25:39-25:41] SPEAKER_02: Ooh. So every time you go like,
[25:41-25:41] UNKNOWN: hey,
[25:41-25:53] SPEAKER_02: I want to talk about the Triple Crown app and it goes, OK, it's that there's already a summary there. Look through everything. Make your own summary. Compare it to the previous one and report back.
[25:54-25:54] UNKNOWN: Right.
[25:54-26:12] SPEAKER_01: But something like that that says then by the time it talks to you says, yes, I understand. I know what you're talking about because I went and looked and just the way we do like, hey, do you remember we worked on that? Well, of course. Yes. What were we thinking? Yeah. Yeah. Well, it remembers. Yeah.
[26:12-26:12] UNKNOWN: But
[26:12-26:12] SPEAKER_01: it's in
[26:12-26:18] SPEAKER_02: there like a person might go like, yeah, what was that thing we were coming up with? It's going to go do that.
[26:19-26:19] UNKNOWN: And
[26:19-26:35] SPEAKER_01: then now it has this context and it's like, OK, well, let's keep working on it. Like the areas that we like. Here's the areas for improvement. Here's the latest task. Here's like just like it does in the first. Next step. Next up is this because that's where we work. And
[26:35-26:58] SPEAKER_02: sorry, at the end of the first step, it should no matter how even if it's a new topic and there's nothing in the database, it should look, go, oh, this is brand new. We're going to start going and then start a new check because basically you should always start a new one after the first pass of like check everything. Look at the previous summary. Make your own. Compare them. Let's go start a new chat. Let's
[26:58-27:06] SPEAKER_01: roll. Right. Some sort of loading process of like here's the context of what we're about to talk about.
[27:06-27:11] SPEAKER_02: It's a better defined set of rules in front of a vector database.
[27:12-27:12] UNKNOWN: Yes,
[27:12-27:12] SPEAKER_02: it
[27:12-27:14] SPEAKER_01: is. And this combination of rules.
[27:14-27:14] UNKNOWN: When
[27:14-27:18] SPEAKER_01: you when I say new session, whatever, what I'm not the magic word.
[27:18-27:18] UNKNOWN: Super
[27:18-27:21] SPEAKER_01: robust, but not too wordy. Right. Go look for that.
[27:22-27:22] UNKNOWN: I
[27:22-27:26] SPEAKER_01: want effectively what we're saying is start a new session on this topic. Yeah.
[27:27-27:27] UNKNOWN: And
[27:27-27:54] SPEAKER_02: it has a very all the topics are available to it because we're not just using basic file structure. And yeah, it has a start session, start a protocol and it goes through it. And it's like I said, it's just more robust than this one and very like get rid of all the fluff. Right. Like here's exactly what I want you to do every time you have a question. Here's what to do first. And all that stuff like.
[27:54-28:02] SPEAKER_01: Yeah, it is like that I can think of it at now as a it's not a function. Right. Because we're talking elegant.
[28:02-28:02] UNKNOWN: But
[28:02-28:18] SPEAKER_01: like literally new session brackets topic. Yeah. Like if like in the like in the background, that's effectively what we're like start a new session, execute the new session protocol on this topic. And it's going to go
[28:18-28:18] SPEAKER_02: in.
[28:19-28:19] UNKNOWN: In
[28:19-28:49] SPEAKER_02: theory, the first actual decision, a eye of that aside from the database, I don't understand the actual interaction is when it is the first time it does anything is actually writing the first summary because reading is just a database called. Right. Like up to that, it writes a summary and then compares it. That's probably a I don't actually just want to run like a diff. Right. But I do comparison and then run. But we can get up to like having a lot of understanding without being involved
[28:49-28:50] SPEAKER_01: yet.
[28:50-28:50] UNKNOWN: Right. And
[28:50-28:59] SPEAKER_01: so as compared to Gemini, it is a specific focus. Yeah, it's a focus model. It's your personal.
[28:59-28:59] UNKNOWN: I
[28:59-29:06] SPEAKER_01: want to. It's like I don't even know that this personal because personal means it knows things about me. It's like,
[29:07-29:07] UNKNOWN: well, I
[29:07-29:15] SPEAKER_01: want it depends on what you do. That's true. But I want you to load a specific topic and guide this specific conversation.
[29:15-29:27] SPEAKER_02: I mean, it's going to know more personal stuff about you than you would expect off of just these probably from just like chit chat and their research or even like a little bit of tangents. We've got on it here.
[29:27-29:27] SPEAKER_01: But
[29:27-29:40] SPEAKER_02: yeah. And the more you do that, like if you got to like we've got wearables that can record all day, it's like I mean, you make your judgment call on what you give it.
[29:41-29:41] UNKNOWN: But
[29:41-29:59] SPEAKER_02: like that's the that's the direction we're headed. It's like the way we've got people have gotten comfortable with having 10 cameras in every room they ever walk into. They'll get comfortable with the fact that there's 30 now and they're getting up. Right.
[29:59-30:05] SPEAKER_01: I think the issue is not with the recording. It is with privacy. It's like,
[30:05-30:05] UNKNOWN: well,
[30:05-30:09] SPEAKER_01: I'm fine with me having and you having that's what I'm
[30:09-30:09] UNKNOWN: saying.
[30:09-30:16] SPEAKER_01: LLM or whatever my system having information about me. I'm not OK with corporation having that information about me.
[30:16-30:16] UNKNOWN: I know 15 years
[30:16-30:17] SPEAKER_01: ago,
[30:18-30:18] UNKNOWN: if
[30:18-30:37] SPEAKER_02: somebody was walking through and just recording people and being like, so if you can't and you're behind it, you're like, what the fuck are you doing? Do you get it? Right. And now it was like that. Yeah, exactly. You point the camera at somebody like what's going on, bro? What's good with you? Right. And now it's just like you have them in your house. Of course I have a camera because that's what
[30:37-30:38] SPEAKER_01: I upload to Instagram.
[30:39-30:45] SPEAKER_02: The scary LLM that you don't want to have your stuff. That's who owns that camera that's in the living room. Yeah.
[30:45-30:45] UNKNOWN: And
[30:45-30:53] SPEAKER_02: that one. And I think it'll just become comfortable. Yeah, everyone's wearing glasses and they're always recording. It just is what it is. Yeah,
[30:53-30:54] SPEAKER_01: I mean,
[30:54-30:54] UNKNOWN: I
[30:54-30:57] SPEAKER_01: think there's change in subject. There's a
[30:57-30:57] UNKNOWN: there
[30:57-31:03] SPEAKER_01: is a upside to that. You can't lie unless you can manipulate the data stream. I mean, that's like
[31:03-31:07] SPEAKER_02: there's good sides of any possible scenario.
[31:07-31:07] UNKNOWN: So
[31:07-31:13] SPEAKER_02: like absolute straight up surveillance state crime does drop.
[31:13-31:14] SPEAKER_01: Right.
[31:14-31:40] SPEAKER_02: I mean, because and people will argue like, well, privacy doesn't matter until it matters for you and all this different stuff. But it's like, I don't really know. I'm kind of on the evil motherfuckers are running the shit no matter what. And they're all arguing about rights to just convince us that they're the one that can be the evil motherfucker running the shit. So like, what do I give a fuck if they're spying on each other? Right. They can look at what I'm doing, too. It's like the classic argument that everybody dismisses.
[31:41-31:41] UNKNOWN: But
[31:41-31:43] SPEAKER_02: like, if you got nothing to do, you
[31:43-31:44] SPEAKER_01: can manipulate it.
[31:44-31:44] UNKNOWN: I
[31:44-31:51] SPEAKER_01: think that's the thing is like what they're going to get with that. Hey, I saw you, you know, molesting this child.
[31:51-31:51] UNKNOWN: Like,
[31:51-31:53] SPEAKER_01: what are you like? Here's the video site.
[31:53-32:03] SPEAKER_02: The problem is you can't be an enemy of the state. But I have no plans of being the enemy of the state and the state might get bad. But like, I'm
[32:03-32:03] UNKNOWN: going
[32:03-32:18] SPEAKER_02: to just try to get by. Right. And regardless, I'm not willing to do anything that would have an effect. Because I don't think anything would. And you have to seriously alter your life and put your loved ones in
[32:18-32:18] UNKNOWN: like
[32:18-32:39] SPEAKER_02: all that. Yeah, 100 percent. And so and I want some like fix yourself and then worry about everybody else. But I don't even know where I was going with all that. Oh, yeah, the evil motherfuckers are running things no matter what. That's what's happening. It's bad at the top. You have to be bad to play the game.
[32:39-32:39] UNKNOWN: To
[32:39-32:47] SPEAKER_02: get to the top. Right. And so why waste my time worrying about what they're doing? I'm going to just do me.
[32:47-32:50] SPEAKER_01: So before we go to the YouTube video
[32:50-32:50] UNKNOWN: or
[32:50-32:59] SPEAKER_01: whatever, what is so say we like I was getting ready to go on, but I don't want to. Let me just summarize the capabilities of the system.
[32:59-32:59] UNKNOWN: I
[32:59-33:05] SPEAKER_01: think there's several. One is general information, ingestion, categorization, indexing, blah,
[33:05-33:05] UNKNOWN: blah,
[33:05-33:06] SPEAKER_01: blah. It's
[33:06-33:06] UNKNOWN: like a brain.
[33:06-33:07] SPEAKER_01: Yeah, it's like
[33:07-33:07] UNKNOWN: a
[33:07-33:08] SPEAKER_02: brain
[33:08-33:08] SPEAKER_01: is one
[33:08-33:09] SPEAKER_02: thing.
[33:09-33:09] UNKNOWN: Yes.
[33:10-33:15] SPEAKER_02: It's like providing focus for a general element is
[33:15-33:49] SPEAKER_01: like a one line. Yeah. And that the way that works is general information, ingestion, indexing it into a brain and then being able to search for, bring back information from that and to bring up a focus topic session. And then using that, the power of the LLM and that focus topic session to get work done. Very similar to what we do. Load this context, start a new session. Here's what we're working on. Work, work, work, work. Log in and start a new session and keep doing it.
[33:49-33:49] UNKNOWN: Like
[33:49-34:20] SPEAKER_01: maybe it's doing a little bit different in each session, but I'm ultra focused on this topic. And that's how I'm progressing my work because I'm using the power of this LLM, right. Focused down to a very specific topic. So that's kind of what the system we imagine. So now next layer, which you asked me this yesterday. Well, if say we have this system that's 80 percent, 90 percent perfected. It's really good at driving focused conversations and getting tasks done. What tasks do we want to do? Right. How do we want to use this?
[34:20-34:39] SPEAKER_02: Yeah, I think there's multiples. So you can have like a focused idea, right. And you sit down and you brainstorm and it's like, hey, I want to make this short film. And you start jamming and it starts giving stuff back and you start jamming again. And it's very human plus AI interacting with each other.
[34:39-34:39] UNKNOWN: And
[34:39-34:45] SPEAKER_02: that's very powerful. Yeah. But then there's also the passive, like almost idea generation, which is not just,
[34:46-34:46] UNKNOWN: hey,
[34:46-35:18] SPEAKER_02: give me a 10 business ideas. It's record long conversations with several people and or just whatever record a lot and then have it do its thing with classification and all this stuff and come up with like ideas you didn't know you had type of stuff. And that's where I think it's like active passive. There's two roles and it just depends on what you have an idea. Get active with it, use the shit out of it, interact. Focus on exactly. And then if you don't, then just like occasionally go like, hey, anything come up last week that sounded
[35:18-35:21] SPEAKER_01: interesting. Spin the roller decks like, hey,
[35:22-35:22] UNKNOWN: right.
[35:22-35:22] SPEAKER_01: What do
[35:22-35:23] SPEAKER_02: you, you
[35:23-35:23] SPEAKER_01: should talk about this.
[35:24-35:35] SPEAKER_02: Yeah. Search X for trending topics. See if I brought any of them up independently in these conversations I had last week. If so, send them to me and maybe we dive deeper on that type of.
[35:36-35:36] UNKNOWN: Yeah,
[35:36-35:50] SPEAKER_01: it's like it needs to be this very robust indexing system. Yeah, ultimately everything in this category is a time stamp and everything like that. It's context management
[35:50-35:52] SPEAKER_02: through vector
[35:52-35:54] SPEAKER_01: databases and highly
[35:54-35:55] SPEAKER_02: optimized workflows.
[35:56-36:01] SPEAKER_01: It almost feels like this is a big boy system. I think that is going to take a billion dollars to produce. I don't
[36:01-36:09] SPEAKER_02: know. Like what have we said that's not currently available open source? Nothing. Other than just the whatever AI we choose to run with an API.
[36:10-36:10] UNKNOWN: Like
[36:10-36:11] SPEAKER_02: I think. Well, those are
[36:11-36:15] SPEAKER_01: available open source too. And you can run them in the closet, but your closet is the house.
[36:19-36:19] SPEAKER_02: Yeah,
[36:19-36:19] UNKNOWN: I
[36:19-36:27] SPEAKER_02: think we'll be hitting some API for our AI interactions. But beyond that, it's, I mean,
[36:27-36:27] UNKNOWN: I
[36:27-36:48] SPEAKER_02: don't know what a vector database is. But that's I think it is a big boy toy and like the fully optimized one that a million people can use every second. We're not going to build. Right. We're going to put this thing together. Somebody is going to go like, oh, that's a good idea. If we put some funding behind it, it'll work. Let us have that. And we'll go, OK, sounds good.
[36:48-36:48] UNKNOWN: I'm going to
[36:48-36:49] SPEAKER_02: get out of here.
[36:49-37:10] SPEAKER_01: What do you think about taking this conversation that we've had for the last 45 minutes, 30 minutes, whatever. Forty five minutes. Transcribe it in with the paid version right now and loading that and doing a gym session. Yeah, like right now. It's a good idea. Instead of like because I don't even know.

==================================================
Generated on: 2025-07-30 16:26:40
Total words: 6409
Total speakers: 4
==================================================




Summary:

creation_date: 2025-07-30 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1618_ZOOM0036_transcript.txt participants: [SPEAKER_01, SPEAKER_02, SPEAKER_00]
Executive Summary
This meeting explores the core technical and philosophical challenges of building a universal AI assistant, focusing on the critical limitation of context windows. The participants discuss how large language models (LLMs) are hampered by their inability to retain long-term context, which prevents them from fulfilling their potential as true assistants. They brainstorm a system that uses a "session-based" approach, where the AI dynamically builds a real-time [[README]] or context summary for a specific topic, allowing it to have focused, productive conversations. This system would involve a primary agent for interaction and a secondary "auditor" agent for summarizing and preparing context for subsequent sessions, effectively creating a seamless, continuous dialogue by intelligently managing and shedding context.

Key Topics Discussed
	•	The Problem of Context in LLMs:
	•	The central theme is the current "roadblock" of limited context windows in LLMs, which is seen as the primary obstacle to achieving more advanced [[AI Tools]] [01:36-01:55].
	•	They discuss how models lose effectiveness in long-lasting conversations and the need for a system that can intelligently manage and "shed" unnecessary context to maintain focus [13:13-13:34].
	•	There's speculation that corporate models from companies like [[OpenAI]] and [[Google]] are further limited by built-in guardrails, and a desire for a "bare metal" model with raw power is expressed [19:10-19:35].
	•	Proposed Solution: Session-Based Context Management:
	•	The core idea is to create a system that can take any conversation, parse it, and index it into a [[Knowledge Graph]] or "[[brain]]" [05:27-05:42].
	•	Real-Time [[README]] Generation: When a topic is initiated, the system would conduct a "research project" on its internal database, build a "real-time [[README]]" with the relevant context, and then load a new, focused conversation (a "session") based on that summary [11:38-12:12].
	•	Seamless Context Refraction: This process of automatically rolling from one focused session to the next would be seamless to the user. The system would manage context by monitoring token count and automatically starting a new session when a threshold is reached, ensuring the AI is always operating with the minimum necessary context [16:33-17:21].
	•	Worker and Auditor Agents: They conceptualize a two-agent system: a "worker" agent that interacts with the user and an "auditor" agent that works in the background, taking detailed notes to create the context for the next session [17:21-17:54].
	•	System Capabilities and Use Cases:
	•	Universal Assistant: The ultimate goal is to build a "universal assistant," fulfilling the original promise of tools like Siri but with the ability to handle complex, multi-turn tasks and remember past conversations [02:35-02:48].
	•	Active vs. Passive Modes: The system could be used in two primary ways:
	•	Active Mode: For focused brainstorming and task completion, such as developing a short [[Film Project]] [34:20-34:39].
	•	Passive Mode: For idea generation by recording and analyzing long-form conversations to identify recurring themes and novel ideas the participants might have missed [34:39-35:18].

Action Items & Decisions
	•	Decision: The current approach of manually managing context with [[README]] files is a valid but inefficient prototype for the desired automated system [09:19-09:47].
	•	Action: The immediate next step is to research vector databases to better understand how they can serve as the foundational "[[brain]]" or memory for the proposed system [18:40-19:00].
	•	Decision: The system's architecture should be designed around the concept of "sessions"—focused, context-loaded conversations that can be seamlessly chained together [13:13-13:34].

Suggested New Links/Tags
	•	[[Universal Assistant]]

Linked Concepts
	•	[[AI Agents]]
	•	[[AI Tools]]
	•	[[Context Compression]]
	•	[[Film Project]]
	•	[[GCP]]
	•	[[Gemini]]
	•	[[GitHub]]
	•	[[Knowledge Graph]]
	•	[[Kubernetes]]
	•	[[Obsidian]]
	•	[[OpenAI]]
	•	[[README]]
	•	[[Seamless Context Refraction]]
	•	[[Session Log]]
	•	[[Tincture]]
	•	[[Transcription Service]]
	•	[[Vibe Coding]]
	•	[[brain]]

#Tags
	•	#AI
	•	#Automation
	•	#GCP
	•	#SoftwareDevelopment
	•	#Startups

zoom37
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1527_ZOOM0037_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:00] UNKNOWN: I
[00:00-00:00] SPEAKER_02: don't
[00:00-00:00] UNKNOWN: want
[00:00-00:50] SPEAKER_02: to play for that ever again. Is it time already? Not even four minutes. Do you remember how I did this?
[00:50-00:50] UNKNOWN: I just
[00:50-00:51] SPEAKER_02: updated the speaker names.
[00:52-00:57] SPEAKER_01: Um, I don't. There
[00:57-00:59] SPEAKER_02: it is. Um,
[00:59-00:59] UNKNOWN: I don't.
[00:59-01:03] SPEAKER_02: Um, what, I'm speaker two?
[01:07-01:09] SPEAKER_01: Uh, I think you were talking first. Yeah, but
[01:09-01:15] SPEAKER_02: it started with speaker two for whatever reason. What I was thinking is I don't understand how models work. I said that,
[01:16-01:16] UNKNOWN: right?
[01:16-01:17] SPEAKER_01: Yeah.
[01:53-01:54] UNKNOWN: Okay.
[02:00-02:01] SPEAKER_02: Yeah.
[02:01-02:01] UNKNOWN: So
[02:01-02:09] SPEAKER_02: he did a 37 minute diarized transcription and four minutes. No, it was faster than that. Yeah.
[02:09-02:38] SPEAKER_01: Which is what we anticipate. Like if those numbers that we were, if it's 50 times faster on a GPU, then that's about right. It's taken 20 seconds to do each step. Right. And then alignment and I don't know. It'll take us all as longer as currently designed just to start, but that's fine. Right. If we have people paying us $12 for an hour, we'll leave it on. Exactly.
[02:40-02:58] SPEAKER_02: It doesn't necessarily need that level of performance, but it needs to be. It shouldn't take 1 .8x as long as the material. $12 for this. Fine. Still got
[02:58-02:58] UNKNOWN: a
[02:58-02:59] SPEAKER_02: few minutes left.
[03:00-03:00] SPEAKER_01: Yeah.
[03:01-03:01] SPEAKER_02: We'll
[03:01-03:04] SPEAKER_01: go get that transcription and frame it. Exactly.
[03:07-03:14] SPEAKER_02: Actually, I don't want to upload files. I actually don't think it performs very well with uploaded files. Versus just copy and
[03:14-03:16] SPEAKER_01: pasting it in? Yeah, I agree.
[03:34-04:16] UNKNOWN: Okay. Okay.
[04:56-04:58] SPEAKER_01: Okay. The
[04:58-04:58] UNKNOWN: next
[04:58-05:01] SPEAKER_01: thing is context management.
[05:01-05:01] SPEAKER_03: There you
[05:01-05:03] SPEAKER_02: go.
[05:04-05:04] UNKNOWN: Where
[05:04-05:08] SPEAKER_02: our instincts are taking us down the right path. Or maybe the wrong one.
[05:10-05:11] SPEAKER_01: I think we're good.
[05:55-08:26] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay.
[08:38-08:46] SPEAKER_01: Yeah, so you can basically put properties into it. Like it was describing how it works. Basically,
[08:46-08:46] UNKNOWN: it
[08:46-08:50] SPEAKER_01: would naturally put dogs and puppies closer together than dogs and cars. And I was like,
[08:51-08:51] UNKNOWN: well,
[08:51-09:03] SPEAKER_01: what if in my project dogs are actually closer to cars than puppies? It's like basically it's a line of text and it is dog related to car. And it's either a one or a zero. So you can like basically force connections if you want.
[09:03-09:23] SPEAKER_02: Got it. Jim and I is really good at this. Yeah, so this is what it came up with. You can look at either one of them. Oh, you share
[09:23-09:23] SPEAKER_01: that
[09:23-10:21] SPEAKER_02: with me? And then I put the full transcript on the second tab. It's really good at counting our thoughts.
[10:44-11:49] UNKNOWN: Okay. Okay. Okay.
[11:57-12:08] SPEAKER_01: I would say almost trigger a new chat.
[12:09-12:12] SPEAKER_02: Yeah, I would say change it.
[12:47-13:43] SPEAKER_01: Oh, it does it. It's a Nixon's. That's the token threshold. That's fun.
[13:44-13:46] SPEAKER_02: Yeah, and we are doing
[13:46-13:47] SPEAKER_01: it. Yeah,
[13:47-14:26] SPEAKER_02: so I want to load this document and it has the transcript in it too. So I don't know if you you don't use Jim and I very much, but you can load a document by adding it from the drive and it will add all the tabs. You don't actually have to download it. But I want to I don't have my session rules. Because they're on your work. Yeah, because what I would do is load the session rules right here and upload that file.
[14:26-14:30] SPEAKER_01: I mean, they're files on your computer for the cursor rules.
[14:30-14:44] SPEAKER_02: Yeah, so I guess a little bit different doing it just in here for brainstorming. I can get them.
[14:45-14:45] UNKNOWN: I
[14:45-14:46] SPEAKER_02: have them right here.
[14:49-14:49] UNKNOWN: It
[14:49-14:51] SPEAKER_02: really I'm going to try
[14:51-14:57] SPEAKER_01: to adapt. You could have cursor say print all the rules in one response.
[15:04-15:05] UNKNOWN: I'm
[15:05-16:05] SPEAKER_02: going to start a new session or a new chat. Did we have somewhere like the definition of a session?
[16:06-16:08] SPEAKER_01: I think that has been
[16:08-16:09] SPEAKER_02: added to the
[16:09-16:18] SPEAKER_01: readme. Maybe. Or it's been absorbed into other rules.
[16:24-16:24] UNKNOWN: I
[16:24-16:27] SPEAKER_01: thought we had somewhere like literally it was defined.
[16:27-16:27] UNKNOWN: We
[16:27-16:55] SPEAKER_01: did. We have at some point. I just don't know. We've updated the rules a few times and maybe it left that out at one point and we didn't catch it. Whatever. Look in like you scroll up and what it printed out.
[17:06-17:07] UNKNOWN: Yeah
[17:07-17:13] SPEAKER_02: I don't think we lost it. It doesn't matter.
[17:13-17:20] SPEAKER_01: Yeah the definition of a session like it will get that off of that document.
[17:24-17:26] SPEAKER_02: I'm going to call it a brainstorming.
[17:32-17:34] SPEAKER_01: We could even test out deep research places.
[17:35-17:35] SPEAKER_02: Yeah.
[18:10-18:10] UNKNOWN: Oh.
[18:11-18:40] SPEAKER_02: I want to go over here actually. I'm just going to start with that.
[18:40-18:47] SPEAKER_01: Oh yeah because I guess the rules will be.
[18:48-18:51] SPEAKER_02: They're more designed to like okay update it at the end of the session.
[18:52-19:04] SPEAKER_01: Yeah. They might have some artifacts from old shit and they're also very much worried in places.
[19:07-19:08] UNKNOWN: Yeah.
[20:11-20:12] SPEAKER_01: I
[20:12-20:13] SPEAKER_00: did.
[20:44-20:49] SPEAKER_02: I want to talk more about.
[20:49-20:50] SPEAKER_00: Yeah.
[21:20-21:22] SPEAKER_02: Yeah.
[21:28-21:29] SPEAKER_01: That
[21:29-21:29] UNKNOWN: is basically.
[21:29-21:31] SPEAKER_01: What's our priority?
[21:32-21:34] SPEAKER_02: Yeah that is basically
[21:34-21:34] UNKNOWN: the last thing.
[21:34-22:07] SPEAKER_02: Yes. No. Yeah, let's do that. Certainly not fast.
[22:07-22:08] SPEAKER_00: No.
[22:13-22:17] SPEAKER_01: And this is pro, so it's the least fast.
[22:17-22:18] SPEAKER_00: Right.
[22:34-22:37] SPEAKER_02: I definitely agree with that.
[22:44-22:44] UNKNOWN: It's
[22:44-22:47] SPEAKER_02: starting to sound like HN Space.
[22:47-22:48] SPEAKER_01: Love it.
[23:06-23:21] SPEAKER_02: What do you think about that? I think for now, this probably sounds terrible. But don't put any limits over privacy. Like just ingest everything. Maybe not.
[23:21-23:26] SPEAKER_01: I'm not worried about privacy so much as it just becoming a jumbled mess. It's automated.
[23:41-23:44] SPEAKER_02: I don't know. Is that right?
[23:47-23:48] UNKNOWN: Yeah.
[23:55-24:04] SPEAKER_02: If this may be a time when you put your comments, like we talked about, like just reading everything and responding directly
[24:04-24:04] UNKNOWN: to your comments. I'm not going to
[24:04-24:26] SPEAKER_02: take your everything. I would say next level.
[24:26-24:27] SPEAKER_01: Yeah, I agree.
[24:29-24:30] SPEAKER_02: I'm
[24:30-24:30] UNKNOWN: going
[24:30-24:31] SPEAKER_02: to focus for now.
[24:31-24:37] SPEAKER_01: It's a different problem and it's basically already solved problem.
[24:37-24:38] SPEAKER_02: Right.
[25:21-25:26] SPEAKER_01: I think that's as simple as like plain English.
[25:26-25:26] UNKNOWN: You
[25:26-25:37] SPEAKER_01: just say, hey, these things also have some peripheral connection to this topic if we want to also dive into them at some point.
[25:38-25:50] SPEAKER_02: Yeah. And I would say and maybe offer to, I'm going to say load both topics at the same time.
[25:51-25:57] SPEAKER_01: Because this is a focus section. Right. So inherently there's going to be a lot of human activity as well.
[25:58-25:59] SPEAKER_03: Yeah.
[26:21-26:40] SPEAKER_01: That's interesting. My first instinct is yes, but then I go like, well, maybe no, but they can say they can comment about it. But I think they should be able to interact and edit it.
[26:41-26:41] UNKNOWN: Sure.
[27:10-27:11] SPEAKER_01: Yeah.
[27:48-27:51] SPEAKER_02: That's interesting. Yeah. That is monitoring focus
[27:51-27:54] SPEAKER_01: and it's configurable. Like the user can go like,
[27:55-27:55] UNKNOWN: no,
[27:55-27:56] SPEAKER_01: stop doing that.
[27:57-27:57] UNKNOWN: I
[27:57-28:28] SPEAKER_01: do like that. So the next one, like I like that, but it shouldn't, it's got to be pretty nuanced about when it cycles. No. And maybe it just like cursor does it. It's like,
[28:29-28:29] UNKNOWN: hey,
[28:29-28:38] SPEAKER_01: you want to do a new chat? That's probably a good idea. I also really like if we can make it super smooth and you just never even know.
[28:38-28:39] SPEAKER_02: Yep.
[29:01-29:15] SPEAKER_01: I guess it's not like disastrous if it literally stops in the middle of some command. Because it can just pick that command right back up. But it'd be better if it found like reasonable stopping points.
[29:17-29:19] SPEAKER_02: I agree.
[29:19-29:20] SPEAKER_01: But I think that's good.
[29:37-29:38] UNKNOWN: So
[29:38-29:45] SPEAKER_01: I think if it genuinely requires two topics, it should like that should be.
[29:45-29:48] SPEAKER_02: It should do that. It should load in context.
[29:49-29:56] SPEAKER_01: And like merge them together and it might require some user interaction. Like here's how we're doing it. I'm
[29:56-29:56] UNKNOWN: just
[29:56-29:59] SPEAKER_01: like explaining the work you're doing as you do it.
[30:05-30:44] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay.
[30:57-30:57] SPEAKER_01: All.
[30:58-30:58] UNKNOWN: All
[30:58-31:18] SPEAKER_01: of them. I would say any that is required and to the extent of if it does an internet search, it's almost worth requiring it to look around and see if there's a tool that could have done this available. And like recommended that might be too much for right now. But all of
[31:18-31:19] UNKNOWN: them.
[31:19-31:19] SPEAKER_02: Yeah.
[31:34-31:58] UNKNOWN: Okay. Yeah.
[32:14-32:19] SPEAKER_01: Okay. Yeah, that's true. Okay.
[32:27-32:28] UNKNOWN: Okay.
[32:28-32:36] SPEAKER_01: And like probably some sort of react or for whatever front end. Yeah.
[32:59-33:01] SPEAKER_02: I'm going to
[33:01-33:01] UNKNOWN: say.
[33:10-33:18] SPEAKER_01: What? Like you want to capture everything in theory, right? You're starting for
[33:18-33:20] SPEAKER_02: this one? What do you?
[33:21-33:26] SPEAKER_01: I'm thinking. Oh, are you looking at? Okay. Yeah.
[33:26-33:26] UNKNOWN: Because
[33:26-33:33] SPEAKER_01: data is good. No matter what. In theory. Yeah. But then there needs to be like an escalation path.
[33:33-33:34] UNKNOWN: Like.
[33:34-33:49] SPEAKER_01: Either delete something or market as. Not. Not readily valuable or something. But I don't. I don't
[33:49-33:49] UNKNOWN: know.
[33:52-34:17] SPEAKER_02: I would say the user. Yeah. The filter
[34:17-34:32] SPEAKER_01: is what they upload.
[34:33-34:36] SPEAKER_02: Yes. Don't upload it.
[34:36-34:36] UNKNOWN: If
[34:36-34:53] SPEAKER_02: it has some information. And just the ingestion process. Is this going to work for it? And you can go back and say, Hey, get rid of that thing about whatever. But it's just going to ingest
[34:53-35:01] SPEAKER_01: it. Yeah. That's what makes sense to me. New ideas.
[35:02-35:02] UNKNOWN: I
[35:02-35:05] SPEAKER_01: think. How to avoid being intrusive.
[35:05-35:05] UNKNOWN: I
[35:05-35:10] SPEAKER_01: think it's like literally. the way you would get a text message is like,
[35:10-35:10] UNKNOWN: hey,
[35:10-35:13] SPEAKER_01: you've got some new messages from your assistant.
[35:13-35:24] SPEAKER_02: Yep. Here, let me finish it. Say that again, if this is for?
[35:24-35:35] SPEAKER_01: That last bullet. Basically the same way a text message or an email would be received inside of the application and just be like, hey, you've got a notification.
[35:39-35:40] UNKNOWN: Yep.
[35:54-36:02] SPEAKER_02: Yeah. Yeah, it runs some process in the background and says, hey, what if you, here's a new idea.
[36:02-36:02] UNKNOWN: It's
[36:02-36:02] SPEAKER_02: almost like,
[36:02-36:11] SPEAKER_01: like if you were to go over all your conversations over there on the left side, one of them would have a little red dot on it saying like, hey, there's an idea
[36:11-36:13] SPEAKER_02: associated with this.
[36:14-36:15] SPEAKER_01: And if they want to look at it,
[36:15-36:15] UNKNOWN: they
[36:15-36:25] SPEAKER_01: can, if not, they can ignore it. And so it shouldn't be, it should literally be like ignorable, like not necessarily you have to do anything, but you can just be like, yeah, I'm not looking at that right now.
[36:57-38:01] UNKNOWN: Okay. Okay. I
[38:01-38:03] SPEAKER_01: don't hate a staging area.
[38:14-38:39] UNKNOWN: Okay. Yep,
[38:53-38:54] SPEAKER_02: that's perfect.
[38:54-39:01] SPEAKER_01: And there's ultimately, if you were to edit that readme, you would then have to go, hey, I edited the readme. Go look at it again. Right. Right, exactly.
[39:03-39:14] UNKNOWN: Okay. Okay. Okay.
[39:14-39:17] SPEAKER_02: I love this, that this kind of,
[39:17-39:17] UNKNOWN: I
[39:17-39:20] SPEAKER_02: agree. Like some texts that say start a session.
[39:20-39:25] SPEAKER_01: And there are, there's a defined command and stuff like that.
[39:55-39:55] UNKNOWN: Okay.
[39:59-40:02] SPEAKER_02: Dedicated insects have discovered, are you kind of, yeah.
[40:02-40:25] SPEAKER_01: Yeah, I like that a little bit better even though I was thinking. Yeah,
[40:25-40:25] UNKNOWN: I
[40:25-40:43] SPEAKER_01: would add something like the token counter plus the seamless context refraction. So like the token counter triggers when you should look for an offering for a new chat or a new session.
[41:29-42:50] UNKNOWN: Okay. Okay. Okay. Okay.
[43:27-43:29] SPEAKER_01: Sorry.
[44:08-46:31] UNKNOWN: Okay. Sorry. Okay. Okay. Okay.
[46:40-46:41] SPEAKER_01: I like it.
[46:41-47:10] SPEAKER_02: Yeah, it is. It has captured what we talked about. For sure. I'll do that.
[47:51-48:20] UNKNOWN: Okay. Okay.
[48:56-48:57] SPEAKER_01: Any
[48:57-48:58] SPEAKER_02: thoughts?
[48:59-49:11] SPEAKER_01: I mean, it makes sense to me. I don't really have a picture of like what the entire project looks like in my head. I agree.
[49:11-49:11] UNKNOWN: Like
[49:11-49:31] SPEAKER_01: how it access the transcription service and all of that. I probably need to get this document and then spend some time talking to it like individually maybe even.
[49:31-49:31] SPEAKER_02: Right,
[49:32-50:28] UNKNOWN: yeah. Okay. All right.
[50:29-50:33] SPEAKER_02: I'm gonna get coffee anyways, but it's probably time. It's a reasonable start.
[50:33-50:33] UNKNOWN: We
[50:33-50:44] SPEAKER_01: got 20 minutes if we wanna just try to think of something. Yeah, that's true. But I don't know that we need to force it take this out there for coffee and if conversation starts, then that's what it is.
[50:46-50:58] UNKNOWN: The thought that's immediately in my head is it's actually feasible for us to do with a team or two a small team in spare time. Like is it too big?
[50:59-51:25] SPEAKER_01: I mean, I don't, it's big, but I don't think it's I think there are plenty of small steps that like worst case we get 50 % of the way through this whole project and then Google releases the product. Right. But then we know more about the product. I think almost worst case is your setting up to get an AI job.
[51:26-51:26] UNKNOWN: Sure,
[51:26-51:41] SPEAKER_01: sure. They drop the products, you'll be so knowledgeable about them. That's and then the other side is they drop the product but one step in our product is a little bit better. Yeah. And we go like, hey,
[51:41-51:41] UNKNOWN: can
[51:41-51:45] SPEAKER_01: you just like give it to the community at that point or something,
[51:45-51:45] UNKNOWN: I
[51:45-51:45] SPEAKER_01: don't know.
[51:47-51:47] UNKNOWN: But
[51:47-51:56] SPEAKER_01: that's like their worst case. Best case is like, holy shit, you guys beat us to it. We need it.
[52:02-52:04] SPEAKER_02: I'm excited about.
[52:06-52:17] SPEAKER_01: Yeah, me too. I think it's gonna be good. The way pork reheats and then the general coming together with like the veggies and stuff is gonna be the unknown.
[52:18-52:19] UNKNOWN: Yeah. That
[52:19-53:00] SPEAKER_01: pork is bomb. I was actually thinking about a system where we wake up and put a small pork loin on the Traeger in the morning and then it's ready at like lunchtime and then it's fresh sliced and all that stuff. That would be fantastic. Like theoretically not that even hard to pull off. I don't know if we wanna keep this thing and like clean it every day. So, but I do think the thinner slices are better. The previous stuff we do. I think that not going even thinner than it is now. I think that is like almost the perfect thickness for a pork loin slice in my opinion. Yeah, it's
[53:00-53:00] UNKNOWN: solid.
[53:02-53:15] SPEAKER_01: Let's see, I also have thought we can make six soft boiled eggs and not have to boil the water because Mel's got a thing. Will it do soft boil? I think it has to do with how much water you put in it. Hmm,
[53:16-53:16] SPEAKER_02: yeah,
[53:16-53:16] SPEAKER_01: that's
[53:16-53:16] UNKNOWN: the
[53:16-53:17] SPEAKER_01: answer to
[53:17-53:24] SPEAKER_02: that. It says it's done whenever the water boils up. Got it, yeah, so. I think that
[53:24-53:29] SPEAKER_01: it's got the little quarter thing or whatever that is. Hmm, exactly.
[53:36-53:50] SPEAKER_02: It was right next to the blend right there. Oh yeah, that's the answer. We can do them in here and they're just ready at the same time.
[53:59-54:12] SPEAKER_01: Yeah, it's like exactly. And you also use the bottom to puncture the egg. Yep, so soft is right there. There you go. That's it. And then take that, crack it,
[54:12-54:12] UNKNOWN: and
[54:12-54:23] SPEAKER_01: drop it in the boiling water and then bring it up even a little bit more. Yeah. I think it's gonna be bomb. That's it. I mean, I guess we can go ahead and start. What I was gonna
[54:23-54:31] SPEAKER_02: do is do it like right before, like do it, make it fresh. Like that. Might as
[54:31-54:33] SPEAKER_01: well, yeah, just do one of them in there.
[54:33-54:36] SPEAKER_02: Like that's part of the preparation, more than normal preparations, but it's also
[54:36-54:36] UNKNOWN: fresh.
[54:36-54:39] SPEAKER_02: It'll do it in the time that you boil the water too. Yeah.
[54:39-54:40] SPEAKER_01: All right, do
[54:40-54:40] UNKNOWN: you
[54:40-54:41] SPEAKER_01: wanna go ahead and call it?
[54:42-54:42] SPEAKER_02: I think
[54:42-54:43] SPEAKER_01: so.

==================================================
Generated on: 2025-07-30 15:36:51
Total words: 2482
Total speakers: 5
==================================================




Summary:


creation_date: 2025-07-30 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1527_ZOOM0037_transcript.txt participants: [SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_00]
Executive Summary
This meeting was a brainstorming session focused on defining the core mechanics of an [[AI Agents|AI assistant]]'s context management and user interaction model. The group discussed how the assistant should handle its context window, deciding on a "seamless context refraction" approach where the system automatically starts a new chat session when the token limit is approached, ensuring a smooth user experience. They explored how the assistant should manage and ingest user data, agreeing that it should ingest all provided information without privacy limits for now, with the user acting as the primary filter by choosing what to upload. The conversation also touched on how the assistant should present new ideas to the user, settling on a non-intrusive notification system. Finally, they briefly discussed a potential side project of reheating pork loin on a [[Traeger]] grill for fresh meal prep.
Key Topics Discussed
	•	[[AI Agents|AI Assistant]] [[Context Compression|Context Management]]:
	•	The team discussed how the assistant should handle its context window as it fills up.
	•	They decided on a "seamless context refraction" method, where the assistant would automatically and smoothly start a new chat session when the token counter indicates it's nearing the limit, similar to how [[Cursor]] prompts for a new chat [28:29-28:38].
	•	The goal is to make this transition as unnoticeable to the user as possible, creating a continuous flow of conversation [28:29-28:38].
	•	User Data Ingestion and Privacy:
	•	A key topic was how the assistant should handle user-provided data and privacy.
	•	The initial decision is to have the assistant ingest everything provided by the user without any built-in privacy limitations [23:06-23:21].
	•	The user is considered the primary filter; if information is sensitive, the user should not upload it [34:17-34:36].
	•	User Interaction and Idea Generation:
	•	The group brainstormed how the assistant should present new ideas or suggestions to the user without being intrusive.
	•	They agreed on a non-intrusive notification system, similar to a text message or an email notification within the application [35:05-35:13]. A small indicator, like a red dot on a conversation, would signal a new idea for the user to review at their convenience [36:02-36:11].
	•	Food and Cooking:
	•	A brief tangent on meal prep ideas, specifically about reheating a pork loin on a [[Traeger]] grill for fresh lunches [52:19-53:00].
	•	They also discussed using an egg cooker to make soft-boiled eggs to accompany the meal [53:02-53:15].
Action Items & Decisions
	•	Decision: The [[AI Agents|AI assistant]] will use a "seamless context refraction" approach to manage its context window, automatically starting new chats as the token limit is reached [28:29-28:38].
	•	Decision: For now, the assistant will ingest all user-provided data, with the user being responsible for filtering out sensitive information [34:17-34:36].
	•	Decision: New ideas from the assistant will be presented as non-intrusive notifications within the application [36:02-36:11].
Suggested New Links/Tags
	•	[[Seamless Context Refraction]]
Linked Concepts
	•	[[AI Agents]]
	•	[[Context Compression]]
	•	[[Cursor]]
	•	[[Gemini]]
	•	[[Seamless Context Refraction]]
	•	[[Traeger]]
	•	[[Transcription Service]]
#Tags
	•	#AI
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom38
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1706_ZOOM0038_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:12] SPEAKER_04: It will be fast. I mean there's this argument that I don't know what's the best strategy because theoretically you can say okay we'll process 15 at a time.
[00:13-01:01] SPEAKER_03: 10 hours of CPU versus 3 minutes of GPU is going to ultimately end up being pretty close. Maybe the GPU is a little more expensive because it is the better thing. But if you, especially if you're maximizing the GPU usage, then you should probably use however many you can max out with the Kubernetes cluster. Yeah, exactly. Did
[01:01-01:01] UNKNOWN: you
[01:01-01:03] SPEAKER_03: wake up like this morning?
[01:03-01:04] SPEAKER_04: A little bit.
[01:05-01:05] SPEAKER_03: Yeah, I
[01:05-01:08] SPEAKER_04: was struggling. But I made it.
[01:16-01:18] SPEAKER_05: I had to push through a little bit.
[01:20-01:25] SPEAKER_03: Those are the days that actually make you struggle. Yeah. It's easy. It's just easy.
[01:31-01:41] SPEAKER_04: Do you remember the name? It's like global I think.
[01:52-01:53] UNKNOWN: It's
[01:53-02:06] SPEAKER_05: like all regions or something like that. I guess I should directly have the
[02:06-02:07] UNKNOWN: email.
[02:18-02:21] SPEAKER_03: This is where your personal assistant would be useful.
[02:21-02:23] SPEAKER_04: Exactly. GPU is all regions.
[02:43-02:46] SPEAKER_05: Let's do it.
[03:25-03:25] UNKNOWN: Oh
[03:25-03:26] SPEAKER_04: yeah, I forgot we
[03:26-03:26] UNKNOWN: were
[03:26-03:28] SPEAKER_04: doing that.
[03:28-03:29] SPEAKER_00: I left it.
[03:37-03:38] SPEAKER_03: Here's cost.
[03:39-03:40] SPEAKER_05: We shall see.
[03:43-04:13] SPEAKER_03: And either way, even though we have a pod that we want to only have a CPU, I think our max has to be our max available GPUs. Yep, I agree. Our max pod number just needs to be that or we're going to get those errors because it's going to try to spin up other GPU pods if it needs to. Right. It's definitely going to try. And alignment is such a small task that
[04:13-04:26] SPEAKER_04: it can just happen at the very end. Unable to bring additional quota at this time.
[04:31-04:41] SPEAKER_03: So we need to show usage of a GPU? Right, probably. It might be worth even sending an email.
[04:41-04:41] UNKNOWN: Is
[04:41-04:46] SPEAKER_03: there an escalation path that is literally centered in the email like, bro, I really need this shit?
[04:47-04:47] SPEAKER_04: No,
[04:47-04:47] UNKNOWN: it
[04:47-04:58] SPEAKER_04: says, like there's a link. It says sales. Yeah, sales. And you're going to get FSR and... No. No.
[04:58-05:00] SPEAKER_03: Okay. So we've
[05:00-05:00] UNKNOWN: got
[05:00-05:10] SPEAKER_03: to use the GPU a little bit. Show that we understand the cost implications of said GPU.
[05:14-05:24] SPEAKER_04: Okay, fine. Yeah, the vast majority is still cloud run, which was mostly, it was in two days, a day and a half. It was the same instance.
[05:26-05:27] UNKNOWN: All right.
[05:30-05:35] SPEAKER_03: So we're going one, max one node on our Autopilot cluster.
[05:36-05:38] SPEAKER_04: Yeah, I think at least talk to Cursor about
[05:38-05:45] SPEAKER_03: it. Okay. I know we've been here before. But
[05:45-05:45] UNKNOWN: I
[05:45-06:35] SPEAKER_03: want to go back to Kubernetes. But it should be able to look at logs and get us right back to where we were. I agree. Like this is kind of the beta level or like the super early development version of what we're trying to build. I agree. It's going to go check the brain. Like go look at stuff. The brain just happens to only be one project that has it right now. Yeah, we'll do all of this. Get some context. Maybe take a way more condensed note of like, here's okay, I found what our next steps are and here's the information I need for it. Wipe context. Or start
[06:35-06:43] SPEAKER_04: new. New session. I'm going to specifically ask you like, hey, go review the last couple days of sessions.
[06:43-07:36] SPEAKER_03: Yeah. Like mention, it's going to, my guess is it's going to grep whatever keyword you do. Like it's going to grep autopilot cluster or something like that. And it can look at GitHub commits too. Yeah. Yeah. Once it's in your head,
[07:36-07:36] UNKNOWN: you
[07:36-07:37] SPEAKER_03: had a chance.
[08:33-09:02] UNKNOWN: Okay. Okay.
[09:20-09:28] SPEAKER_03: It's doing. Yeah, it's awesome. Whenever I watched it go back and look at commits, I was like, bro, it's doing it.
[09:28-09:28] UNKNOWN: It's
[09:28-09:29] SPEAKER_03: one of those moments.
[10:03-10:43] UNKNOWN: Okay. Okay.
[10:46-10:57] SPEAKER_03: Okay. Yeah, that doesn't make sense too. Like we got an increase. Right. And haven't used it. And now we're asking for another one. Right. I didn't think about it in that direction.
[11:29-11:31] UNKNOWN: Yeah.
[11:41-11:45] SPEAKER_03: Did you point in that direction? I did. The recommendation there?
[11:45-11:51] SPEAKER_04: Yeah. I said we're considering returning them back to a GKE cluster, but that's all I said. I just tell you what I said.
[11:54-11:54] UNKNOWN: Right
[11:54-11:55] SPEAKER_04: here.
[11:59-12:01] SPEAKER_03: Yeah. So,
[12:01-12:01] UNKNOWN: yeah.
[12:01-12:08] SPEAKER_03: So, it's considered, it's recommendation, the first line is interesting.
[12:14-12:18] SPEAKER_04: Yeah, I didn't recommend anything about how to solve it.
[12:19-12:21] SPEAKER_03: Even like it going like,
[12:21-12:21] UNKNOWN: well,
[12:21-12:27] SPEAKER_03: this ain't about GPU quota. Right. It's about using what we got in Kubernetes as the way.
[12:27-12:44] SPEAKER_04: Right. Simplicity and immediate performance, that's not it. It is. We actually want to, that's why.
[12:49-12:52] SPEAKER_03: And arguably the next bullet too, just from a cloud native perspective.
[12:53-12:53] SPEAKER_04: Yep, I agree.
[13:08-13:19] SPEAKER_03: We need to maybe re -emphasize that that hybrid approach just seems to me like it thinks that we're in production.
[13:19-13:20] SPEAKER_04: Right.
[13:32-13:33] SPEAKER_03: Also,
[13:33-13:33] UNKNOWN: it
[13:33-13:37] SPEAKER_03: thinks that the Dolby is working, which is close.
[13:37-13:38] SPEAKER_05: Is close -ish.
[13:38-13:39] SPEAKER_03: Yeah.
[14:15-15:10] SPEAKER_05: Oh, not GPU. Hmm, just whatever is not efficient use of words. What's up?
[15:10-15:45] SPEAKER_03: So, that just made me think, I wonder if there's a place for an agent that is literally the agent that receives the prompt, removes all the inefficiencies of vocabulary out of it, and then starts to build the main chat's context with that. So, get all the human, yeah, we're talking human readable. Right. But you're just going to take this one prompt. Right. And remove all the bullshit from it. Remove the ums and ahs, basically. And then feed it on. It's just like, it's a tiny little efficiency, I think, but that's where we're going
[15:45-15:45] UNKNOWN: to
[15:45-15:48] SPEAKER_03: quickly get is like, oh man, can we make this 0 .1 second faster.
[15:48-15:50] SPEAKER_04: Yeah, because that's what computer is.
[15:51-15:51] UNKNOWN: More
[15:51-15:54] SPEAKER_04: efficient. Ultimately, it's not faster. At large scale.
[15:54-15:55] SPEAKER_03: It's like,
[15:56-15:56] UNKNOWN: can
[15:56-16:02] SPEAKER_03: I get this thing to have 0 .01 % more context efficiency.
[16:03-16:03] UNKNOWN: Like
[16:03-16:11] SPEAKER_03: that. For sure. I agree with you. And it just never sees the human fluff.
[16:11-16:14] SPEAKER_04: Right. The first one does, but.
[16:14-16:43] SPEAKER_03: Right, but it's like almost in context while it's working on it and then it's gone. Or it goes straight to a different log that this one doesn't see, so you still keep your human, like what you sent to it. Right. And so that raw log is still there, but the actual context of the conversation gets a highly AI optimized version of the question you asked. That's a good idea. It's all about context. That's the problem. I, again, hope I'm wrong because I think that is the
[16:43-16:43] UNKNOWN: path.
[16:43-16:49] SPEAKER_03: If I'm wrong, that's the path to super intelligence for sure. Right. I don't think you're wrong. But if I'm not, that's the place.
[16:49-17:04] SPEAKER_04: Or there's going to be some new technology that. Right. Figures out how to hold a whole lot of context in memory, whatever, some sort of way to do that. And then it's going to be super intelligent and.
[17:04-17:07] SPEAKER_03: Yeah, who cares if that hopefully doesn't kill us and if not, everything's
[17:07-17:07] UNKNOWN: going to
[17:07-17:07] SPEAKER_03: Life is
[17:07-17:08] SPEAKER_04: different. Right. Exactly.
[17:30-18:54] SPEAKER_03: Should probably going to have to go through a few of the annoying like, oh, we already did this. You should know this. Right. But probably it's fine. That's ultimately why we're doing this to solve that problem. Right. So somebody has to do this part. And we're doing it. We ask it something the effect of like, how are we certain that it's not going to try to. That it's not going to break when it can't provision a new GPU, even though I get that we're trying to go sequential. But I guess that's kind of part of your best question.
[18:54-18:54] SPEAKER_04: Yeah.
[19:38-19:47] SPEAKER_03: My parents come over to the pool, exercising pool at some point, because I told them I be here, so I'm not doing delivery products.
[19:47-19:47] UNKNOWN: I
[19:47-19:54] SPEAKER_03: do plan on working today. Yeah. Jam on this for at least four or five hours. Okay,
[19:54-20:00] SPEAKER_04: good. Maybe we'll get it today because we were so close before and we pivoted away because of
[20:00-20:00] UNKNOWN: the
[20:00-20:00] SPEAKER_04: GPU thing.
[20:01-20:16] SPEAKER_03: And basically where I'm kind of preparing myself, I'm almost looking for the places that might be broken while you go. Like, right. Just try to remember, hey, I'm going to go back to that. If we find ourselves even roadblocked a little bit further up.
[20:16-20:20] SPEAKER_04: You're the other agent. Yeah, the auditor. Yeah.
[20:32-20:38] SPEAKER_03: I love that. This right here. Yeah. Potential problem scenarios.
[20:47-20:53] SPEAKER_04: Yeah, I mean, I think the answer is just looking at those words that may be going on this path.
[20:53-20:53] UNKNOWN: It
[20:53-21:21] SPEAKER_04: is Q, a job Q that says it only the only thing I release, not just saying you put a file in and the file splits into Q. Like there's three things that need to process from that Q and you put them in there in order. And the only thing that you release to the cluster is a single job. And when that job is done, I'll release the next one. And when that was done, I released the next one. And it's literally only processing one thing at a time.
[21:22-21:22] SPEAKER_03: And
[21:22-21:28] SPEAKER_04: there's this Q of all of the different types. It may be a diarization job. And well, we know there's going to be a diarization job,
[21:29-21:29] UNKNOWN: a
[21:29-21:34] SPEAKER_04: transcription job. Right. And then so Q up those three things for each file.
[21:34-22:00] SPEAKER_03: And that answers the question for now of how to trigger alignment. It's just in the line. Right. And it's kind of silly to use a GPU with alignment, but might as well. It's already up. Just hit it. It's going to take one second. Right. Keep it pushing. So auto fallback to CPU processing. I don't love actually.
[22:06-22:07] UNKNOWN: Like,
[22:07-22:25] SPEAKER_03: I think what you're saying is just make a line. Right. There's no fallback. If there's not a GPU available, you're still in line. Right. That's it. And that is silly kind of for Kubernetes specifically. But this is building the thing that we're going to make one variable change to, and it will auto scale and do all
[22:25-22:25] SPEAKER_04: these
[22:25-22:25] UNKNOWN: things.
[22:25-22:31] SPEAKER_04: Right. You can do two processes. Yeah. It
[22:31-22:31] UNKNOWN: does.
[22:34-22:42] SPEAKER_05: Smart queue management. High priority files can jump the queue in sequential mode.
[22:44-22:48] SPEAKER_02: I don't know how we would, what would be a high priority file.
[22:48-22:51] SPEAKER_04: I'm going to ask you to walk me through a
[22:51-22:51] UNKNOWN: full
[22:51-22:54] SPEAKER_04: batch. Yeah. A batch of two.
[23:06-23:06] UNKNOWN: I
[23:06-23:15] SPEAKER_03: think we need to like reemphasize that whisper or the irization and transcription require as you need.
[23:24-23:28] SPEAKER_05: What is that? Is that air conditioner? Or is it ice rink?
[23:36-23:36] SPEAKER_03: Yeah, it's
[23:36-23:36] UNKNOWN: the
[23:36-23:37] SPEAKER_03: ice rink.
[24:01-24:02] UNKNOWN: What do
[24:02-24:18] SPEAKER_05: you call it? Processes. Surfaces.
[24:29-24:34] SPEAKER_04: It does significantly change. It will change the architecture. Right.
[24:40-24:42] SPEAKER_02: Exactly. Intelligent queue.
[25:02-25:12] SPEAKER_03: This is a 500 line file right now that could probably be 10 or less. Probably. Optimized. Thoroughly.
[25:13-25:14] SPEAKER_04: Yeah, I agree.
[25:16-25:17] SPEAKER_03: I'll call it 10 percent.
[25:17-25:17] UNKNOWN: 50
[25:17-25:24] SPEAKER_03: comfortably. If you're going
[25:24-25:24] UNKNOWN: to
[25:24-25:27] SPEAKER_03: eliminate 90 percent of the context like noise,
[25:28-25:40] SPEAKER_04: that would be huge. It is huge. I mean if in the end context turns into tokens, which is words, be efficient in your usage of words.
[25:42-25:42] UNKNOWN: And
[25:42-25:48] SPEAKER_04: I don't need to do that. I can make there be an agent that is efficient.
[25:49-25:49] UNKNOWN: Yeah,
[25:52-26:13] SPEAKER_03: and that's not even like I'm talking already current, not even with the optimization agent doing it, just our current design that's on in text on that doc. Right, because it loads and looks at all of that. Exactly. And then refreshes, here's what I actually need, wipe context. And it's always still sitting there. If it's like,
[26:14-26:14] UNKNOWN: oh
[26:14-26:33] SPEAKER_03: actually I don't think this was all that I needed. Go back and load it and get some more. Run it back. Yeah, I think this is like big enough that it's not a casual project. No.
[26:33-26:33] UNKNOWN: Like for
[26:33-26:39] SPEAKER_03: vision, but it's not like, like context being the problem, a lot of people are working on it,
[26:40-26:40] UNKNOWN: but
[26:40-26:51] SPEAKER_03: they obviously don't have it. So like there's some weird things that somebody's just going to happen across. Like what if we did this. Right, and it might be us. You just talking right there like,
[26:51-26:51] UNKNOWN: oh
[26:51-26:57] SPEAKER_03: that's bad use of like, that's not efficient language and that made it click like, oh man, could we do this.
[26:57-26:59] SPEAKER_04: Right, I think that's what it's going to look like.
[27:24-27:26] UNKNOWN: Okay.
[27:49-27:52] SPEAKER_05: I can manage 46 cents an hour.
[27:53-28:08] SPEAKER_03: Yeah, and especially if that's like 10 hours of processing or something. That's the, I guess an hour at a 10 percent, I guess let's call it 2, because it was 1 .8 hours
[28:08-28:08] UNKNOWN: over,
[28:08-28:28] SPEAKER_03: so call it 2. So 10 hours would be 20 hours over there, so 10 times faster than that would be 2 hours here. 50 times faster than that would be 120 divided by 5, which is like 24. 24 minutes in 10 hours, if it's 50x.
[28:28-28:34] SPEAKER_04: So it would do 10 hours worth of video or audio in 24 minutes.
[28:34-28:44] SPEAKER_03: Yeah, I guess 10 hours of diarization. Right. And so then I guess you could probably say 10 hours of transcription on the other side so you get an hour. Yeah. You
[28:44-28:44] UNKNOWN: get
[28:44-29:03] SPEAKER_03: 10 hours per hour and that costs 46 cents for the GPU. I can handle that. Maybe another 20 or 30 cents for everything else that's going on. But yeah. I can handle that. That would be pretty good. Yeah. Because 10 hours is about a week on our average.
[29:03-29:07] SPEAKER_04: Right. And we've got a backlog at this point.
[29:33-30:37] UNKNOWN: 1 and 2. 1 and 2. 1 and 2.
[30:47-30:55] SPEAKER_03: Yeah, so priorities is like a future thing. Either because we have a bunch running but I want this one right now. Right.
[30:55-30:55] UNKNOWN: Or
[30:55-30:59] SPEAKER_03: if we had a service there could be tiers. Right.
[30:59-30:59] UNKNOWN: Like
[30:59-31:05] SPEAKER_03: hey, priority access. You get to the behind all the other pro users.
[31:05-31:31] SPEAKER_04: Yeah. Makes sense. Yeah.
[31:31-31:31] UNKNOWN: It
[31:31-31:34] SPEAKER_04: is taking some notes but we ask it to do a lot of stuff.
[31:34-31:35] SPEAKER_03: Yes.
[31:36-31:38] SPEAKER_04: And it's not just testing.
[31:38-31:46] SPEAKER_03: Right. And it's got like a standard almost, I don't even know how much, but like when it starts it puts some notes at the top that's some amount.
[31:46-31:47] SPEAKER_04: Yeah.
[31:47-31:47] UNKNOWN: I
[31:47-31:49] SPEAKER_04: agree. I mean
[31:49-31:49] UNKNOWN: I
[31:49-31:52] SPEAKER_04: don't mind. It's super cheap and easy. I agree.
[32:14-32:24] SPEAKER_03: So there is some level of priority to smaller files. It looks like it. Which doesn't hurt right now. It's if it doesn't have a priority flag on it.
[32:25-32:40] SPEAKER_04: Right. It doesn't, it's not breaking it into diarization.
[32:42-33:24] UNKNOWN: Right. I don't know. Whatever. Okay.
[33:41-33:44] SPEAKER_04: Or maybe it doesn't, it's not thinking about that.
[33:45-33:45] SPEAKER_02: Right.
[33:46-34:00] SPEAKER_04: No, it has output locations over there. It just did a higher level walkthrough. Or no, it didn't do alignment. Huh. It just said.
[34:01-34:08] SPEAKER_03: It doesn't require it, but it still needs to not happen until those are done.
[34:10-34:11] UNKNOWN: So
[34:11-34:17] SPEAKER_03: it's not necessary. It doesn't necessarily make sense to have a CPU just sitting there waiting for those GPU drives to
[34:17-34:17] UNKNOWN: finish.
[34:19-34:20] SPEAKER_03: To run for half a second.
[35:01-35:16] SPEAKER_04: Yeah, maybe this is the way anyways of walkthrough all how everything works. Yeah. What these things going to be called and each fake walkthrough the whole thing until you think it makes until it will actually work.
[35:16-35:52] SPEAKER_03: I think even this pipeline is beyond its context windows ability to do that at a level that will actually then like, okay, let's implement. Right. Like it just. It probably is. Each each thing has so much going on ultimately. I think it's good to get a top level, but still at every step you have to tell it like, okay, let's look at where we're at right now and make sure everything moving forward looks good. Okay, let's start executing.
[35:53-36:05] SPEAKER_04: Or even if it is, okay, we'll just look at this phase. Right. Make it work from here to here. Let's ultra focus on this. Okay. Now in the last session we did this and this is the output. Let's ultra focus on
[36:05-36:12] SPEAKER_03: this. Like before you run it, tell me what's going to happen. Right. Tell me what happened. Any differences? Right. So why they get
[36:12-36:16] SPEAKER_04: to that level of detail like let's just focus on this part.
[36:16-36:16] SPEAKER_03: If
[36:16-36:24] SPEAKER_04: you can only handle a small amount of information and context, well, then that's all we need to talk about. Don't try to do all of
[36:24-36:30] SPEAKER_03: it. Yep. Do it. Write a note in the logs and start a new chat. New session.
[37:16-38:01] SPEAKER_04: So I guess this is it over here. Okay. So that's the Cloud Function triggers the Cluster Manager. It doesn't say that, but it should.
[38:02-38:02] SPEAKER_03: Yeah.
[38:04-38:06] SPEAKER_04: It just assumes that the Cluster Manager is
[38:06-38:06] UNKNOWN: there.
[38:06-38:06] SPEAKER_04: But
[38:06-38:19] SPEAKER_03: it does call it Cluster Manager right underneath. Yeah. Cluster Manager receives a message in the end. It just waits for 30 seconds to see if anything else comes in.
[38:19-38:20] SPEAKER_04: I guess.
[38:21-38:25] SPEAKER_03: I mean, that's not terrible, I guess, but
[38:25-38:28] SPEAKER_02: whatever.
[38:42-38:44] SPEAKER_04: It's doing some time estimates.
[38:44-38:58] SPEAKER_03: Yeah, to do a budget analysis. I guess timing is off. Yeah, that's fine. Or I hope it is because those are not the numbers we were just working with.
[39:38-39:41] SPEAKER_04: I want to do a subsequent batch.
[39:44-39:54] SPEAKER_03: I think we need to see this work. I think maybe the batch processing is certainly adding more context when things aren't actually working yet.
[39:54-39:55] SPEAKER_04: So you want to end the session?
[39:58-39:59] SPEAKER_03: Probably,
[39:59-39:59] UNKNOWN: yeah.
[40:04-40:07] SPEAKER_04: And just move forward with implementing this and see how
[40:07-40:07] UNKNOWN: it
[40:07-40:07] SPEAKER_04: goes?
[40:07-40:24] SPEAKER_03: Right, I think almost let's make one file upload work and actually see it align and do all that stuff and then go, hey, this works, let's add the ability to multi -upload or upload in the middle of it working on some other shit. That's
[40:24-40:28] SPEAKER_04: probably a good idea. Sorry, I'm adding too much complexity.
[40:41-40:43] SPEAKER_03: The girl's doing a workout thing?
[40:44-41:01] SPEAKER_04: Yeah, they're going to NSU. Yeah,
[41:01-41:01] UNKNOWN: it
[41:01-41:06] SPEAKER_04: does. If there were, it can change the processing mode to parallel.
[41:06-41:07] SPEAKER_02: Yeah.
[41:32-41:38] SPEAKER_04: Yeah, they can always get the date by doing that, by the way. Like why do you ever not know the date?
[41:39-41:43] SPEAKER_03: Yeah, and the computer knows the date. Right.
[41:43-41:43] UNKNOWN: Like
[41:43-41:44] SPEAKER_03: what are we talking about?
[41:46-41:46] UNKNOWN: Like,
[41:46-41:46] SPEAKER_01: no.
[41:49-41:53] SPEAKER_03: But if it wants to do that to guarantee accuracy, that's fine.
[42:33-43:01] UNKNOWN: Okay. I
[43:01-43:11] SPEAKER_04: wonder if it's worth reaching out to somebody from the sales team. Like I just need my code to go out. I don't want to spend any, I will spend more money. Right. If you give me.
[43:12-43:12] UNKNOWN: I'm trying
[43:12-43:13] SPEAKER_04: to. Yeah, if you,
[43:13-43:13] UNKNOWN: I
[43:13-43:16] SPEAKER_04: just need to. Actually, if you can make it happen,
[43:16-43:16] UNKNOWN: I
[43:16-43:17] SPEAKER_04: need four.
[43:18-44:04] SPEAKER_03: Right. But I think this pathway, maybe it's worth sending an email to something. But I think this path will also get us there because like it'll start using a GPU. Right. And if nothing else, we'll use it to process 20 or however many hours of audio pretty quickly over the next couple of days once it's working. And then we can be like, Hey, we understand. Here's how our full process works. Like maybe even do a more robust message. Right. Like we have this running on one GPU sequentially. We want to take it to processing at the same time. And so here's, that's why we need at least two, as many as four. What do you think?
[44:05-44:11] SPEAKER_04: I will use them if you give them to me. And in the end, all you care about is me spending money. Right.
[44:11-44:11] UNKNOWN: I
[44:11-44:14] SPEAKER_04: will spend, it's going to be $5. Right.
[44:16-44:16] UNKNOWN: I get
[44:16-44:17] SPEAKER_02: it.
[44:34-44:38] SPEAKER_04: Southerly games start Thursday. Nice. Thursday at six.
[44:38-44:41] SPEAKER_03: You see they signed AJ Mitchell.
[44:44-44:44] UNKNOWN: I did.
[44:47-44:53] SPEAKER_05: I assume you are going to eventually use this.
[44:54-44:56] SPEAKER_03: Yeah. Yeah.
[44:57-44:57] UNKNOWN: So
[44:57-45:05] SPEAKER_03: some really basically tryouts for the last few spots. It is. And like, Jay Will is not in the tryout session after that contract.
[45:05-45:07] SPEAKER_04: No, like it'll just be the new guys.
[45:08-45:13] SPEAKER_03: Right. But like AJ Mitchell with Topic coming in.
[45:13-45:15] SPEAKER_04: I assume Topic is going to play in something.
[45:15-45:19] SPEAKER_03: Yeah. That's my guess at least. Yeah. And he's a lottery pick.
[45:20-45:20] UNKNOWN: But.
[45:20-45:39] SPEAKER_04: I mean, I think the people that don't make the team will probably go to the blue or they'll offer them the blue. My guess is if you don't make the team, you don't have to stay here. You don't have to go to the blue. You can go anywhere else. A way view or whatever the process is. You get the option. We'll pay you this much and you play in the blue. Right. Or we'll just wait. You can get
[45:39-45:41] SPEAKER_03: somebody to sign you somewhere else.
[45:41-45:41] UNKNOWN: Go
[45:41-45:44] SPEAKER_03: ahead. Best of luck.
[46:02-46:03] UNKNOWN: It
[46:03-46:05] SPEAKER_04: actually worked correctly today.
[46:05-46:06] SPEAKER_01: Yeah.
[46:23-46:23] SPEAKER_05: Yeah.
[46:24-46:26] SPEAKER_04: At the front door.
[46:27-46:28] SPEAKER_03: Oh,
[46:29-46:35] SPEAKER_04: no, those cameras are off. That's what's wrong. There it is.
[47:38-49:08] UNKNOWN: Yeah. Yeah. Yeah.
[49:41-49:42] SPEAKER_01: Oh.
[50:07-51:28] UNKNOWN: Yeah. Yeah. Yeah. What do you think about it? It was good. I think the bass is solid. The port is so much worse than it was fine. Yeah. But it's much worse. So I actually feel like I'm going to have to get out separate from. I think the water just doesn't get in there. That port is so fucking good. It is. But that fire. It's probably going to be hot. Maybe we can end with the push the paper. We'll end with the. The. The. The. The air fryer. Yes. Yeah. And he is completely separately. I had the thought of straight up like grilling it. Oh, yeah. And like crackling up the sides. Yeah. And putting it on like, you know, paint. Right. That's probably the answer right there. It's a little more involved, but it's really kind of making it a different thing. But I think it's more aligned to what you would expect to see in a problem. Yeah. Which is like brown on
[51:28-51:31] SPEAKER_03: every side. Yeah. And you kind of
[51:31-51:31] UNKNOWN: kind
[51:31-51:34] SPEAKER_03: of hold up to the liquid a little bit so you get a little bit
[51:34-52:02] UNKNOWN: of a Yeah. Maybe even put some oil or butter in there. Exactly. Heat it in a pan. And this, well, water. And get everything going in there. So that it doesn't have to impact. Get the soup going. Cool. Cool. Yeah. And that's exactly the water. Exactly. And I forgot my thread effect. Did you? So I have no idea. Yeah. I thought you
[52:02-52:03] SPEAKER_03: had
[52:03-52:15] UNKNOWN: it. I assumed it would get. And I didn't do it in any of the like one on one time. You don't know what's on that? No. Oh. Yeah.
[52:16-52:16] SPEAKER_03: Yeah.
[52:17-52:17] UNKNOWN: I'll
[52:17-52:23] SPEAKER_03: probably have a little bit of a good. I was, I got to my parents'
[52:24-52:32] UNKNOWN: house. I had to play it like I was supposed to. Like get out there. Did genuinely forget the thread effect. Yeah. So
[52:32-52:37] SPEAKER_04: it's good I think. It's a good build for your prep. Yeah.
[52:37-52:43] UNKNOWN: The payout prep. Yeah. I think it changes a bit. Or if we're going to
[52:43-52:48] SPEAKER_03: do it wrong, I think it just can't be more. It's right playing or pre -eating. It's dependent.
[52:49-52:50] SPEAKER_00: It sucks.
[52:50-53:06] UNKNOWN: Yeah. Or like you're cooking tail. It just takes care of it. Right. It's either way. What we're talking about here is. Cooking.
[53:06-53:08] SPEAKER_02: Almost cooking. You have to
[53:08-53:08] UNKNOWN: do
[53:08-53:09] SPEAKER_02: that from raw. Right.
[53:25-54:26] UNKNOWN: Moving again. Okay. Okay.
[54:30-54:38] SPEAKER_03: At some point you'll have to write like an actual project reading me for the GitHub page. Right. Oh, I agree.
[54:43-54:43] UNKNOWN: There really
[54:43-55:01] SPEAKER_03: is no reason for it to be the read me.
[55:01-55:02] SPEAKER_04: Right.
[55:02-55:02] UNKNOWN: I
[55:02-55:02] SPEAKER_03: think that's
[55:02-55:08] SPEAKER_04: not what it is. Oh yeah, the right one. That's new that describes how it works.
[55:08-55:09] UNKNOWN: Right.
[55:12-55:29] SPEAKER_04: So that when and if there's troubleshooting or things going on or somebody just wants to buy it. Yeah, just introducing anyone to the project. That's how it works. Not all the steps and things we had to go through to get here. Right. Just how does it work. Exactly.
[56:00-57:10] UNKNOWN: Okay. Okay. Okay. I
[57:10-57:16] SPEAKER_04: don't know why yesterday it didn't get the starting and stuff.
[57:16-57:22] SPEAKER_03: Right. Yeah. It's just weird sometimes. Sometimes a guy shows up in a bad mood.
[57:23-57:23] UNKNOWN: Yeah.
[57:25-57:27] SPEAKER_04: But it's a computer.
[57:27-57:27] SPEAKER_03: Yeah.
[57:28-57:28] SPEAKER_04: You shouldn't.
[57:28-57:28] UNKNOWN: You
[57:28-57:31] SPEAKER_04: shouldn't. Do the
[57:31-57:48] SPEAKER_03: things I'm telling you to do. But also nobody understands what happens when GPUs start talking to each other. I agree. That's how far up the line we don't understand is like two GPUs talking to each other. There
[57:48-57:48] UNKNOWN: are
[57:48-57:54] SPEAKER_03: people that know like the most about it that are like, yeah, we know what's going on, but like for the most part and based on output.
[57:55-58:12] SPEAKER_04: But it's more like physics. Like, hey, we do these experiments. If you do this, this happens. Well, what's happening? Why is it doing that? Right. Well, we think it's this. Like, well, if you do this, sometimes it does that. Yeah. Like, well, what's the difference between that and that? Well, I mean, if you observe
[58:12-58:12] UNKNOWN: it.
[58:12-58:16] SPEAKER_04: That one works with our math. Right. Exactly. Yeah. If you observe it,
[58:16-58:16] UNKNOWN: it
[58:16-58:17] SPEAKER_04: makes it do something different.
[58:18-58:20] SPEAKER_03: Yeah. And you
[58:20-58:21] SPEAKER_04: understand it in need of a billion dollars,
[58:21-58:21] UNKNOWN: right?
[58:22-58:25] SPEAKER_04: Meaning if I literally measure it
[58:25-58:25] UNKNOWN: and
[58:25-58:29] SPEAKER_04: put my eyes on it, it changes the output. That's like.
[58:29-58:47] SPEAKER_03: But also, says who? If you don't know it beforehand, who's like, get out of my face with all this. Right. If it starts to feel like an illusionist is doing some stuff, that's what's happening. Yeah, it is. Like this dude was on Rogan.
[58:47-58:47] UNKNOWN: I
[58:47-59:21] SPEAKER_03: didn't watch it, but people have been talking about it. Some illusionist guy. And he guessed his pin number. Or like he said it or didn't say it, but like wrote it down. He was like, that's your pin number. And Rogan was like, what the fuck? And I saw some dude on YouTube take it down. He was like, he had people following him for like weeks before that and saw him at a gas station or somewhere. Maybe saw his wife at a gas station or somewhere. And then led the entire conversation. Spent like 30 minutes talking about other shit, leading him to, you know what? Let me try to guess something. Let's do your pin number. And it's like, that makes sense. It's amazing to see in real time.
[59:22-59:22] UNKNOWN: And
[59:22-59:22] SPEAKER_03: it's
[59:22-59:22] UNKNOWN: cool
[59:22-59:27] SPEAKER_03: to believe in it. Exactly. Magic doesn't exist. Right.
[59:33-59:37] SPEAKER_04: I have no faith that this is going to work anytime soon.
[59:40-59:41] UNKNOWN: We'll see.
[59:41-59:45] SPEAKER_04: Because in the big scheme of things, it doesn't remember what we did before.
[59:45-59:47] SPEAKER_03: No, but that's where I think we,
[59:47-59:47] UNKNOWN: it
[59:47-59:49] SPEAKER_03: can go look at like, it's not going to remember the debugs. We're
[59:49-59:49] UNKNOWN: going to
[59:49-59:57] SPEAKER_03: have to go through all the debugging again. Right. But we now have the experience of having been through that. That I agree.
[59:57-60:00] SPEAKER_04: And what these errors mean and hey, last time this happened,
[60:01-60:01] UNKNOWN: it
[60:01-60:08] SPEAKER_03: was this. And we know we like, you got to go granular immediately. That's the first sign of error. Take two steps back. Maybe even before the first error.
[60:08-60:14] SPEAKER_04: Like now let's just focus on the upload. What do you see from the upload? I don't care about the rest.
[60:14-60:14] SPEAKER_03: Yeah.
[60:15-60:16] SPEAKER_04: Just look at the upload.
[60:16-60:48] SPEAKER_03: And then baby steps every single way up to a finished transcript. So there's no VMs.
[60:50-60:52] SPEAKER_04: There is a VM controller.
[60:53-60:57] SPEAKER_03: Is that still in play or did it kill it?
[60:58-61:08] SPEAKER_04: I don't know. It looks like it killed it. All right.
[61:14-61:14] UNKNOWN: I
[61:14-61:15] SPEAKER_04: mean, if you can make it
[61:15-61:15] UNKNOWN: work.
[61:15-61:19] SPEAKER_04: Yeah, that's fine. My guess is
[61:19-61:21] SPEAKER_03: there's a, I mean, there's
[61:21-61:21] SPEAKER_04: a reason we ended
[61:21-61:21] UNKNOWN: up. I'm
[61:21-61:26] SPEAKER_04: just assuming that the VM is, I never talked about anything on demand.
[61:28-61:51] SPEAKER_03: Yeah. Like, yeah. So we need to say that everything is on demand and especially the autopilot cluster. And that function that like basically has to turn itself on and shut itself off on the place. Right. I forgot about that. It should have seen it when it looked for stuff, but it was doing a specific search for us.
[62:12-62:27] SPEAKER_04: I, there's some aspect of me that wants to do that. That just says, Hey, let me send the start command. Like some level of the complexity of this project is trying to make it on demand. Like, so make it auto shut down,
[62:28-62:28] UNKNOWN: but
[62:28-62:29] SPEAKER_04: not like,
[62:29-62:29] UNKNOWN: so
[62:29-62:43] SPEAKER_04: basically start up the cluster and get it all the way up and running warm. Like everything is running with the controller on there before we upload any pops.
[62:43-62:50] SPEAKER_03: Yeah. I'm not against that.
[62:50-62:54] SPEAKER_04: But I'm, that's relatively new. I've had it before, but.
[63:00-63:06] SPEAKER_03: Yeah, it is not. It's on demand in the way that Kubernetes is. The cluster is not.
[63:13-63:14] UNKNOWN: Yeah.
[64:03-64:05] SPEAKER_03: I think it's going to misinterpret that.
[64:06-64:28] SPEAKER_04: Okay. Hold on. I'll go back to it. What is that trigger called?
[64:28-64:28] UNKNOWN: Like
[64:28-64:28] SPEAKER_04: a.
[64:32-64:35] SPEAKER_02: Whatever. The dark.
[64:36-64:36] SPEAKER_04: Yeah.
[64:54-64:55] SPEAKER_01: Okay.
[65:23-65:23] UNKNOWN: Okay.
[65:32-65:33] SPEAKER_04: What do you think?
[65:33-65:51] SPEAKER_03: I think it may think that you're like at the end of the first file upload, it kills the cluster, brings the cluster back up and proceeds with the next jobs. I think we need to like reemphasize that this is not going to be running that often.
[65:51-65:52] SPEAKER_04: Yeah.
[65:53-65:53] UNKNOWN: I
[65:53-65:57] SPEAKER_03: guess over the course of a week it will spend many more hours down than up.
[66:26-66:27] UNKNOWN: Okay.
[66:41-66:46] SPEAKER_04: Yeah. So it missed that key constraint. Right. I didn't specifically. It didn't know.
[66:46-66:46] UNKNOWN: It
[66:46-66:54] SPEAKER_04: didn't pick it up from the previous architecture. What is that from? I guess that's.
[66:55-66:56] SPEAKER_00: I
[66:56-67:04] SPEAKER_04: get $84 charged to Google services. I assume it's this, but it shouldn't have been $84. Yeah, it was
[67:04-67:05] SPEAKER_02: like 50.
[67:06-67:10] SPEAKER_04: Maybe they charge some ahead. And that's how they. Bro,
[67:11-67:11] SPEAKER_00: that's fucking.
[67:14-67:15] SPEAKER_03: That's sketchy.
[67:15-67:16] SPEAKER_04: It's fine, but.
[67:17-67:18] SPEAKER_03: I don't know what could even cost $84.
[67:22-67:24] SPEAKER_04: Assuming they give me a receipt at some point.
[67:24-67:24] SPEAKER_02: Yeah.
[67:25-67:36] SPEAKER_04: It probably went in and it's just processing through Yahoo mail. Maybe. Because the charge popped up on my Apple card, but I haven't seen an email
[67:36-67:37] SPEAKER_03: of what
[67:37-67:37] UNKNOWN: it did.
[67:37-67:41] SPEAKER_03: That's like 60 % more than represented on the screen.
[68:12-68:21] SPEAKER_04: Yeah, so I've also had this thought too that we don't need a VM controller. If the cloud function can do it, I don't know if they can do all of that.
[68:22-68:25] SPEAKER_03: I think we debugged our way into the VM controller.
[68:25-68:43] SPEAKER_04: Yeah, because the cloud function couldn't. It can't access something about Kubernetes. Yeah, it couldn't download the credentials. Right. Yeah, that's what it was. That was the first iteration. Yeah, so you're going down a bad path. Yeah. I hear what you're saying, but.
[69:22-69:24] UNKNOWN: Okay.
[69:44-70:01] SPEAKER_04: What are those files called? Secrets? No, not secrets. Like the manifest files. I'm going to interrupt you because you're going down a bad path.
[70:01-70:02] SPEAKER_05: Turns out we
[70:02-70:05] SPEAKER_04: do have some experience with it.
[70:27-70:27] SPEAKER_03: Okay.
[70:27-70:27] UNKNOWN: I
[70:27-70:27] SPEAKER_03: mean,
[70:27-70:27] UNKNOWN: we
[70:27-70:34] SPEAKER_03: had the CPU do that diversation on the cluster the other day,
[70:35-70:36] UNKNOWN: right? Yeah.
[70:36-70:46] SPEAKER_03: So like, it should go look at commits. This is working. Right. Add a GPU. Like all the bullshit and all that. Maybe it comes up with a better one now.
[70:47-70:51] SPEAKER_04: But this is back to the ephemeral GPU, or VM.
[70:51-70:56] SPEAKER_03: Yeah. I'm just envisioning all the other debug stuff that we
[70:56-70:56] UNKNOWN: did.
[70:56-70:57] SPEAKER_03: We had to do that.
[70:57-70:57] UNKNOWN: That
[70:57-70:58] SPEAKER_03: we're about to go through again.
[70:58-71:05] SPEAKER_04: I don't know if we, it may be worth finding specifically the last session where it was working.
[71:07-71:28] SPEAKER_03: Do you know? Maybe, but it should be able to look through commits and find the last time. Okay. That it was working. But I don't know. Let's just see where it is. We can have it do that when we come up across issues.
[71:32-71:32] UNKNOWN: Okay.
[71:36-71:48] SPEAKER_04: Don't we have the logic for destruction? Because that was, we went round and round with that too. I mean it should be
[71:48-71:52] SPEAKER_03: in like, probably still in the code base is my guess, but.
[71:55-71:57] SPEAKER_04: Don't we have some design dots? Why did
[71:57-72:01] SPEAKER_03: it make a new directory GKE cluster manager?
[72:06-72:13] SPEAKER_04: Yeah, this is probably it right here. This on demand. It's definitely where it's been working.
[72:19-72:36] SPEAKER_03: Yeah, those design dots are not, I think what we're, they're like, we did the general design before really even diving into anything. I agree. And there are note stocks somewhere or at least just a commit history somewhere.
[72:42-72:44] SPEAKER_04: This pathway, this is what we were doing.
[72:44-72:45] SPEAKER_02: Yeah.
[73:10-73:14] SPEAKER_04: Do you want to try to keep going forward or go look back?
[73:14-73:16] SPEAKER_03: Yeah, we can keep moving forward.
[73:17-73:20] SPEAKER_04: I'm going to end session.
[73:20-73:35] SPEAKER_03: Yeah. Definitely one place where we got hung up was connecting the Kubernetes service accounts to its equivalent outside of the cluster.
[73:36-73:41] SPEAKER_04: Yeah. So I think we should walk through all of those things that we know in our head. Like,
[73:41-73:41] UNKNOWN: when
[73:41-73:45] SPEAKER_04: the next comes up, just say, hey, no, I'm not ready to go forward. I still want to analyze the design.
[73:45-73:45] UNKNOWN: I
[73:45-73:45] SPEAKER_04: just
[73:45-73:51] SPEAKER_03: don't think like we even have those, like those are going to come up as we go. Okay. So you're going to just go? Yeah.
[73:51-73:52] SPEAKER_05: Okay.
[74:18-74:20] UNKNOWN: Okay.
[74:27-74:57] SPEAKER_04: Oh, we need to update the in session to say maybe even begin session to to say run the time command to freaking look at this.
[74:58-75:00] SPEAKER_03: They just made something dumb. Yes.
[75:02-75:06] SPEAKER_04: Run the freaking time command so you know what time it is.
[75:07-75:07] UNKNOWN: Yeah.
[75:16-75:17] SPEAKER_04: I'm going to go do that.
[75:18-76:02] UNKNOWN: Okay. Okay. Oh.
[76:32-76:43] SPEAKER_03: Yeah. I think it's the last one on the 27th and the first one on the 29th. Like the first one on the 29th is where we decided to change it to the dual
[76:43-76:49] SPEAKER_04: VM. So the 27th. Yeah. You think it's worth saying go look at that? I
[76:49-76:49] UNKNOWN: would
[76:49-76:50] SPEAKER_04: give them both of those file
[76:50-77:15] SPEAKER_03: paths and say like basically this was as far as we got with the Kubernetes previously. And then this is the page in which we decided to change it just in case there's anything like I'm changing this to this for the VM so then you could reference that and change it back. It's in session archive.
[77:27-77:28] UNKNOWN: Transcripts.
[77:28-77:28] SPEAKER_00: This
[77:28-77:35] SPEAKER_03: one? 27. 0909 and then 29. Oh yeah.
[77:35-77:35] UNKNOWN: The
[77:35-77:38] SPEAKER_03: first one. So below that.
[77:42-77:45] SPEAKER_04: So yeah like these two? These two?
[77:46-77:46] UNKNOWN: Yes.
[77:51-78:21] SPEAKER_04: That's where we the last one that was good and then we decided to change it? I mean we were still in debugging trying to make it work but yeah. Do you think it's worth doing that or do
[78:21-78:21] UNKNOWN: you
[78:21-78:22] SPEAKER_04: want to try to move forward?
[78:23-78:46] SPEAKER_03: I think I would probably do that. And just say hey this was our final state from the previous implementation that we were pretty fucking close on. Like we I think the one from the 29th will likely have some notes in it about holy shit that ran so fucking slow on a CPU we need to change.
[79:30-79:44] UNKNOWN: Okay. Okay.
[80:27-80:28] SPEAKER_01: Okay.
[80:54-81:19] UNKNOWN: Okay. Wow.
[81:34-81:41] SPEAKER_03: What? It just started responding to your new session.
[82:29-82:30] UNKNOWN: Okay.
[82:56-82:56] SPEAKER_04: Okay.
[82:56-82:56] UNKNOWN: I
[82:56-83:05] SPEAKER_04: added in a line I had to do it quickly. To the rules. Yeah and so now it's just in
[83:05-83:05] UNKNOWN: the
[83:05-83:17] SPEAKER_04: end section. Yeah. I just do it randomly in there. Not random. Yeah. But it's in there that says run this. Yes. Yes. Yeah.
[83:46-83:49] SPEAKER_03: Did you send it twice or is the beta being weird?
[83:49-83:51] SPEAKER_04: I did not send it twice.
[83:51-83:59] SPEAKER_03: I got it twice. Exactly the same time. And look at this. I'm going to highlight it.
[84:01-84:09] SPEAKER_04: Wow. That's crazy. Maybe it's processing that as a command for some reason. Yeah. Because in the end it's
[84:09-84:09] UNKNOWN: a
[84:09-84:17] SPEAKER_04: computer. That's true. And not a message. I don't know. I don't know what it is. I do have the beta going on here. No
[84:17-84:19] SPEAKER_03: don't. It's not only. It's on my watch and my phone.
[84:19-84:23] SPEAKER_04: Oh you're right. Same thing. Yeah. Not my computer either. Me either.
[84:47-84:48] UNKNOWN: Okay.
[85:05-85:16] SPEAKER_03: Pretty sure. Like it just did the thing on me where it recycles and goes away. I'm pretty sure it saved it. Like I had already pasted it in there but I hadn't clicked save. Yeah. And I think it saved it. Okay.
[85:16-85:16] UNKNOWN: And
[85:16-85:17] SPEAKER_03: yes it was. Okay.
[85:45-85:46] UNKNOWN: Okay.
[85:50-86:10] SPEAKER_04: Oh I probably should interrupt it. It just started doing stuff. Let's see. Yeah it just immediately started doing stuff. Yeah. I'm going to interrupt
[86:10-86:42] UNKNOWN: you. Okay. That
[86:42-86:45] SPEAKER_03: was the thing. The system wasn't hanging. It was working.
[86:45-86:45] UNKNOWN: It's going to
[86:45-87:03] SPEAKER_03: be rough but extremely slow. That is almost a perfect example of grabbing what you need out of it and shedding context. That thing
[87:03-87:03] UNKNOWN: that it just did.
[87:03-87:04] SPEAKER_03: Like just go look at
[87:04-87:16] SPEAKER_04: this right here and just pull in like and what it took away from this is like hey this could work. It should work based on proven success. I don't know that it just got a confidence boost.
[87:16-87:22] SPEAKER_03: I guess but like is this the current status of the previous like is our current status match that?
[87:25-87:26] SPEAKER_04: It does not.
[87:29-87:29] UNKNOWN: It does not.
[87:30-87:51] SPEAKER_03: But that is what like you've got infinite context. Infinity times more than you could possibly wrap your head around but there's a way to and even do a long search where you don't overload your context because every single time you kind of clean it up and then make a step forward and clean the context up and then make a step forward.
[87:51-88:04] SPEAKER_04: That's what we're trying to build. Like find the context you need like a database and just pull that piece back and don't cloud your context with a bunch of stuff. Go directly to it pull it back and now you know.
[88:04-88:12] SPEAKER_03: Well and you can look at all of it like that is the magic. It doesn't know line 78 through 91 is exactly what it needs.
[88:12-88:12] UNKNOWN: It
[88:12-88:18] SPEAKER_03: looks at all of it then sheds all but at 71 through 90 whatever I said.
[88:21-88:24] SPEAKER_04: I guess it's ready. I guess we're moving.
[88:26-88:28] SPEAKER_03: Let me read what it said. I
[88:28-88:28] UNKNOWN: mean
[88:28-88:28] SPEAKER_03: that's
[88:28-88:30] SPEAKER_04: fine but
[88:30-88:34] SPEAKER_03: I guess I'll read and
[88:34-88:35] SPEAKER_04: note
[88:35-88:35] SPEAKER_03: it.
[88:36-88:37] SPEAKER_04: So
[88:37-88:39] SPEAKER_03: that's
[88:39-88:48] SPEAKER_04: the top. That architecture is not implemented.
[88:48-88:54] SPEAKER_03: None of it is. I guess locally pre -tested.
[88:56-88:56] UNKNOWN: Yeah.
[89:01-89:09] SPEAKER_03: So that's what it started doing immediately before you interrupted it. What are you for approval? What are
[89:09-89:12] SPEAKER_05: we doing? Push
[89:12-89:13] SPEAKER_02: something. Build
[89:13-89:14] SPEAKER_05: something.
[89:16-89:18] SPEAKER_04: It failed again in fact.
[89:19-89:33] SPEAKER_03: Yeah it's got to run it from the root. Surely you'll figure this out. Because the case directory that we now do need again. We didn't delete that did we?
[89:33-89:34] SPEAKER_04: I don't think so.
[89:35-89:37] SPEAKER_03: No it said it saw manifest earlier.
[90:18-90:20] UNKNOWN: Okay.
[90:50-90:51] SPEAKER_03: Okay.
[90:51-90:51] UNKNOWN: It
[90:51-90:54] SPEAKER_03: would take 2 .16 minutes.
[90:54-90:55] SPEAKER_04: Perfect.
[90:55-90:59] SPEAKER_03: About what we kind of back in the napkin mask. 10 hours being 20ish minutes.
[91:00-91:05] SPEAKER_04: And what we did yesterday uploading that audio file.
[91:05-91:05] UNKNOWN: It
[91:05-91:07] SPEAKER_04: was about, it said it
[91:07-91:07] UNKNOWN: was going
[91:07-91:31] SPEAKER_04: to be 4 minutes but it was fast. It's looking at the Docker ignore file. I don't know why it's doing these things. It's looking around. It's listing what's in the GKE cluster manager. The files. And then it's looking at the Docker ignore file. Yeah. Confirm edit. What are you trying to do?
[91:36-92:10] SPEAKER_03: It's going to change it to the ephemeral VM. Yeah. Not Docker files. Whatever. Okay.
[92:10-92:10] UNKNOWN: Well,
[92:10-92:10] SPEAKER_03: we're going
[92:10-92:10] UNKNOWN: to
[92:10-92:12] SPEAKER_03: be here for a while.
[92:13-92:14] SPEAKER_01: Not too bad.
[92:14-92:20] SPEAKER_03: It's stuck too but yeah we'll see. Most of this stuff I assume is still local on
[92:20-92:20] UNKNOWN: your
[92:20-92:21] SPEAKER_03: computer.
[92:21-92:21] UNKNOWN: Or
[92:21-92:23] SPEAKER_04: yeah here and up there. Right,
[92:23-92:23] UNKNOWN: yeah.
[92:24-92:26] SPEAKER_04: We haven't deleted anything in a while.
[93:06-95:23] UNKNOWN: Okay. It's not looking too bad. Okay. Okay. Okay. Okay.
[95:24-95:32] SPEAKER_04: Man, we've been around and around. But it's good I guess. It's learning. Yeah, it's certainly learning. It's not the most efficient pathway.
[95:34-95:50] SPEAKER_03: I mean that's the argument, right? Is it the most efficient or not? It doesn't seem like it because you spend your tires a bunch. But you also do 10 months worth of work in a day. I agree. Whenever it's really like jamming and getting stuff right.
[95:50-95:56] SPEAKER_04: I agree and I think this is right. It is the ephemeral VM to the ephemeral cluster.
[95:57-95:57] UNKNOWN: Because
[95:57-95:58] SPEAKER_04: even
[95:58-95:58] SPEAKER_03: if we're
[95:58-95:58] UNKNOWN: running
[95:58-96:06] SPEAKER_03: a service and literally like a billion people are using it. If there ever happens to be a two hour window where no one uses it, it should be down.
[96:06-96:06] UNKNOWN: It will
[96:06-96:06] SPEAKER_03: shut
[96:06-96:18] SPEAKER_04: down. I agree with you. Yeah. This does make sense. And the startup of the first people to use it is going to be slow. Yeah, and that just is what it
[96:18-96:21] SPEAKER_03: is. Especially while we're those people.
[96:27-96:32] SPEAKER_02: Chair is starting to shut. No. Right there.
[96:34-96:37] SPEAKER_04: Put some tape or something on it. Yeah,
[96:37-96:37] SPEAKER_02: that's a good
[96:37-96:38] SPEAKER_03: idea.
[96:38-96:44] SPEAKER_04: Or like a piece of cloth or something like that. With some glue to, I don't know. Figure
[96:44-96:46] SPEAKER_03: something out. I don't know what to do with tape right now.
[97:24-97:26] UNKNOWN: Okay.
[97:46-97:55] SPEAKER_03: My guess is search office chair armrest cover. That's a thing.
[97:55-98:04] SPEAKER_04: Yeah, I bet. But that doesn't look terrible. And that's going to stop it. For sure. And nobody will notice that except for you.
[98:04-99:12] SPEAKER_03: Yeah, 100%. It doesn't bother me anymore. It's probably going
[99:12-99:12] UNKNOWN: to be
[99:12-99:16] SPEAKER_03: our last one. Yeah, maybe. Between this and the push, almost certainly at this rate.
[99:47-99:50] SPEAKER_04: All right. I'll be back. Okay. Okay. Okay.
[100:58-101:31] UNKNOWN: Okay. Okay. Okay.
[101:53-102:01] SPEAKER_05: Are you really processing post performing post -processing steps? Are you stuck?
[102:48-102:49] UNKNOWN: I don't know.
[102:50-102:56] SPEAKER_03: I think it's stuck. It might be. I'm wondering if you move it to the background whether
[102:56-102:56] UNKNOWN: it's just
[102:56-103:25] SPEAKER_03: a It actually has more logging going on in there. Yeah, I would maybe ask you, maybe copy that line, that curl line and say like, hey, this has been running for seven minutes. I mean over here.
[103:25-103:26] SPEAKER_04: Yeah, this
[103:26-103:32] SPEAKER_03: one, right? No, I'm talking like this specific one. Oh. That is stuck on.
[103:34-103:40] SPEAKER_04: Geez. It's moving and you can't.
[103:41-103:41] UNKNOWN: I
[103:41-103:49] SPEAKER_04: guess I can just Or I can take a screenshot of it.
[103:49-103:54] SPEAKER_03: Yeah. Or command all and add it. That's never going
[103:54-103:54] UNKNOWN: to work.
[103:58-104:00] SPEAKER_05: Oh, it's going to be down here.
[104:14-104:15] UNKNOWN: Okay.
[104:31-104:48] SPEAKER_03: It's kind of interesting to me. Like you, your clothes and shoes are always like on point clean, very good and your desktop has that chunk on it. Whereas I don't give a shit clothing shoes wise or anything. My shit is
[104:48-104:48] UNKNOWN: tight though. I
[104:48-104:59] SPEAKER_03: don't care about that stuff. on my computer. And that's not even that messy.
[105:00-105:00] UNKNOWN: Right.
[105:00-105:01] SPEAKER_03: It
[105:01-105:08] SPEAKER_04: gets really bad. I actually have to go and like sometimes it's like all the way over here. It's like I got to clean it.
[105:08-105:08] UNKNOWN: Every time
[105:08-105:13] SPEAKER_03: there's ever more than one is if I took three screenshots right now. Right.
[105:14-105:17] SPEAKER_04: Yeah, I do it like once every two weeks.
[105:17-105:17] UNKNOWN: I delete
[105:17-105:27] SPEAKER_03: that shit. I'm doing something with it immediately. It's either moving to it like downloads or I'm using it and deleting it.
[105:29-105:35] SPEAKER_04: So, am I killing this? I
[105:35-105:35] SPEAKER_05: don't think so.
[105:36-105:45] SPEAKER_03: Yeah, so G Cloud sitting there waiting for you to type Y. That's what was happening. Or wire in. I would bet. Like it had an interactive G Cloud. A CLI.
[105:47-105:49] SPEAKER_04: I want to close this. You
[105:49-105:49] UNKNOWN: gotta
[105:49-105:50] SPEAKER_04: go all the way to the top.
[105:52-105:54] SPEAKER_03: Oh no. You shouldn't have to
[105:54-105:54] UNKNOWN: do all that.
[105:54-106:21] SPEAKER_03: There should be like an X over here. Yeah, it's just the name of that thing is too damn long. There you go. That's actually doing a progress thing. It's moving slow as fuck so it might have been working.
[106:22-106:22] SPEAKER_04: Maybe.
[106:27-106:33] SPEAKER_03: But at least now we can see how many steps. Almost 5%. Of that step.
[106:38-106:41] SPEAKER_04: It might have been working. Who knows.
[106:41-106:46] SPEAKER_03: And that's the entire Google Cloud SDK. There you go.
[106:50-106:52] SPEAKER_04: It definitely needs that.
[106:52-106:54] SPEAKER_03: Why though? Like in the controller?
[106:54-106:54] UNKNOWN: It
[106:54-106:55] SPEAKER_03: doesn't
[106:55-106:55] UNKNOWN: have it.
[106:55-106:56] SPEAKER_03: It's in the cloud.
[106:56-107:03] SPEAKER_04: Why is it downloading it? No, this is going to be on the VM. This is the image that's going
[107:03-107:03] UNKNOWN: to
[107:03-107:04] SPEAKER_04: run on the VM controller.
[107:04-107:04] UNKNOWN: It
[107:04-107:18] SPEAKER_04: definitely is not just in the cloud. It gives you the blank one. But the container optimizes OS and that's all. And it doesn't have very much. You intentionally have to put everything in it. It definitely needs the G Cloud SDK.
[107:20-107:22] SPEAKER_03: I guess we've deleted those images.
[107:22-107:22] UNKNOWN: It's the
[107:22-107:26] SPEAKER_03: first thing because it had it. That's what I was saying. It
[107:26-107:29] SPEAKER_04: should already be there. And not need to download it.
[107:30-107:37] SPEAKER_03: I've definitely done some delete all but latest and like 3 before it. I haven't deleted anything.
[107:37-107:46] SPEAKER_04: It just did a prune. I didn't know you could do that. It did a docker system prune.
[107:46-107:49] SPEAKER_03: So docker is basically just git.
[107:50-107:54] SPEAKER_04: And it's just maintaining these, stacking these images. It's
[107:54-108:00] SPEAKER_03: versioning for images. But an image is
[108:00-108:09] SPEAKER_04: multiple layers. To make a single image. And it's versioning these layers. I already have this one so I don't need to download it. But if it doesn't, as it downloads it, then it will stack it and then it
[108:09-108:09] UNKNOWN: will
[108:09-108:10] SPEAKER_04: make the image.
[108:11-108:24] SPEAKER_03: Hopefully it should still be up there. When we push. Maybe. Or this is where we hung up before. This is definitely where we hung up before. The question is, is it hung up again?
[108:40-108:40] UNKNOWN: This
[108:40-108:41] SPEAKER_05: is where
[108:41-108:41] UNKNOWN: we hung up.
[108:51-109:08] SPEAKER_03: Nice. So we waited about 400 seconds to... In the background, it
[109:08-109:08] UNKNOWN: was
[109:08-109:14] SPEAKER_03: literally sitting there going like, it asked you a question and then said why slash in. It was waiting and waiting.
[109:46-109:54] SPEAKER_04: Yeah, definitely need to make a minimum push, right? Before we stop because you will have to build that again. For sure. On your computer.
[109:55-109:55] UNKNOWN: Yep.
[109:55-109:57] SPEAKER_04: Cause those are local.
[110:05-110:07] SPEAKER_03: There's a big enough one that it's gonna take a while.
[110:08-110:08] SPEAKER_04: Another that's 220.
[110:09-110:15] SPEAKER_03: Yeah. Combined with the fact that the rest of them are probably another 200. Right. None
[110:15-110:16] SPEAKER_04: of them are moving?
[110:17-110:17] UNKNOWN: Not
[110:17-110:19] SPEAKER_03: very quickly.
[110:19-110:19] UNKNOWN: There
[110:19-110:51] SPEAKER_03: went one. They're just moving by the kilobyte. Right. Exactly. Or kilobit. I remember reading the difference is kilobyte and kilobit and it's actually like kibibite or something like that. I don't know. And it's like a megabyte is a thousand kilobytes but it's actually like the actual measurement is like mebibite or mebibit or something and it's yeah like a thousand eighty.
[110:52-110:52] UNKNOWN: Yeah.
[110:53-111:02] SPEAKER_03: And it's just been the public facing side is just like it's all ends in zero. Right. Every single number ends in
[111:02-111:02] SPEAKER_00: zero.
[111:04-111:08] SPEAKER_04: Don't worry about it. And it's based on binary. Right.
[111:08-111:09] SPEAKER_03: A
[111:09-111:10] SPEAKER_04: thousand doesn't make sense.
[111:11-111:30] SPEAKER_03: Not at all. It's not. It doesn't exist basically. But that's like diving into high level network optimization when you're thinking about those types of things.
[111:30-111:35] SPEAKER_04: Right. And it's already been resolved. You can learn it if you want to. But you don't need it.
[111:35-111:35] UNKNOWN: For
[111:35-111:49] SPEAKER_04: the sake of no one. Right. Unless it's something you're specifically doing. I think like hardware stuff like you're working with registers that are both working with bits. You might need to know that. Right. But for the...
[111:49-111:49] SPEAKER_03: Nah.
[111:50-111:53] SPEAKER_04: Unless you're building the machines or doing something at the hardware level.
[111:54-112:21] SPEAKER_03: Maybe it'll tell us what it means whenever we transcribe it and run it through our process. Maybe. Yeah. Just so you know. This is the difference between megabyte and mebibite or whatever it is. And like one of them is a lowercase m I think. From MB and one of them is M.
[112:23-112:25] SPEAKER_04: I don't know. I've never heard that. Yeah.
[112:26-112:26] UNKNOWN: It
[112:26-112:30] SPEAKER_03: was that system admin stuff I was doing a while back.
[112:37-112:43] SPEAKER_04: Yeah. I'm glad you're not at the data center. I mean it's a good job. But it's not this.
[112:43-112:48] SPEAKER_03: It certainly wouldn't have given us an opportunity to do this either.
[112:48-112:49] SPEAKER_04: I agree.
[112:49-112:55] SPEAKER_03: Like driving out to a motherfucking data center. I'm not
[112:55-113:04] SPEAKER_04: up for that. I mean I would do it if I made it to. I am grateful. But if I don't have to I
[113:04-113:04] UNKNOWN: don't
[113:04-113:09] SPEAKER_04: want to.
[113:09-113:09] UNKNOWN: Yeah.
[113:16-113:18] SPEAKER_03: I think this is literally it. Yeah.
[113:18-113:18] UNKNOWN: Oh
[113:18-113:20] SPEAKER_03: I definitely think whenever this finishes and
[113:20-113:23] SPEAKER_04: it's done pushing I'm in an end session and that's going to be it.
[113:27-113:32] SPEAKER_03: And you don't need to do an end day. But you should be able to if you
[113:32-113:32] UNKNOWN: wanted
[113:32-113:37] SPEAKER_03: to and did not break whenever I on said day still start a new session. Should be
[113:37-113:38] SPEAKER_04: able to.
[113:38-113:38] UNKNOWN: Yes
[113:38-113:58] SPEAKER_03: I agree. Where is that? Thomas Jefferson tried to write that slavery is bad in the Declaration of Independence. I did not know that. Yeah an entire section berating this is a slave owner so caveat to that.
[113:58-113:58] UNKNOWN: Sure.
[113:59-114:15] SPEAKER_03: But berating King George for his supporting of the international slave trade. Obviously it got removed. But he at least knew it was wrong and was in that head space trying to do something.
[114:54-114:56] UNKNOWN: Okay.
[115:06-115:27] SPEAKER_03: Like this is an example of going back to when you said like it was inefficient. In two hours we completely redesigned an architecture from dual VM to a VM running an auto cluster GKE. It's true. There's no
[115:27-115:31] SPEAKER_04: way. We would be anywhere remotely close to where we're at right now.
[115:31-115:50] SPEAKER_03: We could have gotten on the path. Even going from that. Take all the previous development out of it and going from just switching this already pretty much done with a lot of the files you need for the ARC Kubernetes in it. And just you just got to rearrange and plug it in. You're talking I mean like at our current pace a couple weeks easy.
[115:50-116:13] SPEAKER_04: Yeah the inefficient comment even takes into or assumes that oh we know the design. Like this is what it should be and we're just working towards implementing it. The reason we've been all over the place is because the best design is not known. We're iterating and testing and getting errors and we're just the pace is very very high compared to if you were doing this by yourself.
[116:13-116:37] SPEAKER_03: Well and ultimately too I think it was like some of the inefficiency was caused by this fucking curve ball of you only have one GPU. And so if that weren't the case in theory we'd have a cluster up and running with multiple GPUs. And so when you add that we would have had to design the whole thing find out that we only get one GPU and we
[116:37-116:37] UNKNOWN: like
[116:37-116:42] SPEAKER_03: we would probably at that point may have come up with the idea to bring it down to one.
[116:42-116:42] UNKNOWN: I
[116:42-116:42] SPEAKER_03: don't know. Maybe.
[116:43-116:47] SPEAKER_04: But I mean that's the thing we shouldn't have pivoted to the VM but it's only been a few days.
[116:47-116:57] SPEAKER_03: It was literally yesterday or no we didn't work yesterday. It was Sunday. And we didn't work yesterday on purpose to see if we got that quota increase.
[116:57-116:57] UNKNOWN: And
[116:57-116:57] SPEAKER_03: so
[116:57-116:57] UNKNOWN: it
[116:57-117:01] SPEAKER_03: hasn't been that much of a two days of work. A day and Sunday.
[117:02-117:09] SPEAKER_04: Right. It hasn't been bad. But otherwise we've been going down the same path.
[117:09-117:09] UNKNOWN: I
[117:09-117:10] SPEAKER_04: don't know.
[117:10-117:17] SPEAKER_03: And if it's been three weeks maybe it's been a month. We're way more than a month into this project at the end of the day. As far as what it would have
[117:17-117:25] SPEAKER_04: been. And using the cloud function was not a red well we didn't know this limitation. And we still wouldn't have known.
[117:25-117:25] SPEAKER_03: We found that out.
[117:26-117:26] UNKNOWN: And
[117:26-117:27] SPEAKER_03: that's
[117:27-117:27] UNKNOWN: like
[117:27-117:34] SPEAKER_03: this is overstated but that's the type of things that make this project worth it even if nothing comes of it. From like your work perspective.
[117:35-117:35] UNKNOWN: Yeah.
[117:35-117:35] SPEAKER_03: You
[117:35-117:38] SPEAKER_04: can't use a cloud function to manage a cluster.
[117:38-117:38] UNKNOWN: And you
[117:38-117:38] SPEAKER_04: know
[117:38-117:39] SPEAKER_03: about cloud jobs now.
[117:39-117:39] UNKNOWN: Which
[117:39-117:40] SPEAKER_03: we didn't really
[117:40-117:40] UNKNOWN: dive
[117:40-117:41] SPEAKER_03: into but we
[117:41-117:49] SPEAKER_04: know it. Yeah. And this is how this is how you learn that stuff to a certain extent.
[117:49-117:49] UNKNOWN: That's
[117:49-117:53] SPEAKER_03: what literally every teacher that's about to run you through a 40 hour course will go like.
[117:53-117:53] UNKNOWN: But
[117:53-117:55] SPEAKER_03: really you just need to go build stuff. Actually it'll tell you at the end.
[117:55-117:55] UNKNOWN: So
[117:55-117:57] SPEAKER_03: you do the 40 hour course. Right.
[117:58-118:02] SPEAKER_04: Like this was cute. But the way you learn is just get out there.
[118:02-118:02] UNKNOWN: Build
[118:02-118:05] SPEAKER_04: stuff. Right. Alright. I think we're there.
[118:05-118:06] SPEAKER_03: Good deal.
[118:10-118:21] SPEAKER_04: I mean there from the perspective of I'm done and gonna go in the office. Yeah. We're not there. We're back to where we were a few days ago. Yeah. Theoretically.
[118:21-118:23] SPEAKER_03: Still in a better place.
[118:23-118:23] UNKNOWN: With
[118:23-118:27] SPEAKER_03: the path for moving forward. Cause we're like. I forgot to
[118:27-118:27] UNKNOWN: do
[118:27-118:30] SPEAKER_03: that. We did decide to change it because we were spinning our tires.
[118:31-118:37] UNKNOWN: Right. There we go.
[118:38-118:41] SPEAKER_05: Now quit. Do this.

==================================================
Generated on: 2025-07-30 17:23:07
Total words: 8746
Total speakers: 7
==================================================




Summary:


creation_date: 2025-07-30 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1706_ZOOM0038_transcript.txt participants: [SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04, SPEAKER_05]
Executive Summary
This meeting centered on resolving a [[GPU]] quota limitation that was halting progress on a transcription and diarization project. The team decided to pivot back to a [[GKE Autopilot]] cluster architecture, abandoning a temporary dual-VM solution [11:41-11:51]. A major theme was the challenge of managing [[Context Compression]] in large language models, leading to a proposal for an "optimization agent" that would refine human prompts into more efficient, machine-readable instructions to improve performance and reduce costs [15:10-15:45]. The group also discussed the importance of a sequential job queue to manage the single available [[GPU]] resource effectively, ensuring that processes like diarization and transcription run in order without causing resource conflicts [20:53-21:34]. Ultimately, the goal is to create a robust, scalable system that can be expanded once more [[GPU]] resources are allocated.

Key Topics Discussed
	•	[[GPU]] Quota and Architecture Pivot
	•	The team faced a roadblock due to being denied a [[GPU]] quota increase, which they attributed to a lack of demonstrated usage [04:13-04:26], [10:46-10:57].
	•	They decided to move away from a temporary dual-VM approach and revert to a [[GKE Autopilot]] cluster architecture, accepting that they would have to work sequentially with a single [[GPU]] for now [05:30-05:35], [11:45-11:51].
	•	The plan is to demonstrate usage and a clear need for more resources to justify a future quota request [43:18-44:04].
	•	Job Processing and Queue Management
	•	To manage the single [[GPU]], they designed a sequential job queue system [20:53-21:21].
	•	The workflow will process one job at a time (e.g., diarization, then transcription, then alignment) for each file before moving to the next file in the queue [21:29-22:00].
	•	This approach avoids resource conflicts and ensures an orderly process, even if it's not the most performant solution without autoscaling [22:07-22:25].
	•	They briefly discussed a "smart queue" concept for prioritizing high-priority files, but deferred it as a future enhancement [22:34-22:42], [30:47-30:55].
	•	[[Context Compression]] and AI Optimization
	•	A key theme was the inefficiency of human language in AI prompts and the resulting impact on performance and cost [15:10-15:45].
	•	A proposal was made to create a specialized [[AI Agents|agent]] that acts as a pre-processor to refine and condense human-generated prompts [15:48-16:11].
	•	This "optimization agent" would remove conversational fluff and rephrase queries to be more token-efficient, improving the overall [[Context Compression]] and speed of the primary AI [25:28-25:48].
	•	This was framed as a significant potential innovation, addressing a core limitation of current large language models [26:33-26:57].
	•	AI-Assisted Development with [[Cursor]]
	•	The team relied heavily on their [[AI Tools|AI tool]], [[Cursor]], to guide the architectural pivot and troubleshoot issues.
	•	They discussed the importance of providing [[Cursor]] with the correct context, such as past session logs, to get it back up to speed on the previous [[Kubernetes]] implementation [06:35-06:43], [76:32-77:15].
	•	They also noted the need to break down complex tasks into smaller, focused sessions to work within the AI's context window limitations [35:16-36:05].

Action Items & Decisions
	•	Decision: Revert the project architecture from a dual-VM setup back to a [[GKE Autopilot]] cluster to work within the current single-[[GPU]] quota [05:30-05:35].
	•	Decision: Implement a sequential job queue to process transcription tasks one at a time, preventing [[GPU]] resource conflicts [20:53-21:21].
	•	Action: Begin implementation of the single-file processing workflow on the [[GKE Autopilot]] cluster, focusing on making one file upload work end-to-end before adding batch processing capabilities [40:07-40:24].
	•	Action: Update the [[Begin Session Protocol]] to have the AI review previous session logs to quickly regain context on past development efforts [74:27-74:57].
	•	Action: Create a formal project [[README]] on [[GitHub]] to document the system's architecture and functionality for future reference and onboarding [54:30-55:29].

Suggested New Links/Tags
	•	None

Linked Concepts
	•	[[AI Agents]]
	•	[[AI Tools]]
	•	[[Begin Session Protocol]]
	•	[[Cloud Function]]
	•	[[Cloud Run]]
	•	[[Cluster Manager]]
	•	[[Context Compression]]
	•	[[Cursor]]
	•	[[Diarization Service]]
	•	[[GCP]]
	•	[[GKE Autopilot]]
	•	[[GPU]]
	•	[[GitHub]]
	•	[[Jalen Williams]]
	•	[[Kubernetes]]
	•	[[OKC Thunder]]
	•	[[README]]
	•	[[Service Account]]
	•	[[Transcription Service]]
	•	[[VM controller]]
	•	[[Whisper]]

#Tags
	•	#AI
	•	#Deployment
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom39
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1537_ZOOM0039_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:18] SPEAKER_00: to the cluster and then add the controller that spins up the cluster itself and like then When we know what is supposed to happen inside Then we can fix the problems of like the pass through and stuff like that It's where my head is that has been going for that makes a lot of sense
[00:21-00:21] UNKNOWN: That
[00:21-00:30] SPEAKER_00: makes a lot of sense to me I'm not like certain that we're not two steps away from being done Well, it will identify that
[00:30-00:32] SPEAKER_01: too anyway, it would be the same
[00:40-01:37] SPEAKER_00: Because that is I mean that kind of Has was one of our big hurdles early on was getting it to understand that the code doesn't work Necessarily beyond the step that we're working on right like that assumption. We've got rules in there to avoid Oh Yeah, another thing I was reading through the reading and maybe we don't need this but we never have it look at the daily summary So from the previous day, right because we don't have a daily start I Don't know that that is necessary because it's kind of a summary of the read me and the read me when it's operating correctly has references to Previous debug sessions, right? But that was just one No,
[01:37-01:44] SPEAKER_01: that makes sense to me In the same reason we have an end day you should have a begin day, right?
[01:44-02:41] SPEAKER_00: But you also present the potentially Same issues with an end day like what if you run an end day and then I Work again. So how when do you run? the begin That's true. I guess so I think it's almost that's where I got to like I think the daily summary doesn't need to be looked at unless it's looking like Way back to try to find something that like basically like the previous yesterday I was going find the thing that was working as a CPU only Cluster and find what the fuck is different about this one and that actually did solve some problems Well, say that again. I was yesterday. I was Freaking out not freaking out but like I would say in my afternoon session 70 % of my prompts were passive aggressive and included person Just is crappy. I'm saying my crops. No, I know. Oh,
[02:41-02:41] UNKNOWN: yeah,
[02:41-02:55] SPEAKER_00: it's just acting crappy. I think During times of high usage it actually does yell one penny. Oh, I think it does get worse. Yeah like Maybe I'm just that's how by my mood. I know I think that
[02:55-02:59] SPEAKER_01: Sometimes it just returns crappy response or it doesn't work right
[02:59-04:32] SPEAKER_00: and for like a little it's like the network going out It's just like it's not working for a bit, right? And so that was going on but finally I was like hey Oh, we were in the fucking spin cycle that we were in at the beginning when we got to the working cluster and I was like go Like I started off asking like what's different between this new? ephemeral cluster manager, whatever it's just a new and the Old VM controller and it was like oh the VM controller was for a dual VM Long -standing I was like absolutely was not and I said that like 15 times it was Exactly the same as this one. It was only just running a CPU I understand the naming is weird and not good because it developed but whatever What's different about it? And finally I got that through and it was that's that message. I sent you like oh, you're right It's exactly where you told me and it is like it said something like it's very explicitly What is different? But I Got to that point of like well we can go in and click create cluster and we can do all the things and say hey even have it go hey go log what this looking this working cluster looks like because we managed to Run all of our code all the way through and get a final transcription added benefit. We can empty that card the moment So
[04:33-04:41] SPEAKER_01: I've had this thought before and it's similar to yours That doing it manually all the time which certainly right now for our
[04:41-04:43] SPEAKER_00: use case certainly
[04:43-04:45] SPEAKER_01: right that literally
[04:45-04:59] SPEAKER_00: almost never needs to be an ephemeral cluster right if it needs to be if it's use cases are Ephemeral and we're you the only ones using it. I'll turn it on press go and if they're not then we'll leave it
[04:59-05:21] SPEAKER_01: on right and so the answer then is Or yeah, or a Hey deploy this and it comes all the way up and then a Cube CTO from A cube CTO.
[05:21-05:21] UNKNOWN: Yeah,
[05:21-05:34] SPEAKER_01: like execute this that says okay deploy the resources and then when everything's there execute cube CTO that puts everything on there and if you we don't have to worry about credential stuff because It's from us, right?
[05:34-05:37] SPEAKER_00: Yeah, I would say I would still want to
[05:37-05:37] UNKNOWN: get
[05:37-07:33] SPEAKER_00: the Diorization to transcription to alignment output done and actually working because We're really working at two things at the same time, which is architecture and like code right, right? And I think that is definitely Not optimal for cursor, but like it's pretty good at focusing in on a subject Especially if you make sure that it is humans for that matter, right? Yeah, and so I think either way we either Get the cluster up. I don't know that there's a way to do the clip like the Terraform first I think like fundamentally even like at your work when you get When you're talking to somebody they have a working application in the field Yeah, and you have to figure out how to get that applications plugged into new infrastructure, right? Whereas we do not have a working application. So when something fails, we're like, well Infrastructure might be the code who knows we know the code works, but not necessarily It has worked before right and so I think if we Manually like go through and even to the like Over -the -top, but like build container Push container go and get it and be like plug this one into like click ops the whole thing and then at the very least it can see a log of an operating an operational cluster that's in a good place right and then we can step back off of that and I I think Even then it might make sense to just do the manual And we can make a front end that executes a terraform script based on like the user wouldn't necessarily know that that's what's happening but like hey take a Start cluster and ultimately that's what it's doing is running that terraform with the cube CTL stuff in it I mean the user Here's what
[07:33-08:09] SPEAKER_01: I gave we if it's ever if it's just us Yeah, we literally can start the cluster and start the process from our missions 100 % and literally running a script or running cube CTL. I don't care that not I don't care It's just the complexity doesn't matter right? You can either it to automate it This is run cube CTL this run this right you can automate it by running the commands in a script Like for and then the next level is if there are ever users I think it will be well the clusters on
[08:09-08:12] SPEAKER_00: Yeah, that's what I'm saying. Like it's
[08:12-08:12] UNKNOWN: either
[08:12-08:21] SPEAKER_00: built into the federal and we turn it on with code and that's fine Or it's not ephemeral. I wouldn't have to think about turn it on because it's all Yeah,
[08:21-08:31] SPEAKER_01: right. Yeah, and so let's remove automation. So you can't remove the Pub stuff right because that part that part of that is
[08:31-08:31] UNKNOWN: what
[08:31-08:35] SPEAKER_01: triggers. Yeah, so but the pub sub should only trigger the jobs
[08:35-08:38] SPEAKER_00: Right. Yeah, we it's a full redesign for sure. Like
[08:38-08:52] SPEAKER_01: it's a different folks assume that the infrastructure is on and so yeah, I think we just talked to cursor about it and Separately so and remove any automation associated with infrastructure.
[08:53-08:57] UNKNOWN: Yeah That
[08:57-09:08] SPEAKER_01: we were just going to get the cluster up and get all of the Manifest files loaded on there and everything with our own credentials. We don't have to worry about a controller doing it over any of that
[09:08-09:14] SPEAKER_00: should we Move again away from Especially lost under a quota. No, I
[09:14-09:35] SPEAKER_01: think the opposite okay that we move away from that VM controller Like the controller actually lives in the cluster. I guess the first process like so it's a process. That's when the when we upload a file it's gonna send a message to the message is gonna get picked up by
[09:35-09:36] SPEAKER_00: or whatever
[09:36-10:06] SPEAKER_01: the By the controller since still same thing same flow But that controller is not a VM the reason we use a VM is because we needed something to do to deploy the Cluster and do all but assuming the clusters up and we we deploy the controller That's a listener function that ain't like and what it will do is queue up jobs for the same cluster I get just live everything lives on the cluster, right and it's just a Service yeah, that's who those four services a controller and then the three right?
[10:07-10:07] UNKNOWN: Yeah,
[10:07-10:08] SPEAKER_00: it makes sense to me
[10:08-10:11] SPEAKER_01: and they're all in the manifest files. It's all easily so we don't have them,
[10:11-10:11] UNKNOWN: you
[10:11-10:11] SPEAKER_01: know
[10:12-10:22] SPEAKER_00: Yeah, I don't all the way understand so like In the moment we're gonna have a script. We're gonna do terraform I don't know you know
[10:22-10:27] SPEAKER_01: either way we can do terraform or a script I think like what easiest to do script
[10:27-10:37] SPEAKER_00: what is yes spinning up the cluster look like Or is that goes? It's gotta have the service accounts and permissions and all the shit that we're trying to give it
[10:38-10:43] SPEAKER_01: don't the service accounts come from the Kubernetes
[10:43-10:44] SPEAKER_00: It makes its own.
[10:45-11:28] SPEAKER_01: No, it comes from these Comes from sorry comes from the YAML files Yeah, and so all of that so these are like so we will manually apply these files Okay, so the first step would be some script that It's not To That's fine, so it'll be something like what it'll be G -cloud I don't know what the command is. It's like It's not cute. But whatever g -cloud like it's like cluster something like it then has a bunch stuff This is
[11:28-11:30] SPEAKER_00: like G cloud compute clusters or something like that. Yeah,
[11:30-11:56] SPEAKER_01: it's gonna be a command that says hey deploy a cluster right and we just literally and so we can put that in a script like this or Yeah, it's yeah, it's like just like g -cloud functions deploy But there is a and it has much flags and said hey what region and all of that stuff They're just gonna be a block that says G cloud deploy an autopilot cluster, right? Whatever that command is and it's a bunch of likes Yeah, that's what that's this. That's what the
[11:56-12:01] SPEAKER_00: not to do a bunch of times whenever it tried Yes legitimately before it was getting like hey, this is automated
[12:01-12:30] SPEAKER_01: but even inside of the The Controller the VM controller after that comes up What it's doing is running that's that script to bring up the cluster and it just then the cluster just sitting there No different than sitting here and then to get files on to or services and stuff onto it You then you run cube CTL commands and so it would be cube CTL apply Right, leave is that the command and then a file and I think in
[12:30-12:34] SPEAKER_00: order It might be deploy and then apply if you're
[12:34-13:06] SPEAKER_01: I think applies terraform and I was doing terraform yesterday But it's cube CTL whatever the word is. Yeah, and then the five Yeah, and we're dash F and a file something like that and then I think you can do multiple So literally if we want to apply all of these we literally run the script with the script is just shell commands Yeah, what we would be running is cube CTL apply. I'm gonna use that word All that stuff it will apply all of those one after another and then those services will just be on there and that's it The cluster is there wait in those services are waiting
[13:06-13:22] SPEAKER_00: and then Debugging wise to get everything working instead of going. Okay, shut the cluster down. Okay spin it back up make the VM Do all this we just keep CTO or whatever apply The different tests to see and okay now this is working It'll be instantly and
[13:22-13:26] SPEAKER_01: you only have started the cluster once in the day in the morning Yeah, and everything else is running on it
[13:27-13:28] SPEAKER_00: Yeah,
[13:28-13:50] SPEAKER_01: and then I mean I assume we would still shut it down No question, yeah And yeah, I think that makes sense to me We probably should have been doing this a long time ago and I think the primary lesson and I have learned this Over there a lot is don't try to do too much. In fact, yes focus lazy work You
[13:50-13:50] UNKNOWN: get
[13:50-14:12] SPEAKER_01: it for me personally in my brain. Yeah, and the AI for sure It doesn't do very well with a bunch of stuff going like what are we working on like? Okay, the plan is to work on this then this and this get this working and when it's working rock -solid don't touch it again Yeah, only work on this and if you start if the AI because it sometimes does start to read like stop Yeah, do not change anything other than this.
[14:13-15:28] SPEAKER_00: Yeah general vibe is like Five coded apps suck right my code is bad. And I think Problem we're having is we're making a not bad code Five coded app like it's not it's ultimately gonna have because I want this chick that's a machine learning engineer for like Amazon or something She's got a YouTube and it's okay But this video actually kind of made me go like that like she was making that and she was like but here's what you can Do to like make sure that's not the case and basically talked about what we did like have it make a plan Have it go through and execute steps and I was like That kind of made me like scoff at her a little bit like okay, you're no genius, but it That is the like kind of bottleneck we're reaching is we're doing I think what is ultimately gonna be a pretty decent Set of code base and it is also vibe coded and so yeah There's a step in between there where like you have to just do some manual shit to show it like hey This is how this is supposed to work. You were not gonna get there look at it inspect everything and then let's fucking move on I think that we had to go through the last three weeks to It's a vital
[15:28-15:30] SPEAKER_01: step. You're to get to today like that's
[15:30-15:31] SPEAKER_00: what
[15:31-15:32] SPEAKER_01: we're building too much. Yes,
[15:32-15:34] SPEAKER_00: that's what we're actually building
[15:34-16:15] SPEAKER_01: Yeah, I agree. So I'm going to I Don't even know that I want a new check. Oh, yeah, I guess new session it Look at everything and then say Yeah, we're not doing whatever you get ready to just know we're not doing that But I'm excited. I think Yeah, we're gonna get there and even if it takes two months. Yeah, it is will have been worth it because It is our first application truly built with next -generation AI And it will work and the application will work and it's a pretty high learning process is important.
[16:15-16:15] SPEAKER_00: Yep
[16:16-16:20] SPEAKER_01: Not just about the architecture Yeah, it's also about the tools
[16:20-16:38] SPEAKER_00: we're not learning Python, right and we're learning a little bit of cloud stuff Mm -hmm, like the cloud run jobs and shit like that, but but we're really learning AI AI tools. Yeah that I
[16:38-16:38] UNKNOWN: Yeah,
[16:38-16:48] SPEAKER_00: even if we don't Make anything you're gonna be able in conversation with people that work. They're gonna be like you belong in a different place
[16:48-17:28] SPEAKER_01: probably Some clay my latest Strategy and I didn't come up with this by myself as being on the cushion is Just using that Opportunity to pay the bills Like this is literally the goal. This is what we've I prayed for love. I want a role No, I'm not just this I'm saying like I want a role where I can be at home with my family then my own environment is the pay and benefits are good and I can pay for my house and I'm doing things that is interesting and learning. I have enough time to do all this
[17:28-17:32] SPEAKER_00: not for nothing like Jody and Kylan can swim because he right
[17:35-17:47] SPEAKER_01: Paying for everything but even being here being able to see them right like I remember driving back and forth to like even the same Paying benefits it but but that extra 45 minutes and all the stress and being on call and
[17:47-18:00] SPEAKER_00: Yeah, it's an extra 45 minutes and Extra trips like yeah motherfucker. That's like the worst direction Yes, an extra hour and a half every day and the occasional extra hour and a half out of fucking nowhere,
[18:00-18:10] SPEAKER_01: right? And it was always stressful and there's always a like so that's like Perfect. Yeah, like I I love it and I am good with
[18:13-18:13] UNKNOWN: like
[18:13-18:31] SPEAKER_00: I Assume you're gonna be more well just like verbally versed In this so much so that they're gonna be like you need to be leading like our AI to customer team type shit And that's where my head maybe maybe we don't make an application out
[18:31-18:31] UNKNOWN: of
[18:31-18:32] SPEAKER_00: it So
[18:32-18:55] SPEAKER_01: maybe I think that they'll like if I stayed in that world, I think that one of two things would happen one nothing, right because I've been thinking about it and I don't want to spend too much time but the The skill set that you need to be successful in that corporate world is very different It's politicians then actually
[18:55-19:18] SPEAKER_00: being good at your work. That's what by leading I'm talking like you are perfectly Technical and people to bridge the gap between like hey you call the head of AI That's the guy that you not maybe even there's levels down to that You are the guy that bridges the gap between the people that know fucking nothing and the people that know everything I
[19:18-20:06] SPEAKER_01: Agree, and I'm kind of perfectly suited in the middle I have a bunch of leadership experience and all of these things just like experience and things like that But what you I think people miss is this layer and what pops in my head is and or if that you know The high society where Monmouth like there's just this stuff No, and what luck and they're just like these rules and things like that that you have to be good at that And if you're not good at that and willing to play I probably could do it if I really wanted to You have to there's like these and maybe this is true everywhere like there's this politics is the word I would use it Oh, there's these alliances and things like that And if you get out and you start threatening the people who are in charge with your like You start getting attention like well, then they will try to destroy
[20:07-20:09] SPEAKER_00: Right or the 48
[20:09-20:51] SPEAKER_01: laws like that stuff is ripped Like you have to be very careful with who you ally with and how much you should you outshine your boss and all Like it so it's not just a matter of hey be good do good things You just have to Play and so if you're not good at those things you won't make it Yeah, right and you have to play it right and play your politics right like it and so it's not just that so One of two things that I will either stay in there have this conversation and somebody go Why are you why are you here doing this thing and just get fucked out and do and then you just oh? Because it almost happened before it's like because I was talking to eat not about one of the roles I was about to take it's like are you gonna be able to be my peer right?
[20:51-20:51] UNKNOWN: I
[20:51-20:52] SPEAKER_01: was like, yeah,
[20:52-20:52] UNKNOWN: I
[20:52-20:54] SPEAKER_01: think so, but I turned that was one of the roles.
[20:54-20:54] UNKNOWN: I
[20:54-20:55] SPEAKER_01: said about don't
[20:55-20:55] UNKNOWN: like
[20:55-20:55] SPEAKER_01: here I
[20:55-20:55] UNKNOWN: mean
[20:55-21:05] SPEAKER_01: competition, right? and or Nothing because I'm not willing to play the game or do whatever and part of that is well You need to move here and be here with us
[21:05-21:19] SPEAKER_00: Yeah The perfect vision in my mind is like you are that go between Between all these people and they're so distributed that you're like well I'm gonna go live and work with an office when I'm working with ten other people in different places It doesn't matter is part of the
[21:19-21:27] SPEAKER_01: argument though. Well, you're not in one of you're not Like all right, I'm good
[21:27-21:32] SPEAKER_00: Make your life easier right exactly same job, but automate so much of it for you
[21:32-23:07] SPEAKER_01: personally I'm kind of in that place now like the two roles that I'm up the two jobs. I'm on one of them They're both internal. Yeah, one of them is this project And they gave me 20 hours a week on that indefinitely And the other one is 20 hours a week and it is working for the flights team Like so all like their data ingestion it gets actually gets processed in what we call It wasn't the internal stuff like so our internal subroutes that are not cloud right there just like it's no it is a lot of ways think about it is like a Private data center. Yeah, it's an It is very much that it's Google Yeah on prim but it's and it's different and it's running just the private software and things like that and the people who work in that Don't know how to do cloud right and so the the issue that they have is they're interacting with these Airlines right and the airlines have more traditional software setups than Google Yeah, and they need to interact with like Constant IP addresses VPNs like so this this on prim sub the Google on prim stuff Board like board based stuff can't do VPNs and things like that It's like well, we need to connect to a VP through some sort of VPN Yep, that's that's the name of the system But they can't even do basic things like VPNs and things like that or like they need to be able to connect to a known constant IP address
[23:07-23:07] SPEAKER_00: Yeah,
[23:07-23:09] SPEAKER_01: and so basically
[23:09-23:10] SPEAKER_00: like they need the cable
[23:10-23:23] SPEAKER_01: that they can plug into the port So basically the way they've done that is outsource it to cloud like so the front end of or the interaction the network connectivity is in cloud and somebody did is ten years old
[23:23-23:23] UNKNOWN: and
[23:24-24:11] SPEAKER_01: It's running on like eight VMs that always stay on and they manually update them They go in there and they have they don't know anything about cloud They don't know and then they go in and like in their scare images and they they're scared and they go in and go Okay, we got shut this VPN or shut this VM down run this script that somebody wrote ten years ago And if it doesn't work like so they were trying to modernize this effort and it's like and they gave us like five months I'm like bro. I can do this in five days Whatever like so give me that's the ones that are like hey We need to meet like we have a designs me one other guy's like we have a design and We're ready like basically they want a modern CSCD pipeline and everything like that that they can automate stuff Do like update a script and it goes
[24:11-24:12] SPEAKER_00: Right
[24:12-24:46] SPEAKER_01: and do all that stuff. So it's a little bit different than the things I've been working on is this it's um DevOps like we're working on that We're making a CSC for sure for them and we have to teach it to them because they're like babies Like they're like we don't know anything about cloud. We don't know how to go in the cloud console We don't make it simple for us and like and at the end make it simple as possible and then like literally make a To do not to do like a manual user manual a user manual so we can know how to use it and teach our team Because they don't know anything about
[24:46-24:52] SPEAKER_00: that might take five months What they're babies the job won't take five months the past the handover, but it's pretty boring
[24:52-25:05] SPEAKER_01: And so that's my I'm doing that and it's almost in my spare time Yeah, so that's what I was doing terraform yesterday doing some automation of like deploying the infrastructure and things like that But I used Gemini and the terraform is fantastic Yes
[25:09-25:11] SPEAKER_00: That exactly
[25:11-25:16] SPEAKER_01: it's just I'm kind of in the background doing things and using this time that I have available to me before somebody
[25:17-25:18] SPEAKER_00: Yes, yeah,
[25:18-25:28] SPEAKER_01: so I'm Reacting to your that I'm kind of in the background and don't want to get recognized of hey You're doing more of
[25:28-25:29] SPEAKER_00: you so yeah,
[25:29-25:43] SPEAKER_01: right? Yeah, you know, you should be doing more here. Let me like Then I'm gonna give up all of these benefits of the situation that I'm in All right, sorry Um change of plans
[26:05-27:43] UNKNOWN: You You You You
[28:15-28:17] SPEAKER_00: You
[28:17-28:17] UNKNOWN: Good
[28:17-28:18] SPEAKER_00: job control
[28:32-28:32] UNKNOWN: You
[29:14-29:14] SPEAKER_00: You
[29:14-29:38] SPEAKER_01: Yeah, no I'm going back sorry You
[29:38-29:38] UNKNOWN: What
[29:38-30:10] SPEAKER_01: are those triggers calls yeah I don't know Processing
[30:10-30:11] SPEAKER_00: it three processing steps
[30:39-30:42] SPEAKER_01: Manual pops up messages
[31:15-31:16] UNKNOWN: A
[31:32-31:33] SPEAKER_01: Bye.
[31:38-31:39] SPEAKER_00: File Sachs.
[32:33-32:35] SPEAKER_02: and
[33:04-33:06] UNKNOWN: what
[33:20-33:20] SPEAKER_01: thing
[33:22-33:27] SPEAKER_00: fibers autopilot when you say cluster but yeah
[34:48-34:49] SPEAKER_01: next decision.
[34:58-35:00] SPEAKER_00: Did you do a full?
[35:00-35:40] SPEAKER_01: I did. Yeah, I think this will be much better like and just do everything manual even the pub sub messages Yeah, like I don't even don't even simulate and upload just This is what the pub sub message should say and it should make this happen. Did it work? You keep doing that over and over until this step works and then make it trigger from that But if you get this message this service should do this thing That's it and it's running on the cluster Update it send it update it send it until it doesn't and then don't touch it again to move to the next one You should get this pub sub message and it should do this thing, right? And then the automation between the messages is relatively simple
[35:45-35:51] SPEAKER_00: Hard coded controls on GPU quarters basically like only one process at a time.
[35:51-36:01] SPEAKER_01: Yeah, I agree I do think that I need to go back and say that Are there any other requirements
[36:43-36:44] UNKNOWN: You
[36:46-36:52] SPEAKER_00: We still need this sequential Processing diversation transcription
[37:12-37:14] SPEAKER_01: I'm not gonna give it that much detail
[37:14-37:16] SPEAKER_00: It kind of
[37:16-37:16] SPEAKER_01: suggests
[37:50-37:51] SPEAKER_02: I
[38:57-38:58] SPEAKER_00: I
[38:58-38:58] UNKNOWN: Yes
[38:58-39:26] SPEAKER_00: for a cloud project you should Do initial design and that should take longer than you think. Yep, like going through it and then click ops the working design Have the I look at that all the way through I mean it's gonna do the click ops, but Like document that fully working manual thing and if you want to add automation then go on do it But
[39:26-39:26] SPEAKER_01: right
[39:26-39:27] SPEAKER_00: I
[39:27-40:25] SPEAKER_01: think that it is I wouldn't use the phrase click off They would I would say it is the AI equivalent like it is Like command line. Yeah command line operations And then we when you finalize on a design then you can go back and build terraform Yeah automation all of that after it's working that should be done. That should be applied to working Projects right or application. Yes, once it's up and working We have a proof of concept that this is working I can all the services are working and so I'm not gonna be tinkering with the code anymore What you you described it very well like okay now I have this working application and I want to then Rebuild it almost in the new project with full automation everything now I'm just gonna take this code module right this whatever Manifest and put it in the right place. I'm not gonna change it Right, I'm trying to work in it working again with automation exactly
[40:25-40:25] UNKNOWN: if
[40:25-40:25] SPEAKER_00: it
[40:25-40:25] SPEAKER_01: breaks
[40:25-40:26] SPEAKER_00: I
[40:26-40:33] SPEAKER_01: know it's because of infrastructure right at that point. Yes, and right now we have no idea where these gremlins are worth What's going on?
[40:33-40:33] UNKNOWN: Right?
[40:33-40:34] SPEAKER_01: Mostly it's
[40:34-40:43] SPEAKER_00: failing It's also on some weird shit that we're trying to do with the VM controller in the ephemeral autopilot cluster All
[40:43-40:47] SPEAKER_01: of that it's just too much too much for us and
[40:47-40:58] SPEAKER_00: it yeah, and it's Valuable that's one thing but it's not right It's a fix To prepare ourselves for potentially in the future
[40:58-41:03] SPEAKER_01: It's easy to do that exactly in the like literally always on and yeah,
[41:03-41:09] SPEAKER_00: you got a bunch of GPUs Don't shed a bunch of complexity off the project and congratulations. You're right
[41:35-41:52] SPEAKER_01: Yeah, now No, I'm not running that
[42:00-42:27] SPEAKER_00: Will you hit the drop down for models like where Claude is at? Yeah, my Gemini is gone because I think they updated it to the new one. Yeah, I think you all. I picked 6 .5, I assume the newest one is in its pro. I just don't see it.
[42:27-42:40] SPEAKER_01: Oh, this one. I mean, I'm not going to do any
[42:40-42:40] UNKNOWN: of
[42:40-42:42] SPEAKER_01: these non -brain ones. Yeah,
[42:42-42:47] SPEAKER_00: I've got GPT 41 and 4 .0 just because.
[42:47-42:50] SPEAKER_01: Yeah, I just took them out because I don't think I'm ever going to use them.
[42:50-43:01] SPEAKER_00: And they're still there. If you do decide one day, I will go get that. Right. Then you can do it then. But yeah, Claude and Gemini are pretty clearly, as of right now,
[43:01-43:01] UNKNOWN: at
[43:01-43:02] SPEAKER_00: least the leaders.
[43:07-43:08] SPEAKER_01: Okay. Is that good?
[43:08-43:08] UNKNOWN: Is
[43:08-43:17] SPEAKER_01: there a save? I think you're good. Yes, you run that.
[43:21-43:38] SPEAKER_00: So I can close the VM instances. That's nice. Cloud run probably don't
[43:38-43:57] SPEAKER_01: need it either. Well, there will be functions that are triggered by Pub -Sub or triggered by EventArt. EventArt will run functions that build messages. And then the messages will be processed and consumed by the services.
[43:58-44:02] SPEAKER_00: So these two repositories we don't need?
[44:02-44:05] SPEAKER_01: Probably not, but I don't think we can get rid of them right now.
[44:12-44:12] UNKNOWN: So
[44:12-44:19] SPEAKER_00: we'll still need all of our buckets. Yep, I think all of that will be the same.
[44:20-44:20] UNKNOWN: I
[44:20-44:36] SPEAKER_00: yesterday changed my time window to last five minutes on logging because it's easier to at a glance see if something's happening. As long as the Kubernetes cluster is not running, it removes a lot of clutter. And what's the last time you were interested in something that happened more than five minutes ago?
[44:37-44:38] SPEAKER_01: What we're doing now,
[44:39-44:39] UNKNOWN: never.
[44:39-44:47] SPEAKER_01: Otherwise it's like, hey, something happened last night that made the cluster hang up or shut down or whatever. I want to go back and look at it. But we're not in
[44:47-44:51] SPEAKER_00: that place. Yeah, and that's not the default case. You would in fact go then and say,
[44:51-44:51] UNKNOWN: hey,
[44:51-45:41] SPEAKER_00: show me the last 12 hours. Whereas the default should be like, hey, nothing's happened in the last five minutes. And specifically, like I'm expecting that. Or I'm trying to go over and, hey, I've been working for five minutes and I'm pretty sure everything's dead. I should be able to go in there and see no logs. Now, obviously, you're deploying a cluster. Right, that's very different. 233 a month. The fuck did that come from? I mean, it's still $2. I understand. But it was zero yesterday. Like it never even showed a penny on it. Did it do an auto file a cluster?
[45:42-45:43] SPEAKER_01: I
[45:43-45:47] UNKNOWN: think so. I
[45:47-45:49] SPEAKER_00: assume that's
[45:49-45:51] SPEAKER_01: what it means too.
[45:56-46:10] SPEAKER_00: Yes. Where did we able to find that before? I remember the tier set standard before too, but you checked it in somewhat yet autopilot mode. Where do you see that?
[46:10-46:10] UNKNOWN: You
[46:10-46:13] SPEAKER_00: click on it, like into the...
[46:13-46:13] UNKNOWN: Oh,
[46:13-46:17] SPEAKER_00: yeah. Turn it better to the left.
[46:18-46:19] SPEAKER_02: Okay.
[46:31-46:36] SPEAKER_01: It has a progress bar. Oh, shoot.
[46:36-46:36] UNKNOWN: When
[46:36-46:37] SPEAKER_01: you click into it.
[46:38-46:38] UNKNOWN: Nice.
[46:49-46:50] SPEAKER_01: I don't have
[46:50-46:56] SPEAKER_00: app errors. Oh, network. Yeah, one of them in the last 48 hours. Oh,
[46:56-46:56] UNKNOWN: okay.
[46:56-46:58] SPEAKER_00: That's the idea. That page is useless.
[46:58-46:58] UNKNOWN: I've
[46:58-46:59] SPEAKER_00: seen it before.
[46:59-46:59] UNKNOWN: It's
[46:59-46:59] SPEAKER_00: like,
[46:59-46:59] UNKNOWN: how
[46:59-47:09] SPEAKER_00: does it... I don't even understand. This cluster didn't exist until one minute ago. Right. How are there errors? That's how
[47:09-47:09] UNKNOWN: it
[47:09-47:20] SPEAKER_00: was. Like how are there 35 errors? I didn't do anything other than say start. Yeah. I've seen that a few times over the past few weeks and just been like, fuck it, I guess. They're not even dated on there. It
[47:20-47:20] UNKNOWN: just
[47:20-47:28] SPEAKER_00: says like only one of these is from the last two days. And even that might be me from two days ago, which is equally useless. Right.
[47:40-47:41] UNKNOWN: I've
[47:41-47:52] SPEAKER_00: got a delivery block today, but I imagine this afternoon I'll come in and do some cleanup of the stuff from the past. Maybe just archive it, but no, it's archived in old commits.
[47:52-47:59] SPEAKER_01: Yeah, this is... I'm off Thursday and Friday, so this is... The vast, vast majority of people are off today. I almost took off.
[47:59-47:59] UNKNOWN: The
[47:59-48:24] SPEAKER_01: only reason I didn't is because I'm working on this project and Jeff is meeting with... Hi, who's meeting with TK? And they're reviewing a document that I made. And basically I'm on standby to either... I doubt I'll get called into the meeting, but if he has questions or whatever, because... Don't
[48:24-48:31] SPEAKER_00: waste a vacation day on a day that you're basically off anyway. Yeah, exactly. Or yeah, even if you're on vacation, you might get the call.
[48:34-48:54] SPEAKER_01: And he's smart, but he's more like a... He's good at the politics. And so when it gets heavy, he just starts like, hey, what did you mean by that? He doesn't actually... That's the problem. When it gets heavy, he's like... So imagine the
[48:54-48:55] SPEAKER_00: intelligence of the people in charge.
[48:55-48:55] UNKNOWN: Come
[48:55-49:00] SPEAKER_00: in here. Imagine there's an intelligence senator that exists in the
[49:00-49:16] SPEAKER_01: world. There's one person that I know, maybe not just one, but Thomas Curie and TK, I've never been in a meeting with them, but people describe him like he is... He's nice. He's not like... I don't know about nice, right? Because he's a senior executive.
[49:16-49:16] UNKNOWN: I
[49:16-49:43] SPEAKER_01: might like this guy. Yeah, but he's very direct. But he's courteous. But he's super smart and he knows a lot of details. He'll be in a meeting and start asking you about the stuff that you've been working on day to day. It's like, how do you even know what I'm working on? Then he'll go to the next person and to the next person. And what they describe Elon, that's what this dude is doing. He's down in the details and saying, no, it should be like this and blah, blah, blah. He goes to
[49:43-49:43] UNKNOWN: the
[49:43-50:09] SPEAKER_01: next meeting and he's just super high functioning, fast and very detailed and getting stuff done. But you've never actually seen this? I've never seen this. I've heard about this. Other unimpressive people have been like, wow, that guy's amazing. But the reason I hear about it is, and that's the reason I'm on standby, is because my boss is... He's actually not my boss. He's my boss's boss. He's nervous about going in these meetings
[50:09-50:10] SPEAKER_02: with
[50:10-50:12] SPEAKER_01: these people that are going to eat them if they don't know
[50:12-50:12] UNKNOWN: what
[50:12-50:16] SPEAKER_01: they're doing. He's like, basically, be on standby so I can ask you questions at any
[50:16-50:22] SPEAKER_00: moment. Yeah. That's good. I guess. Like, brah, I'm just going to ask Gemini. Right,
[50:22-50:22] UNKNOWN: right.
[50:23-50:35] SPEAKER_00: Like you can do it too. Right. Well, I mean, that is a good position to be in, I suppose, but it also makes me
[50:35-50:35] UNKNOWN: feel
[50:35-50:38] SPEAKER_00: like we just need to tear this entire world down. Just pull me in
[50:38-50:38] UNKNOWN: the
[50:38-50:40] SPEAKER_00: meeting, let me talk to him. Yeah, like you're not...
[50:40-50:40] UNKNOWN: Maybe
[50:40-50:42] SPEAKER_00: you'll talk about my stuff. It's useful. Get out of here. Just pull
[50:42-50:44] SPEAKER_01: me in the meeting. Let me talk about
[50:44-50:44] UNKNOWN: stuff.
[50:44-50:47] SPEAKER_01: Send me your check for the week and I'll do your job. I've actually...
[50:47-50:47] UNKNOWN: I
[50:47-50:54] SPEAKER_01: used to... It's funny how different I used to be when I was in there. It used to make me so mad when people would tell me,
[50:54-50:54] UNKNOWN: I
[50:54-50:55] SPEAKER_01: don't know. Like,
[50:55-50:55] UNKNOWN: he
[50:55-51:07] SPEAKER_01: would infuriate me. Like, I asked him something that they're supposed to know. Like, who does know? Like, find the person that does know and give them your paycheck for the day. I used to tell people that all the time.
[51:07-51:07] UNKNOWN: Like,
[51:08-51:11] SPEAKER_01: go... Go find out. Like,
[51:11-51:11] UNKNOWN: no,
[51:11-51:12] SPEAKER_01: like for real, go right now.
[51:14-51:14] UNKNOWN: Go...
[51:14-51:14] SPEAKER_02: Right.
[51:14-51:15] SPEAKER_01: Don't tell me,
[51:15-51:15] UNKNOWN: I
[51:15-51:17] SPEAKER_01: don't know. Your job right now is to answer my
[51:17-51:17] UNKNOWN: fucking question. To
[51:17-51:23] SPEAKER_01: know that. Right, exactly. So answer... Or like, is... Or a status of something, especially if it's something important.
[51:24-51:24] UNKNOWN: Like,
[51:24-51:33] SPEAKER_01: hey, what's the status of this thing? Well, it's either this or that. But the answer to that means I'm going to do some stuff that might kill us off.
[51:33-51:34] SPEAKER_00: Right.
[51:34-51:42] SPEAKER_01: So, no. Go find out and come back and know the answer. Like, actually know deep in your core the answer. Make sure it's
[51:42-51:42] UNKNOWN: right.
[51:42-51:49] SPEAKER_01: Like your fucking life depends on it. That was very different. It was a very different situation.
[51:50-51:51] SPEAKER_00: Yeah.
[51:51-52:01] SPEAKER_01: No. Yeah. So this is the next step that the VM would have done. Right, yeah. You got to get these credentials for this cluster.
[52:02-52:02] UNKNOWN: And
[52:02-52:16] SPEAKER_01: then so now you can talk to it. And it puts the credentials on this machine. And then you can run the kubectl commands and just push all that stuff. Makes sense. Excuse me. Yeah. So it's straight up kubectl.
[52:16-52:16] UNKNOWN: Once
[52:16-52:18] SPEAKER_01: you have the credentials,
[52:18-52:18] UNKNOWN: you
[52:18-52:20] SPEAKER_01: can talk to it. Yeah, just like you can talk to
[52:20-52:21] SPEAKER_00: it
[52:21-52:21] SPEAKER_01: right
[52:21-52:29] SPEAKER_00: here. Except maybe you can't do that. Or no, you just can't access the control plane on a file. No.
[52:30-52:46] SPEAKER_01: But yeah, just like this. That's the only thing you can do. Yeah. So effectively we're going to apply all of these things. Right. But I assume you have to do namespace first because... You're starting to push to that namespace with the rest of
[52:46-52:50] SPEAKER_00: them. Yeah. Or it's going to do it one at a time. Or that.
[52:51-52:51] SPEAKER_01: Which is
[52:51-53:03] SPEAKER_00: fine with me. Yeah, it's going to take that long. And you did tell it to go one step at a time. Pretty explicitly. Yeah, I'm fine with
[53:03-53:04] UNKNOWN: this. This
[53:04-53:11] SPEAKER_00: is not frustrating me. It's fine. What was the error on that?
[53:11-53:11] UNKNOWN: I
[53:11-53:12] SPEAKER_01: didn't see an error.
[53:12-53:14] SPEAKER_00: Resource mapping that file for Hugging Face Secret.
[53:15-53:15] SPEAKER_01: Where do you see that?
[53:16-53:46] SPEAKER_00: Up a couple, but then it sent out. That was trying to do the secret provider. Oh, there you go. Let me apply the resource quota and then address the CV it's going to. So it sees it. It's just doing all of them. And almost as though it ran it all in one script. And then was going to respond. I don't know why it didn't do that. That's true, I think. I remember having
[53:46-53:52] SPEAKER_01: to deal with that. Secret store CSI. How is that? Where is it on here?
[53:54-54:01] SPEAKER_00: I don't know. But. I assume it's workload identity is workload pool. Yeah, there you go.
[54:05-54:33] SPEAKER_01: So what I do want it to do is create, get this right. Create a script that does all of this and shut it down and redo it. So then the manual is just run the script. Like we just have a cluster startup script that does all of this stuff. And it's in a way that we know it's right. Don't change the freaking script after we get it right. And then we're done up to this point. Cluster deployment looks like this. We're
[54:33-54:33] UNKNOWN: going
[54:33-54:34] SPEAKER_01: to
[54:34-54:34] UNKNOWN: run
[54:34-54:54] SPEAKER_01: this series of commands. Yeah, so I'm not even sure that the cluster was ever coming up right from the. If we're getting all these errors trying to do it manually. I agree. I don't know,
[54:54-54:54] SPEAKER_00: we got all these
[54:54-54:55] SPEAKER_01: errors.
[54:55-55:01] SPEAKER_00: Right. Here's the one. And I remember having to address that CSI secrets thing.
[55:05-55:06] UNKNOWN: Yep.
[55:25-55:26] SPEAKER_00: This is the readme. I
[55:26-55:29] SPEAKER_01: assume it's in the current session. Oh, that's what I thought I was in.
[55:29-55:33] SPEAKER_00: Yeah, it's kind of confusing. It looks like it's highlighted, but you're not in it.
[55:37-55:37] UNKNOWN: Yeah.
[55:46-56:04] SPEAKER_01: Why do you say this is. I mean, it's got the flag on it. Yeah, but why are we going on to the next phase? Let me see. Why are you saying phase one is complete when.
[56:07-56:09] SPEAKER_00: That's a good question.
[56:37-56:53] SPEAKER_01: Secret work around we can use regular. No, I don't want to use regular Kubernetes secrets. I want to. Why don't we use. They're not secure. Oh, they're not. Yeah, you definitely have to use secret manager. Yeah.
[57:01-57:06] SPEAKER_00: You need to change that name. They're not security. That's fucked up. Yeah. Secret the
[57:06-57:11] SPEAKER_01: Kubernetes secret manager like it is it doesn't even what do
[57:11-57:11] UNKNOWN: you
[57:11-57:19] SPEAKER_01: call it? Encrypted. It does. It's like very weak. Anybody can break it. It's not it's not real Christian and there is nothing.
[57:23-57:23] UNKNOWN: I
[57:23-57:29] SPEAKER_00: read a red post this morning about a kid that built an app on a
[57:29-57:29] UNKNOWN: kid.
[57:29-57:59] SPEAKER_00: I don't know how this person built an app on using plug flow and one of his pushes he exposed his API key and he said he was doing all this stuff and finally caught some traction and got some video that got made on his app got posted on some like famous content channel or something like that and so it started popping and he said he had hundreds of a 100s
[57:59-57:59] UNKNOWN: running.
[58:00-58:23] SPEAKER_00: And got an email from Google that said, Hey, it looks like you might be under some sort of attack like whatever service attack and he was like, it's probably fine went to bed. Oh, no.
[58:23-58:23] UNKNOWN: And
[58:23-58:31] SPEAKER_00: he said it was his first project and I was like, bro, I'm so careful turns out, but I thought I feel like I'm a little willy nilly every once in a while.
[58:32-58:32] UNKNOWN: But
[58:32-58:47] SPEAKER_00: like hundreds of GPUs in play and your API key was pushed. Oh no. He had. That's terrible. And usually those end up like it took a long time. It
[58:47-58:47] UNKNOWN: was
[58:47-59:00] SPEAKER_00: so annoying. But ultimately Google like removed most of it and he was like, they're making me pay and the responses were like, bro, you posted your API key. Yeah, they're making you. So
[59:00-59:03] SPEAKER_01: that's not a security breach on their part. It is.
[59:03-59:15] SPEAKER_00: And it's like you gave away your key and then they notified you and you were like, I'm sleepy. I'll get you in the morning. You know how fast GPUs run,
[59:15-59:15] UNKNOWN: bro?
[59:17-59:22] SPEAKER_00: You don't wait two seconds. You don't go to the bathroom. I don't care how bad you got to go. You go shut that bitch
[59:22-59:22] UNKNOWN: down.
[59:22-59:23] SPEAKER_00: Hey,
[59:23-59:25] SPEAKER_01: there's a strange person in the house.
[59:25-59:29] SPEAKER_00: Right. Just see what he's up to in the morning.
[59:30-59:36] SPEAKER_01: Media action. I don't think he probably just didn't understand the consequences. Yeah, for sure. And
[59:36-60:04] SPEAKER_00: that's why Google doesn't just let you up your GPU. But he's in this weird area where you can just make these things that can be like marketable. Yeah. Not knowing what the fuck they are. And yeah, get yourself in a spot. It sounded like the tone at least was like very expensive lesson for me to learn. But like, so I'm guessing he had made a little bit of money off the app and could pay it. But yeah.
[60:05-60:10] SPEAKER_01: Man, that's crazy. That's my fear right there. For sure.
[60:13-60:14] UNKNOWN: But like
[60:14-60:26] SPEAKER_00: by the time you get to make it, it's just also, again, the problem. Like whatever this app was, it was clearly not like super well written. And it was vibe coded, right? And Flutterflow and all that shit.
[60:28-60:29] UNKNOWN: And
[60:29-60:34] SPEAKER_00: he did like marketing to make it popular. Right. Not like,
[60:35-60:35] UNKNOWN: hey,
[60:35-60:36] SPEAKER_00: look at this thing that's valuable.
[60:38-60:38] UNKNOWN: But
[60:38-60:39] SPEAKER_00: then he got, got.
[60:40-60:43] SPEAKER_01: And they're out there. Oh, yeah. Looking to get you.
[60:43-60:49] SPEAKER_00: Yeah. And they aren't even necessarily people. Right. It's just programs running that are like, is that a hole? No.
[60:49-61:01] SPEAKER_01: Right. And I don't even know that, like, especially with GPUs, it's not necessarily people just trying to make you pay a lot of money. They're using your service to do whatever.
[61:01-61:01] UNKNOWN: Like mind
[61:01-61:05] SPEAKER_01: -boggling. Exactly. Like, oh, a free project. And there's some
[61:05-61:06] SPEAKER_00: computer available.
[61:06-61:18] SPEAKER_01: Right. I'm just going to run my workloads here while you're sleeping. Yeah. The most intense workload. Oh, you, you, you just gave me a API key that has access to everything.
[61:18-61:21] SPEAKER_00: Right. Yeah. That was another one of the comments. Don't do that.
[61:21-61:21] UNKNOWN: And then
[61:21-61:28] SPEAKER_00: there was like, so you posted your apparently can do everything API key. Like what
[61:28-61:28] UNKNOWN: happened?
[61:28-61:29] SPEAKER_00: In general,
[61:29-61:29] UNKNOWN: the,
[61:29-61:35] SPEAKER_01: like security rules that don't use API keys, period. Right. Because they are, they don't ever end.
[61:35-61:39] SPEAKER_00: Yeah. Then once they have a, once they have it, it's just a piece of text.
[61:39-61:44] SPEAKER_01: And certainly if you're using the API key, don't tie it to a service account
[61:44-61:45] SPEAKER_00: that is.
[61:45-61:45] UNKNOWN: That can't execute,
[61:45-61:52] SPEAKER_00: that has admin privileges. Yeah. Right. My guess is he was using the default service account. Probably doesn't even know what service accounts are. Probably not.
[61:53-61:53] UNKNOWN: Use
[61:53-61:56] SPEAKER_00: Flutterflow, which is already integrated into Flutter, which is integrated into Google. So
[61:56-61:56] UNKNOWN: it
[61:56-62:02] SPEAKER_00: was very easy to get it up and running. And I think Flutterflow naturally uses Firebase too.
[62:02-62:02] UNKNOWN: So
[62:02-62:04] SPEAKER_00: like. Just use these keys. It's
[62:04-62:06] SPEAKER_01: easy. It's known. Like, yeah, it is
[62:06-62:06] SPEAKER_00: easy.
[62:07-62:07] UNKNOWN: It sure
[62:07-62:09] SPEAKER_00: is. Yeah. And
[62:09-62:09] UNKNOWN: then
[62:09-62:17] SPEAKER_00: once there's any, if you have like the slightest thought that maybe an API key got pushed out.
[62:17-62:18] SPEAKER_01: Go
[62:18-62:20] SPEAKER_00: kill it and make a new one. It's so easy.
[62:21-62:22] SPEAKER_01: Go delete that thing.
[62:23-62:24] SPEAKER_00: But if
[62:24-62:30] SPEAKER_01: you don't know, you don't know. I don't know what's happening. I scolded it.
[62:31-62:31] UNKNOWN: And
[62:31-62:40] SPEAKER_01: he said, definitely use Secret Manager. Yeah. And now it's doing stuff.
[62:40-62:48] SPEAKER_00: Yeah. I mean, it is trying to update it, right? Yeah. Enable Secret Manager CSI. I guess. Well, it's the next one. Because that one has a fucked up flag,
[62:49-62:49] UNKNOWN: apparently.
[62:49-63:00] SPEAKER_00: But yeah. So you can just do that. And it's thought was like, fuck it. We'll figure it out. We'll use the Kubernetes. No.
[63:02-63:06] SPEAKER_01: No. I guess I didn't explicitly say it's a requirement. That's why I
[63:06-63:06] UNKNOWN: said
[63:06-63:07] SPEAKER_01: it's a requirement.
[63:07-63:11] SPEAKER_00: That is a good exercise right there. Like, no. This is where I failed
[63:11-63:16] SPEAKER_01: to make it correct. Right. And the, I'm going
[63:16-63:16] UNKNOWN: to
[63:16-63:20] SPEAKER_01: go make coffee. Yeah. And it was trying to move to the next phase. Like, no.
[63:20-63:25] SPEAKER_00: Yeah. That is maybe the craziest thing. Like the fact that you had an idea of how to do it.
[63:26-63:31] SPEAKER_01: It's in there. Not available. This is fine. We'll just go to the next phase.
[63:33-63:40] SPEAKER_00: Yeah. And that stuff that you're in now is new. It wasn't there. It was keeping it pushing. Like, well, that's fucked up. Yeah. We're good. Guess
[63:40-63:41] SPEAKER_02: we're done.
[64:29-64:51] UNKNOWN: Okay. What do you suppose is really important? I saw a video from yesterday. From yesterday. Great. It inspirates you to do coffee. I get it.
[64:52-64:52] SPEAKER_01: I
[64:52-65:35] UNKNOWN: like it. Right. That was like, I don't have to learn how to do that. I have to be careful. I mean, we did this, but it just older, made it more, I mean, stronger. Yeah. I think it's important to think that like, it's more of a little full like that. You go to the bottom of the world. You're telling me you have enough, right? Right. And you can't help it. Right. Because you're not expecting to be there. If you go in, you're going to be like, right, if you play there, and then fall, and then you just slide in there. And that's the biggest step. Or the most needed plan is if they don't realize they're there, or they're at the bottom of whatever, you're going to
[65:35-65:36] SPEAKER_01: find yourself.
[66:05-67:51] UNKNOWN: There's a lot of that. Because they were all backed up and put in there the wrong way. Okay. Okay. I don't ever want to do it. So. I get the magic happens every day.
[68:13-68:14] SPEAKER_01: I love you.
[68:14-68:14] UNKNOWN: Have
[68:14-68:15] SPEAKER_01: fun.
[68:15-68:18] UNKNOWN: Try that.
[69:09-69:12] SPEAKER_01: Maybe it's
[69:12-69:12] UNKNOWN: not.
[69:13-69:24] SPEAKER_00: I mean, it's certainly spinning and says the value shumbly will be updated. Like it's being updated, but is it in a loop in its update?
[69:24-69:24] UNKNOWN: I
[69:24-69:31] SPEAKER_00: do not know. Secret manager is currently disabled, but that means absolutely it is able to be enabled.
[69:49-69:52] SPEAKER_01: 30 seconds ago.
[70:28-70:29] UNKNOWN: Are
[70:29-70:31] SPEAKER_02: you finished?
[70:32-71:12] SPEAKER_00: Yes. So now. Secret manager enabled. You can go ahead and make it do the script.
[71:12-71:13] SPEAKER_01: Yep. That's what
[71:13-71:14] SPEAKER_00: I'm
[71:14-71:18] SPEAKER_01: working on.
[71:59-72:24] UNKNOWN: Okay. Okay.
[72:46-72:50] SPEAKER_00: I thought you would already sent that and it just completely.
[72:51-72:56] SPEAKER_01: No, it's holding. I'm waiting for it to do its checks that hey, everything's good now.
[72:56-72:57] SPEAKER_00: I do that too.
[72:57-72:57] UNKNOWN: It
[72:57-73:01] SPEAKER_00: just looks like wow. That's not even close to what you just asked.
[73:23-74:06] SPEAKER_01: Yeah. The reason that I know about the Kubernetes is the Kubernetes book. Yeah.
[74:06-74:06] UNKNOWN: And
[74:06-74:14] SPEAKER_01: so there's still like the job descriptions, the diarization alignment job.
[74:14-74:15] SPEAKER_02: Yeah.
[74:15-74:16] UNKNOWN: Oh
[74:16-74:32] SPEAKER_01: yeah. Maybe I should let it keep going. I don't know. Or separate like deploy everything right here up to this point with the script. Because everything else after that is application stuff. Yeah, I agree. This that is phase
[74:32-75:11] SPEAKER_00: one. Yeah. Yeah. I
[75:11-75:16] SPEAKER_01: told her that yesterday that we'd normally do it on Wednesdays, but it's fine.
[75:16-75:21] SPEAKER_00: It was a little like I had the goggles on yesterday and it's getting a little looking like people have been swimming.
[75:22-75:28] SPEAKER_01: Yeah. It's fine. It's
[75:28-75:28] UNKNOWN: fine.
[75:28-75:36] SPEAKER_01: I don't even know why I said that. I'm working on my brain responses.
[75:37-75:38] SPEAKER_00: Second milliseconds.
[75:39-75:39] UNKNOWN: Yeah.
[75:44-75:45] SPEAKER_01: In fact, in general,
[75:45-75:45] UNKNOWN: I
[75:45-75:48] SPEAKER_01: would rather if there's something that's annoying you just tell me what it is.
[75:48-75:51] SPEAKER_00: Right. Let me do it. We can be tough with that.
[76:00-76:02] SPEAKER_01: Where did you put it in here?
[76:03-76:03] SPEAKER_02: Good.
[76:04-76:19] SPEAKER_00: Yeah. I did a little looking and apparently God very explicitly hates things. So I don't know that hate is its own demon inherently. In fact, we are supposed to hate evil.
[76:20-76:20] SPEAKER_01: Okay.
[76:20-76:37] SPEAKER_00: But my question is a couple of things. Okay. Well, then there's a hate thing that is really crushing it. Right. Doing great on the demon shit or that's a human fingerprint. God, don't use the word hate. I'm not sure which one.
[76:37-76:40] SPEAKER_01: Right. I understand what you're
[76:40-77:10] UNKNOWN: saying. Excuse me.
[77:21-77:24] SPEAKER_01: Okay. I like it.
[78:07-78:39] UNKNOWN: Okay. I'm deleting.
[78:42-78:45] SPEAKER_01: Like when you click it, there's no status bar. There's no.
[78:46-78:47] SPEAKER_00: Oh, yeah. No status.
[78:47-79:06] SPEAKER_01: Yeah. It's just I'm deleting. I'm working on it. Yeah. I'll let you know when I'm
[79:06-79:06] UNKNOWN: done.
[79:17-79:25] SPEAKER_00: Steve Jobs vehemently demanded that Disney not be in charge of Pixar's direction. And they are. And it's
[79:25-79:25] UNKNOWN: shit.
[79:25-79:26] SPEAKER_01: And it's crappy.
[79:27-79:30] SPEAKER_00: That guy was a gangster. He was.
[79:30-79:30] UNKNOWN: That guy
[79:30-79:32] SPEAKER_00: was what Elon wants to
[79:32-79:32] UNKNOWN: be.
[79:32-79:36] SPEAKER_00: I agree. I agree completely. Elon basically took him and was like, yeah, that but
[79:36-79:36] UNKNOWN: I'm not going to do it.
[79:37-79:39] SPEAKER_00: Yeah. Better at everything.
[79:41-79:41] SPEAKER_01: Yeah.
[79:42-79:42] UNKNOWN: I
[79:42-79:58] SPEAKER_01: think that. And or like I saw a title for a YouTube video yesterday that said, and or is the best Disney or best Star Wars ever. And I don't disagree.
[79:59-79:59] UNKNOWN: I'm
[79:59-80:01] SPEAKER_00: not done with it. Right. I haven't seen all of them. But.
[80:02-80:20] SPEAKER_01: But I don't necessarily disagree. And so they do have that. Right. So the question is, can you apply this, whatever the magic that led to this, to everything, to any or everything else? Can you do that? I think. Are you willing to do that? You can do
[80:20-80:40] SPEAKER_00: it. Yeah, clearly. You can't do it at the scale because they're trying to go quantity as well. They're pushing shit out and it is shit. Right. And then I think this is not my point, but I heard somebody say that the live action movies are actually hurting any chance of that because they're doing great.
[80:40-80:51] SPEAKER_01: Right. I saw some stuff about that, too. Like people are actually watching. They're making money. Like making it worse. Yeah. Right. Well, you're watching this freaking slot and now that's the standard. That's what they're going
[80:51-80:51] UNKNOWN: to
[80:51-80:51] SPEAKER_01: keep making.
[80:51-81:01] SPEAKER_00: It's kind of like 20 years ago, we wouldn't have. Right. Right. Because there were other good movies out. Right. People were making new stuff and it's like,
[81:01-81:01] UNKNOWN: no,
[81:01-81:02] SPEAKER_00: I'm not going to
[81:02-81:02] UNKNOWN: go
[81:02-81:04] SPEAKER_00: watch The Lion King, but slightly different looking.
[81:04-81:14] SPEAKER_01: And people are still crazy movies enough of like fine. And it's nostalgic enough that I like The Lion King. I'm going to go see it. Exactly. Like, no.
[81:14-81:18] SPEAKER_00: And then you even fucked them up by putting your message in
[81:18-81:21] SPEAKER_01: them. Yeah. And here we're still doing it.
[81:21-81:23] SPEAKER_00: Yeah. But Endor did come out.
[81:23-81:32] SPEAKER_01: It did. And it's edgy and the characters are well written. But I anticipated that because of Rogue One.
[81:32-81:32] UNKNOWN: I
[81:32-81:38] SPEAKER_01: felt like Rogue One was the best of all of them by far years ago. It's like,
[81:39-81:39] UNKNOWN: and
[81:39-81:41] SPEAKER_01: the same people are making a series. Yeah. Yes.
[81:42-81:48] SPEAKER_00: It was just the least Star Wars -y. That's why the Star Wars people don't like it. Right. Or some of them.
[81:48-82:02] SPEAKER_01: Right. The, and I feel like that about Alien Earth too. Like Noah Hawley is making, like one of my favorite shows ever is Fargo.
[82:02-82:03] SPEAKER_00: Oh yeah. Yeah.
[82:03-82:09] SPEAKER_01: So in his style, like is this combination of art, well written characters. Like, and aliens. And yeah,
[82:09-82:17] SPEAKER_00: also aliens happen to be like, yeah, write a great story. And there's like, again. And it's on Earth for the first time ever.
[82:17-82:17] UNKNOWN: The first Alien movie,
[82:17-82:26] SPEAKER_00: probably the second one, they show the alien almost not at all. Right. That's the point of the big scary monster. They look retarded on screen ultimately.
[82:27-82:30] SPEAKER_01: Yeah. And you lose all of the anticipation and angst.
[82:31-82:31] UNKNOWN: But
[82:31-82:42] SPEAKER_01: yeah, writing, like so putting my favorite universe together with one of my favorite creators. Yeah. And it's in a series, right? So you can go in detail. You can develop characters.
[82:43-82:43] UNKNOWN: Like
[82:43-82:47] SPEAKER_01: don't mess it up. Don't mess it up. It should be good.
[82:47-83:13] SPEAKER_00: Yeah. It almost needs to be like, you need to write a story about like a crime drama and then oh yeah, the criminals, the aliens. Right. Like add that in retrospect and then polish out where that is crazy. And then now you have an Alien movie that's just a good movie. A good story. Yeah. And also aliens because that is fun. The monsters aren't retarded on the screen if you use them. If
[83:13-83:19] SPEAKER_01: you write, if you do it right and you get the special effects right and all that stuff like that. But the characters have to be good.
[83:19-83:24] SPEAKER_00: If it's sprinting across the screen and like hand to hand fighting with people, it's going to look stupid.
[83:25-83:25] UNKNOWN: And
[83:25-83:25] SPEAKER_00: like I
[83:25-83:38] SPEAKER_01: think if you look at Game of Thrones, the thing that disappointed me, maybe everybody so much is that Daenerys wouldn't have done that. Maybe she would have done that if she went crazy. Right, but they didn't show her going
[83:38-83:38] UNKNOWN: crazy.
[83:38-83:42] SPEAKER_01: But they didn't show her and that's reasonable for the story, especially coming from the Targaryen background.
[83:42-83:42] UNKNOWN: But
[83:42-83:44] SPEAKER_01: she just,
[83:44-83:44] UNKNOWN: it
[83:44-83:56] SPEAKER_01: felt like all of a sudden, because before this she was very loving and she gradually got more, she did the things she needed. But then all of a sudden she's going to just burn everything.
[83:57-83:58] SPEAKER_00: That makes
[83:58-83:58] SPEAKER_01: no freaking
[83:58-84:18] SPEAKER_00: sense. Read it for the win. Literally, you could do the exact same thing just right after that dude shoots her second dragon out of the sky. Right. And she just snaps. It will require some good face acting for like a couple seconds. And then she just kills everyone. Right. Because that's my second baby I own. They are my children. And that is more reasonable.
[84:18-84:18] UNKNOWN: She
[84:18-84:18] SPEAKER_00: just killed
[84:18-84:29] SPEAKER_01: one. I'm killing everyone. That, I can understand that character doing that. But it just, it doesn't make sense from a character arc and just like these new Disney movies, like all of a sudden,
[84:30-84:30] UNKNOWN: like,
[84:30-84:35] SPEAKER_01: well I'm just going to do, like the characters are doing things that don't make sense.
[84:35-84:35] UNKNOWN: Like
[84:35-84:41] SPEAKER_01: if you actually are actually following it and actually written the story, like that makes no
[84:41-84:45] SPEAKER_00: sense. Yes. They were trying to subvert expectation.
[84:46-84:46] UNKNOWN: It
[84:46-84:47] SPEAKER_00: has become a buzz phrase.
[84:49-84:49] UNKNOWN: And
[84:49-84:53] SPEAKER_00: it's basically for a while there people subverted expectation,
[84:53-84:53] UNKNOWN: i
[84:53-84:58] SPEAKER_00: .e. Ned Stark got his fucking head cut off. No one saw that coming. But then it became like,
[84:58-84:58] UNKNOWN: well,
[84:59-85:07] SPEAKER_00: at the detriment to the story you will subvert expectations for the sake of subverting expectations. Right. And it's become a shit show.
[85:09-85:10] SPEAKER_01: But here
[85:10-85:10] UNKNOWN: we
[85:10-85:14] SPEAKER_00: are. Yeah. But Andor did come out.
[85:14-85:16] SPEAKER_01: It did come out. It does exist.
[85:16-85:16] UNKNOWN: I'm just saying because
[85:16-85:17] SPEAKER_00: you brought
[85:17-85:17] SPEAKER_01: that up.
[85:17-85:17] UNKNOWN: I
[85:17-85:17] SPEAKER_01: mean
[85:17-85:17] UNKNOWN: it
[85:17-85:26] SPEAKER_01: was a great point. It does exist. It's here. And so there's somebody in that camp that is like,
[85:26-85:26] UNKNOWN: get
[85:26-85:28] SPEAKER_01: away from me. It's cool. I'm going to make this.
[85:28-85:32] SPEAKER_00: I've got this other novel story people want it. Let's go.
[85:35-85:38] SPEAKER_01: But, but where is the strong female lean?
[85:38-85:40] SPEAKER_00: She's in there. There's multiple
[85:40-85:40] UNKNOWN: of her.
[85:40-85:48] SPEAKER_00: There's multiple. Mothma? Vicks? Vicks is solely responsible for Andor saving everyone. They all died.
[85:48-85:48] UNKNOWN: But
[85:48-85:53] SPEAKER_00: like killing the Death Star, Vicks gets a big chunk of credit for that, for leaving him.
[85:53-85:56] SPEAKER_01: And was Clea?
[85:56-85:56] SPEAKER_00: Yeah.
[85:56-85:57] SPEAKER_01: Clea is solid. Yeah,
[85:57-85:57] UNKNOWN: she's
[85:57-85:58] SPEAKER_01: fucking awesome. She might
[85:58-86:14] SPEAKER_00: be my favorite character. Like savage and they're not overdoing it. She's not picking up 400 pound dudes and chucking them across her room. Right, which is unreasonable. She did like completely dominate that ginger dude by being like, listen motherfucker, do what I say.
[86:15-86:23] SPEAKER_01: Because she's wielding this other. I'm going to burn you. Both of us were going to get killed, but do it right now. This is the only way
[86:23-86:36] SPEAKER_00: forward. We're either getting this thing out of here or we're dying. Right. And she made it happen. Yeah, going back, I don't know that like I would have to go through and try to find things that annoy me about it.
[86:36-86:38] SPEAKER_01: Yeah, I think it's a great story.
[86:39-86:39] UNKNOWN: I
[86:39-86:46] SPEAKER_01: think season one, I didn't like season one as much as season two, but because you needed season one to make season
[86:46-86:48] SPEAKER_00: two. It's the opposite of
[86:48-86:48] UNKNOWN: Dune.
[86:48-86:50] SPEAKER_00: Season two is the opposite of Dune two.
[86:50-86:51] SPEAKER_01: Right, I
[86:51-87:01] SPEAKER_00: agree. Like season one, Dune one, setup, big like all this stuff. Dune two is fine, especially after you watch the TV show. It was very good compared to that. Like,
[87:02-87:02] UNKNOWN: and
[87:02-87:06] SPEAKER_00: maybe it's worth it when I'm watching it because I actually really like it. I think I'm going
[87:06-87:06] UNKNOWN: to
[87:06-87:12] SPEAKER_00: watch it. Yeah, but season two of Andor is what I had hoped Dune two would do with that story.
[87:12-87:44] SPEAKER_01: I think that the the criticism that I've seen so far and I agree with is they these each one of these three, whatever three episode, second segments could have been whole seasons. Right. That's the thing. Like they still rushed it. If you must put it in one season, you made a 12 episode season. At a minimum, you could have done the six. You could have made this be two seasons instead of a compressed one. Yeah. That's the only.
[87:44-87:47] SPEAKER_00: I agree. But it's fine. They did it.
[87:47-87:52] SPEAKER_01: They're pulling it off because they do these time jumps. They did a year time jump four
[87:52-88:18] SPEAKER_00: times. And you get to skip like an entire episode on the fallout after that one lady got shot. And it's like, well, we have to deal with this. And it's like, nope. That chick put like devastated that kid into his face in front of everyone. And then we skip a fucking year. It took 30 seconds to execute and it was perfect. Yeah, that was like the Game of Thrones. They would call them like the some podcast, the road shows.
[88:19-88:19] UNKNOWN: So
[88:19-88:26] SPEAKER_00: like Tyrion and the bald guy walking down a road for like a whole season talking. Right.
[88:26-88:26] UNKNOWN: And
[88:26-88:29] SPEAKER_00: like that's the stuff that you just don't get from everywhere else. And it's so dialogue driven.
[88:29-88:29] UNKNOWN: I
[88:29-88:40] SPEAKER_00: don't know that I am certain that Andor's dialogue does not stand up to Game of Thrones. But it is still very good. It's good.
[88:41-88:41] UNKNOWN: Yeah.
[88:41-88:49] SPEAKER_00: I also think there's something too like there's a bunch of British theater actors and people know one knew it started sucking once they got famous.
[88:50-88:50] UNKNOWN: Oh,
[88:50-88:50] SPEAKER_01: yes.
[88:51-89:14] SPEAKER_00: I agree. And just like these savages that have been on the stage for 20 years and a few children, but you can't have kids on the show without them being kids. But it wasn't just some famous person that's like, oh, yeah, I'm going to be in a TV show or even just like a movie actor that's coming to try to do this like super intense dramatic stuff. I
[89:14-89:48] SPEAKER_01: think the same thing happened to The Walking Dead. Like the story was good. It was very character driven. It was relatively slow. The zombies were not on screen a whole lot. And I think they start listening to the fans like zombies. And just like in the beginning, there was the story was pure and they were making it because they were interested. They had this material and the story was good. And then it was like, well, we got to do something for the fans like write your stuff, like keep going. Fans are here because of that story.
[89:48-89:56] SPEAKER_00: Right. And they would have told you that they wanted something else at the beginning and you gave them this other thing and they liked it. You
[89:56-89:56] UNKNOWN: made
[89:56-89:57] SPEAKER_00: it be like everything else.
[89:58-89:58] UNKNOWN: Henry
[89:58-90:05] SPEAKER_00: Ford said if I asked the customer what they want, they'd want a faster carriage. And that's not what your job is.
[90:07-90:11] SPEAKER_01: You struck gold by making something new and special and unique.
[90:12-90:12] UNKNOWN: And
[90:12-90:15] SPEAKER_01: then you made it, watered it down and made it like everything else.
[90:16-90:16] UNKNOWN: Like,
[90:16-90:30] SPEAKER_00: well. Jaws is the perfect example of like the zombies are the monster and the aliens are the monster. Monster isn't actually that interesting. It's terrifying and nothing you can put on the screen is more terrifying than the imagination of the audience.
[90:31-90:45] SPEAKER_01: I literally watched a YouTube video talking about aliens yesterday or the day before. And it said that it was talking about the product, like they had problems getting it green lighted because the studios didn't understand it.
[90:45-90:45] UNKNOWN: And
[90:45-90:48] SPEAKER_01: it's like the thing that really did it for really,
[90:48-90:48] UNKNOWN: it's
[90:48-90:49] SPEAKER_01: like it's
[90:49-90:49] UNKNOWN: like
[90:49-90:54] SPEAKER_01: it's like Jaws in space. And they were like, got it. That's
[90:54-90:54] UNKNOWN: it.
[90:54-91:02] SPEAKER_01: Go. Right. And that's what the phrase or that's the concept that got it over the hump. It's like, hey, this is kind of weird. And you know,
[91:02-91:02] UNKNOWN: like
[91:02-91:03] SPEAKER_01: perfect Jaws in
[91:03-91:03] UNKNOWN: space.
[91:03-91:06] SPEAKER_01: Jaws in space. Jaws driving a bunch of angst and
[91:06-91:19] SPEAKER_00: every Jaws sequel, they showed the shark more than the last one and it made less money. Like it's a classic thing we learned in the fucking 70s or whatever the hell that came out. And still.
[91:20-91:33] SPEAKER_01: So I don't know that we're going to actually get to the phase two today because we're going to start up the cluster, verify everything looks good and then shut it down and then have to go through the process of starting it up again for the next time. But maybe that's what you do is.
[91:33-91:33] UNKNOWN: I
[91:33-91:34] SPEAKER_01: got a block immediately.
[91:34-91:34] UNKNOWN: Oh
[91:34-91:41] SPEAKER_01: yeah. When the next time, like my goal is for this point forward, just use the cluster deployment script.
[91:42-91:46] SPEAKER_00: Is your day potentially open enough to just get another little jam session
[91:46-91:46] UNKNOWN: in?
[91:46-91:47] SPEAKER_00: Yeah. What
[91:47-91:57] SPEAKER_01: I really need, maybe what I'll do is take this computer in there and put my work computer on the side. Yeah. Like so I can see messages, but I work on this, but have it open and.
[91:58-92:05] SPEAKER_00: I should be back at like one ish unless it's an annoying one. Or we could get another session in the afternoon if you want.
[92:05-92:15] SPEAKER_01: Yeah. I have like, I may just kill my day and like I'm not on vacation, but just cancel all my meetings. There's one that I
[92:15-92:15] UNKNOWN: like
[92:15-92:19] SPEAKER_01: I created and there's multiple people in it. So it's not a good
[92:19-92:19] UNKNOWN: look.
[92:19-92:22] SPEAKER_01: I can't create, I can't cancel it at the last minute. But even
[92:22-92:35] SPEAKER_00: that, like you can't sit and jam on this all day either. So like that's like an hour break to do some work work. And if
[92:35-92:35] UNKNOWN: it
[92:35-93:03] SPEAKER_00: started, if my theory on like high traffic times or when it goes retarded, then at some point you're going to be like, nevermind. I
[93:03-93:09] SPEAKER_01: haven't seen anything else. I think the next set of moves will happen after some of the there's like six games.
[93:09-93:18] SPEAKER_00: So one thing I saw learning, I'm sure they will. And that's probably going
[93:18-93:18] UNKNOWN: to
[93:18-93:19] SPEAKER_00: be.
[93:19-93:21] SPEAKER_01: We'll see. But
[93:21-93:27] SPEAKER_00: I can't imagine they don't move away because Chet ceiling potential is maybe higher than the
[93:27-93:27] UNKNOWN: other
[93:27-93:29] SPEAKER_00: two if he really puts it together.
[93:29-93:42] SPEAKER_01: And I think to a certain extent you have to show good faith with him. And because everybody else is looking like, hey, you're going to mistreat him after running the championship.
[93:42-93:53] SPEAKER_00: Yeah. Or you're just like, hey, we're ultimately like clinically committed to what's best for the team and we can get something like.
[93:53-93:59] SPEAKER_01: I don't think that's the character of the team. But so which I get it. I think
[93:59-94:01] SPEAKER_00: Russ and Harden and Katie left.
[94:02-94:14] SPEAKER_01: I agree. But that was after they gave it a shot. Right. And it's like, OK, we're clearly going into rebuilding. That's not what's happening now. For sure. It is like, well, you made the champion. We got here with them.
[94:15-94:28] SPEAKER_00: Right. This was the big three. Give me my money. Yeah. But I guess the I'm kind of playing devil's advocate because I think they got us. It's the three. But you can make the argument like,
[94:28-94:28] UNKNOWN: yeah,
[94:28-94:33] SPEAKER_00: you're due for an extension, but you played three quarters of a season. Right.
[94:34-94:37] SPEAKER_01: Yeah. So I think checks the one where it hurt. I'm like,
[94:37-94:37] UNKNOWN: for
[94:37-94:38] SPEAKER_00: sure.
[94:38-94:38] UNKNOWN: I
[94:38-94:38] SPEAKER_00: don't
[94:38-94:38] UNKNOWN: know.
[94:39-94:39] SPEAKER_00: I would keep.
[94:40-94:40] SPEAKER_01: He's an all star.
[94:41-94:41] UNKNOWN: So
[94:41-94:41] SPEAKER_00: really, Max,
[94:41-94:41] UNKNOWN: I
[94:41-94:42] SPEAKER_00: think is
[94:42-94:42] UNKNOWN: what
[94:42-94:43] SPEAKER_00: he's so
[94:43-94:47] SPEAKER_01: for sure him. But check is like, hey, we need to have some conversations.
[94:49-94:53] SPEAKER_00: Maybe have the shorter contract. Yeah. You're like, I'll do
[94:53-94:54] SPEAKER_01: it next
[94:54-95:00] SPEAKER_00: time. Yeah. Team option on the year that you really get paid injury prone and. I
[95:00-95:00] UNKNOWN: mean, I
[95:00-95:10] SPEAKER_00: don't want. It's what it is. Yeah. That's what I always thought. Like Greg Oden was like the big example of the guy that had a call like,
[95:10-95:10] UNKNOWN: holy
[95:10-95:20] SPEAKER_00: shit. And then his knees or whatever shins, basically. And people talked about like, man, he was great except for that.
[95:20-95:20] UNKNOWN: And
[95:20-95:28] SPEAKER_00: it's like, well, that's kind of part of it. Like, I'm great, except that I'm short and slow and that good at shooting. Yeah. If you're never on the court and you're
[95:28-95:32] SPEAKER_01: injured prone, well, then I'm giving you a lot of money and we're still not winning games.
[95:32-95:42] SPEAKER_00: It's sad, but it wasn't like somebody took his freaking knee, like leg kicked him and did this catastrophic, unbelievable thing. His body just failed. It's weak. Right.
[95:43-95:43] UNKNOWN: The same
[95:43-95:45] SPEAKER_00: way it was able to do those other things, it's not
[95:45-95:50] SPEAKER_01: able to do. It's like saying I'm a boxer. I'm a great boxer, but every time I get hit,
[95:50-95:50] UNKNOWN: I
[95:50-95:52] SPEAKER_01: pass out. Like, well,
[95:53-95:53] SPEAKER_00: I
[95:53-96:12] SPEAKER_01: mean, you're good at a lot of things. Right. But you're not a good boxer. Don't have the whole pack. You're right. I don't know that this is the right way to do this. Like, so I think it went back and updated that in the secret manager on the cluster. It should do that as a part of the initial creation.
[96:14-96:14] SPEAKER_00: Um,
[96:15-96:15] UNKNOWN: but
[96:15-96:28] SPEAKER_01: I don't know that there may not be a way of doing that. Apply secret provider. Maybe that's what it's doing. I don't know. Maybe you can't do that earlier.
[96:28-96:39] SPEAKER_00: It's not part of the initial or we told it to go make a script of exactly what we just did. In the big scheme of things,
[96:40-96:45] SPEAKER_01: I guess I don't care if it takes 15 minutes to start up a cluster. That's fine.
[96:45-96:48] SPEAKER_00: I mean, it takes about that. Anyways,
[96:49-96:49] UNKNOWN: and
[96:49-97:00] SPEAKER_00: that line of adding the secret thing is going to take that much of the additional time is like the quarter of a second.
[97:00-97:00] UNKNOWN: It
[97:00-97:07] SPEAKER_00: takes to run that because if it were to run it as part of the first command, it would still take however long it takes to add it. Probably.
[97:10-97:22] SPEAKER_01: And we know this works. That's the real magic of it. Leave it alone. It's fine. It may be a way to make it improve, but it doesn't matter, especially for always on that
[97:22-97:25] SPEAKER_00: by the time we start thinking about optimization, we're at an always on level.
[97:26-97:32] SPEAKER_01: And it's just in there. Yeah. And you run this little once or do terraform and it's just there.
[97:33-97:40] SPEAKER_00: Anytime. Yeah. It's a no. It's a thing that we could dive into, but it's a no issue. It
[97:40-97:40] SPEAKER_01: is.
[97:41-97:41] UNKNOWN: I
[97:41-97:45] SPEAKER_01: think that if things like that, you go back in the second or third pass of,
[97:45-97:45] UNKNOWN: hey,
[97:45-97:47] SPEAKER_01: we're a process improvement. So
[97:47-97:57] SPEAKER_00: if you decide to try to optimize, there are things you can go and do, but you shouldn't over optimize initial development.
[97:57-98:08] SPEAKER_01: Right. You're absolutely right with the way we started this. Like we should have been doing this all. Just focus on the thing each step. And once that step is done, do not go back and touch it
[98:08-98:09] SPEAKER_00: again. And then I mean,
[98:10-98:10] UNKNOWN: you
[98:10-98:13] SPEAKER_00: can even change it if further on developments.
[98:14-98:14] UNKNOWN: But
[98:14-98:32] SPEAKER_01: then you go back, make those changes. And now I'm going to just even if it's like step four, it's like, hey, step four requires step one to be like this. Okay, well, I'm going to regress back to step one. Do the changes. Do rigorous testing until step one is good again. Then just step two.
[98:32-98:32] UNKNOWN: Now
[98:32-98:36] SPEAKER_01: that I've changed that, then step three. Now I've done that. And now step four should work.
[98:36-98:43] SPEAKER_00: Any change in step two should assume it negates all functionality of steps
[98:43-98:49] SPEAKER_01: three and on. Right. And you go back through the process until you can rigorously verify each part.
[98:49-98:52] SPEAKER_00: And that rigorous verification, if it didn't break anything, it's going to be
[98:52-98:52] UNKNOWN: super easy.
[98:52-98:55] SPEAKER_00: It's going to be fast. But you still have to do it.
[98:55-99:09] SPEAKER_01: 100%. That's the answer. We should have been doing this the whole time. Now we know. But I guess we had to flail around and do all of that for three weeks or however long until to get to this point and go, wait, this is not working. This isn't
[99:09-99:11] SPEAKER_00: it. Let's let's put it.
[99:17-99:22] SPEAKER_01: I mean, the shutdown script, I don't know that we want to test the shutdown script at the end.
[99:23-99:27] SPEAKER_00: Yeah, literally as the final get another run the service.
[99:27-99:30] SPEAKER_01: So let's not test the shutdown script right now.
[99:30-99:32] SPEAKER_00: That makes sense.
[99:38-99:43] SPEAKER_01: I do think we do a in session. What do you think? That's pretty long.
[99:43-99:48] SPEAKER_00: Yeah, but it should. It should be able to do it pretty easily.
[99:48-100:02] SPEAKER_01: Yeah, but leave the cluster up to the in session and don't leave the cluster deployed and leave the next steps as a less work on the services. The job services and stuff. And the cluster is up. We also need to test the shutdown script.
[100:03-100:03] SPEAKER_00: I
[100:03-100:03] UNKNOWN: think
[100:03-100:03] SPEAKER_00: we should.
[100:07-100:08] UNKNOWN: We'll
[100:08-100:13] SPEAKER_00: just get this month started like the last one and have ourselves a little thirty dollar day for no reason.
[100:15-100:16] SPEAKER_01: Hopefully not.
[100:18-100:18] UNKNOWN: But
[100:18-100:33] SPEAKER_01: I think just like for testing and actual days where we're going to actually do transcriptions, you run the startup script, go get a cup of coffee. And then when everything's up and verified and you see all the complete messages.
[100:33-100:41] SPEAKER_00: Like almost 15 minutes, like 530. I just go over there and get the startup script by the time we're starting this going. We're ready to rock.
[100:41-100:49] SPEAKER_01: Exactly. The cluster is just up and then you can do whatever testing or actually run.
[100:53-100:53] SPEAKER_00: Yeah,
[100:53-100:53] UNKNOWN: I
[100:53-101:22] SPEAKER_00: think having that conversation on Monday was useful because it kind of planted the seed in my head of like this. This stuff is not what we're trying to do. It is our launching point. That transcript is like the foundation of it. We can get that transcript however the hell we need to get that transcript. And this isn't like throwing all the caution to the wind. This is just, hey, it didn't work the first pass trying to build the whole thing all at once.
[101:23-101:28] SPEAKER_01: Yeah. I mean, this is a good lesson. We needed it. And I know this.
[101:29-101:29] UNKNOWN: Like
[101:29-102:15] SPEAKER_01: when I do what I've learned this lesson a hundred times in other applications, other places, I personally do not do very well when I'm not focused on individual. Like when I don't have a plan and then so literally the workflow we just talked about having a plan and then focus on the individual parts and just literally work the plan like in. I stop when I either don't have the plan or I'm working out of order or out of sequence and not executing the plan. So build a plan up front and then work the plan. And if some aspect of what you're doing doesn't work, stop redo the plan and then work the plan. And that's it in all applications. And the only time you come out of that is emergency. You just have to react.
[102:15-102:22] SPEAKER_00: Yeah, like it can do every single thing necessary to make this application work. One hundred percent. It
[102:22-102:22] UNKNOWN: just
[102:22-102:40] SPEAKER_00: doesn't, it cannot know how to do this, which ones to do in which order. Right. That's ultimately all you, all you have to do to make whatever you want. Right. Is tell it to do the right things in the right order. In the right order and focus. And keep its overall understanding clutter free.
[102:40-102:58] SPEAKER_01: Right. In fact, even emergencies you can plan to a certain extent is like, hey, there's a fire. Go to get the fire extinguisher. Call 911. Evacuate what like you can do like on that day. These this is what you're going to do.
[102:58-103:10] SPEAKER_00: Maybe it takes more human intervention in emergencies. That makes sense. Right. But you should know you should be able to identify an emergency. Right. This is the type of emergency you're in.
[103:10-103:10] UNKNOWN: Spinner
[103:10-103:10] SPEAKER_00: tigers.
[103:10-103:14] SPEAKER_01: Right. Yeah, exactly. Well, then I have no idea what I'm doing. Right. But start to
[103:14-103:16] SPEAKER_00: confidently say random shit.
[103:16-103:25] SPEAKER_01: There might be a place where you're in a true emergency. Like I've never seen this. I have no idea what's going on. I've never thought about this possibly happening. Right. But then.
[103:25-103:29] SPEAKER_00: Yeah, that's probably a good place to be because if you solve that problem, it might be valuable.
[103:29-103:32] SPEAKER_01: Right. But otherwise, make a plan.
[103:37-103:53] SPEAKER_00: Maybe even like every fifth day is for cleaning up, making sure the plan and documentation is what you think it is. Right. Because it doesn't think anything. It doesn't know. It is reading. It is reading and it's loading
[103:53-104:01] SPEAKER_01: these individual sessions. Right. That it's it doesn't know the whole plan. Right. It doesn't and they can't possibly do that. And it's referencing things
[104:01-104:17] SPEAKER_00: that it wrote. Right. So if it was kind of off in its documentation. Right. Then it's going to read it and be like, OK, I know exactly where we're at. And then if it's a little bit off again at the end of that, that's the classic airplane headed to Los Angeles off by an inch ends up in Seattle or whatever.
[104:19-104:21] SPEAKER_01: This just takes longer than I thought it
[104:21-104:21] UNKNOWN: would.
[104:21-104:22] SPEAKER_00: Yeah.
[104:34-104:41] SPEAKER_01: So we're on apply. Secret provider.
[104:41-104:43] SPEAKER_00: Secret manager. We're on this one.
[104:43-105:16] SPEAKER_01: Right. Success is a function. And you pass it what to or that.
[105:33-105:34] UNKNOWN: I
[105:34-105:36] SPEAKER_01: don't know. Maybe that's just a command.
[105:36-105:44] SPEAKER_00: Yeah. My guess is like in GCP you get like the red flags and I assume there's like a successful.
[105:45-105:53] SPEAKER_01: Yeah. So I guess that's just a log info or log success. Right. Like these are not functions that you created in this. Like they just exist.
[105:53-105:59] SPEAKER_00: Right. That's my guess. Is this using like a CLI package or something?
[105:59-106:02] SPEAKER_01: I don't know.
[106:03-106:05] SPEAKER_00: No, it's running CLI commands. Right.
[106:06-106:06] UNKNOWN: So
[106:06-106:07] SPEAKER_01: like that command already exists.
[106:08-106:13] SPEAKER_00: Yeah. And that's what gets you your little red and yellow shit in the log.
[106:14-106:34] SPEAKER_01: I guess so. Yeah. So yeah. It's whether it's a warning, a success or info. These are different types of message. Yes. It is. No, it's kind of. It's defining. It's building. Yeah. So these are functions. Here it is right here. Yeah. So an info and it tells what type of. So this is just logging it here.
[106:34-106:35] SPEAKER_00: Gotcha. Here it
[106:35-106:36] UNKNOWN: is.
[106:36-106:41] SPEAKER_01: And the color and the info is the message that comes through.
[106:53-106:55] SPEAKER_00: I feel like you're
[106:55-106:55] UNKNOWN: going.
[106:56-107:16] SPEAKER_00: It took a really long time last time too. You might be able to ask it. Well, if you ask it to do the secret provider as part of the spin up,
[107:16-107:16] UNKNOWN: I think
[107:16-107:21] SPEAKER_00: that would be faster. But then we're going to need to kill that. Yeah. Add it to the script. Maybe
[107:21-107:25] SPEAKER_01: we do that tomorrow. I don't know. But. Or. As it's working.
[107:25-107:39] SPEAKER_00: Okay. It's only annoying right now because we're 10 minutes from stopping. Right. And it's like, ah, get done. But. Also, like I said, tomorrow I started before we even. Begin to work. It's going to be done.
[107:43-107:44] SPEAKER_01: Okay. Yeah.
[108:31-108:51] UNKNOWN: Okay. Which is.
[108:53-108:55] SPEAKER_01: Phase. Where do you call those phases?
[108:56-108:56] UNKNOWN: There
[108:56-108:56] SPEAKER_01: it is.
[109:31-109:32] UNKNOWN: Okay.
[110:11-110:19] SPEAKER_01: Right. I don't think I'm going to have time to do it right now. I mean, I don't have a meeting. I can do it. Maybe what I'm going to do is take it in there and start the session in there.
[110:23-110:23] UNKNOWN: Yeah.
[110:52-110:54] SPEAKER_01: We definitely need to
[110:54-110:54] UNKNOWN: do
[110:54-111:04] SPEAKER_01: the tying the service accounts together. Workload identity. Workload identity stuff. That should have been. Maybe it's already done.
[111:04-111:04] UNKNOWN: Yeah. I
[111:04-111:07] SPEAKER_00: mean, it definitely did it manually.
[111:08-111:09] SPEAKER_01: Right. Okay.
[111:09-111:10] SPEAKER_00: We go to the.
[111:10-111:10] UNKNOWN: The
[111:10-111:17] SPEAKER_00: full screen. Maybe just command F like workload.
[111:23-111:23] UNKNOWN: So
[111:23-111:30] SPEAKER_01: I don't know that it's actually done, but maybe. Because it would need to know the names of the.
[111:31-111:31] UNKNOWN: The
[111:31-111:43] SPEAKER_01: service accounts on the other side. I don't think that's done. And that's probably part of the startup script. Yeah. So where I don't know that we're done. We're right. Go back to phase one. And if we're going to do that, I'm going to look at changing the
[111:43-111:54] SPEAKER_00: order. Go back up to what it was right. So it says service accounts created with workload identity. Okay. Up in the green.
[111:55-111:55] SPEAKER_01: Up here.
[111:56-111:56] UNKNOWN: Okay.
[111:58-112:03] SPEAKER_01: Yeah. So maybe they're good. Maybe.
[112:03-112:09] SPEAKER_00: Whether they're actually tied to the right. Yeah. Who knows. They're at least available.
[112:09-112:09] UNKNOWN: They're
[112:09-112:23] SPEAKER_00: available to be made that way. I'm doing it right now.
[112:40-112:44] SPEAKER_01: I assume you still want to work. Thursday and Friday.
[112:44-112:45] SPEAKER_00: Yeah.
[112:45-112:47] SPEAKER_01: Okay. I do. Although I'm not working.
[112:48-112:48] UNKNOWN: That
[112:48-112:48] SPEAKER_01: job.
[112:49-112:49] UNKNOWN: And
[112:49-113:11] SPEAKER_01: we're getting together on Friday. We're going to Oklahoma City on Friday. Friday night and coming back on Sunday. So I will miss Sunday or. Yeah. Yeah. We're staying on Friday and Saturday night. So I will miss Sunday. So I definitely want to work Thursday and Friday. Yeah. And so I will be back in time enough to cook basically.
[113:12-113:16] SPEAKER_00: Yeah. You have thoughts on next week's meal.
[113:16-113:19] SPEAKER_01: I would like to go back to something that we know is good.
[113:20-113:20] SPEAKER_02: Yeah.
[113:21-113:24] SPEAKER_01: Maybe. Crackers. You haven't done that in a while.
[113:24-113:24] UNKNOWN: I'm
[113:24-113:33] SPEAKER_01: down with that. It's a, it's a difficult, not difficult. It's a long cook because there's a bunch of
[113:33-113:33] UNKNOWN: steps.
[113:33-113:36] SPEAKER_01: So maybe not that one because I'm going to be running late or.
[113:36-113:44] SPEAKER_00: I'm fine with it. Especially like. On days where it's just me, I go into like. Fucking headphones. Yeah.
[113:44-113:44] UNKNOWN: And
[113:44-113:52] SPEAKER_00: just get stuff done. If it takes six hours, I'm not thinking. I'm just going. So it is what it is. I'm good with it as long as you are. Yeah, I am.
[113:52-113:52] UNKNOWN: I don't care
[113:52-113:54] SPEAKER_00: about the. Okay.
[113:56-113:59] SPEAKER_01: Something that we can just go into autopilot and don't have to. Yeah. Test it.
[113:59-113:59] UNKNOWN: No, it's
[113:59-114:01] SPEAKER_01: a banger. Just get it done.
[114:01-114:06] SPEAKER_00: It takes a long time, but there's no like difficult techniques about it. I
[114:06-114:06] SPEAKER_01: agree.
[114:09-114:19] SPEAKER_00: And I think we actually optimize quite a bit with doing broccoli on the griddle. Because even like cutting up the broccoli, like and trimming it down takes quite a while.
[114:19-114:19] UNKNOWN: Yeah,
[114:19-114:28] SPEAKER_00: and I can do that. And it's a fucking mess inside. I
[114:28-114:28] UNKNOWN: don't
[114:28-114:34] SPEAKER_00: know if Bryson has had crack burgers like as a participant. Right. But
[114:34-114:35] SPEAKER_01: I mean just had them in general.
[114:35-114:35] UNKNOWN: I
[114:35-114:36] SPEAKER_01: think it's a thing.
[114:43-114:47] SPEAKER_00: They really are. They hit man.
[114:47-114:47] SPEAKER_02: Yeah.
[114:49-114:49] UNKNOWN: I'm
[114:49-115:08] SPEAKER_00: trying to think if I have one that is better. I think like the fried rice and whatever other taco bowls and stuff like that are good. But there's just something about like a protein that's all in one piece. Yeah, I agree. I may even put it in the air fryer.
[115:09-115:09] UNKNOWN: Yeah,
[115:09-115:11] SPEAKER_01: I may put like separate and put an air
[115:11-115:11] UNKNOWN: fryer
[115:11-115:18] SPEAKER_01: because I really like like I don't like putting meat in the microwave. I agree. Even if it takes an extra five minutes, it's fine.
[115:20-115:21] UNKNOWN: You
[115:21-115:24] SPEAKER_00: could probably low and slow it in a pan with the lid on. That's true.
[115:24-115:24] UNKNOWN: Like
[115:24-115:27] SPEAKER_00: low and slow equals like seven minutes. Yeah,
[115:27-115:40] SPEAKER_01: and that's not hard. Doesn't take that long. But yeah, something like that. Air fryer or the pan. Like actually thinking about air fryer, maybe I'll air fry the pork today.
[115:40-115:51] SPEAKER_00: Yeah, you would try. Instead of the pan. I think once I did the thing with the mirin and soy sauce and water. Was that good? Good. But once you put it in the water, it goes away. Watery
[115:51-115:51] SPEAKER_02: pork.
[115:56-115:56] SPEAKER_00: I
[115:56-115:57] UNKNOWN: think
[115:57-115:58] SPEAKER_00: crumbly bacon.
[115:59-116:01] SPEAKER_01: I agree. I agree.
[116:04-116:10] SPEAKER_00: And it could even be kept on the side the same way. So literally like you microwave it or whatever and sprinkle it on the top.
[116:11-116:23] SPEAKER_01: I like it. Gotta not forget that this freaking clustered.
[116:25-116:30] SPEAKER_00: Yeah. Do you want to just go ahead and shut it down for now? No,
[116:30-116:41] SPEAKER_01: I'm literally going to take it in there and I'm going to double work for the morning. And my goal is to get clear Monday as much as possible.
[116:42-116:42] UNKNOWN: Yeah.
[116:45-116:47] SPEAKER_01: All right. I'm going to do that.
[116:47-116:49] SPEAKER_00: You can work in here if you want. Wherever you feel.
[116:49-116:56] SPEAKER_01: No, I'll go in there. It's fine. And then I actually get to work on the widescreen monitor. Oh, that's worth it for sure.
[116:59-117:02] SPEAKER_00: And you're at work. Yeah, exactly.
[117:02-117:02] UNKNOWN: You're
[117:02-117:03] SPEAKER_00: at your
[117:03-117:03] UNKNOWN: desk. Yeah.
[117:03-117:04] SPEAKER_01: And my computer.

==================================================
Generated on: 2025-07-30 16:00:05
Total words: 14098
Total speakers: 4
==================================================




Summary:


creation_date: 2025-07-30 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1537_ZOOM0039_transcript.txt participants: [SPEAKER_00, SPEAKER_01]
Executive Summary
The team discussed a significant shift in their development strategy, moving away from a fully automated, ephemeral [[GKE Autopilot]] cluster managed by a [[VM controller]]. They concluded that the complexity of simultaneously debugging both the application code and the infrastructure was hindering progress. The new approach involves manually setting up a persistent [[GKE]] cluster using [[CLI]] scripts, which will allow them to stabilize the application's code and architecture first. This manual "click-ops" approach will provide a stable environment for development and testing, with the plan to re-introduce automation with tools like [[Terraform]] only after a [[Proof of Concept]] is fully functional. The conversation also touched on the challenges and benefits of using [[AI Tools]] for development, emphasizing the importance of a focused, step-by-step process.

Key Topics Discussed
	•	Critique of Current Automated Workflow
	•	The current system of using a [[VM controller]] to spin up an ephemeral [[GKE Autopilot]] cluster is overly complex for the current development phase [40:34-40:43].
	•	Debugging is difficult because it's hard to distinguish between infrastructure issues and application code issues [06:08-06:26].
	•	The AI assistant ([[Cursor]]) struggles with the multi-faceted problem of managing both infrastructure and code changes simultaneously [13:28-13:50].
	•	Proposed Shift to Manual Deployment
	•	The new strategy is to manually create a persistent [[GKE Autopilot]] cluster using gcloud commands or shell scripts [10:45-11:28].
	•	Application services and manifests will be deployed to the cluster using kubectl apply commands [12:01-12:30].
	•	This "click-ops" approach will provide a stable, known-good environment to get the application working end-to-end [39:27-40:25].
	•	The cluster will be started at the beginning of the day and shut down at the end, simplifying the development loop [13:22-13:28].
	•	Future of Automation
	•	Once the application is stable and working as a [[Proof of Concept]], they will revisit automation [39:27-40:25].
	•	[[Terraform]] will be used to automate the provisioning of the now-proven infrastructure [06:57-07:33].
	•	This follows a more traditional development pattern: get it working manually, then automate the working solution [39:27-40:25].
	•	Technical Architecture Discussion
	•	The new architecture will have the services, including a controller, living on the cluster as listeners [09:14-10:06].
	•	[[Pub/Sub]] will still be used to trigger jobs, but it will assume the underlying infrastructure is already running [08:21-08:35].
	•	They discussed the importance of using [[Secret Manager]] with the [[Secret Manager CSI driver]] over less secure [[Kubernetes]] secrets [56:37-57:19].

Action Items & Decisions
	•	Decision: To abandon the current [[VM controller]]-based automated deployment in favor of a manual, script-based approach for creating and managing the [[GKE]] cluster [13:28-13:50].
	•	Action: Create a startup script that uses gcloud and kubectl commands to provision the [[GKE Autopilot]] cluster and deploy all necessary application manifests and services [54:05-54:33].
	•	Decision: The development workflow will be to start the cluster once at the beginning of the day and shut it down at the end [13:22-13:26].
	•	Decision: Focus on getting the application code working rock-solid in the stable, manually-created environment before re-introducing infrastructure automation with [[Terraform]] [14:13-15:28].

Suggested New Links/Tags
	•	[[Terraform]]

Linked Concepts
	•	[[AI Tools]]
	•	[[CLI]]
	•	[[Cursor]]
	•	[[GKE]]
	•	[[GKE Autopilot]]
	•	[[GitHub]]
	•	[[Kubernetes]]
	•	[[Proof of Concept]]
	•	[[Pub/Sub]]
	•	[[Secret Manager]]
	•	[[Secret Manager CSI driver]]
	•	[[Service Account]]
	•	[[Terraform]]
	•	[[VM controller]]
	•	[[Whisper]]
	•	[[Workload Identity Federation]]

#Tags
	•	#AI
	•	#Automation
	•	#Deployment
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom40
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1401_ZOOM0040_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:02] SPEAKER_03: I went too long meditating.
[00:03-00:03] UNKNOWN: Oh
[00:03-00:04] SPEAKER_01: nice, that's a good problem.
[00:08-00:25] UNKNOWN: Exactly. I
[00:25-00:27] SPEAKER_03: normally have a rule where I
[00:27-00:27] UNKNOWN: make
[00:27-00:30] SPEAKER_03: myself not look at my watch or my phone.
[00:33-00:33] UNKNOWN: And
[00:33-00:40] SPEAKER_03: because every time I do it's like, you know, at some point, like if I get into that loop, it's like, did I set the
[00:40-00:41] SPEAKER_04: timer?
[00:42-00:59] SPEAKER_03: Has it been like whatever? And I'm like, ow, and I look at it and there's like 30 seconds left or something like that. But in this case, I didn't set the timer. That's good. This is the first time that I actually didn't set the timer. And at some point I was like,
[01:00-01:00] SPEAKER_02: no.
[01:01-01:02] SPEAKER_03: It's like, no, I'm not going
[01:02-01:02] UNKNOWN: to
[01:02-01:07] SPEAKER_03: look at it. I always do this. It's like, no, really, I need to
[01:07-01:07] UNKNOWN: look at it. I think
[01:07-01:08] SPEAKER_03: I forgot. Yeah,
[01:08-01:19] SPEAKER_01: that's awesome. And you should probably drive because I've already been cursing at it this morning for not doing a good job on the readme last night. Got it.
[01:23-01:27] SPEAKER_04: Got to switch that because there's not enough room to do this.
[01:29-01:51] SPEAKER_01: And then last night, far once a bed, the ephemeral cluster manager VM was still on. I don't know. Really? I turned it on or like the new script turned it on even though we're not using it. Maybe that's what was fucking up the quota because it was trying to grab GPUs too. Maybe. Or it had one that was
[01:51-01:51] UNKNOWN: using.
[01:51-01:53] SPEAKER_01: That's interesting. But yeah,
[01:53-01:53] UNKNOWN: I
[01:53-02:47] SPEAKER_01: am trying to make a habit of checking the logs at night just one last time. Like, hey, there shouldn't be anything for the last several hours. And there was this weird like, I didn't really understand what it was. So I gave it to cursor and it was like, that's a front end thing. And I guess it was the VM trying to do something and just running on a loop. Because as soon as I killed the VM, it stopped. That's interesting. Yeah, and I looked through a little bit this morning through the deploy cluster scripts and the job controller script and the job controller code and there's no reference to ephemeral, which is what the controller was called. There's references to clusters obviously, but none of them that say like that cluster controller from the ephemeral thing. Well, I'm going to start there. Yeah, that's probably a
[02:47-02:48] UNKNOWN: good idea.
[02:49-02:58] SPEAKER_01: Maybe give it a heads up that it did a shit job of the end session yesterday. I'm going
[02:58-02:58] UNKNOWN: to
[02:58-03:01] SPEAKER_01: look at this thing and see if it was less disappointing.
[03:02-03:11] SPEAKER_03: You've used 90 % of your uses consider enabling pay as you go. Got it here. Or auto for unlimited requests to
[03:11-04:18] SPEAKER_01: avoid interruptions. Unless they change their policy, which I could see happening. All that happens when you use it up is it goes into slow mode. Okay. So you can still use the full, that's what it was. You get the same models, but if it's busy, you're at the back of the line. Yeah, it used to have a counter here. You can connect your GitHub to them in the agents tab. So, I don't know what that's about.
[04:35-04:37] UNKNOWN: Yeah.
[04:40-05:13] SPEAKER_01: I haven't seen anything from them about that. About like changing the style. Changing the way you can, like you said, you were running out of stuff. I haven't seen anything that's suggesting anything different than it's the... Just slowing down. Okay. I can see why they would not obviously say that. Like, hey, you want to pay us? Or like it'll just be a little slower. No, just like, hey, you're
[05:13-05:13] UNKNOWN: running
[05:13-05:25] SPEAKER_01: out of shit. You want more? No. And once they get that pay as you go, with live coding, that's how you run up a bill. You just like get in the zone. It's like freaking cloud. Exactly. Like, no, not doing
[05:25-05:26] SPEAKER_02: that. Yeah.
[05:33-06:12] SPEAKER_01: Even with that VM running, unless it was running from the day before, which I'm pretty sure it wasn't because I did the same check the day before. Yesterday was still cheaper than the day before. So, not too bad. It's like a femoral cluster manager.
[06:32-07:14] UNKNOWN: Okay. Okay.
[07:18-07:54] SPEAKER_01: I might give it the very last transcript from yesterday because that's what is largely not represented in the reading. That'll be in session archive transcripts. Here it is right underneath where you put
[07:54-07:56] UNKNOWN: it. That's
[07:56-08:11] SPEAKER_01: the very last one. It's 1233. Also, I was using that new Gemini. I switched back to cloud this morning since I have already been cursing. Yeah.
[08:12-08:12] UNKNOWN: Look
[08:12-08:29] SPEAKER_01: at, open that file real quick. The file? Yeah, the one you just gave me. So, this is how it did, which is kind of interesting. I don't hate it, especially from the perspective of it going back and looking at
[08:29-08:34] SPEAKER_03: it. It's just command log analysis. That's
[08:34-08:45] SPEAKER_01: interesting. And so, we can maybe make a decision like, hey, do your logs like this or just let whatever AI is writing write how it feels like
[08:45-08:50] SPEAKER_03: writing. I think just let it write how it feels like writing. I don't know that one's better than the other.
[08:50-08:54] SPEAKER_01: Yeah, I mean, I didn't have a great experience with that model overall yesterday.
[08:54-08:58] SPEAKER_03: Yeah, in general, that's how my thought is is cloud is better.
[08:58-09:11] SPEAKER_01: Yeah, that's kind of where I'm at. At the task that we're doing. Maybe it's better for people at our level. Right. Maybe if we were at a higher level, there would be something. But I don't even know. I'm just like grasping.
[09:11-09:11] UNKNOWN: I
[09:11-09:16] SPEAKER_01: feel like I don't know why I'm trying to argue for Google. Yeah, same.
[09:22-09:32] SPEAKER_03: Like in the big scheme of things, I don't care other than the fact that it affects my paying compensation because of the stock price. Right. Other than that, I'm going to choose the one that's the best.
[09:33-09:40] SPEAKER_01: 100%. And so, from that perspective, I'll give them so much as to say, I hope they produce the best one. Right. But if they don't, I'm
[09:40-09:40] SPEAKER_03: not going to
[09:40-09:40] UNKNOWN: use it.
[09:40-09:46] SPEAKER_03: I'm not going to use it just because it's Google. Right. I'm going to use the one that has the best performance.
[09:48-09:54] SPEAKER_01: Because ultimately, you're trying to use it to get out. Like not just that,
[09:54-09:54] UNKNOWN: but
[09:54-10:08] SPEAKER_01: this is what, this carries the potential of that. Yeah, for sure. Okay, here you go. Yeah, I'll work for you for like one more year from home. Right. And until you do the Passover and then I'm done.
[10:08-10:19] SPEAKER_03: And not only that, just in general, like that's kind of my feelings of brand loyalty in general for Sonos and Tesla and whoever. Like, hey, it's cool. I
[10:19-10:19] UNKNOWN: mean,
[10:19-10:21] SPEAKER_03: the reason I like you is because you're
[10:21-10:32] SPEAKER_01: the best. Right, but you're also a disruptor. Right. Like that's why, like the reason you're so big is you came up and changed the game up. But if somebody does that to you, like now you're this stagnant, huge, putter nut. I'm going to switch.
[10:36-10:42] SPEAKER_03: Not loyal to this corporation that has billions of dollars and doesn't care about me. Right. No.
[10:42-10:44] SPEAKER_01: Yeah. And ultimately,
[10:45-10:45] UNKNOWN: like,
[10:46-11:03] SPEAKER_01: there's just these PR situations that are going like Elon is just PR for whatever group he's on the front of. Right. Short, like I'm not saying he doesn't have a hundred billion dollars or however much, but the influence he wields is greater than his network. Right, I agree. Because he is
[11:03-11:04] SPEAKER_03: at the front of a group. Of
[11:04-11:04] UNKNOWN: a group,
[11:04-11:09] SPEAKER_03: some people, right, that are trying to do something and primarily that is get money from you.
[11:10-11:10] UNKNOWN: Right.
[11:10-11:11] SPEAKER_01: And they're defense contractors.
[11:11-11:12] SPEAKER_03: Right.
[11:12-11:12] UNKNOWN: And
[11:12-11:14] SPEAKER_03: I will give you my money if it's valuable.
[11:14-11:15] SPEAKER_01: Right.
[11:15-11:19] SPEAKER_03: To me. 100%. And if it's not, then I'm not giving it
[11:19-11:19] UNKNOWN: to you.
[11:20-11:28] SPEAKER_03: And if it's not, then I'm not giving it to you. That's it. Unless you take it, which there's ways of doing that
[11:28-11:28] UNKNOWN: too.
[11:28-11:28] SPEAKER_03: Yeah,
[11:28-11:32] SPEAKER_01: they did it. But that's where Apple,
[11:34-11:34] UNKNOWN: like,
[11:34-11:42] SPEAKER_01: they had a few, I feel like it was PR again, like their enemies made it through my defenses and were like, yeah, Apple is on the fucking downswing,
[11:42-11:42] UNKNOWN: aren't
[11:42-11:43] SPEAKER_01: they?
[11:43-11:43] UNKNOWN: They're
[11:43-11:46] SPEAKER_01: shit. And I'm like using an iPhone and AirPods every day. And
[11:46-11:58] SPEAKER_03: they're fantastic. And literally, like my dream device, the only reason I'm not using it is because it's expensive. Right. But I use the Quest every day.
[11:58-11:58] UNKNOWN: And
[11:58-12:05] SPEAKER_03: I would definitely use Vision Pro every day. For sure. When they make one that is cheaper, I will be standing in line for
[12:05-12:20] SPEAKER_01: it. Yeah, there's not even with you specifically, there's not even really the argument that you need someone else to have. Right. You definitely would get more value if they make the collaborative thing. Like that, that's the trigger. You can make it $3 ,000 if you can work in there, truly like it's an office.
[12:20-12:20] UNKNOWN: You
[12:20-12:26] SPEAKER_01: can like probably get to a place where you can sign like right off taxes because that's your office. Like,
[12:26-12:26] UNKNOWN: hey,
[12:26-12:29] SPEAKER_01: I spent $3 ,000 on my office. If we
[12:29-12:34] SPEAKER_03: both have them right now and not have these monitors, not have like, and just be able to do what we're doing.
[12:34-12:34] SPEAKER_01: If
[12:34-12:34] UNKNOWN: it's truly
[12:34-12:46] SPEAKER_01: like, oh, I can like point at your thing and you see it and even like interact with it. If it's truly there, it is worth $3 ,000. It is. But it's not, it's a fancy
[12:46-12:59] SPEAKER_03: Quest. That freaking like the widescreen, like 5, 4K monitors, those things cost like two grand. Their monitor costs like three grand. Right. If you can reproduce one of those, that alone is
[12:59-12:59] UNKNOWN: it.
[12:59-13:19] SPEAKER_03: You can reproduce six of them. Yeah. Comfortably. That alone is worth it. Or you have the super high definition TV or what at all. It's worth it. If it was collaborative or whatever, or if I could work it. Yeah, you could argue that. If I personally could work, like if I could use it for my, as it worked for us. Just from the
[13:19-13:32] SPEAKER_01: TV perspective, you could argue that you and Mel could both get one and not have one in their living room or the bedroom. I agree. And then like there are ways, but it has to be a shared experience at that point for it to
[13:32-13:32] UNKNOWN: even
[13:32-13:51] SPEAKER_01: begin to cost that. And that's available to like you and Mel. Not like, okay, now the industry's churning. But they could have that. It just has to be so fucking hard to do the collaborative stuff. I mean, Facebook kind of has it, but it sucks. But still like
[13:51-13:51] UNKNOWN: it's there.
[13:51-13:51] SPEAKER_01: Yeah, I think
[13:51-13:51] SPEAKER_03: it's
[13:51-13:51] UNKNOWN: just
[13:51-14:10] SPEAKER_03: really hard. Yeah, I think it's difficult to do. Trigger pipeline cluster manager, Quest topping, pulled up. Yeah, that is what I expect. What's actually happening. Yeah, there's some function in there that's still triggering that creates.
[14:10-14:11] UNKNOWN: Yes.
[14:13-15:00] SPEAKER_01: We might need to do some cleanup and I can do it later, but like up the Pub Sub topics and stuff, I imagine there's some leftovers. I agree. There's Pub Sub especially not so much now because well, it depends on what our process is for shutting the cluster down, like just detecting. So imagine we upload 10 hours or however many hours worth of audio. Are we sitting there watching until it's done? Maybe because the GPUs are that fast. But if not, like Pub Sub could screw us over if we're relying on some sort of like, I'm done. And if that never happens, because it's failing silently in Pub Sub keeps sitting in
[15:00-15:00] UNKNOWN: the
[15:00-15:00] SPEAKER_01: message.
[15:00-15:00] UNKNOWN: Here we are
[15:00-15:02] SPEAKER_01: the next day, like oh crap.
[15:04-15:07] SPEAKER_03: I mean there is the, assuming it works,
[15:07-15:07] UNKNOWN: there
[15:07-15:24] SPEAKER_03: is the fail safe of I think at $100. I still don't want to pay $100, but that's reasonable. I don't want to pay $1 ,000, but certainly that's bad, but still okay. $10 ,000. That's scary. I don't
[15:24-15:25] SPEAKER_01: want it
[15:25-15:25] UNKNOWN: to happen.
[15:25-15:48] SPEAKER_01: I actually did, that post yesterday made me feel kind of good because the kid said he had hundreds of A100s in play and only had a $10 ,000 bill after he ignored the update from Google. So like let's imagine you get the update after you're asleep, it doesn't wake you up. We've got at most one GPU in play, we can't have more than one
[15:48-15:48] UNKNOWN: GPU in play.
[15:48-16:00] SPEAKER_01: Exactly, we cannot. And then imagine it's Saturday and for whatever reason you're phone fasting and we don't work until Sunday, for whatever reason we didn't also
[16:00-16:01] SPEAKER_03: check the logs.
[16:02-16:02] UNKNOWN: Hundreds,
[16:02-16:03] SPEAKER_03: maybe.
[16:05-16:10] SPEAKER_01: There's no cluster. These things are just checking in. It
[16:10-16:10] UNKNOWN: fucking
[16:10-16:43] SPEAKER_01: shouldn't be. It wasn't this morning. I guess in the description it is called a persistent cluster now. It's true. I don't want to spend 30 minutes talking about why it is persistent, but also ephemeral. Yeah, exactly. Let's just keep it pushing. Is it persistent design
[16:43-16:48] SPEAKER_03: that is manually on demand? It's like these lights are persistent. Yeah,
[16:48-16:48] UNKNOWN: exactly.
[16:48-16:48] SPEAKER_03: They're
[16:48-16:48] UNKNOWN: on
[16:48-17:29] SPEAKER_01: as long as I keep them on. What do you think? I had a random thought. That plant, I don't think it's producing a lot more, so we're just in waiting for the changeover. We talked about using it to make a tincture. We could use that instead and harvest the new stuff. We're like a quarter, maybe a third of the way through that jar out there. We have another whole jar in here that's already done. Oh, I see what you're saying because we have probably too much. And we'll have that, what we harvest out of that can be what we smoke next, so it'll be fresher.
[17:30-17:42] SPEAKER_03: I think, oh, I agree with you. I think that maybe we should not use a whole thing, or I don't know how much it takes. I would like to do an experiment. Yeah. Let's just do a little bit. That's fair. I assume making
[17:42-17:46] SPEAKER_01: this much liquid takes this much wheat. But
[17:46-17:46] UNKNOWN: I
[17:46-17:53] SPEAKER_01: don't know. But do you think we can just take out of there or take out of the one in the garage because it's been open since most of the air.
[17:53-17:53] SPEAKER_03: Yeah,
[17:53-17:53] UNKNOWN: the
[17:53-17:55] SPEAKER_03: one that we're using, use that one first.
[17:55-17:58] SPEAKER_01: That makes sense because this is fresher than that just for the sake of usage.
[17:58-18:17] SPEAKER_03: Yeah, that makes sense to me. And just knowing it's going to get replaced or at the minimum we go to the store. Yeah, worst case, it's going to be fine. We'll do what we did for three years. Right, exactly. I prefer not to do that. Right. Not just money, just because knowing where it came from. Yeah. I know what chemicals I
[18:17-18:23] SPEAKER_01: put on it. It's like I avoid plastic, but like if I'm out and my parents working and dirty and don't want to go inside, I'm going
[18:23-18:23] UNKNOWN: to
[18:23-18:28] SPEAKER_01: grab a water bottle out of the fridge and crush that shit because it's
[18:28-18:28] UNKNOWN: hot.
[18:36-18:43] SPEAKER_03: There are none. Bro, I already shut it down. I want you to look at the code.
[18:50-19:01] SPEAKER_01: Should be none of those two, my friend. I heard like four fireworks last night, but it was just because I was still awake. Yeah. They started
[19:01-19:01] UNKNOWN: to wake up.
[19:01-19:02] SPEAKER_01: I went to sleep earlier last
[19:02-19:03] SPEAKER_03: night.
[19:03-19:03] UNKNOWN: I
[19:03-19:10] SPEAKER_03: did not sleep well the night before. Yeah. But I got up anyways. Pushed through. That's what he texted. Yeah.
[19:11-19:11] UNKNOWN: And
[19:11-19:18] SPEAKER_03: so I was asleep by like 7 .30. 7 .30. We were watching a show and I was like, I'm done.
[19:19-19:28] SPEAKER_01: Yeah, on those nights, if you don't want to go to sleep that early, like I just have to stay in the living room. Like, hey, I'm staying out here until like 8 .15. Like I got to start doing freaking jumping jacks or something.
[19:38-19:39] UNKNOWN: It does.
[19:45-19:48] SPEAKER_01: That's not really the problem, but okay.
[19:48-19:49] SPEAKER_03: Yeah, I think it is this.
[19:55-19:56] SPEAKER_01: Yeah, over here it's like,
[19:56-19:56] UNKNOWN: oh,
[19:56-20:00] SPEAKER_01: the problem is the documentation says there's a cluster and there's not. It's like,
[20:01-20:01] UNKNOWN: well,
[20:02-20:06] SPEAKER_01: okay, that is a problem. It's a documentation problem.
[20:20-20:37] SPEAKER_03: Okay. Well, then our architecture is wrong. It's saying that it does do this, but, and that's right. Right. So our documentation is not right. Do you agree? Yeah.
[20:37-20:44] SPEAKER_01: Is there, we don't have a VM as part of our design anymore. No. And so it is currently fucked. Yeah.
[20:44-20:56] SPEAKER_03: Yes. Do we have that anywhere? What? Like the latest design that's the right
[20:56-21:09] SPEAKER_01: one? I mean, I assume your push from yesterday. Like tell it to go look at the commit from yesterday morning, the last one by your user.
[21:10-21:10] UNKNOWN: Maybe
[21:10-21:12] SPEAKER_01: you and he could probably handle.
[21:18-21:19] SPEAKER_04: Just using.
[21:26-21:28] SPEAKER_01: I'm guessing that 1023 is you.
[21:31-21:38] SPEAKER_03: I'm going to have it look at all three of those, the 740, the 855 and the 1023. Yep.
[22:00-22:01] UNKNOWN: Okay.
[22:36-22:42] SPEAKER_01: Yeah. At the beginning of like then, cause that's where you left off was like build this and
[23:09-23:20] SPEAKER_03: Yeah. The context is, but it doesn't actually know what we're doing. It doesn't remember yesterday. Right. The answer is logging the context correctly and it clearly it's not doing that.
[23:20-23:27] SPEAKER_01: Yeah. And that's where like, I mean, we know that that's actually what we're trying to solve. Right. When we stop and think about it.
[23:28-23:29] UNKNOWN: And
[23:29-23:38] SPEAKER_01: like we have all the context that it should need. We just have to develop a process or yeah, a pipeline for it or
[23:38-23:38] UNKNOWN: a workstation.
[23:38-23:52] SPEAKER_01: Workflow. Yeah. Develop an efficient workflow for it to search it. And maybe we're back to vector databases. Maybe it's like what if this working is the whole thing. Like vector databases is the next step. Yeah. After the transition is working.
[23:53-24:00] SPEAKER_03: It's both at the same time. We want to get this done and learn about memory or context at the same time. Right.
[24:23-24:24] UNKNOWN: Okay.
[24:38-24:41] SPEAKER_01: So we need to delete that function too.
[24:41-25:09] SPEAKER_03: Right. Yeah. Like so it does need to go. I do want to deploy the cluster, but no, actually I don't want to deploy the cluster. I want you to make a plan of what we're going to do. All right. Actually, just like two things. One, this document.
[25:42-26:05] UNKNOWN: Okay. Okay.
[26:27-26:28] SPEAKER_03: Okay.
[26:28-26:28] UNKNOWN: We're
[26:28-26:32] SPEAKER_03: going to Costco, but I don't know if that counts as doing something.
[26:32-26:36] SPEAKER_01: I don't have a delivery box today. So if we want to go a little late.
[26:37-26:46] SPEAKER_03: We're going to Costco at nine. So I don't at some point it's going to be close. Like it was eight. But at some point I got it. Break off. But I can come back.
[26:48-26:54] SPEAKER_01: Probably we'll go out to my parents for a little bit. But at some point we can maybe do another little session.
[26:54-27:16] SPEAKER_03: Today is the first day that they used to do this. Before we were going to Costco. But executive members can go an hour early. Normally they don't open until 10. And so like there's all these memes of people going in their tuxedos. So it's like we're going to Costco at nine. Like today's the first day.
[27:19-27:23] SPEAKER_01: Sam's always had that. I think it was like eight to 10 was whatever.
[27:25-27:35] SPEAKER_03: We don't really need to go. I do need to get quarantine. That's the only thing that's on the list. You're off. It's still going to be packed. Probably because it's the first day.
[27:35-27:35] UNKNOWN: Because all the
[27:35-27:38] SPEAKER_03: executive members are off work too. For the most part.
[27:39-27:40] SPEAKER_01: And it's a thing.
[27:42-27:46] SPEAKER_03: But otherwise we don't have anything going on. I got some stuff I want to do around the house.
[27:52-28:35] SPEAKER_01: Then we did. So cucumbers. That's what those clips are for. They typically have to trellis them. And people use like cattle guards a lot. And make like a triangle. And they climb up and they're just crazy all over the place. So I saw this thing on YouTube last year. That was where you put the pole over the top. And you basically pull it straight up. So now the cucumbers are like right here. And they're not overlapping each other. So instead of getting down and having to get. They're growing tall. This one plant is like last time I was out there. It's like seven feet tall. It's already starting to go over the top of the PVC pipe. That's cool. And they're just outputting cucumbers. Because they're awesome. They output a lot. But they're a mess. But not like this.
[28:35-28:36] SPEAKER_03: Yeah.
[28:36-29:18] SPEAKER_01: That's cool. Yeah. We're almost like at the end or at the beginning of a session. There should be no cluster. No nothing. Right. In the entire thing. Right. I agree. Because that should be part of the end of a session.
[30:33-30:34] SPEAKER_03: Yeah.
[30:34-30:34] UNKNOWN: I
[30:34-30:52] SPEAKER_03: think I specifically need to be more intentional about making sure the documentation is accurate. Especially following a big change like that. It didn't accurately capture. Not at all. What we were talking about in the sessions. Yeah. And it didn't make it into the README and stuff.
[30:52-31:11] SPEAKER_01: And the problem there is that now becomes not only did this model have a tendency to be a little bit off for whatever reason on that case. But it becomes that model's reference to the thing. And now its tendency to be a little bit off is based on a thing that's already a little bit
[31:11-31:11] UNKNOWN: off.
[31:11-31:11] SPEAKER_01: And
[31:11-31:11] UNKNOWN: it
[31:11-31:13] SPEAKER_01: just continues to veer off.
[31:13-31:13] UNKNOWN: I
[31:13-31:25] SPEAKER_01: do the same thing. I just get frustrated with it. And basically if it's pissing me off I need to walk away and come back 30 minutes later and sit down and just clean up. Yeah. Nothing else. Don't even necessarily try to progress.
[31:26-31:32] SPEAKER_03: And you mentioned it. Like every five days or once a week we need to
[31:32-31:32] UNKNOWN: do
[31:32-31:33] SPEAKER_03: just clean up.
[31:34-31:34] UNKNOWN: Like
[31:34-31:47] SPEAKER_03: read everything. Is this right? And have these types of conversations. Here's what I think you're doing. What do you think you're doing? Like here's where you're wrong. Update all of the references. All of the stuff. Okay now. And then start working periodically.
[31:47-31:47] UNKNOWN: Do
[31:47-31:48] SPEAKER_03: that.
[31:48-32:02] SPEAKER_01: Even if it's like five sessions of cleanup. Or like in a row where it's just like okay in session start a new one. Because now based on this context we're still cleaning up. Right. Because we're going through like line
[32:02-32:09] SPEAKER_03: by line almost. Reload the context. Tell me now what you think. And nope that's still wrong. Update it.
[32:09-32:11] SPEAKER_01: Maybe even keep the
[32:11-32:11] UNKNOWN: like
[32:11-32:28] SPEAKER_01: this probably auditing is its own service almost. But keep the thing it said and your response to the first one. Right. It's like this is what you said you thought it was at the first one. And here's where it was slightly off. And now whenever you do it again in the new session. Here's both of the last
[32:28-32:34] SPEAKER_03: ones. What do you think? Right exactly. So maybe as a part of this say in the current session transcript.
[32:35-32:35] UNKNOWN: Write
[32:35-32:51] SPEAKER_03: what you think this should be. Now start a new session. Write what you think it should be. Now go back and look what you just wrote. Like go look at them and compare them. And fix what made you think this. Fix it. Yeah. Because it should be
[32:51-33:07] SPEAKER_01: this. Right. And tell me what you fixed. Because then it's also going to have a tendency to like fix it. But not in a way that is contextually accurate with the entire project. So it'll make that step work. And it's like okay now let's make sure you don't fuck the whole project. Yeah
[33:07-33:07] UNKNOWN: so
[33:07-33:07] SPEAKER_03: exactly.
[33:11-33:13] SPEAKER_01: But that's the magic. That's what we're going
[33:13-33:13] UNKNOWN: to
[33:13-33:17] SPEAKER_01: make a bunch of money for figuring out. It's not a transcription.
[33:17-33:18] SPEAKER_03: I agree.
[33:26-33:28] SPEAKER_01: Oh man. Yes.
[33:29-33:29] UNKNOWN: Let's say
[33:29-33:48] SPEAKER_01: you have whatever amount of money that makes you not have to think about it anymore. Get that for this. And then some of the theories about basically globalists just taking all the value out of America. Because they're going to move on. Would you leave America? No. No.
[33:48-33:54] SPEAKER_03: No. I think even you could take the whole like everybody. No I don't think so. I
[33:54-33:54] UNKNOWN: don't
[33:54-34:02] SPEAKER_03: think so either. I think that. Fuck them dude. Let them come for us. There's something to be said for my home. That's what you
[34:02-34:02] UNKNOWN: can't.
[34:02-34:10] SPEAKER_03: I just want money. I want to live at peace in a place where I guess I'm not from here.
[34:10-34:10] UNKNOWN: But
[34:10-34:19] SPEAKER_03: there's something to it. This is where I live. This is where my house is. This is where my family is. And it's not the same to move my family to somewhere else.
[34:21-34:26] SPEAKER_01: Yeah. If they were like let's
[34:26-34:26] UNKNOWN: say.
[34:27-34:39] SPEAKER_01: Ah fucking Taiwan is the new spot. And we figured all our shit out with China or China won. Whatever. And there's like it's basically America from the early 2000s. That's the spot now.
[34:40-34:50] SPEAKER_03: No I feel like as long as it's safe. And like even if it's not prosperous it's like okay well we're farmers. Like okay. Yeah
[34:50-34:56] SPEAKER_01: I kind of feel like even if it's not safe like who the fuck made it not safe. Point me in the direction. Yeah let's figure it like I would rather fix my home.
[34:56-35:38] SPEAKER_03: Exactly. But I mean at some point you can't right. It's like well let's make Mexico safe. Well the cartels have automatic weapons and you're just going to die trying to do it. Yeah. If it's like that's what I mean. Like sure I would leave if it was like that. But if it's like let's call it Canada. That's not a good example. Like Greece. Sure. That is just it's not prosperous. People are nice and stable. It's a giant retirement community. Right exactly. Sure. I'm not leaving. As long as it's not like crazy and like crime and like whatever. Pickpockets and stuff like that whatever. It's time to rebuild this motherfucker. Right exactly. I'd rather stay and fix it.
[35:39-35:46] SPEAKER_01: And it's like America can't be over. Geographically it's just too powerful. The only way to do that is to break us up. Which they're probably going
[35:46-35:46] UNKNOWN: to be able to do.
[35:46-35:47] SPEAKER_01: They might.
[35:51-36:02] SPEAKER_03: And the freaking useful idiots are helping them. Oh yeah. On every side. What are we freaking doing? At some point it's going to. I
[36:02-36:02] UNKNOWN: don't
[36:02-36:03] SPEAKER_03: know. I was going to say
[36:03-36:03] UNKNOWN: I
[36:03-36:09] SPEAKER_03: was getting ready to say the words. This has got to change. It doesn't have to. Yeah. It could just keep going the way it is.
[36:10-36:25] SPEAKER_01: Yeah I think there's a limit to all of it. The question is what happens right. Like I think literally World Wars were thought to. Like they were to kill a bunch of people and create economics. Around the world.
[36:28-36:28] UNKNOWN: And
[36:28-36:33] SPEAKER_01: I don't know like depressions happen. All these different like resets happen.
[36:34-36:34] UNKNOWN: And
[36:34-36:55] SPEAKER_01: either that's the powerful do kind of like rearrange it and extend their shit another generation. Or it gets violent. It might. The people. It's not even the people. It's just another faction that's trying to take over the current piece of shit faction. But they're all like closer to each other than to us.
[36:55-37:02] SPEAKER_03: And then it just keeps going. Well you're a piece of shit because of this. I got to
[37:02-37:11] SPEAKER_01: take over. Like okay. Yeah the book there doesn't really have any. Yeah it doesn't just. Resets and everything. It
[37:11-37:11] UNKNOWN: just
[37:11-37:12] SPEAKER_01: stops and everything.
[37:12-37:14] SPEAKER_03: It does. But it's at the end.
[37:16-37:16] SPEAKER_01: Yeah.
[37:16-37:16] UNKNOWN: I
[37:16-37:26] SPEAKER_01: wish for like. Diving into like philosophical. Christians being sad about death type of things. It's like that's the end of the race.
[37:26-37:26] UNKNOWN: You
[37:26-37:57] SPEAKER_01: got there. Right. You're just done. That's the whole point. If you believe what you say you believe. Exactly. You can't check out early. You can't quit the race. Right. That's not cool. You just have to keep fighting. Yeah. Just stay in it. But when it's over it's like. Especially as the person I get it I'm not like on death's door or anything. But like if you're about to go. Why are you sad. Right. The people around you I get it because they're not going to have you. Right. For until they get to the end of the race. But why is it this like anxious thing.
[37:57-38:02] SPEAKER_03: Yeah she gets well I mean I guess that's the time when like she gets upset talking about death.
[38:03-38:03] UNKNOWN: It's
[38:03-38:10] SPEAKER_03: like hey if I die here's what you need to do. Yeah. Here's the answers. Not everybody just gets old and gets
[38:10-38:12] SPEAKER_01: something and dies of old age. Right.
[38:12-38:12] UNKNOWN: Sometimes
[38:12-38:22] SPEAKER_01: shit just happens. Yeah. But it's also like it's like talking about it makes it easier to talk about. Right. If you force it. But I get that it's uncomfortable.
[38:22-38:22] UNKNOWN: But
[38:22-38:26] SPEAKER_01: also like you ever seen somebody bummed out to cross the finish line of a marathon.
[38:27-38:39] SPEAKER_03: No. No. It's the ultimate marathon. Exactly. Yeah. There's reward. Yeah. I think it's doing the right thing. Yeah.
[38:39-38:39] UNKNOWN: I
[38:39-39:45] SPEAKER_03: agree. And it needs to make it in a place that is easily picked up. Yeah. But for the next session. That's what I told it to do. Yeah. It's like audit everything and put it in a place where you can find it for next session. For future sessions. That makes sense. And so it did find this function. This old cluster manager function. And it's labeling it as legacy. And now it's. But the question is will it be able to find that next session. Right. Because I am going to do a in session here and then start it again say do you see what we're supposed to be doing. Yeah.
[39:45-39:45] UNKNOWN: So
[39:45-39:51] SPEAKER_03: maybe that's why you couldn't get things to run yesterday because this function is firing and it's still trying to use a VM.
[39:51-39:51] UNKNOWN: And
[39:51-39:54] SPEAKER_03: it was like. Like holding the only
[39:54-39:55] SPEAKER_01: GPU that we have available.
[39:55-39:56] UNKNOWN: Yeah.
[39:57-39:59] SPEAKER_01: Even if I wasn't using it it was just like mine.
[39:59-40:17] SPEAKER_03: Yeah. I also am going to go ahead and collect my thoughts.
[40:31-41:24] UNKNOWN: Okay. Okay. Okay.
[41:55-41:56] SPEAKER_04: There's no question.
[41:58-42:02] SPEAKER_01: And you're right to reemphasize that at least in that little bit of notes.
[42:03-42:03] UNKNOWN: It
[42:03-42:28] SPEAKER_01: didn't pop up. It's there on the read currently on line 24. Yeah. But it's been there the whole time and it may not. At least not to emphasize it to my satisfaction.
[42:43-42:50] SPEAKER_03: So yeah this is session transcript. Right. But you're. It needs to be in here. That's what it
[42:50-42:50] UNKNOWN: is. Because
[42:50-42:52] SPEAKER_03: it won't look at that session transcript.
[42:52-42:54] SPEAKER_01: Unless you explicitly tell it.
[42:54-42:54] SPEAKER_03: Right.
[42:55-42:55] UNKNOWN: Which
[42:55-43:03] SPEAKER_01: we're generally trying to not have to do as part of the workflow. But that's where it's putting at least.
[43:03-43:03] UNKNOWN: See
[43:03-43:04] SPEAKER_01: that.
[43:05-43:17] SPEAKER_03: This is in the reading. Yeah. That's why it's
[43:17-43:17] SPEAKER_01: picking that
[43:17-43:17] SPEAKER_03: up.
[43:17-43:25] SPEAKER_01: Yeah. It's still in there. But it's not picking it up when you want it to. No what I'm saying
[43:25-43:25] SPEAKER_03: is.
[43:26-43:32] SPEAKER_01: That's what I'm saying. But when you go say like hey this isn't that. So update the read me. You should go like oh yeah. I'm going to update the
[43:32-43:32] UNKNOWN: read
[43:32-43:32] SPEAKER_01: me.
[43:34-43:38] SPEAKER_03: Well it's still preparing to update the read me. Oh no I said execute.
[43:38-44:04] SPEAKER_01: Yeah there's definitely some updates in here. It's got that add to chat button up there. Okay. I think anytime you highlight something. Where do you see that? Right above the highlight. To the left.
[44:04-44:04] UNKNOWN: To
[44:04-44:05] SPEAKER_01: the left.
[44:05-44:05] UNKNOWN: To
[44:05-44:05] SPEAKER_01: the left.
[44:06-44:10] SPEAKER_03: Up. Oh I literally didn't see that.
[44:14-44:42] SPEAKER_01: It's only line five through. Oh. That actually is only one line. I would say like. And then see if there's any other glaringly obvious. Inaccuracies. You don't have to say it like that.
[45:24-45:32] UNKNOWN: Okay. It's
[45:32-45:42] SPEAKER_01: not a repeat in itself. It's a critical constraint that it just added. Like nine through fifteen is basically. Nineteen through thirty.
[45:45-45:47] SPEAKER_03: It may have to manually go ahead and change
[45:47-45:48] UNKNOWN: it.
[46:13-46:24] SPEAKER_03: But maybe this is what it needs. Like go over the top. If you need to go over the top. You're talking to yourself. You're making notes for your future self. So do what you need to do to do that.
[46:25-46:26] UNKNOWN: That's correct.
[46:27-46:30] SPEAKER_01: When we go to the current session. That's the old one.
[46:32-46:32] UNKNOWN: Okay.
[46:38-46:40] SPEAKER_03: It's got a lot of stuff in it.
[46:40-46:43] SPEAKER_01: I mean that's good. Especially like you're close to an in session.
[46:44-46:44] SPEAKER_03: Yeah.
[47:10-47:19] SPEAKER_01: I actually like that section. It understands persistent versus ephemeral. Right.
[47:55-47:56] UNKNOWN: Okay.
[48:05-48:15] SPEAKER_01: Even as you go. It checks the read me at the beginning. And updates it some. But it'll forget that critical rule. Right. Because it hasn't read that. It
[48:15-48:15] UNKNOWN: hasn't
[48:15-48:27] SPEAKER_01: read the whole thing. Since the beginning of the session. I agree. And it loses it. The context is too small. And it doesn't reference its rules. Right. Unless you explicitly pointed at one.
[48:28-48:29] UNKNOWN: So
[48:29-48:31] SPEAKER_01: there's a space for us to create something. Yeah.
[48:56-48:56] UNKNOWN: Okay.
[48:57-49:01] SPEAKER_04: This set of stuff is the same as this basically. Okay.
[49:47-49:48] UNKNOWN: Okay.
[50:13-50:14] SPEAKER_05: Okay.
[50:33-50:57] UNKNOWN: Okay. Okay.
[51:01-51:02] SPEAKER_01: Okay.
[51:09-51:10] UNKNOWN: Okay.
[51:15-51:21] SPEAKER_04: Okay. Okay.
[53:25-53:31] UNKNOWN: struggling to find a bag to like, so, you see what we
[53:31-53:32] SPEAKER_03: have,
[53:32-57:11] UNKNOWN: and it's a countless thing, and I can't have a bigger body than mine with a collar that you can actually hold it around or literally, you're coming right to the bag. And like, the one I want comes with a kit, like this metal piece, a desk strap, that, yeah, it's like, that's too much, but I can go throw a classic piece out of that, and that kit's like $130, like, no way. And so I finally found one, it's a free print, so I'm gonna require a free print, so I'll start taking it for a $9, but I can actually take a full -size piece. Yeah, man, I think that's a lot for that free print. Yeah, it's like $30. I guess that's it. I'm gonna do the, I'm gonna do the Navy's backpack, and I'll get a full build for this one. Yeah, I think that's much better. What is this, man? This is a, probably, I don't use very much of that leather, but I prefer to shape it. Yeah, and what we have is this is still a little, I'll get back to the normal construction fold, straight out of the picture, and then get the over -heat back up, and then we can keep that full, and then I can just use this, now I can do it today, and get it real fast, and then we can get it real fast, and then get it real fast, and then add a little bit of a, and then you just stop and go back, you're gonna have to do a little, you're gonna have to do that again, right? Yeah, so you run, you have to just go back, I work, go back from outside, right, then you make it over, but ideally, you just start to use it more, so I can rebuild it today, and then go, and then let it go on, go with, like, that little process, and then on the day, when you have a party, you can make it again, and then you can go back, and go back to the party. You can get it ready, and then you can probably do it, you can go for it, but you just don't use it very much. That's what we did, for most of our views, they didn't change. Yeah, and I used literally one, so you can come back, but they probably took a little bit of a hit, and then we'll replace it back to full, rather than the last time you did it. Right, it's gotta be full all the time. And I don't know if you can tell, but it's like less than a day, of how it gets, so it's gonna be a few months, and then it gets pretty comfortable, and then we back it up, and then do it, come back, get like that, that one, go back, bigger than that, and that's been full for, we made you in that, not that ready, it's been full for more than a week, so maybe in like the build up of a party, especially like the first form, or the build 10 bags, that
[57:11-57:12] SPEAKER_02: we
[57:12-57:12] UNKNOWN: can go in,
[57:13-57:15] SPEAKER_02: see what happens. Yeah, a family party,
[57:16-57:16] UNKNOWN: like
[57:16-57:22] SPEAKER_02: the same form, we just go all 10 bags, and then maybe another round, or a little bit, so you can add in the data.
[57:23-57:51] UNKNOWN: But I don't think you just have to, I'd say, that's the only first thing, that actually makes it pretty comfortable, and then maybe during the summer, people will only ask questions, it's the way people look, but it's not crazy, and then maybe, you just have to go in, and it's pretty support, but you need to actually go in, and probably that's it. Okay, it's done
[57:51-57:59] SPEAKER_02: about the, it has 16, when I want that, I'll set it up. Okay.
[58:15-58:15] UNKNOWN: Okay.
[58:21-58:24] SPEAKER_01: I'm gonna run out and check the chlorine tabs,
[58:25-58:25] UNKNOWN: before
[58:25-58:27] SPEAKER_01: the filter turns on. Check the pump.
[58:57-63:04] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. I
[63:04-63:24] SPEAKER_01: put seven tabs in there and put the dial on at five. The dial was already on five so I had a shit ton of tabs. Is it like one to two yesterday? Which is on the low end of in range. But it was completely empty. I put them in there like fucking Sunday.
[63:28-63:29] SPEAKER_03: That's interesting.
[63:29-63:29] SPEAKER_01: Yeah so I'm going
[63:29-63:29] UNKNOWN: to
[63:29-63:40] SPEAKER_01: start checking those every day and start keeping a log and just seeing how quick it's using them and what like, should we go more tabs or higher dial or both?
[63:40-63:40] UNKNOWN: Like
[63:40-63:43] SPEAKER_01: what's the, there's a lot of variables. Yeah
[63:43-63:44] SPEAKER_03: I don't know.
[63:45-63:52] SPEAKER_01: And like I assume we're going to get pretty consistent usage. Like the boys are going to be over here pretty frequently. Yeah
[63:52-63:56] SPEAKER_03: and the sun's getting it so it's just, this is the summer.
[63:56-63:56] UNKNOWN: Maybe
[63:56-63:56] SPEAKER_01: we
[63:56-63:56] UNKNOWN: need
[63:56-64:00] SPEAKER_01: to bump the Syneric up to the high end
[64:00-64:00] SPEAKER_03: of its
[64:00-64:00] UNKNOWN: ideal.
[64:00-64:02] SPEAKER_03: To preserve that,
[64:03-64:05] UNKNOWN: yeah. It's
[64:05-64:06] SPEAKER_01: just getting a feel
[64:06-64:13] SPEAKER_03: for it. Or start shocking because that's free slash cheap chlorine.
[64:14-64:23] SPEAKER_01: Yeah shock the cold plunge yesterday because it was a little low. It's getting like mildewy around it. So
[64:23-64:29] SPEAKER_03: I'm going to go to, I have a solution already. It's in my Home Depot.
[64:30-64:30] UNKNOWN: Like
[64:30-64:31] SPEAKER_03: whatever.
[64:31-64:31] UNKNOWN: Like
[64:31-64:35] SPEAKER_03: a tray? No it's like this spray that's made for this.
[64:35-64:35] UNKNOWN: And
[64:35-64:37] SPEAKER_03: basically what I'm going to do
[64:37-64:39] SPEAKER_01: is
[64:39-64:48] SPEAKER_03: spray, basically it's a spray, you clean it. I'm basically going to get the hose, like spray it, let it sit for a little while and I
[64:48-64:48] UNKNOWN: need
[64:48-65:09] SPEAKER_03: some sort of scrub brush or something like that and scrub and then it'll just come off. Because it's just always wet. And the answer, I talked to Jim and I about it, the answer is elevate it so that water like it doesn't just sit there. Like so pallets maybe or something like that is just going to be ugly but I don't know if we have to drain it and do it.
[65:09-65:09] UNKNOWN: We
[65:09-65:10] SPEAKER_03: can't just lift it.
[65:10-65:11] SPEAKER_01: We're
[65:11-65:11] UNKNOWN: thinking
[65:11-65:26] SPEAKER_01: of like the aluminum grating almost that you would almost put like in a rain floor but not like I'm thinking in my head it's like these inch wide aluminum rails that make a shelf basically.
[65:26-65:26] UNKNOWN: Oh I
[65:26-65:26] SPEAKER_01: see
[65:26-65:34] SPEAKER_03: what you're saying. But we need some sort of system that drains the water away or like as it's because it's sweating and all that water is just pooling right at the bottom of it.
[65:34-65:34] UNKNOWN: It's just sweating
[65:34-65:43] SPEAKER_03: all the time. And so you just have to let air get underneath there so as it sweats it just drips and then it just goes away. But we just.
[65:43-65:43] UNKNOWN: Yeah we
[65:43-65:48] SPEAKER_01: had anything that was like even an inch tall that could support the weight of that sucker. And us
[65:48-65:49] SPEAKER_03: in it.
[65:50-65:50] UNKNOWN: So
[65:50-65:59] SPEAKER_03: that's the actual answer is to elevate it. In the meantime it is well you just literally clean it every day or once a week or something like that.
[65:59-66:10] SPEAKER_01: Yeah or like just straight up, I don't even know what it's made of but like it makes little diamonds basically. Steel grating.
[66:10-66:14] SPEAKER_03: Yeah. How would you do that?
[66:15-66:15] SPEAKER_01: You know what
[66:15-66:15] UNKNOWN: I'm
[66:15-66:30] SPEAKER_01: saying it's like flooring that almost is like it's not flooring but you just need like pieces of wood and the top of a heavy duty warp box. Yeah something like that. So
[66:30-66:30] SPEAKER_03: I mean
[66:30-66:30] UNKNOWN: I
[66:30-66:36] SPEAKER_03: think you could do it with pallets or something like that. I just want something that's not ugly.
[66:36-66:36] SPEAKER_01: Yeah
[66:36-66:36] UNKNOWN: and
[66:36-66:46] SPEAKER_01: want something that's not going to stab through the bottom of that. Right I agree. Yeah there's almost certainly something
[66:46-66:51] SPEAKER_03: for that. Like you would imagine, I imagine that somebody made something.
[66:51-66:56] SPEAKER_01: Right specifically like for that, literally that company might. Right they don't.
[66:57-67:03] SPEAKER_03: Yeah I looked. But yeah because it needs to be engineered right because. It needs to be heavy and
[67:03-67:03] UNKNOWN: the
[67:03-67:04] SPEAKER_03: bottom of
[67:04-67:04] UNKNOWN: that
[67:04-67:04] SPEAKER_03: is soft.
[67:04-67:04] UNKNOWN: It needs
[67:04-67:04] SPEAKER_03: to
[67:04-67:04] UNKNOWN: be holding
[67:04-67:06] SPEAKER_03: water and people.
[67:08-67:13] SPEAKER_01: Yeah but even that like how much is 120 gallons of water plus. It's
[67:13-67:18] SPEAKER_03: like about 7 pounds a gallon. So 120
[67:18-67:19] SPEAKER_01: would be
[67:19-67:20] SPEAKER_03: 700.
[67:20-67:23] SPEAKER_01: It's significant. You're talking thousand pounds. Yeah
[67:23-67:24] SPEAKER_03: so it needs to be able to hold about thousand pounds.
[67:26-67:26] UNKNOWN: Yeah but
[67:26-67:35] SPEAKER_01: like almost anything with literally like blocks of 4x4 underneath it. Right would be fine.
[67:35-67:35] UNKNOWN: Would hold
[67:35-67:36] SPEAKER_01: it if you put them in enough places.
[67:36-67:36] UNKNOWN: I
[67:36-67:39] SPEAKER_01: mean that's what holding up the shed. No I agree. Yeah so
[67:39-67:45] SPEAKER_03: basically that's what we need. That's what we could. If we're going to build something it's going to be like those feet.
[67:46-67:54] SPEAKER_01: Yeah and we can paint 4x4's black and we don't even need the plastic ones because those are for leveling. You're right. So just put
[67:54-67:59] SPEAKER_03: it on the ground and build a base literally with 2x4's and 4x4's.
[67:59-68:06] SPEAKER_01: Get like super pressure treated 4x4's. You only need them to be like you need one 4 foot 4x4 and you're
[68:06-68:06] UNKNOWN: going to
[68:06-68:07] SPEAKER_01: have half of it left.
[68:08-68:11] SPEAKER_03: Yeah so maybe that's what we do. Yeah. Is.
[68:11-68:16] SPEAKER_01: Get it super treated so it's made to deal with water. Spray paint them black or
[68:16-68:16] UNKNOWN: whatever.
[68:16-68:16] SPEAKER_01: And
[68:16-68:16] UNKNOWN: just a
[68:16-68:18] SPEAKER_01: little bit. And just make this
[68:18-68:19] SPEAKER_03: little tiny flat platform.
[68:19-68:23] SPEAKER_01: Yeah what do we make that out of because it needs to be kind of porous. No I mean
[68:23-68:32] SPEAKER_03: I think it's fine to put it in. I don't necessarily care about the wood itself getting mildewy. I don't care. I could care about the ground underneath it. The concrete.
[68:32-68:32] UNKNOWN: We
[68:32-68:33] SPEAKER_01: could even.
[68:34-68:34] SPEAKER_03: I don't care about
[68:34-68:39] SPEAKER_01: that. We can get a piece of plywood. I guess you would want a bunch of stuff.
[68:39-68:39] UNKNOWN: You
[68:39-68:45] SPEAKER_01: wouldn't just want the 4x4's. Yeah exactly. But still. Or half
[68:45-68:48] SPEAKER_03: whole rails like we do. Effectively the same thing.
[68:49-68:49] UNKNOWN: Like
[68:49-68:51] SPEAKER_03: it is. But even under. Air
[68:51-69:00] SPEAKER_01: flow is better if you go. Yeah that's true. Yeah. So do that whatever. Put your feet in place and then just get your hole saw and punch a bunch of holes in like some plywood.
[69:00-69:02] SPEAKER_03: Yeah because it's still structurally strong.
[69:03-69:15] SPEAKER_01: It's standing on those feet. That plywood is not doing that much. It's distributing the weight across those feet. And then that provides some water can drip through and air flow going through and actually hitting everything. So that's the answer.
[69:16-69:19] SPEAKER_03: We just need to have some free time and build it.
[69:19-69:19] SPEAKER_01: We can
[69:19-69:19] UNKNOWN: do
[69:19-69:24] SPEAKER_01: it today when you guys get back instead of another session. It's not that important
[69:24-69:24] UNKNOWN: to me. You can just swing
[69:24-69:28] SPEAKER_01: by somewhere and grab a 4x4.
[69:29-69:45] SPEAKER_03: It is important to me because it's ugly and it's going to ruin all of that over there. And in order to do it you got to drain everything and get it all out of the way and build probably in place.
[69:45-70:01] SPEAKER_01: Probably. But I think building just looks like I mean it's going to take us as long to just cut the 4x4 up into 10 pieces as it is and then you just punch a screw through each one of them because it's not going to be dealing with movement.
[70:01-70:01] UNKNOWN: It
[70:01-70:06] SPEAKER_01: just needs to literally hold directly vertical pressure. A
[70:06-70:06] UNKNOWN: thousand
[70:06-70:07] SPEAKER_01: pounds of
[70:07-70:42] SPEAKER_03: it. And that's not that much. Well, I think it worked -ish. It is back to where we want it to be and it remembered everything. It specifically put that in there and that and that. I agree.
[70:46-70:58] SPEAKER_01: So we could build today. I don't think it will take very long. It's more annoying to get the saw out and clean up than it is to punch this thing together. Oh,
[70:58-71:10] SPEAKER_03: I agree. I think that it looks more like draining everything. Which is not that bad. But I think we have a submersible pump somewhere. That's the easiest way to drain it. Not just try to dump it on the floor.
[71:11-71:14] SPEAKER_01: You can make a siphon with just a hose running through the yard.
[71:14-71:36] SPEAKER_03: So draining everything and basically moving it. Cleaning everything out of it. Cleaning everything. Letting that all dry. Maybe that's what we do. We got to do that all at the same time. And then build and then put it back and refill and get the chemistry going. So it's probably a two day project. I'm going out of
[71:36-71:36] UNKNOWN: town
[71:36-71:38] SPEAKER_03: this weekend. So I'm leaving.
[71:38-71:41] SPEAKER_01: If you get the stuff and we get the design together I can build
[71:41-71:46] SPEAKER_03: it. So I'm down for it. Because it really does need to get
[71:46-71:46] UNKNOWN: done. Try
[71:46-71:46] SPEAKER_03: to do
[71:46-71:50] SPEAKER_01: dump and clean today. Finalize a design that we're comfortable with.
[71:51-71:59] SPEAKER_03: I'm down with it. Because it is an eyesore and not only an eyesore it's going to ruin that corner and it's going to
[71:59-71:59] UNKNOWN: ruin
[71:59-72:00] SPEAKER_03: it.
[72:00-72:00] UNKNOWN: You
[72:00-72:05] SPEAKER_03: can go back with pressure washer and do it. And that's right in the prime area where people sit in it.
[72:05-72:05] UNKNOWN: And
[72:05-72:06] SPEAKER_03: it's slippery.
[72:08-72:17] SPEAKER_01: Yeah that makes sense. And basically the longer we wait the bigger the job becomes. It's the math there.
[72:17-72:18] SPEAKER_03: Okay. Yeah I'm down with doing it.
[72:19-72:22] SPEAKER_01: And I'll knock it out at some point this week. We might be able to get through it. Maybe.
[72:22-72:28] SPEAKER_03: Between today and Friday. Like we're going to your parents house at some point on Friday.
[72:28-72:28] UNKNOWN: Tomorrow
[72:28-72:33] SPEAKER_03: yeah. So we have between now and then. We're
[72:33-72:33] UNKNOWN: going
[72:33-72:34] SPEAKER_03: to work tomorrow too.
[72:36-72:53] SPEAKER_01: Do you want to paint it all black so it looks like it's part of the tub? Maybe put some plastic under the actual wood that's touching the concrete or something like that. Or don't paint the bottom of the feet.
[72:55-73:04] SPEAKER_03: I think it being wood is probably okay. As long as it's I don't know. I got to talk to her about that. Yeah probably.
[73:04-73:06] SPEAKER_01: Like the furniture is
[73:06-73:06] UNKNOWN: literally
[73:06-73:06] SPEAKER_01: the tub.
[73:06-73:08] SPEAKER_03: Yeah the plane that black is probably the way to go.
[73:08-73:11] SPEAKER_01: A bottle of spray paint. Yeah. Or a can of spray
[73:11-73:11] UNKNOWN: paint.
[73:11-73:11] SPEAKER_01: Yeah
[73:11-73:11] SPEAKER_03: probably.
[73:16-73:17] UNKNOWN: We
[73:17-73:22] SPEAKER_03: know this works. Yeah. Until it doesn't I guess. Until it doesn't. But this works.
[73:22-73:22] UNKNOWN: I
[73:22-73:31] SPEAKER_03: feel pretty good about this. It does the things that the VM was supposed to do.
[73:32-73:32] UNKNOWN: Right.
[73:34-73:36] SPEAKER_01: And it was kind of doing at times.
[73:36-73:42] SPEAKER_03: Yes. But it does all of the workload identity stuff. Like it's working.
[73:42-73:57] SPEAKER_01: Yeah in the back of a line there's this little demon going like it was always just the quota. Maybe. You were right there and it didn't understand the quota. Maybe. I still think this is probably a more reasonable overall design.
[73:58-74:03] SPEAKER_03: Because it's it now although we're not trying to scale it is scaleable.
[74:04-74:14] SPEAKER_01: With like a little bit of work. Right. Basically adding that automation at the front of a thing that's working. Which is easier. But
[74:14-74:14] SPEAKER_03: we're learning.
[74:15-74:16] SPEAKER_01: Yeah that's awesome.
[74:16-74:16] UNKNOWN: And
[74:16-74:22] SPEAKER_01: again this is not the problem we're trying to solve. We're in fact getting a lot of good data on the problem that we're actually trying to solve.
[74:22-74:22] UNKNOWN: The actual problem we're
[74:22-74:23] SPEAKER_01: trying to solve.
[74:23-74:24] UNKNOWN: Exactly.
[74:24-74:28] SPEAKER_01: I need to remember that next time I get pissed off at it. Oh this is good. This is good data.
[74:32-74:42] SPEAKER_03: Because this is a problem. Yeah. It can only focus on short snippets of stuff. Right. And to do a large project you have to baby it.
[74:42-74:42] UNKNOWN: And
[74:42-74:45] SPEAKER_03: have some sort of way to feed it snippets at a time.
[74:46-74:55] SPEAKER_01: And analyze snippets that it's getting and make it restart itself and still have the valuable context from before the restart.
[74:57-74:59] SPEAKER_03: For sure.
[75:01-75:01] UNKNOWN: I
[75:01-75:11] SPEAKER_03: was just thinking we've talked about this but thinking about okay well what about having an agent that's managing what this other agent is doing what it's focusing on.
[75:11-75:11] UNKNOWN: And
[75:11-75:22] SPEAKER_03: it's like a session management agent. Another layer up. That's saying hey here's your overall project the next session here load this content. But then that agent still has the same problem.
[75:22-75:22] UNKNOWN: It's going
[75:22-75:24] SPEAKER_03: to lose content. It can't do it either. It's going
[75:24-75:24] UNKNOWN: to get to where you're
[75:24-75:25] SPEAKER_03: stacking them.
[75:25-75:35] SPEAKER_01: And even if it's perfectly synthesized now you're dealing with like the pass between of the agents and it just becomes clunky. It's the same problem. Which is good.
[75:35-75:36] SPEAKER_03: Yeah.
[75:36-75:43] SPEAKER_01: And the fact that it's not already out as a service means like it's there to be done too though.
[75:45-75:48] SPEAKER_03: It's not like an obvious oh well just do
[75:48-76:07] SPEAKER_01: that. And there's a customer base immediately if you saw it. 100%. Like we could get like 30 % of the way to our ideal and start trying to like acquire users. Right. If we really wanted to. I agree completely. And then do that whole game where it's like we're not going
[76:07-76:07] UNKNOWN: to
[76:07-76:12] SPEAKER_01: build the tool we're going to go start getting rounds of funding and then ultimately push it
[76:12-76:12] UNKNOWN: off.
[76:12-76:13] SPEAKER_03: Yeah. Yeah.
[76:13-76:13] UNKNOWN: I
[76:13-76:23] SPEAKER_03: mean effectively that's what cursor is. Yeah. Cursor didn't build any of these models. It is building the agents and things in the system to utilize these models that are in the back
[76:23-76:25] SPEAKER_01: end. Cursor might be the ones that bite. For real.
[76:25-76:35] SPEAKER_03: Like because we're this is the like if cursor could maintain better context without the readme. Right. Or just it just did this in the background by itself. Or
[76:35-76:46] SPEAKER_01: OpenAI has Windsor. Right. Like they bought that which is cursor. It's just the other like. And so there's customers available for even small little almost fixes.
[76:46-76:46] UNKNOWN: I
[76:46-77:28] SPEAKER_03: started using Gimini code not the CLI one but the regular one this week because I was doing work and working in the what is the cloud shell. It's pretty good. Like it can update files and everything too. It works just like this. Like it literally is a VS code clone and it literally has these three windows. And it's the same. It looks exactly like this and you talk to it over here and it makes recommendations over here. It looks at everything like and there's a button that says do you want to do these things. And it will implement them save it and you can run it. It's just like this but it runs in the cloud shell.
[77:29-77:40] SPEAKER_01: I mean there's no no real magic going on here. VS code they just for it. Right. And then put agent stuff on top of it. They're using Google's agents. Right.
[77:41-77:41] UNKNOWN: And
[77:41-77:51] SPEAKER_03: in some ways it's better in that or worse. It depends on how you look at it that there's these files. It's not using my computer.
[77:51-77:52] SPEAKER_02: Right.
[77:52-77:54] SPEAKER_03: It is all in the cloud. It's in the cloud shell.
[77:54-77:54] UNKNOWN: And
[77:54-78:06] SPEAKER_03: my files are in there. Like it's like I log into it and open the cloud shell and my files are there. And the repository is there and you can connect it to GitHub and it works just like this except
[78:06-78:06] UNKNOWN: where
[78:06-78:11] SPEAKER_03: it's running in a cloud in a VM. Right. Like my machine is a VM itself.
[78:11-78:11] UNKNOWN: And
[78:11-78:15] SPEAKER_03: so you could be on a crumble and it would work the same way.
[78:15-78:15] UNKNOWN: You'd have
[78:15-78:15] SPEAKER_03: to
[78:15-78:16] SPEAKER_01: pay for that computer.
[78:16-78:19] SPEAKER_03: Right. Exactly. I don't have to pay for
[78:19-78:19] UNKNOWN: it.
[78:19-78:46] SPEAKER_03: They're paying for it at this point. But when I've been doing coding at work that's what I do. Makes sense. It's up there. That's the new reality. And so theoretically you don't need a MacBook. And I think the value of that is or you don't need a powerful laptop is like the headset. Like I don't need this machine.
[78:46-78:46] UNKNOWN: I'm
[78:46-79:00] SPEAKER_03: just going to I just need a browser. Right. I just need something that's running a browser. Put it in a giant window and I can do everything I need cloud wise. And then I don't need a machine. I'm not going to do that.
[79:02-79:14] SPEAKER_01: Yeah. Maybe. I don't even like I guess they just can't do this. But I'm OK with having that be the thing running my headset. Right. Like I don't need to walk around.
[79:15-79:15] UNKNOWN: If I can
[79:15-79:16] SPEAKER_01: sit here and actually
[79:16-79:24] SPEAKER_03: collaboratively work. I don't need to walk around. So I agree. I get that. That oh it's big and clunky and it looks weird. I don't care.
[79:25-79:28] SPEAKER_01: I'll buy a mount that holds it up a little bit so my head doesn't get tired.
[79:28-79:29] SPEAKER_03: I'm
[79:29-79:29] UNKNOWN: not
[79:29-79:33] SPEAKER_03: trying to go on the freaking subway or the airplane with this thing. I want it for work.
[79:33-79:38] SPEAKER_01: Primary use case that and then like watching stuff. Right. Exactly. So
[79:38-79:38] UNKNOWN: I
[79:38-79:40] SPEAKER_01: can lay in bed or
[79:40-79:54] SPEAKER_03: sit here like and I'm still not moving around. If it's like OK you got to take it off to go get a drink. Fine. That's fine. Or just temporarily I'm going to take it off and it only has an hour worth of battery. But I'm going to get a drink or go to the bathroom. Whatever. And I'll be right back.
[79:54-79:54] SPEAKER_01: 100 percent.
[79:54-79:56] SPEAKER_03: And I'm going to plug it back in.
[79:56-80:01] SPEAKER_01: But that doesn't look like a huge market that they're looking for.
[80:02-80:02] UNKNOWN: I agree.
[80:04-80:09] SPEAKER_03: I mean ideally it is small cool looking glasses that do it
[80:09-80:14] SPEAKER_01: all. Yeah I've got these and then I push a button and they go black. And then I'm in
[80:14-80:14] UNKNOWN: the VR space. I'm in
[80:14-80:14] SPEAKER_01: the
[80:14-80:21] SPEAKER_03: VR space where I've got this giant mount. Ideally. But you can't pull that off right now with either technology or cost or both.
[80:24-80:47] SPEAKER_01: But for like I think there is something to if it's good enough people will carry a brick around. Yeah. They currently do. Like I'm going to literally carry my put it in my backpack. Whatever it replaces your phone. So now at the very least you can have something this big that's fully optimized no screen just a power pack. Right. And I'll carry a freaking little man bag full of them.
[80:47-80:48] SPEAKER_03: Right. If that's what it
[80:48-80:49] SPEAKER_01: takes.
[80:49-81:01] SPEAKER_03: If I need it on the go. But in general I don't need it on the go. Like I'm going to put it up. I'm going to go run my errands and do whatever. Then I'm going to come back and sit down on the couch at the desk at whatever. And then I'm going to leave it sitting right there.
[81:01-81:01] SPEAKER_05: Right.
[81:02-81:10] SPEAKER_03: In general I don't do it on the road computer. No. Even if I do it I'm going to go sit in a place in a coffee shop in an office in a whatever. And I'm going to take it all out of my bag and I'm going
[81:10-81:10] UNKNOWN: to put
[81:10-81:12] SPEAKER_03: it on and work. And then I'm going
[81:12-81:12] UNKNOWN: to
[81:12-81:19] SPEAKER_03: put it up. And in fact that's the way it should be. This is my old man. Stop worrying about all these devices and everything. And
[81:19-81:19] UNKNOWN: while
[81:19-81:31] SPEAKER_03: you're at it just go out and do the things. Okay. If you say so. If you say so.
[81:39-81:55] SPEAKER_01: Yeah. She got her eye from the roof. And yes we have a doctor. No it's going to be fine. Okay. It's going to go change the doctor file.
[82:00-82:01] SPEAKER_03: This is right. I agree.
[82:05-82:12] SPEAKER_01: But if it needs Kates. I guess if it can do that then that's fine.
[82:14-82:16] SPEAKER_03: What do you I struggle with. What do you think it should be?
[82:16-82:22] SPEAKER_01: So it's going to be building like it's trying to build from the job control directory. Right. But then it needs that case directory.
[82:25-82:25] UNKNOWN: So
[82:25-82:27] SPEAKER_01: it's going to go. You want
[82:27-82:29] SPEAKER_03: you would rather build from the roof.
[82:29-82:36] SPEAKER_01: I don't care if this works that's fine. I'm just not sure that it's going to
[82:36-82:36] UNKNOWN: work.
[82:39-83:00] SPEAKER_01: With the doctor ignore. As I understand it you can't get anything from above where you build.
[83:00-83:01] SPEAKER_03: Right.
[83:02-83:09] SPEAKER_01: But maybe it's like copying it from the forehand and like keeping a temporary copy of those animals. I don't know if that's perfect.
[83:10-83:11] SPEAKER_03: Yeah I'm not sure.
[83:11-83:11] UNKNOWN: Like
[83:11-83:47] SPEAKER_03: that's who I don't know which one is which one is better. Yeah. In general I think using a is being explicit deep be focused on exactly what you're doing and not just loud to be slob like just make decisions like be very intentional like no this is the design do it this way. And it starts to veer no do it this way. Not just that's how that's where the slop comes from.
[83:47-83:47] UNKNOWN: I
[83:47-83:50] SPEAKER_03: think it's just doing things and not conforming to that.
[83:50-84:00] SPEAKER_01: It's doing again like exactly what you asked to do in that last moment. Irregardless of how that affects anything else around that thing.
[84:00-84:15] SPEAKER_03: And I would argue especially when I was a more demanding manager that is what management is like. It's like no for real. Do it the what do it the right way. You know what the right way is. I don't care.
[84:15-84:15] UNKNOWN: And
[84:15-84:16] SPEAKER_03: I'm watching.
[84:17-84:18] SPEAKER_01: Do it.
[84:23-84:33] SPEAKER_03: That very much is what it's like or like a parent like is that where your shoes go. Yeah. You know where they go.
[84:38-84:51] SPEAKER_01: It's so funny when little kids try to lie. It's just the greatest thing. Because they believe it's I remember it like I was there. But they're like oh I'm a giveaway with this one. And it's just like the dumbest.
[84:52-85:21] SPEAKER_03: No. That makes sense to me. It's always built from the same place and give it the path all the way down to where you need to go.
[85:21-85:21] UNKNOWN: And
[85:21-85:28] SPEAKER_01: the doctor basically says ignore everything and then logs a couple of exceptions like here's what I want you to not.
[85:29-86:01] SPEAKER_03: Right. I got it.
[86:29-86:47] SPEAKER_01: Okay. And then in the automated pipeline basically have to reiterate every time like hey go check the check this every time section of the read me. Right. Because it'll read it and then forget it. Yeah. Now it's focusing down here doing other shit. Hey remember
[86:47-86:49] SPEAKER_03: you're supposed to put your shoes over by the cookie.
[86:49-86:50] SPEAKER_01: Exactly.
[86:57-87:00] SPEAKER_03: Which kids also do. Yeah. It's fine.
[87:00-87:21] SPEAKER_01: Sure. Just go play more. And it's a more. Obedient. When you tell it exactly what to do. So why do
[87:21-87:21] UNKNOWN: you
[87:21-87:42] SPEAKER_01: have to go look at the read me and be like why do you keep writing the same shit over and over again. But even that like you just told it hey it looks like there's quite a few inconsistencies in here. Fixed them. Right. So that's a step that can be program.
[87:43-87:43] SPEAKER_03: I agree.
[87:47-87:48] SPEAKER_01: I just don't see where there's not.
[87:49-87:49] UNKNOWN: I
[87:49-87:52] SPEAKER_01: mean it's again you're building a team you're not building a superhuman.
[87:52-88:05] SPEAKER_03: Right. That is very much the work with it. Yep. These are the limitations. What's the best way to work within these. Right. Until they are not limitations and then it's going to be a supercomputer and then it's just going to do.
[88:05-88:11] SPEAKER_01: Yes. Then it's going to decide whether or not to kill. And hopefully it picks on our side and then everything's great.
[88:12-88:12] UNKNOWN: It might
[88:12-88:15] SPEAKER_01: be a thousand years from now. Who knows. It's not going to be.
[88:15-88:15] UNKNOWN: It might be a
[88:15-88:16] SPEAKER_01: hundred years. It might be
[88:16-88:17] SPEAKER_03: 20 years from
[88:17-88:17] UNKNOWN: now.
[88:17-88:17] SPEAKER_03: Who
[88:17-88:27] SPEAKER_01: knows. Like we're. I would say if I were required to put money down we're going into an AI winter. That's what. I agree. And it is what it is. Like that's how this happens.
[88:27-88:27] UNKNOWN: And
[88:27-88:30] SPEAKER_01: it's what a lot of people say at the beginning of this one.
[88:30-88:30] UNKNOWN: I
[88:30-88:39] SPEAKER_03: do think that their cars are maybe not done but they're very close. Even if you have to say OK Elon you were wrong. You got to put LIDAR and everything. Right.
[88:40-88:40] UNKNOWN: LIDAR
[88:40-88:40] SPEAKER_03: can
[88:40-88:40] SPEAKER_01: do it.
[88:41-88:46] SPEAKER_03: It's done. It's capable of being done. There are cars in the world that are doing it. The way those. Right.
[88:46-88:46] UNKNOWN: The ones
[88:46-88:47] SPEAKER_03: that
[88:47-88:49] SPEAKER_01: have all the expensive shit that makes it work.
[88:49-88:56] SPEAKER_03: It is done. Like the question is is it done to the point where I can have one and I can go to sleep. I'm going to take me to Florida.
[88:56-88:57] SPEAKER_02: Right.
[88:57-89:05] SPEAKER_03: I'm going to leave at 6 p .m. Like I'll wake up to charge or whatever or especially automate that. Let me know when we get there.
[89:05-89:24] SPEAKER_01: Yeah. I mean a way mode could in theory get you there probably as statistically reliable as a person. Probably. Because a person could get in a wreck or do whatever on the way to Florida. But yeah if you have like 350 grand for an ugly little coupe. Right. I think
[89:24-89:43] SPEAKER_03: that the Tesla system could get you there probably. Especially if you deployed it on a gas car. Right. Where you can literally get 400 miles of range. Like drive into like next time I'm stopping I'm going to be in Alabama. Yeah. Like go.
[89:43-89:44] SPEAKER_01: Yeah
[89:44-89:44] UNKNOWN: as
[89:44-89:48] SPEAKER_01: long as it had like some. The problem with the Tesla is
[89:48-89:48] UNKNOWN: it
[89:48-89:53] SPEAKER_01: can't see all the time. Right. And so as long as it had like you might have to literally stop on the
[89:53-89:53] UNKNOWN: side
[89:53-89:53] SPEAKER_01: of the road.
[89:53-89:53] UNKNOWN: Like
[89:53-90:00] SPEAKER_03: constraints if it's raining or whatever like it's just going to stop. Right. Or you have to take over on these. But if it's good weather. Right. It can make it.
[90:00-90:13] SPEAKER_01: Fantastic. It's trying to push to the wrong place for starters I think. Maybe I don't understand that. GCRIO I think is the other registry. Container registry.
[90:13-90:23] SPEAKER_03: No. Yeah. We should be pushing to. What is
[90:23-90:27] SPEAKER_01: it. Artifact. Artifact. And you should know that.
[90:33-90:36] SPEAKER_03: I always forget what artifact I can't name.
[90:36-90:36] UNKNOWN: That
[90:36-90:38] SPEAKER_03: word doesn't pop into my head.
[90:42-90:42] SPEAKER_01: Yeah.
[90:42-90:42] UNKNOWN: This
[90:42-90:54] SPEAKER_01: is where it might have got. I've noticed one of my opening lines when I'm annoyed is hey motherfucker. Like why are we pushing to that registry this go round.
[91:06-91:06] UNKNOWN: I
[91:06-91:08] SPEAKER_01: mean I don't know that
[91:08-91:08] UNKNOWN: it.
[91:08-91:09] SPEAKER_01: You don't think we need to
[91:09-91:09] UNKNOWN: do that.
[91:09-91:13] SPEAKER_01: But that's in the references. Yeah. And in the readme it is always check the references.
[91:20-91:25] SPEAKER_03: Yeah. She could set up that is that instead of the US. I didn't
[91:25-91:32] SPEAKER_01: see it until after it builds. I'm still not certain. Is that the artifact registry.
[91:32-91:37] SPEAKER_03: It is like so is retagging it to this is the format for going to artifact registry.
[91:37-91:41] SPEAKER_01: And so it's retagging the one that's already tagged for the container.
[91:42-91:43] SPEAKER_03: And then pushing.
[91:45-91:45] UNKNOWN: Yeah.
[91:45-91:53] SPEAKER_03: It has like the region the project and then the repo. That's the set and then the name.
[91:54-91:55] UNKNOWN: Gotcha.
[92:11-92:17] SPEAKER_01: You're right. The moving stuff out of the way is by far the longest. And then really. But that's easy.
[92:20-92:21] SPEAKER_03: But that is not hard.
[92:21-92:28] SPEAKER_01: No it is pretty simple and a significant optimization to the situation.
[92:29-92:34] SPEAKER_03: It's going to be a little hard to get in and out. We may need like a little step stool or something like that.
[92:34-92:46] SPEAKER_01: Yeah. I mean if we go like steps to two inch blocks and another like half an inch on top of it. We might need it but we'll
[92:46-92:46] UNKNOWN: see.
[92:47-92:58] SPEAKER_03: Build some stuff. Build a little deck. That's actually what it would need like it needs a little round deck with like steps two steps on either side of it and it's kind of sitting in the middle. That's what would make it look fancy
[92:58-93:12] SPEAKER_01: for sure. Yeah I just don't think it's going to be like almost in my head. The design is make it look like it has feet.
[93:12-93:12] SPEAKER_03: Right.
[93:12-93:16] SPEAKER_01: So cut the board on top.
[93:16-93:16] UNKNOWN: Obviously
[93:16-93:25] SPEAKER_01: punch the holes in it but cut it like almost do the rounded ends. Right. And cut it to size maybe even a little small. Right. So you can't see it like might be overhang.
[93:25-93:35] SPEAKER_03: Yeah just like the plastic is overhanging and it looks like it's just floating and the feet are all like just recessed just a little bit. So there's just a little bit of overhang but it's not bad.
[93:35-93:44] SPEAKER_01: Yeah and then there's like two to three inches are all that those feet are. Yeah. And so ultimately it's just like it's just floating with like seven or eight feet.
[93:46-93:49] SPEAKER_03: That would be like a like a bathtub like a.
[93:49-93:51] SPEAKER_01: Exactly like a bathtub with feet.
[93:51-93:51] SPEAKER_03: Yeah.
[94:07-94:08] SPEAKER_04: I concur.
[94:11-94:11] SPEAKER_01: It just
[94:11-94:12] SPEAKER_04: takes a second.
[94:13-94:15] SPEAKER_01: Yeah it's the cluster of.
[94:16-94:21] SPEAKER_03: It is. Oh. I haven't actually looked but it ran the commands and said it was successful.
[94:28-94:36] SPEAKER_01: I mean it. Shouldn't even have any jobs as of right now. It just seemed.
[94:36-94:53] SPEAKER_03: Oh. Like that's what it's checking like it. We're up to that plate. We're finally. Like it updated the YAML file. Well it sent the image up there and then this YAML file references that image. I assume I didn't look at the YAML file but it sent the controller. Deployment.
[94:53-94:53] SPEAKER_01: Yeah.
[94:54-95:12] SPEAKER_03: And it's checking to see if it's working. It does not have minimum availability.
[95:13-95:20] SPEAKER_01: That's what I saw yesterday. Not a VM which is good. Do
[95:20-95:20] UNKNOWN: you
[95:20-95:28] SPEAKER_01: want me to delete the cluster manager? Um. Is that a function? Yeah. Cloud run function that was doing the thing.
[95:29-95:36] SPEAKER_03: That's the stuff that we just. I thought it should have deleted it. Maybe it just deleted references to it. Are you sure that's the one that needs to get deleted? I'm going
[95:36-95:36] UNKNOWN: to
[95:36-95:52] SPEAKER_03: let you do it. Basically we need to go and do cleanup on all the stuff but specifically let's do function cleanup.
[95:53-95:53] SPEAKER_05: Yeah.
[96:07-96:08] SPEAKER_03: That's
[96:08-96:09] UNKNOWN: interesting.
[96:09-96:10] SPEAKER_01: Yeah.
[96:16-96:21] SPEAKER_03: So job control is working well. So that's the fourth service and now it's just going to schedule these jobs.
[96:21-96:22] SPEAKER_01: Right.
[96:22-96:37] SPEAKER_03: And it has scheduled a job. Yeah. And it can't get a GPU is my guess. Yeah. So it has a deployment type. Yeah. A deployment and then a job.
[96:38-96:42] SPEAKER_01: That is what we're looking for. Have you done an in -session lately?
[96:44-97:30] SPEAKER_03: No. I did one not that long ago. When we. Oh there's older. It's not that long ago. Since we've been back from having coffee. I started a new. So there were just files in the queue or. That's my guess. Again just automatically said hey I got some and it pulled the first couple.
[97:30-97:32] SPEAKER_01: Pub's still doing like fucking.
[97:33-97:57] SPEAKER_03: Sitting there waiting like hey oh you're back. I got some stuff for you. Just. Just thinking slow this morning.
[98:17-98:22] SPEAKER_01: So. Insufficient
[98:22-98:23] UNKNOWN: GPUs.
[98:23-98:27] SPEAKER_01: Preemption victims found for incoming. I don't know.
[98:29-98:37] SPEAKER_03: Yeah I'll feed those to it if. He doesn't get to that conclusion by itself.
[98:43-102:37] UNKNOWN: Yeah. Yeah. Yeah. Yeah. Yeah. Yeah. Yeah.
[102:58-103:04] SPEAKER_01: That is not a normal processing time if it's using a GPU, I'll tell you that.
[103:10-103:11] UNKNOWN: Definitely
[103:11-103:13] SPEAKER_01: not. Yeah, but if it is then
[103:13-103:27] SPEAKER_03: this shit ain't gonna work. Right. It definitely can work. Yeah. Because we can use a more powerful GPU, we can only just use one. Right. And it will cost more.
[103:27-103:35] SPEAKER_01: Yeah, for sure. For like six minutes, it should be getting close to finishing on a CPU.
[103:38-103:39] UNKNOWN: I agree.
[103:43-103:45] SPEAKER_01: What's that, five to ten minutes?
[103:45-103:49] SPEAKER_03: For actual provisioning a GPU.
[103:51-103:52] SPEAKER_01: Is that true? Is
[103:52-103:52] UNKNOWN: that
[103:52-103:53] SPEAKER_01: fine?
[103:56-104:18] SPEAKER_03: I assume what it's implying is that at some point this job is going to become, it's gonna be okay, it's gonna start working once it provisions the right type of note. That's what it's proposing. But I don't know that that's true. Right, I think it's fine. It's getting there. I
[104:18-104:27] SPEAKER_01: definitely saw that taint and affinity was one of the issues. Pods, nodes didn't match pods at node affinity. How
[104:27-104:34] SPEAKER_03: is that different? It's not. Oh, it's adding more of this stuff below it.
[104:36-104:40] SPEAKER_01: If you noted the taint, it prevents scheduling without the proper toleration.
[104:42-104:42] UNKNOWN: Okay.
[104:43-104:44] SPEAKER_01: If you say so. I
[104:44-104:44] UNKNOWN: mean,
[104:44-104:45] SPEAKER_01: I understand,
[104:45-104:45] UNKNOWN: and
[104:45-104:50] SPEAKER_01: that is what taint is. It's basically taint and affinity are the two things. They're opposites
[104:50-104:50] UNKNOWN: to each other. Taint means
[104:50-104:52] SPEAKER_01: stay the fuck away and affinity means I got you.
[104:54-104:57] SPEAKER_03: You must be on or you must not be
[104:57-104:57] UNKNOWN: on.
[104:57-104:58] SPEAKER_01: Right, exactly.
[105:08-105:19] SPEAKER_03: Yeah, this is what we envisioned for updates. So the cluster's just up. Okay, we'll redeploy it and see. And that's fast. It's QCTL. The
[105:19-105:26] SPEAKER_01: cluster isn't fundamentally flawed by how it was created. Right. And we can just keep that sucker running throughout a session.
[105:26-105:26] SPEAKER_03: And it
[105:26-105:27] SPEAKER_01: is applied action. Yeah.
[105:28-105:28] UNKNOWN: So that's what we're going to do.
[105:39-105:54] SPEAKER_03: Which is the same as Terraform. Yep. Terraform. You can do apply actually does it. There's one that's like before that.
[105:54-105:54] UNKNOWN: There's
[105:54-105:57] SPEAKER_03: like stage. It's not stage, but it's like
[105:57-105:58] SPEAKER_01: playing. There you go.
[106:01-106:01] UNKNOWN: I
[106:01-106:06] SPEAKER_01: heard today that Shay supposedly left a hundred million on the table.
[106:07-106:07] UNKNOWN: And
[106:07-106:44] SPEAKER_01: the way that is is basically he could have waited until next year and signed under the new CBA with the increase because super max means you can make up to 30 % of the cap apparently is what that means. Okay. And you achieve the ability to get super max by all in VA I think. And then obviously you got MVP. So if he had signed next year, the new cap would have been higher and he would have gotten more per year. And he signed four years instead of five. So left a hundred million basically he made a team friendly deal. Right. We all thought he might. Right. Exactly. It's like
[106:44-106:45] SPEAKER_03: I
[106:45-106:46] SPEAKER_01: got hundreds of millions
[106:46-106:47] SPEAKER_03: of dollars. Yeah. And like I'm going
[106:47-106:47] UNKNOWN: to
[106:47-106:48] SPEAKER_03: keep doing this.
[106:48-106:48] UNKNOWN: I'm
[106:48-106:56] SPEAKER_03: going to get my hundreds of millions of dollars and it's the biggest contract in the history of the NBA. Like whatever. It's fine. I got more money than me and my family can ever use.
[106:56-106:56] UNKNOWN: 100
[106:56-106:56] SPEAKER_03: %
[106:56-106:59] SPEAKER_01: and like you're going to make that money work for you. Right. You're
[106:59-106:59] UNKNOWN: going to
[106:59-107:03] SPEAKER_01: keep those shoes. You're going to start investing wherever he decides he wants to live.
[107:03-107:21] SPEAKER_03: And I think theoretically in the big scheme of things it might be better for him. And I'm sure they're having these. This is what I would say to him. It's like this will enable or improve your chances of winning more championships. And in the end that is better for you. Right. Even financially. Yeah. It's winning championships.
[107:21-107:21] SPEAKER_01: I
[107:21-107:21] UNKNOWN: think another
[107:21-107:22] SPEAKER_01: thing
[107:22-107:22] UNKNOWN: I
[107:22-107:28] SPEAKER_01: think Brock said this morning was also he'll be a year younger when it's time to renegotiate the next contract.
[107:28-107:28] UNKNOWN: That's
[107:28-107:56] SPEAKER_01: true. And maybe be sitting on like four championships. But ultimately like I agree with you and I think next. It is the right move if you're making the full like the holistic analysis. If you're like give me this money because who knows what's going to happen to me. I get hurt like that type of shit.
[107:56-108:03] SPEAKER_03: But if it's like long term I'm staying in Oklahoma City. This works for me. I'm here for the long call.
[108:03-108:03] UNKNOWN: But
[108:03-108:04] SPEAKER_03: at least through
[108:04-108:14] SPEAKER_01: this run. So take him into his 30s. Yeah. So maybe you do like go get the bag bag at the end from somebody else. Or just go like
[108:14-108:14] SPEAKER_05: wherever
[108:14-108:18] SPEAKER_01: your dream. I'll make your plane Toronto or something. I'll mention these kids. Yeah.
[108:18-108:20] SPEAKER_03: Like when they come here I'll step back. He might go play
[108:20-108:24] SPEAKER_01: for the Raptors or some shit. Yeah
[108:24-108:33] SPEAKER_03: I don't know. I don't know what I would have been how I would have been at 25. But me now I'll be like it's
[108:33-108:33] UNKNOWN: fine.
[108:33-108:35] SPEAKER_03: Yeah let's go. It's
[108:35-108:35] UNKNOWN: fine.
[108:35-108:38] SPEAKER_03: It's plenty of money. And it's like I want to win. Do
[108:38-108:49] SPEAKER_01: you want $500 million and maybe three or four championships or do you want $600 million? And just this one championship.
[108:50-108:52] SPEAKER_03: In my mind it is the championship.
[108:52-108:52] UNKNOWN: I
[108:52-108:55] SPEAKER_03: know $100 million is a lot of money.
[108:55-109:02] SPEAKER_01: But I would take that reduction. What's the lifestyle change between those two? Nothing. Versus the lifestyle change between one and four championships. I don't
[109:02-109:07] SPEAKER_03: know that my lifestyle would change right now with $500 million. It would. It would but not.
[109:07-109:07] UNKNOWN: It's a different
[109:07-109:15] SPEAKER_01: scenario because he's a child. No I agree. And a child that never found out he wasn't this shit.
[109:15-109:26] SPEAKER_03: Right that's true. But me right now I would take $100 million. Don't get me wrong. But I don't know that even with $100 million I think I would align closer.
[109:26-109:26] UNKNOWN: Get the Model
[109:26-109:26] SPEAKER_01: S.
[109:26-109:28] SPEAKER_03: Right exactly. I'm not going to move.
[109:29-109:29] UNKNOWN: I
[109:29-109:29] SPEAKER_03: might
[109:29-109:30] SPEAKER_01: move.
[109:30-109:31] SPEAKER_03: Probably. You could
[109:31-109:33] SPEAKER_01: get like 100 acres just on that.
[109:33-109:37] SPEAKER_03: I would move 10 miles south of here and build this house.
[109:38-109:38] UNKNOWN: Exactly
[109:38-109:41] SPEAKER_03: the way that I would live here while I'm building that house.
[109:41-109:41] UNKNOWN: With
[109:41-109:48] SPEAKER_03: a payphone under the stairs and a big ass picture. Nightmare. Like bro. I don't have to go to work. Right exactly.
[109:48-109:48] UNKNOWN: Here
[109:48-109:54] SPEAKER_03: we are. And you are not getting paid until this meets the specs. And I put the specs in the contract.
[109:54-109:55] SPEAKER_02: Yep
[109:55-110:10] SPEAKER_03: there they are. So don't get mad at me. You shouldn't have taken this job if you didn't want to build it to the specs. Well we're going to have to tear up concrete. Yeah. I got another house. I'm good.
[110:10-110:29] SPEAKER_01: Yeah I think the overall analysis of like your life is better for taking that 100 million less. I agree. It's just the society that judges make things solely off of numbers and loss.
[110:30-110:35] SPEAKER_03: I have no idea what it's doing. It's checking locks.
[110:35-110:35] UNKNOWN: Yeah
[110:35-110:37] SPEAKER_01: they're checking things.
[110:37-110:38] UNKNOWN: Turns
[110:38-111:04] SPEAKER_03: out the GPU quota is holding us back. Don't fucking say dude. That freaking quota. No? One of them is running. They're two different numbers. Yeah so the two jobs are running. Bro you need to just give it a second. Because that one is running. The controller is running as a deployment and the first of the two jobs is running.
[111:05-111:05] SPEAKER_05: Okay.
[111:06-111:26] SPEAKER_03: Is it running like actually processing things? I assume that's why it would say okay but that doesn't necessarily mean that. But this is exactly what we want. We want the controller up queuing jobs and it runs this job and as soon as stylization is done it will.
[111:26-111:28] SPEAKER_01: Even that one is saying pending.
[111:28-111:29] SPEAKER_03: Because it
[111:29-111:34] SPEAKER_01: doesn't have a GPU. But it knows that there is one that is just busy right now maybe?
[111:34-111:35] SPEAKER_03: Yeah.
[111:38-111:44] SPEAKER_01: And this is an issue with our previous tester bumping in on this test is my guess.
[111:44-111:46] SPEAKER_04: I don't think that it is correct.
[111:47-111:47] UNKNOWN: I
[111:47-111:47] SPEAKER_04: think.
[111:54-112:04] SPEAKER_01: Yeah I'm so averse to having things on my. I grab it before it saves and it's built in. If you drag it up there before it saves it there it doesn't save it
[112:04-112:05] UNKNOWN: there. Oh
[112:05-112:06] SPEAKER_01: really? Yeah. I didn't know.
[112:06-112:06] UNKNOWN: You can grab
[112:06-112:07] SPEAKER_01: it out of the corner and take it
[112:07-112:07] UNKNOWN: where you want it.
[112:07-112:08] SPEAKER_01: I'm going to delete
[112:08-112:09] SPEAKER_03: these and make you
[112:09-112:20] SPEAKER_01: feel better. You don't have to do that. No I'm doing it. It actually makes me laugh. But that is a thing. Like whenever I take a screenshot it actually bothers me whenever I can't get it before it saves it.
[112:29-112:29] UNKNOWN: I
[112:29-112:53] SPEAKER_01: guess right that something else is using the GPU. It's one of the jobs. It doesn't realize that there are two jobs. Yeah I think it doesn't understand that HubServe is still sending those jobs from the old test and we need to clear the entire queue if that's a possibility. Before we start the testing. Even if we have to delete the topics and create new exact copies of those topics that aren't sending working jobs right now.
[112:54-112:54] UNKNOWN: I
[112:54-113:07] SPEAKER_01: agree. And we have like the dead letter queue but I think it's like it tries again every 10 minutes and it will only try like four or five times so it's going to do it for 45. For a long time.
[113:07-113:25] SPEAKER_03: Yeah. But those are from yesterday. We didn't do any uploads or messages from yesterday. Those have been sitting in the queue from yesterday. We sent two jobs. Those are the two from whenever last time like I don't specifically remember the two but we did two uploads and my guess is we can go back and look at those numbers and they're in
[113:25-113:25] UNKNOWN: there.
[113:32-113:46] SPEAKER_03: And my guess is that this is going to finish. It's using the GPU and it's going to finish. It should already be done theoretically with how short it is. Yeah. It's not
[113:46-113:56] SPEAKER_01: going to finish. That's what my word is. I got to go here. Oh yeah.
[114:07-114:41] SPEAKER_03: But back to Shay I think that just Shay like the organization is executing flawlessly and I'm sure making the rest of the league freaking panic. Yeah. Like this is the greatest lineup that has ever been on paper at least. Yeah. Or maybe not the greatest but it's like it's right up there with those other two teams that are considered the greatest teams in history and like the best makeup of a team and we're locking it in for four years or so.
[114:42-114:47] SPEAKER_01: Like straight up and oh yeah that thing that built it still got that. Yeah exactly.
[114:47-114:47] UNKNOWN: We've
[114:47-115:04] SPEAKER_01: got a hundred draft picks on Sam Presti. Exactly. We can just keep rolling. Does he ever retire early because like I don't want to mess it up. I don't want to make a bad pick and have it be the flavor that everybody's
[115:04-115:07] SPEAKER_03: left with. I don't know. I
[115:07-115:07] UNKNOWN: would
[115:07-115:11] SPEAKER_03: assume he's like everybody else that's high functioning. It's like. What the fuck am I going to
[115:11-115:11] UNKNOWN: do?
[115:11-115:25] SPEAKER_03: But we're getting a new stadium and all this other. Like I want it like I want to make it so that is the greatest like Golden State and Bull. Like I don't
[115:25-115:25] UNKNOWN: I
[115:25-115:31] SPEAKER_03: want to. There's no question. Right. Exactly. Let's be real. Yeah. I'm sure he's got a little bit of that in him. That's
[115:31-115:39] SPEAKER_01: like those dudes that look like they're quiet and don't want interviews at all. Like the psychopaths. Have you ever
[115:39-115:40] SPEAKER_03: seen anything
[115:40-115:50] SPEAKER_01: about him? Just his general story and like how he got promoted because the guy was kind of throwing him up to the wolves because he knew he was leaving. See I didn't
[115:50-115:56] SPEAKER_03: know this. Mel sent it to me. It's pretty quick.
[115:56-115:56] UNKNOWN: I
[115:56-115:59] SPEAKER_03: think it's an Instagram post.
[116:06-116:10] SPEAKER_04: She sends me so many. But it's fine. It's.
[116:20-116:31] SPEAKER_01: Yes. Saying there's a phantom job. That's one thought I had was like if it's not configured properly because of any updates we've done since then then that's going to be right.
[116:31-116:31] UNKNOWN: A
[116:31-116:38] SPEAKER_01: problem to hold it up and it is claiming that it is stuck or that it's a phantom job. I don't know.
[116:38-116:38] UNKNOWN: I
[116:38-116:40] SPEAKER_01: think this is the right one.
[116:53-116:58] SPEAKER_00: This championship winning NBA GM once released a rap jazz album titled Milk Money.
[116:58-116:58] UNKNOWN: But
[116:58-117:13] SPEAKER_00: he later got scrubbed from the internet. He went on to release a second album a year later called All Things Considered and proceeds from these albums went to the Children's Hospital in high school. The boy genius was actually put into a special ed program because he was getting CDs throughout his parents' divorce.
[117:14-117:14] UNKNOWN: And
[117:14-119:00] SPEAKER_00: he needed a little more space and support to focus on his schoolwork. He felt like a huge outsider. A white kid with a baby who listened to public enemy in a school full of future leaders that he met a group of basketball playing black classmate who had been busted into the Concord Carlisle district. He sat with them at lunch, tagged along when they went to see Do the Right Thing and asked thoughtful and substantive questions about race. They became fast friends and he joined them on the basketball team in sophomore year. He also played the drums. His favorite drummer is from a funk band called Lettuce whose members are sadly NBA crazy Knicks fans. He figured someday he'd maybe go to law school or music school but he never anticipated becoming the GM of the NBA team let alone a championship winning one. But he was always a hard worker. In college at Emerson, he convinced his teammates to agree to a policy where they could vote someone off the team if they weren't trying hard enough. When he got an opportunity to be a summer camp counselor at a basketball camp put on by Greg Popovich and the GM of the Spurs. He mowed the lawns of the local golf club and sold parts of his drum kit to a four day affair to Aspen. Once there he slept in a classroom at the high school and chased the GM up and down the court begging him for a chance. They took him in but didn't know what to do with him so they had him operate the shot clock in off floors. Sometimes he slept on the training table in the facility and he got in trouble breathing too many of their power bars. When Tim Duncan won $300 in a shooting game he gave it all to Sam and could the whole team knew how hard up he was. That $300 was more than his monthly salary. Every night he went to the GM's house to watch VHS tapes of the draft prospects and he'd stay there until one in the morning. He worked his way up the ranks and became assistant GM. In that position he traded Spurs swag with French people in order to get tapes of Tony Parker so he would convince the Spurs to draft him. After landing with the Seattle Supersonics, Kevin Durant was the first player he ever drafted. Given the instability of the zombie, he's really dedicated to
[119:00-119:01] UNKNOWN: helping others. He
[119:01-119:05] SPEAKER_00: doesn't have a scholarship for the same program that brought his best friends in high school to his school. He's
[119:05-119:12] SPEAKER_03: a grinder. He reminds me of us. He's just grinding and just kind of
[119:12-119:12] UNKNOWN: doing
[119:12-119:15] SPEAKER_03: his thing. Oh, savage bro.
[119:16-119:16] SPEAKER_00: No car
[119:16-119:17] SPEAKER_01: since 2014?
[119:17-119:43] SPEAKER_00: Yeah. He
[119:43-119:43] UNKNOWN: reminds
[119:43-119:45] SPEAKER_00: me of
[119:45-119:45] UNKNOWN: you.
[119:46-120:01] SPEAKER_01: Honestly. Yeah, miss me with the senior assistant to get you a book that you got recommended. You reading it immediately because there's no thunder stuff going on. What's going on buddy? But yeah, he's a savage.
[120:01-120:06] SPEAKER_03: Yeah, so that dude ain't been retiring early. No, what's he going to do?
[120:08-120:10] SPEAKER_01: Unless he just gets obsessed with something else.
[120:10-120:18] SPEAKER_03: Right. It made me think of the line in the oilfield show that we're watching.
[120:20-120:20] UNKNOWN: The
[120:20-120:44] SPEAKER_03: lawyers like, clearly I'm high functioning. You got to tell me what we're about to do. What are we doing? Are you trying to pick me up? What are we doing? I don't have time. What's a drink for? Right. Just talk about it because I'm not playing games. That guy ain't going to just quit early and be like, well, I could have been the greatest ever.
[120:45-120:46] SPEAKER_01: This is what I've
[120:46-121:00] SPEAKER_03: wanted my whole life. He's Kobe. He's unathletic Kobe. Smart Kobe. All right. I got to go. You want to take over this or? I
[121:00-121:05] SPEAKER_01: think we're just doing in session. Or I'll do that.
[121:05-121:05] UNKNOWN: Like
[121:05-121:06] SPEAKER_01: you can go.
[121:16-121:16] UNKNOWN: I
[121:16-121:20] SPEAKER_03: mean, it's kind of on the roll and I kind of don't want to.
[121:20-121:30] SPEAKER_01: Yeah, it had three issues and now it's only one. It's got two. So, and this, we literally saw this happen 10 minutes ago. You're right. Where those went away eventually.
[121:34-121:37] SPEAKER_03: You want to take over? Yeah. I'll just close it out.
[121:37-121:43] SPEAKER_01: At least get into an in session state. Thank you. Yep. I'll see you later. See you.

==================================================
Generated on: 2025-07-30 14:26:06
Total words: 14084
Total speakers: 7
==================================================




Summary:


creation_date: 2025-07-30 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1401_ZOOM0040_transcript.txt participants: [SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04, SPEAKER_05]
Executive Summary
This meeting focused on debugging a persistent issue where a [[VM controller]] was being erroneously triggered, consuming unnecessary [[GPU]] resources. The team diagnosed that outdated documentation and incorrect context were causing the [[AI Tools|AI]] to repeatedly invoke a legacy script, leading to these "[[Zombie Instances]]". A major part of the discussion revolved around improving context management for their [[AI Agents]], emphasizing the need for a systematic "cleanup" and "auditing" workflow to ensure the AI's understanding of the project remains accurate across sessions. The participants also discussed the importance of brand loyalty in technology, the future of collaborative VR with devices like Apple's Vision Pro, and various side topics including gardening, geopolitics, and personal philosophies on life and death.
Key Topics Discussed
	•	Troubleshooting [[Zombie Instances]]
	•	An ephemeral [[Cluster Manager]] [[VM controller]] was found running unexpectedly, consuming [[GPU]] resources and causing quota issues [01:29-01:51].
	•	The team investigated deployment scripts and the [[Job Controller]] code but found no active references to the legacy VM, indicating the issue stemmed from outdated context being used by the [[AI Tools|AI]] [02:20-02:47].
	•	The problem was linked to inaccurate documentation ([[README]]) which led the [[AI Agents|AI]] to make incorrect assumptions about the system's architecture [30:34-31:11].
	•	Improving [[AI Agents|AI]] Context and [[Workflow Automation]]
	•	The core problem was identified as a lack of persistent context between sessions, causing the [[AI Agents|AI]] to "veer off" based on outdated information [23:09-23:52].
	•	A new workflow was proposed: a periodic auditing and cleanup process where they have a dedicated session to review all documentation with the [[AI Agents|AI]], correct its understanding, and update all references before proceeding [31:26-32:02].
	•	This process would involve comparing the AI's understanding across sessions to identify and correct deviations, ensuring the AI's "tendency to be a little bit off is based on a thing that's" correct [32:09-33:07].
	•	Technology and Brand Loyalty
	•	The participants discussed their preference for [[AI Tools]] based on performance rather than brand loyalty (e.g., using Claude over [[Gemini]] despite working for Google) [08:54-09:46].
	•	They explored the collaborative potential of VR technology like Apple's Vision Pro, agreeing that its value increases significantly with shared, collaborative experiences that could replace a physical office setup [12:29-13:19].
	•	Side Topics
	•	Gardening and Homesteading: A discussion on growing cucumbers using a trellising technique to maximize space and yield [27:52-28:35]. They also talked about making tinctures from homegrown plants [16:48-17:29].
	•	Geopolitics and Philosophy: A brief conversation on American exceptionalism, global power shifts, and personal philosophies on facing mortality, framing life as a marathon with a rewarding finish line [33:29-37:57].
Action Items & Decisions
	•	Decision: To implement a periodic "auditing" or "cleanup" workflow to ensure the [[AI Agents|AI]] maintains accurate context across development sessions [31:34-31:47].
	•	Action: Update all project documentation, particularly the [[README]], to reflect the current architecture and remove any references to the legacy [[VM controller]] [38:39-39:45].
	•	Action: Clean up leftover [[Pub/Sub]] topics and other [[GCP]] resources from previous, outdated architectures to prevent silent failures and unexpected costs [14:13-15:00].
	•	Action: Build a small platform for a cold plunge tub to improve air circulation and prevent mildew, discussing material choices like pressure-treated wood [65:00-69:15].
Suggested New Links/Tags
	•	[[Apple Vision Pro]]
	•	[[Tincture]]
Linked Concepts
	•	[[AI Agents]]
	•	[[AI Tools]]
	•	[[Apple Vision Pro]]
	•	[[Cluster Manager]]
	•	[[Cursor]]
	•	[[GCP]]
	•	[[Gemini]]
	•	[[GPU]]
	•	[[Job Controller]]
	•	[[Pub/Sub]]
	•	[[README]]
	•	[[Tesla]]
	•	[[Tincture]]
	•	[[VM controller]]
	•	[[Workflow Automation]]
	•	[[Zombie Instances]]
#Tags
	•	#AI
	•	#Automation
	•	#Deployment
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom41
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1600_ZOOM0041_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[01:05-01:07] SPEAKER_01: Have you done this update?
[01:07-01:07] UNKNOWN: I did,
[01:07-01:14] SPEAKER_01: I haven't looked into what those actually are, but it seems like we're in the same head space as the people driving.
[01:14-01:16] SPEAKER_02: Yeah, I agree. Like you see the video.
[01:16-01:16] UNKNOWN: I did
[01:16-01:27] SPEAKER_01: watch it. I didn't make it to the end, but it seemed like he was basically saying, yep, you're already on it. You're already doing the thing.
[01:28-01:34] SPEAKER_02: So, two of these are interesting. One of them, there's three things, web and mobile cursor agents.
[01:37-01:37] UNKNOWN: Yeah,
[01:37-01:40] SPEAKER_01: that's already, I read that as exactly what cursor is.
[01:42-01:55] SPEAKER_02: Pull request search and index, and I guess specifically pull requests and not. But basically, you can look back into your history in GitHub and search in there.
[01:55-02:06] SPEAKER_01: Yeah, I've been doing that. I don't know if that was like in beta, but like it's able to, you're able to do anything from the command line. So I've told it to do that several times.
[02:06-02:13] SPEAKER_02: Got it. I didn't realize that. And then to do agent's plan ahead for structured tasks. That's interesting. That's the one that came out of me.
[02:14-02:14] UNKNOWN: So,
[02:14-02:24] SPEAKER_02: we're on the same path they are, or they are on the same path we are, which is good. Like we're like independently. Coming up with the bleeding edge
[02:24-02:33] SPEAKER_01: of. Yeah, which means we're at least in the right space to develop something. I agree. Something novel.
[02:40-02:46] SPEAKER_02: Where are you? What are you trying to do? Look at that. I know it's in the set, it's in models.
[02:47-02:47] UNKNOWN: There
[02:47-02:50] SPEAKER_02: you go. Just looking to see.
[02:50-02:51] SPEAKER_01: See what's out there.
[02:51-03:05] SPEAKER_02: Yeah. So, yeah, I guess this six five one is the newest. Yeah, I
[03:05-03:12] SPEAKER_01: don't know. Because it's now looking at it probably not. Probably.
[03:12-03:12] UNKNOWN: Pro
[03:12-03:15] SPEAKER_01: preview. Yeah.
[04:05-04:08] UNKNOWN: Thank you.
[04:08-04:10] SPEAKER_02: We're in no hurry,
[04:12-04:12] UNKNOWN: but
[04:12-05:10] SPEAKER_02: probably quickly is good. I'm happy with that. Um.
[05:52-05:53] UNKNOWN: Okay.
[06:30-06:35] SPEAKER_02: Trying to get it to focus. Right. On. Look at the job controller.
[06:36-06:42] SPEAKER_01: I know you said a bunch of words. Your response from the reader. What are we trying to do?
[06:42-07:14] SPEAKER_02: Break it. Look at it. Look at how you think it should work and break it into. I want to get it into smaller and smaller. So maybe even like, okay, we'll outfit this portion of it with. Troubleshoot or not. Troubleshooting like logging. Yes. Do like go step by step as it's deploying. And then like we got to figure out where it's hanging up. I mean, I guess. Where were we? This is where you were yesterday too.
[07:15-07:15] SPEAKER_01: Yeah.
[07:46-09:31] UNKNOWN: Okay. Okay. Okay. Okay.
[09:31-09:39] SPEAKER_02: Okay. I wanted it to, I wanted to get to this place. Like, okay, now let's go through this.
[09:40-09:43] SPEAKER_01: What are we actually going to do? What do we expect?
[09:44-09:44] SPEAKER_02: Right.
[09:54-09:58] SPEAKER_01: So I did the custom manager. So they should check it.
[09:58-09:59] SPEAKER_02: Meaning?
[09:59-10:04] SPEAKER_01: I get things that there's a cloud function still there, but there's not.
[10:31-10:32] UNKNOWN: I
[10:32-10:32] SPEAKER_01: don't
[10:32-10:32] UNKNOWN: know
[10:32-10:35] SPEAKER_01: if it's worth looking at it
[10:35-10:35] UNKNOWN: yet.
[10:35-11:00] SPEAKER_01: Or actually, like, how do we look at file store? When you go and you search it, it's just takes you to API. Unless I'm just more than seeing. Because that is also one of my theories is that there's not a download model if it's not already there option.
[11:01-11:02] UNKNOWN: Basically.
[11:07-11:18] SPEAKER_01: Okay. It kept taking me to the API. Maybe that's why yesterday cost three, four fucking dollars. Probably not. Is it just literally five? Yeah,
[11:18-11:18] SPEAKER_02: it's
[11:18-11:18] UNKNOWN: just
[11:18-11:23] SPEAKER_01: a drive. Literally a drive. And it gets mounted onto the cluster.
[11:23-11:23] UNKNOWN: It
[11:23-11:25] SPEAKER_01: has nothing really to do with the cluster.
[11:26-11:31] SPEAKER_02: It literally is a hard drive. Yeah. Like mounted somewhere in Iowa.
[11:31-11:32] SPEAKER_01: Yeah. In fact.
[11:34-11:34] SPEAKER_02: Looks good.
[11:35-11:38] SPEAKER_01: Yeah. Was there anything in it? Oh, sorry.
[11:44-11:45] UNKNOWN: Right.
[11:45-12:02] SPEAKER_01: Like, diarization service started and it was trying to go there and all that good stuff. But my theory is that there's no model in there and it doesn't go and get it if it's not there. Got it.
[12:02-12:06] SPEAKER_02: I don't know how to see if there's anything in there.
[12:07-12:08] SPEAKER_00: Right.
[12:20-12:22] SPEAKER_02: Shouldn't have any of those.
[12:22-12:22] UNKNOWN: Or
[12:22-12:23] SPEAKER_02: those.
[12:26-12:27] UNKNOWN: I
[12:27-12:30] SPEAKER_02: don't know how much cost or cost. I don't
[12:30-12:47] SPEAKER_01: think it's very expensive. It's a break. Yeah. $257 was file store. A day? That was yesterday's. Yeah, well
[12:47-12:47] UNKNOWN: it
[12:47-13:11] SPEAKER_01: was going to be that every day. Might be more. Yeah. I mean we could still delete everything in that as well as part of the shutdown, the cluster script. Because what we're trying to avoid is every single pod having to go get the models if we have a long run of things. If we're just running one, it's going to take a while. I
[13:11-13:11] UNKNOWN: think
[13:11-13:15] SPEAKER_01: that it
[13:15-13:20] SPEAKER_02: charges just for being provisioned. Even if it's not full.
[13:21-13:23] SPEAKER_01: That's what, like, even having the API on?
[13:24-13:29] SPEAKER_02: No, by having this green check, or like having it provisioned. Yeah, I think like,
[13:29-13:29] UNKNOWN: basically
[13:29-13:29] SPEAKER_02: delete
[13:29-13:42] SPEAKER_01: everything. Just like we delete the cluster. Makes sense. There's nothing special about that model that we can't just go get it again. The reason to go get it is if you have ten files you're uploading and you don't want to download it ten times.
[13:42-13:42] UNKNOWN: I
[13:42-13:45] SPEAKER_02: agree. I want to get it working first.
[13:46-13:46] UNKNOWN: Yeah,
[13:46-13:51] SPEAKER_01: our next step would be turn it on. So yeah, I think. But now we know.
[13:51-13:51] UNKNOWN: My
[13:51-13:53] SPEAKER_01: bad. No, no. This is
[13:53-13:53] UNKNOWN: good. We're
[13:53-13:53] SPEAKER_01: going to
[13:53-13:56] SPEAKER_02: $250. It's fine.
[13:56-14:02] SPEAKER_01: That's actually encouraging because all the compute we did yesterday cost $1 .12.
[14:02-14:04] SPEAKER_02: Right. There we go.
[14:49-14:51] UNKNOWN: Okay.
[15:06-15:07] SPEAKER_01: Direction.
[16:01-16:09] UNKNOWN: Okay. Really?
[16:24-16:26] SPEAKER_01: This is already dead.
[16:27-16:31] SPEAKER_02: Yeah. I've seen a, I saw that one a couple days ago.
[17:26-17:27] UNKNOWN: Okay.
[17:55-18:01] SPEAKER_01: They're offering to have Gemini assist you with your billing by turning on the Gemini API.
[18:02-18:06] SPEAKER_02: No. Of course they are. It will certainly have an effect on your billing. Yeah, it will.
[18:11-18:24] SPEAKER_01: And this is free. It might be. Maybe. Well, like what's it gonna tell you? I doubt it's anything more than like. Hey. You're using a lot on clusters. this
[18:39-18:40] SPEAKER_03: owner
[18:40-18:59] SPEAKER_02: what that is i'm going to your free request limits that's interesting
[19:01-19:28] SPEAKER_01: so they just change in general or can you switch to I guess it's just top down charge for API hits on that model specifically so okay well
[19:29-19:30] SPEAKER_02: I get
[19:30-19:31] SPEAKER_01: it
[19:35-19:36] UNKNOWN: yeah
[19:36-19:41] SPEAKER_01: all the while every dollar you make is worth less than it was yesterday
[19:43-19:44] UNKNOWN: forever
[19:56-20:07] SPEAKER_02: I do think that Jim and I does better with stuff like this with stuff like structure again this is exactly what I wanted to do I don't know that cloud would have not been able to do this
[20:07-20:13] SPEAKER_01: really different yeah like go
[20:13-20:40] SPEAKER_02: through each one of these steps one after I don't know is going to be able to do it when we go when we go forward check off every one of these right over and over until you find one that is either expected or failure expected classify every step go through the process and look at it don't just randomly look at logs what you expect to see did you see did you see all the way through until you don't and then stop
[20:40-20:41] SPEAKER_01: and
[20:41-20:49] SPEAKER_02: then we'll dive into that this run this
[21:28-21:43] SPEAKER_01: yeah one writing very specific logs is actually like a thing that gets charged maybe because these this is the stuff from last 24 hours and it's
[21:43-21:43] UNKNOWN: basically
[21:43-21:58] SPEAKER_01: calling out the ones that have tags like info error debug yeah maybe so I know that Google generates some those but maybe if you're intentionally generating more using the service this is
[21:58-21:58] UNKNOWN: fine
[21:58-22:09] SPEAKER_01: it's pretty cheap I guess maybe after development you just remove the bulk of those except for the ones that are actually important and then it goes back down to zero basically
[22:09-22:13] SPEAKER_02: right yeah I think we are inflating everything with troubleshooting
[22:17-22:18] UNKNOWN: right
[22:18-22:37] SPEAKER_02: are you sure? shit don't look like you're doing anything or maybe that's what it's saying it's like you can't do anything else no matter which model you have I would ask it again just like are you
[22:37-22:37] SPEAKER_01: going?
[22:55-23:00] SPEAKER_02: you're hallucinating there's nothing no
[23:04-23:07] SPEAKER_01: it probably does need to do that
[23:08-23:10] SPEAKER_02: I thought there was already one there right
[23:12-23:13] UNKNOWN: I
[23:13-23:16] SPEAKER_01: think that was part of the plan like technically
[23:25-23:28] SPEAKER_02: oh well the cluster is not deployed
[23:28-23:44] SPEAKER_01: right yeah so looking at what it said there I need to ensure the container image is available to read me in my previous analysis state that the job controller container image needs to be filled and pushed
[23:44-23:53] SPEAKER_02: yeah well because the cluster is not there like it did fail 1 .1 because it's verifying that the pods running
[23:53-24:00] SPEAKER_01: right but it didn't even try that yet right I think it just got hung up on that last request
[24:03-24:05] SPEAKER_02: but it's no matter what we got to
[24:05-24:05] UNKNOWN: do for
[24:05-24:06] SPEAKER_02: sure yeah we got to
[24:06-24:06] UNKNOWN: run
[24:06-24:06] SPEAKER_02: the full
[24:06-24:07] SPEAKER_01: deploy script
[24:35-24:42] SPEAKER_02: my goal today is to remain engaged with it as much as possible yeah
[24:42-24:51] SPEAKER_01: actually read his responses engage as though it's a human being responding to a question that you asked it and don't just be like yeah yeah yeah
[24:53-24:54] UNKNOWN: exactly
[25:00-25:01] SPEAKER_00: yeah
[25:26-26:51] SPEAKER_02: so I think that one of the things that I took away from that video I watched the whole that I listened to most of that was going to I was sleeping to whatever I was in and out is what he was trying to demonstrate is that Claude code which is this the full see I think is everything like it was it looked like this to me but I may be wrong but it has the ability to do that planning it's planning is built into it you can give it objectives you know in markdown it can look at multiple markdown files or create its own to say hey this markdown file represents a step so by what I understood right in my goal is not to necessarily say we need to use Claude code this makes sense to me is is taking what you were saying and breaking it down into steps I don't know it didn't talk about being able to predict the size the context window and therefore that's the basis of the size of the steps but at a minimum it created an overall plan and for each step it created a markdown file that says that okay and a prompt that the and so rather than thinking of hey do these steps in general that meaning the looking at context of what things do you need to produce so that the system can do the step and so what's the you can predict and write the opening
[26:51-26:52] SPEAKER_03: prompt with
[26:52-26:56] SPEAKER_02: all rather than saying hey fine mine everything you need out of here
[26:56-26:57] SPEAKER_03: right
[26:57-27:26] SPEAKER_02: don't do that say get the planning says hey for this next step you're going to need the location of all you need this markdown file you need this prompt this is the prompt the same what we're going to do this is all the information you need here's all the resources like all the links here's all the like to do this thing okay do that and package all of that together in the same file right beforehand rather than having general readme's specific readme's for each step
[27:26-27:32] SPEAKER_01: that makes sense but that'll work as long as this prediction is 100 % accurate
[27:32-27:41] SPEAKER_02: no no I agree I'm not saying to do that automatically what I my takeaway is that that's what we to that level of detail rather than saying
[27:41-27:49] SPEAKER_01: make a readme for the diarization being loaded but not starting and indicating all this right so not
[27:49-27:59] SPEAKER_02: a general step of like okay this is what we're getting ready to do make a readme have a step like what I should have done right now is make a readme that describes what's going on blah blah blah that
[27:59-27:59] UNKNOWN: is the
[27:59-28:16] SPEAKER_01: current session transcript right like that is functionally what we're doing there like at the very top of it it says here's the current status from the previous step and here's what I'm going to try to do in this step and defines what success looks like in that step
[28:16-28:38] SPEAKER_02: I agree I guess maybe the only thing that I would add or change for exactly what we're doing right now is in the next step it should or in the readme or wherever it's getting to load for the next thing have a very detailed next step session that section that says hey here's all the errors and everything that we got here's exactly everything you need to know it
[28:38-28:45] SPEAKER_01: has that in the form of a reference to the transcripts and summaries that's it we have those levels built we
[28:45-28:46] SPEAKER_02: just need to say go look at it
[28:46-28:59] SPEAKER_01: and the weaknesses that we've identified with our system are the same weaknesses like in this is my feel of it at least is like yeah that's all good but ultimately we know the model can't do
[28:59-29:11] SPEAKER_02: it it's true like you can't do much in that model it needs human guidance and that's ultimately I think maybe the lesson we're learning is not is not AGI
[29:11-29:54] SPEAKER_01: right and it's not gonna be right and so the entire thing like I think it's a puzzle that can be put together and optimized but that is it I think we are current with that guy's current probably like he's literally using markdown files right and I looked in the comments a little bit and one of the there's a big long one with a bunch of other folks and it was like yeah this is what I do it goes and grabs this one markdown basically explained what we're doing in different words and also seemed like somebody that may have like just gotten into it and is a YouTube comment but like I think we're there I think we are like literally on that bleeding edge
[29:54-29:55] SPEAKER_02: I agree I agree with you
[29:55-30:04] SPEAKER_01: and I think we should still stay engaged with all that stuff to find out like if somebody figures some shit out but isn't the whole picture we need to know it incorporate it and be using it but
[30:04-30:10] SPEAKER_02: I guess you're right nothing specifically jumped out of it I mean he's using markdown files yeah we
[30:10-30:12] SPEAKER_01: got a big old stack of markdown files I
[30:12-30:12] UNKNOWN: guess
[30:12-30:15] SPEAKER_01: we do we have a crap ton of them
[30:15-30:30] SPEAKER_02: yeah I um but it's I think our takeaway from the last day or so is the AI or the agent is good at coding it is not good at designing
[30:30-30:30] SPEAKER_01: no and I
[30:30-30:33] SPEAKER_02: think or problem solving in a big scheme of things
[30:33-31:37] SPEAKER_01: so this is new -ish thought previously we talked or I had been pretty over the like dramatic about taking AI out of the process and what I was really talking about was like you know going and checking your emails and shit like that you don't need it to go get them and you can get a tool and you can analyze them right but like we need to take AI out of this process as much as possible which we're doing with the markdowns but almost like there needs to be as many hard -coded actual stupid Python rules that are very machine readable and do most of the stuff like do this thing trigger contact like count tokens right and know like the total context of whatever model we're using count tokens and start giving me flags like hey and track how many seconds it takes me to respond per token right and do the little and now that that type of thing yeah and it's going to be all of that it's going to be forcing the user to be AI
[31:37-31:40] SPEAKER_02: efficient yep exactly I agree with you
[31:40-31:53] SPEAKER_01: and forcing the AI like being so like elegant with the way the AI manages its context and which means you define exactly how it manages its content right exactly I
[31:53-31:53] SPEAKER_02: think
[31:53-32:00] SPEAKER_01: yeah mine needs to be regardless of what said context is it needs to work in everything like
[32:00-32:17] SPEAKER_02: my response or a summarization of what you're saying and don't correct me if I'm wrong I don't know if this is right but it is make the AI do what it's supposed to do be very specific about it and you watch it yeah like are you doing the thing here's what exactly what
[32:17-32:17] UNKNOWN: I'm doing
[32:17-32:35] SPEAKER_02: I want you to do don't think for me don't try to or whatever not to innovate or what like just do the thing that I said to do right and report back yeah and we are responsible for thinking guiding in the crane
[32:35-32:40] SPEAKER_01: doesn't make the blueprints right scratch just pick up the things
[32:40-32:45] SPEAKER_02: and put it over there exactly like but hey what about if I put well it doesn't
[32:45-32:52] SPEAKER_01: even I think more than that it won't try to do stuff you don't want it to do if you don't allow it to do
[32:52-32:54] SPEAKER_02: don't write and you have to be looking at
[32:54-33:05] SPEAKER_01: it so you have to force the user to be a good user right and like force the model to not accept subpar usage right
[33:08-33:11] SPEAKER_02: okay so looks like we're up it's almost like a
[33:11-33:35] SPEAKER_01: troubleshoot it's starting to kind of form in my mind a little bit like I understand Steve Jobs instinct to not let people modify his shit right it's like no it works exactly like it's supposed to stop here it is right perfect right or it's as close to perfect as you're gonna get it's you need to make a computer that your grandma could use right we've got a lot about this and
[33:35-33:38] SPEAKER_02: it's doing the thing that I want like I don't
[33:38-33:38] UNKNOWN: want to
[33:38-33:40] SPEAKER_02: innovate improvise it
[33:40-33:50] SPEAKER_01: can't do that you want to do would fuck up everything else right and we thought about it we get it here's how you do that you can do a tool or whatever at with it
[33:57-34:26] SPEAKER_02: oh I do agree with that that deploy cluster does not deploy the job controller we do we want it to deploy the job controller it probably should do we need to rebuild it it already exists right the job control that leads
[34:26-34:35] SPEAKER_01: I deleted the trigger function and the other one that was the cluster manager
[34:35-34:35] UNKNOWN: and we have a lot of things that I want to do
[34:36-34:49] SPEAKER_01: artifact registry two things one is job controller images still there
[34:49-35:36] SPEAKER_02: that the deploy cluster script does not deploy
[35:36-35:36] UNKNOWN: it I
[35:36-35:38] SPEAKER_02: don't think it should
[35:40-35:46] SPEAKER_01: We want to be able to deploy it without having to kill and turn back on the cluster.
[36:18-36:22] SPEAKER_02: It should be that one.
[36:27-37:15] SPEAKER_01: It's there and just needs to be applied once the cluster is up. One thing the guy said that was interesting to me is he specifically said it's not bad at writing code. It's good at writing code, but it's bad at planning and doing all these things. Five coding is the bad thing. It's not having AI write all your code. You just then need to read it and know what it's going to
[37:15-37:19] SPEAKER_02: do. 100%. That is the takeaway.
[37:58-38:07] SPEAKER_01: Also, we're not necessarily trying to build the optimal coding agents. This is
[38:07-38:07] UNKNOWN: a
[38:07-38:35] SPEAKER_01: general purpose. A lot of the projects we end up coming up with will include some sort of programming and stuff like that. In theory, this same model will help you do the shed. I agree. That's exactly anything that anyone can produce. A instruction book of how to do something or a movie or anything. You're right. But as a part of a human AI team.
[38:35-38:38] SPEAKER_02: Right. Because that's going to end up being the best.
[39:19-39:21] SPEAKER_01: The cluster is
[39:21-39:21] UNKNOWN: not
[39:21-39:22] SPEAKER_01: going to be up yet.
[39:23-39:33] SPEAKER_02: The cluster is up. It just sent this pod or just sent the manifest file. It's like, oh, it's still pending.
[40:03-40:05] SPEAKER_01: The cluster is all the way up in provision.
[40:05-40:07] SPEAKER_02: Yeah,
[40:07-40:07] UNKNOWN: it
[40:07-41:08] SPEAKER_02: is. So you see what it's saying? Saying the job controller needs to be annotated to run on general purpose and not just GPU only.
[41:08-41:09] SPEAKER_01: I
[41:09-41:09] UNKNOWN: thought
[41:09-41:11] SPEAKER_01: the job controller was.
[41:11-41:21] SPEAKER_02: It's wanting to add this compute class general purpose node selector and redeploy. I'm I mean,
[41:21-41:38] SPEAKER_01: yeah, I'm not against that. My understanding of autopilot based on going back and forth with it was basically don't have if it needs if the job says it needs a GPU when it shows up, it's going to get a GPU. Right. Maybe not.
[42:19-42:21] UNKNOWN: Okay.
[42:48-42:54] SPEAKER_02: Yeah. And I assume it's going to come out of that at some point, maybe not.
[42:54-43:02] SPEAKER_01: Actually provision. We were getting pods with GPUs yesterday without that whatever.
[43:03-43:15] SPEAKER_02: Oh, I agree. But this is just a job controller and it shouldn't need a GPU. It's just queue and everything. And I don't know why we're this. We've never gotten hung up at this stuff.
[43:16-43:33] UNKNOWN: Right. I
[43:33-43:57] SPEAKER_02: think it keeps crashing. I'm getting ready to control see this thing. I don't think that's true.
[43:57-44:41] SPEAKER_01: Yeah. Maybe that fix work to get past that stuff. But Why would you ignore that? That's crazy.
[44:41-44:59] SPEAKER_02: Yeah, I agree with you. Does not exist.
[44:59-45:20] SPEAKER_01: Oh, yeah. I deleted the trigger transcription pipeline because it claimed after looking at everything that it was not part of the process. So That one's definitely on me. It's fine. It
[45:20-45:22] SPEAKER_02: finds it. Yeah,
[45:22-45:24] SPEAKER_01: I mean, it'll be in the commits.
[45:56-45:58] SPEAKER_02: I don't see it, bro.
[45:59-46:02] SPEAKER_01: What is it trying to do there was that file?
[46:15-46:19] SPEAKER_02: Oh, I missed this. Sorry.
[46:19-46:23] SPEAKER_00: I'm out of
[46:23-46:23] UNKNOWN: me.
[46:23-46:25] SPEAKER_00: Oh, of
[46:25-46:42] SPEAKER_01: course. Of course.
[46:48-46:49] UNKNOWN: Give
[46:49-46:52] SPEAKER_02: you another picture.
[46:55-47:23] SPEAKER_01: It's just a reminder that patience is a virtue. Straight from the universe. Feels like Sunday. It does. It does feel like
[47:23-48:57] SPEAKER_02: Sunday, but it's freaking Friday. Is there no don't use that. Actually put there is a file in there. Okay. Oh, well, we can't upload one. Well, this is fine because just send a message. I don't care. Yeah. Like if the file is actually in there. Well, I do care because then the rest of the pipeline isn't going to work. It might be better to actually upload.
[48:58-48:59] SPEAKER_01: I feel like I
[48:59-48:59] UNKNOWN: see
[48:59-49:20] SPEAKER_01: you. Oh,
[49:46-55:29] UNKNOWN: okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[55:45-55:46] SPEAKER_02: Okay.
[55:49-56:50] SPEAKER_01: Okay. Okay. Super fast. Okay. Okay. Okay.
[57:17-57:17] UNKNOWN: Okay.
[57:17-58:01] SPEAKER_01: I mean, if it started working, it definitely failed. Right. Because there's no actual file. Okay.
[58:01-58:01] UNKNOWN: Yeah. If
[58:01-58:02] SPEAKER_01: it tried to start the job,
[58:02-58:02] UNKNOWN: there
[58:02-58:08] SPEAKER_01: was nothing to be done and then it stopped. But the job's still there.
[58:09-58:26] SPEAKER_02: I think maybe this screen is slow. Maybe. Okay. It just takes a while to catch up to what's actually happening. Yeah. We're going. It says it's still running.
[58:28-58:29] SPEAKER_01: The
[58:29-58:30] SPEAKER_02: Pub Sub started another
[58:30-58:31] SPEAKER_01: one.
[58:32-58:39] SPEAKER_02: I don't think there's anything. Oh, well, maybe Pub Sub does still have something in the queue because we added a
[58:39-58:39] UNKNOWN: message.
[58:41-58:47] SPEAKER_01: Because if it failed silently, then Pub Sub never got any response from it. And just put it back in there.
[59:01-59:05] SPEAKER_02: Oh, never mind. It's done. Oh, yeah.
[59:05-59:05] UNKNOWN: So
[59:05-59:10] SPEAKER_02: it looks like it is doing what you're describing.
[59:10-59:10] UNKNOWN: I
[59:10-59:14] SPEAKER_01: guess restart. Yeah, starting diarization job again.
[59:14-59:14] UNKNOWN: End
[59:14-59:36] SPEAKER_01: of that. Huh. You see that?
[59:36-59:43] SPEAKER_02: Yeah, I did that before. And like, well, this running this is that's new. And so I'm going to go in and go back down
[59:43-60:01] SPEAKER_01: in there. I think there was a sin button. Like, click in there. Click back in there. Like at the very right. There's a little arrow. Yes. That's cool. That is cool. Because I have learned to do that before. So is that what they meant by the to do thing?
[60:01-60:08] SPEAKER_02: Maybe. I guess that's it. My grammar is not right there, but I. Oh, yeah. I'm
[60:08-60:08] UNKNOWN: sorry.
[60:08-60:09] SPEAKER_01: Right in a different sentence.
[60:10-60:10] UNKNOWN: Yeah,
[60:14-60:32] SPEAKER_01: if I got like a rundown of all the actual like what I type, it'd be a mess. Yeah. But it gets it. It's good. It's definitely good at that. Probably exactly.
[60:35-60:41] SPEAKER_02: It's because it can't finish it. Because the file doesn't actually exist.
[60:49-61:05] SPEAKER_01: And that we do want that functionality because it doesn't have a GPU for a while. Right. So keep sending it. But then, I don't know, you don't necessarily want to kill it up front, which we played around with before, because then what if it fails again? Right.
[61:24-61:28] SPEAKER_02: That's not true.
[61:56-62:15] SPEAKER_01: Maybe not. Yeah. If its first step is to go get the model and it's not getting the model and it's just looping over and over trying to get it that in theory could happen and fail before it actually needed the file. Maybe.
[62:17-62:22] SPEAKER_02: Yeah, leave it. I don't want to see that idea because that. If we're
[62:22-62:25] SPEAKER_01: wrong and it just accepts that.
[62:39-62:46] SPEAKER_02: But why are we doing that? Commenting. So.
[62:46-62:46] UNKNOWN: Clean
[62:46-62:52] SPEAKER_01: up. Don't let it get rid of itself. And so we can try to see what's happening inside of it.
[62:53-62:53] UNKNOWN: Yeah.
[62:57-63:04] SPEAKER_01: That's called somewhere in between by being and truly understanding of like, yeah, I'm pretty sure that's what it's doing. Let's keep it pushing.
[63:04-63:05] SPEAKER_03: Yeah.
[63:16-63:23] SPEAKER_01: It's probably not. Bad idea to start looking for it in session. I agree. Please.
[64:10-64:12] SPEAKER_00: Interesting.
[64:12-64:12] UNKNOWN: If
[64:12-64:27] SPEAKER_01: you. So like there was a filter on there that was basically like don't show the system ones. And so there's a lot of system ones with fucking flags next to
[64:27-64:38] SPEAKER_02: them. Oh, is system.
[64:41-64:43] UNKNOWN: Yeah.
[64:46-65:17] SPEAKER_01: Maybe those aren't necessary. We're not using them, but. My Nvidia GPU device plug -in small COS is on. But Nvidia GPU device plug -in large COS is not. I have no idea what any of that means.
[65:17-65:17] UNKNOWN: I
[65:17-65:36] SPEAKER_01: mean, COS is container optimized, whatever. And so the only reason that would jump out at me is this L4 considered small or large. It was considered large against still guessing that we need that one to be on and not the small one. You're right. It's
[65:36-65:47] SPEAKER_02: definitely making like it is now not deleting. Right. And it's just stacking up these jobs of hey, they're failing with exit code.
[65:47-65:48] SPEAKER_01: Yeah.
[66:09-66:28] UNKNOWN: Okay. Okay.
[66:44-66:47] SPEAKER_02: No, it just hadn't failed. Okay.
[67:14-67:29] UNKNOWN: Okay. Okay.
[67:32-68:04] SPEAKER_01: It's right. That is true. And maybe that is like, oh, we just need to trigger it right. And it worked. Someone uploading sample flat. I don't know how that would help us. I don't know what I thought you see.
[68:25-68:26] UNKNOWN: Okay.
[68:37-68:39] SPEAKER_02: I do want you to delete those.
[68:39-68:41] SPEAKER_00: Yeah.
[68:45-69:10] SPEAKER_01: But I'm so going to keep making them so. That's interesting. That auto fix, my guess isn't the other option is like require confirmation.
[69:10-69:12] SPEAKER_02: Oh yeah. Right here.
[69:12-69:27] SPEAKER_01: No, it was up where it did some code. So right there on the bottom. That might be useful to turn off. You shouldn't allow it to do anything that you don't explicitly go into the page. Yeah, I agree. I
[69:27-69:27] UNKNOWN: don't know what to do with that. At
[69:27-69:37] SPEAKER_01: the very least. Click option way through it. Fix manually is what I want to do.
[69:38-69:41] UNKNOWN: Right. I
[69:41-69:47] SPEAKER_01: guess it technically does require confirmation, but also if you don't, it just says, like, I guess you were good with that.
[69:50-69:51] SPEAKER_02: Not that.
[69:51-69:53] SPEAKER_01: Okay.
[70:10-74:51] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[75:10-75:11] SPEAKER_03: Okay.
[75:38-75:39] UNKNOWN: Okay.
[75:39-75:40] SPEAKER_01: Okay.
[75:50-75:54] SPEAKER_02: Okay. Okay. Okay.
[76:12-76:13] SPEAKER_01: Okay.
[76:31-77:15] UNKNOWN: Okay. Okay. What is happening?
[77:23-77:29] SPEAKER_02: There. Like, yeah, it should be.
[77:29-77:32] SPEAKER_01: Clean. Okay.
[77:32-77:32] UNKNOWN: Because
[77:32-77:32] SPEAKER_01: it said.
[77:33-77:47] SPEAKER_02: It is not accurate to what it's doing. It said they have scaled down the job. Controller to zero. It should have gone away in a pooled all of the subscripting auto acknowledge pulled everything out of the queue. Okay.
[77:47-77:47] UNKNOWN: And
[77:47-78:05] SPEAKER_02: now I'm going to take it back up to one, but clearly it is already up. Now we can just publish the message.
[78:08-78:11] SPEAKER_01: That's okay. We've seen like that is what it looks like when it's spinning up,
[78:11-78:31] SPEAKER_02: right? So I guess it did do that. Yeah. to get down to this is significantly delayed now they should come back up eventually have just just a job yes the only work do it
[78:35-78:43] SPEAKER_01: room audio maybe we have to I
[78:43-78:51] SPEAKER_02: mean I don't think that we need to actually do the upload we just need to publish a message that refers to that file that's already there
[78:57-79:06] SPEAKER_01: yeah sending the message works just doesn't work when there's not a fucking file in there that you tried to tell it for like 10 minutes and then it discovered the problem
[79:06-79:27] SPEAKER_02: turns out it can't process this job because there's not a file I want to see this job controller there's clearly still a message in the queue
[79:27-79:31] SPEAKER_01: yeah it doesn't it's that's the thing that is just weird and
[79:31-79:31] UNKNOWN: I
[79:31-79:39] SPEAKER_01: don't know why it can't fucking see them it says it checks these subscriptions but like are you checking all of them?
[79:43-79:45] SPEAKER_02: can I remove them?
[79:52-79:57] SPEAKER_01: can I like see them? see their activity
[80:27-80:28] SPEAKER_02: you can
[80:28-80:48] SPEAKER_01: purge messages even that right there charts may take a few minutes to update it's not necessarily saying that's console wide
[80:48-80:55] SPEAKER_02: right but it is yeah freaking hurts like there's a bunch of freaking queues in here by the
[80:55-81:05] SPEAKER_01: way yeah that's what I was just looking through like cluster manager had a request within the last hour
[81:05-82:07] SPEAKER_02: yeah well I think that's the right one that's the primary one that is being used okay cluster manager request and the subscription to cluster manager sub is on cluster manager request right that is the one that is that's when I just keep clear so it is possible to clear the queue I'm sure there's a way to do it programmatically too it doesn't clearly that's just not working for sure but it actually looks like it's clear right now
[82:11-82:11] UNKNOWN: school
[82:16-82:22] SPEAKER_02: on acknowledge messages her messages
[82:25-82:37] SPEAKER_01: yet to do it again I'm still showing this one right well I might be the several minutes that's from 7 to you on
[82:40-82:41] UNKNOWN: yes
[82:58-82:58] SPEAKER_02: just
[82:58-82:58] UNKNOWN: I'm
[82:58-83:03] SPEAKER_02: gonna assume that it's
[83:03-83:12] SPEAKER_01: right. Still not a second job, so that's good.
[83:55-84:58] UNKNOWN: I'm gonna assume that it's right. I'm gonna assume that it's right. I'm gonna assume that it's right.
[85:23-85:24] SPEAKER_02: Coffee
[85:24-85:24] SPEAKER_01: time.
[85:24-86:05] SPEAKER_02: I think so. That was not very satisfying. Mostly frustrating.
[86:24-86:26] SPEAKER_01: And yeah,
[86:37-86:50] UNKNOWN: I don't know. I
[86:50-86:58] SPEAKER_01: just want to do a click ops, compute VM with a GPU. Right, just make it work.
[86:58-86:58] UNKNOWN: Run
[86:58-87:05] SPEAKER_01: each one and see that it works and get a final output and then document that process every step of the way.
[87:07-87:11] SPEAKER_02: The file exists, send a command that says,
[87:12-87:12] UNKNOWN: hey,
[87:12-87:24] SPEAKER_02: consume this and start a diarization job. We couldn't even get to that, but we should be at that place now. The very first step is send a pubsub message pointing to that file.
[87:25-87:27] SPEAKER_01: Yeah, that's where I was at yesterday.
[87:28-87:31] SPEAKER_02: Exactly, we've been at this place for three days. I
[87:31-87:37] SPEAKER_01: also did delete the trigger function, but we haven't gotten to try to test that even today.
[88:10-88:11] UNKNOWN: Okay.
[88:34-88:35] SPEAKER_02: Did you
[88:35-88:38] SPEAKER_01: push? Yeah, yeah, it's part of the... That's the very end,
[88:39-88:39] UNKNOWN: and
[88:39-88:40] SPEAKER_01: then get push.
[88:42-88:47] SPEAKER_02: I see it right there. Okay.
[89:24-92:37] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[92:41-92:44] SPEAKER_02: It looks like it's about to do what I want it to do.
[92:44-92:45] SPEAKER_03: Go
[92:45-93:15] SPEAKER_02: look at the file and send a message pointing to that file. It should be cluster manager request. Yes, it should look like that. I guess I should have looked at this first to make sure there was nothing still in there.
[93:15-93:16] UNKNOWN: Oh, no.
[93:18-93:18] SPEAKER_01: That's
[93:18-93:31] SPEAKER_02: the one that... I agree. I don't want to open in turn.
[93:36-93:37] UNKNOWN: Okay.
[93:47-93:48] SPEAKER_02: No.
[93:50-93:51] SPEAKER_00: What the fuck?
[94:03-94:05] SPEAKER_02: No.
[94:05-94:07] UNKNOWN: Okay.
[94:47-94:50] SPEAKER_02: I don't want to write a thank you.
[94:51-94:53] SPEAKER_00: That was exhausting.
[94:57-94:58] UNKNOWN: It
[94:58-95:07] SPEAKER_02: should be green, not green yet. My guess is it will schedule it. I'm going to chill out, wait for it to freaking run.
[95:13-95:23] SPEAKER_01: I've been trying to find a better locking mechanism for those pocket doors because those do not work. Basically,
[95:23-95:23] UNKNOWN: it
[95:23-95:28] SPEAKER_01: kind of goes slightest little bit of resistance and then it opens. I didn't know that.
[95:30-95:30] UNKNOWN: The
[95:30-96:08] SPEAKER_01: ones at one of the houses in Carlton Landing were actually like cool. On the other side, obviously, but it was like right here. You pushed it like it came out and there was a plate right here that obviously left that. The unknown there is like a lock on the exit. Or someone locks themselves in and you need to get them out. There are others, but basically that one. It's probably not assisted by the fact that you can see how not even the
[96:08-96:08] UNKNOWN: door
[96:08-96:09] SPEAKER_01: sits on there.
[96:10-96:12] SPEAKER_02: My guess is they're really doing right. We've
[96:12-96:12] UNKNOWN: got
[96:12-96:15] SPEAKER_02: to literally take apart the wall and redo it all.
[96:15-96:31] SPEAKER_01: Yeah, but I think they make something magnetic and I don't know exactly how they work because I assume there's a pretty easy push button mechanism to disconnect them. I've been looking around a little bit. It was not a big deal, but now there's little kids in that room sometimes.
[96:36-96:36] UNKNOWN: This
[96:36-96:41] SPEAKER_02: is what we wanted. Question is, what's it doing?
[96:56-97:00] SPEAKER_01: It's using 0 .08 % of the CPU.
[97:00-97:21] SPEAKER_02: Not a lot. Option enter will make it override. Nice. So when you queued it up, if you type something here,
[97:21-97:21] UNKNOWN: it
[97:21-97:25] SPEAKER_02: puts that symbol right there. You just hit enter and it queues it.
[97:25-97:25] UNKNOWN: But
[97:25-97:27] SPEAKER_02: if you hit option enter,
[97:27-97:27] UNKNOWN: it
[97:27-97:33] SPEAKER_02: will override. That's new.
[97:39-97:50] SPEAKER_01: I wonder how far that to do can go. Talk about it making its plan. What are the next five prompts you're going to
[97:50-97:50] UNKNOWN: give?
[97:50-97:56] SPEAKER_01: Exactly. The value
[97:56-98:01] SPEAKER_02: of the queuing is like,
[98:01-98:01] UNKNOWN: I
[98:01-98:07] SPEAKER_02: don't know that it has a lot of value because it depends on what you say. I
[98:07-98:22] SPEAKER_01: guess in theory, I've told you whenever I read its responses, I will respond in a full length so you could send all of those and have it address it one at a time. I
[98:22-98:24] SPEAKER_02: don't think you can send all of them. You can only send one at a time.
[98:25-98:34] SPEAKER_01: You could queue them all and literally have them focus on each one. One at a time.
[98:37-98:39] SPEAKER_02: It's not killing it.
[98:41-98:41] SPEAKER_00: It
[98:41-98:45] SPEAKER_02: doesn't mean it's working correctly.
[98:45-98:49] SPEAKER_01: Right, but it is good. This is where we were.
[98:49-98:50] SPEAKER_02: Right.
[98:58-99:07] SPEAKER_01: Why are you doing this? That should be a drop in.
[99:07-99:09] SPEAKER_02: I agree.
[99:45-99:47] SPEAKER_01: It's using memory.
[99:49-99:58] SPEAKER_02: CPU is at zero. I don't think that's right though. It did that the whole time and actually created the font.
[99:58-100:02] SPEAKER_01: Right. I don't know what it means but there's actually something
[100:02-100:02] UNKNOWN: wrong
[100:02-100:03] SPEAKER_01: with
[100:03-100:03] UNKNOWN: it.
[100:05-100:49] SPEAKER_01: We've got our limit established on the GPU over here. Just 22 .5 gigabits. So, this is where I was yesterday.
[100:51-100:51] UNKNOWN: Where
[100:51-100:52] SPEAKER_02: did you see that?
[100:52-100:55] SPEAKER_01: It was just updating the screen but it wasn't.
[100:56-101:02] SPEAKER_02: Yeah, I think diarization is happening. Chunk 1 is processing. I don't know why it
[101:02-101:02] UNKNOWN: says
[101:02-101:07] SPEAKER_02: CPU is zero. Maybe the CPU is actually at zero because it's using the GPU.
[101:10-101:10] UNKNOWN: I
[101:10-101:14] SPEAKER_02: think it is actually happening and it just is that slow even with the GPU.
[101:17-101:25] SPEAKER_01: It can't be using the GPU. Or at least the claims of Pi Note are that it is optimized for GPU
[101:25-101:26] SPEAKER_02: usage.
[101:34-101:36] SPEAKER_01: Chunk 1 is like two minutes.
[101:41-101:41] UNKNOWN: I
[101:41-101:50] SPEAKER_02: don't know why Gemini or today it is looking at these logs continuously. What is your
[101:50-101:50] UNKNOWN: take
[101:50-101:54] SPEAKER_02: away from looking at the
[102:18-102:19] UNKNOWN: ...
[102:31-102:37] SPEAKER_01: It certainly is not within the expected processing time.
[102:49-102:50] UNKNOWN: Okay.
[103:32-103:34] SPEAKER_02: There we go.
[103:38-103:42] SPEAKER_01: Yeah, I feel like when we tell it to look at logs, just looking at
[103:42-103:42] UNKNOWN: it.
[103:42-103:45] SPEAKER_02: System logs but not actually going into the pod.
[103:45-103:49] SPEAKER_01: And just taking a very high level look at them.
[103:53-104:00] SPEAKER_02: This is what we wanted to do. Teach yourself which steps you need to go through and do them.
[104:03-104:14] SPEAKER_01: Ultimately, that's just a markdown file. In practice, I don't know that it is a markdown, but that's what that is doing.
[104:15-104:15] UNKNOWN: And
[104:15-104:15] SPEAKER_01: it
[104:15-104:15] UNKNOWN: is
[104:15-104:18] SPEAKER_01: still the same model. It has not gotten smarter since the last time you
[104:18-104:18] UNKNOWN: used it.
[104:18-104:37] SPEAKER_02: It's not. It's all the controlling around. I agree. We should do that.
[104:39-104:39] SPEAKER_01: But...
[104:47-105:23] SPEAKER_02: I'm going to clear the queue first before you do that because you haven't been able to get that right. What it is doing is adding this layer. The NVIDIA CUDA layer wasn't in there. So it doesn't think it's using... It's going through and saying that looking at the diarization service and saying that it doesn't have this driver. That it needs to use a GPU.
[105:24-105:24] UNKNOWN: I swear
[105:24-105:33] SPEAKER_01: I saw that like three days ago. I'm sure you saw this because we're looking at the same logs. Not you.
[105:34-106:01] SPEAKER_02: I'm also going to clear this subscription because that is going to stay in there and keep pushing it. Even if you delete that dumb job, it will create a new one. Until this freaking thing is gone. Until you clear that freaking job out of there.
[106:02-106:02] UNKNOWN: This
[106:02-106:07] SPEAKER_02: message out there is going to keep sending the job over and over. That's
[106:07-106:16] SPEAKER_01: why it's amazing when it's working. Give that a few minutes.
[106:20-106:21] SPEAKER_00: Oh my
[106:21-106:22] UNKNOWN: god.
[106:31-106:52] SPEAKER_01: I think either we're going to, through the process of just this bouncing our heads off the walls with AI, come up with some technique or whatever that we can sell. Or we're just going to get so good at working with it that we're a producer of whatever we end up making after. It
[106:52-106:56] SPEAKER_02: will be our superpower because we'll be on the bleeding edge of using AI.
[106:56-107:03] SPEAKER_01: Even if we don't build some tool that everyone uses, we use one and we're just 10xed.
[107:03-107:12] SPEAKER_02: We're power users of AI. Which is 10x regular people and that alone is enough.
[107:14-107:15] SPEAKER_01: Not that we're not going to build it.
[107:19-107:19] UNKNOWN: I
[107:19-107:22] SPEAKER_01: don't think there's really a place where
[107:22-107:22] UNKNOWN: you know
[107:22-107:27] SPEAKER_01: value comes out of this. I think that's just the fucking thing being out of
[107:27-107:27] UNKNOWN: the way.
[107:27-107:28] SPEAKER_02: Oh
[107:28-107:28] UNKNOWN: I
[107:28-107:46] SPEAKER_02: agree. I'm just sending it again. Just to be sure. It's significantly behind. Like minutes. Even this one, you can't use this to say...
[107:46-107:48] SPEAKER_01: It's either working or it's not.
[107:48-107:52] UNKNOWN: Exactly. I
[107:52-108:04] SPEAKER_01: wonder if you can force it. Click into it and then come back out. I have seen that right now. The cluster be spinning and then I click in there and it's already green.
[108:07-108:13] SPEAKER_02: There's no even refresh on this. That's why I refreshed the screen and it still came back with one.
[108:19-108:20] UNKNOWN: But
[108:20-108:21] SPEAKER_02: my guess
[108:21-108:25] SPEAKER_01: is...
[108:25-108:26] SPEAKER_02: It is...
[108:26-108:26] UNKNOWN: And
[108:26-108:29] SPEAKER_02: we deleted the message. Or the job
[108:29-108:30] SPEAKER_01: rep.
[108:35-108:42] SPEAKER_02: This is not going to be fast. Well, especially that. It was fast. That was fast.
[108:48-108:54] SPEAKER_01: Which is why you need to build it from the root. No one's going to go try and change it.
[108:56-108:59] SPEAKER_02: Do we have that over here?
[109:00-109:01] SPEAKER_00: Hold
[109:01-109:04] UNKNOWN: on. I
[109:04-109:06] SPEAKER_02: would put that in here.
[109:08-109:37] SPEAKER_01: Oh no. So this is a different image that doesn't need to be built from the root. So it does violate that we now have a rule that says build from the root that is project one. So it's going to do it and change them. We don't want to
[109:37-109:37] UNKNOWN: do
[109:37-109:42] SPEAKER_01: it like this. Just tell it, hey,
[109:42-109:42] UNKNOWN: this
[109:42-109:45] SPEAKER_01: time it's okay to run it from
[109:45-109:45] UNKNOWN: the root. Not
[109:45-109:55] SPEAKER_01: from the root. I appreciate you sticking to your fucking rules for once. I
[109:55-109:55] UNKNOWN: don't know
[109:55-109:58] SPEAKER_01: why you're doing them. Don't do that whenever I want you to.
[110:00-110:36] SPEAKER_02: Only when it's most annoying. Yeah, there's a 1 .3 gig. And I think that's going to carry us because Allison's coming this morning. Because this is... I'm going to go get dressed.
[110:37-110:46] SPEAKER_01: At least 10 minutes of my day. We're counting to 1300. And we're at 33.
[110:47-110:48] SPEAKER_02: And all those other
[110:48-110:48] SPEAKER_01: ones
[110:48-110:50] SPEAKER_02: are going because it's
[110:50-110:53] SPEAKER_01: new. It'll get faster and faster as each one finishes.
[110:57-111:09] SPEAKER_02: I have some excitement now because this is new and it makes sense that hopefully that diorization is just going to fly next time.
[111:09-111:19] SPEAKER_01: Yeah, we've done a few levels of giving it GPUs, but there was another fucking level of needing to give it a GPU apparently. Yeah, hopefully it freaking flies.
[111:19-111:19] UNKNOWN: I
[111:19-111:19] SPEAKER_01: mean,
[111:19-111:19] UNKNOWN: it
[111:19-111:39] SPEAKER_01: should be theoretically, again, we've done this a few times, but it was 7 minutes. It said it was taking 1 .8 times. So for easy math, call it 13 minutes. If it's 10 times faster than that, 13 minutes is 780 seconds.
[111:39-111:39] UNKNOWN: So
[111:39-111:52] SPEAKER_01: 78 seconds. And if it's 50 times faster than that, it's 78 divided by 5, which is 15 in change. So 15 seconds to put diorization out.
[111:52-111:52] UNKNOWN: And
[111:52-111:56] SPEAKER_01: then theoretically pretty close to that to put transcription out. That's
[111:56-112:02] SPEAKER_02: what I would expect if I'm paying for an expensive SGPU. It should do that for sure.
[112:02-112:05] SPEAKER_01: And I think it probably will.
[112:43-116:24] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.
[116:49-116:50] SPEAKER_00: Okay.
[117:01-117:58] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.

==================================================
Generated on: 2025-07-30 16:17:34
Total words: 6886
Total speakers: 5
==================================================




Summary:


creation_date: 2025-07-30 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1600_ZOOM0041_transcript.txt participants: [SPEAKER_01, SPEAKER_02]
Executive Summary
This transcript captures a technical working session focused on debugging a malfunctioning [[Job Controller]] within a [[GCP]] environment. The participants systematically investigate potential failure points, including issues with [[Firestore]] access, high operational costs, and problems with the [[GKE Autopilot]] cluster configuration [11:07-13:11]. A significant portion of the conversation revolves around the philosophy of human-[[AI Agents|AI]] collaboration, concluding that AI is most effective as a tool for executing specific, well-defined tasks rather than for high-level design or problem-solving [30:15-31:37]. The team's troubleshooting efforts eventually lead them to identify and resolve a critical issue with a missing NVIDIA CUDA driver in their [[Diarization Service]], which they believe will significantly improve performance [104:47-105:23].

Key Topics Discussed
	•	Troubleshooting the [[Job Controller]]
	•	The primary focus is to identify why the [[Job Controller]] is hanging during deployment [06:30-07:14].
	•	They investigate a theory that the system is not correctly downloading a required model because it's missing from the [[Firestore]] instance, which acts as a mounted drive for the cluster [10:35-12:02].
	•	A significant cost issue is discovered with [[Firestore]], which is costing over $250 a day just to be provisioned, leading to a decision to include its deletion in the shutdown script [12:30-13:42].
	•	They encounter a deployment issue where the [[Job Controller]] pod fails to schedule on a [[GPU]] node, which they resolve by annotating the deployment to run on a general-purpose node [40:07-41:21].
	•	Human-[[AI Agents|AI]] Collaboration Philosophy
	•	The team discusses the current limitations of [[AI Tools]], agreeing that while AI is excellent at writing code, it is poor at planning, designing, and high-level problem-solving [30:15-30:33].
	•	The emerging best practice is to use humans for strategic guidance and creativity while using AI as a powerful tool to execute tightly defined tasks, comparing the AI to a crane that follows blueprints but doesn't design them [31:53-32:40].
	•	They emphasize the need to design systems that "force the user to be a good user" and constrain the AI to prevent it from attempting tasks it's not suited for [32:52-33:05].
	•	Technical Architecture & Refinements
	•	A key finding is that their [[Diarization Service]] was not utilizing the [[GPU]] because it was missing the necessary NVIDIA CUDA driver layer in its [[Docker]] image. They hypothesize that adding this layer will dramatically increase processing speed [104:47-105:23].
	•	They discuss the behavior of [[Pub/Sub]], which will continuously retry sending a message if it doesn't receive an acknowledgment, leading to repeated, failing job runs [58:41-59:10]. They resolve this by manually purging the message queue [80:28-80:55].
	•	The participants explore new features in their IDE, [[Cursor]], such as the ability to queue multiple prompts and override the current task [97:00-98:22].

Action Items & Decisions
	•	Decision: Include the [[Firestore]] instance in the automated shutdown script to avoid high daily costs for an idle resource [12:47-13:11].
	•	Action: Redeploy the [[Job Controller]] with an annotation to allow it to run on general-purpose nodes, not just [[GPU]] nodes [41:11-41:21].
	•	Action: Rebuild the [[Diarization Service]]'s [[Docker]] image to include the NVIDIA CUDA driver layer to enable [[GPU]] acceleration [104:47-105:23].
	•	Action: Purge the [[Pub/Sub]] message queue to stop the continuous creation of failing jobs [81:05-82:07].
	•	Action: Delete the old trigger-transcription-pipeline [[Cloud Function]] as it was determined to be unnecessary [45:59-45:20].

Suggested New Links/Tags
	•	None

Linked Concepts
	•	[[AI Agents]]
	•	[[Artifact Registry]]
	•	[[CLI]]
	•	[[Cloud Build]]
	•	[[Cloud Function]]
	•	[[Cloud Run]]
	•	[[Cluster Manager]]
	•	[[Cursor]]
	•	[[Diarization Service]]
	•	[[Docker]]
	•	[[Docker build]]
	•	[[Firestore]]
	•	[[GCP]]
	•	[[Gemini]]
	•	[[GitHub]]
	•	[[GKE Autopilot]]
	•	[[GPU]]
	•	[[Job Controller]]
	•	[[Pub/Sub]]
	•	[[Service Account]]
	•	[[Terraform]]
	•	[[Whisper]]

#Tags
	•	#AI
	•	#Automation
	•	#Deployment
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom42
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1645_ZOOM0042_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:18] SPEAKER_02: because I'm not sure what you're doing. New session is project level readme, and then its responsibility is to create a focus readme. I think we should stop using the readme. But, like, just name it. That was that because it was an existing markdown file when I very first had this initial idea.
[00:19-00:23] SPEAKER_05: I get it. So the planning session, the objective is to create a focus readme?
[00:24-00:42] SPEAKER_02: Well, I think the planning session, in my head, would be higher level planning. So that's the big picture planning like you talked about with maybe the three or however many step focus. New session's a bad name, but the very first thing that you would do after opening the project,
[00:43-00:43] UNKNOWN: or
[00:43-00:56] SPEAKER_02: opening the project if planning hasn't been done, will determine, okay, well, we need to do planning. Right. Right. And so that would be like, literally, we just opened, created a new directory, and it's like, hey, we're gonna build a project in here,
[00:56-00:56] UNKNOWN: and
[00:56-01:07] SPEAKER_02: here's the idea. Sorry, you go ahead. So then also the open project, if there is a plan, should determine, okay, well, we need to do a high level new session, whatever that
[01:07-01:07] UNKNOWN: is
[01:07-01:14] SPEAKER_02: being called. And that is absorb the project readme and create the focus readme. Yep. Again, bad naming.
[01:14-01:14] UNKNOWN: Yep.
[01:14-01:15] SPEAKER_02: No, no, no.
[01:15-01:15] UNKNOWN: I
[01:15-02:24] SPEAKER_02: get it. So then you've got a focus session which takes in the focus readme and works until the tasks are complete. My little note here is what if that requires multiple chats, right? And so we just need to handle that. And then at the end of a focus session, you should have an update plan session, which is compares the work from the focus session to the readme expectation, update success, failure status, and determine next steps. And there's probably like some number more than this of those session definitions. And so this right here is basically like, the user guides the plan by which session they call up. Yep. Type of thing. And so if we need to do some, like if you feel like they're spinning, you go, hey, planning session. Right. Because clearly we're not moving forward. Right. We need to step out of this thing and just go, what's going on? Does the readme need like a fuckload of human intervention and we need to do it like, so yeah, maybe like an audit session is another, or an audit, whatever it's called. Yep. Is one where you go back and just fine tooth it. And so the human interaction becomes just like wrangling the AI by what session it calls up. Right.
[02:25-02:25] SPEAKER_05: That makes sense.
[02:25-02:25] UNKNOWN: I
[02:25-03:03] SPEAKER_05: think we're very much aligned. And yeah, I think it's different styles of sessions, but ultimately it is designed to get our thinking and our planning down into this, into a format that the AI can use and actually execute. Right. Because it can't think. Yeah. And it can't hold all that context. We're managing the context down to just do this, not just do this, not just do this, like execute place. Like, so think about a coach or a playbook and all of the strategy and all of these things. But in the end, it is something in football. Called this play, and then this one, and then this one, and then this one, and we're just going down the field.
[03:04-03:36] SPEAKER_02: Yeah. And so what I was trying to find was how the user keeps it from spinning out. And just like at the end of every day, you go like, okay, how do we undo this fucking mess that it's made? Maybe it's made some genuine progress, but there's also some mess. And I think that is like the, well, you need to be actively, active oversight. And then because you have to determine which next, which is the next session to call up type of stuff. It's almost like you should have like quiz yourself at the end of the session.
[03:37-03:37] UNKNOWN: Like,
[03:37-03:37] SPEAKER_02: hey,
[03:38-03:38] UNKNOWN: what
[03:38-03:39] SPEAKER_02: like issue hits you with like,
[03:39-03:39] UNKNOWN: what
[03:39-03:41] SPEAKER_02: are we doing this session? Well, I agree. I mean,
[03:41-03:41] UNKNOWN: I
[03:41-03:41] SPEAKER_02: think
[03:41-04:00] SPEAKER_05: that like half of the battle is forcing the user being engaged. Right. Like, are you actually, it's like, it makes me think of the car. Are you actually watching what I'm doing? Because I might be killing, I might kill us. Right. You better like actually provide oversight.
[04:00-04:13] SPEAKER_02: Right. I'm working on solving this problem and I still do it. Right. And which is like ignore and just let it go and end up vibing at the end of the, as my brain starts to like reach its context limit or whatever, I let
[04:13-04:22] SPEAKER_05: it start going. It already needs a different name. Cause you know, vibe code is like, it's not vibe coding. I think that's interesting.
[04:23-04:23] UNKNOWN: I think
[04:23-04:34] SPEAKER_05: we could put out a article. I don't know that we're trying to get famous from the thinking part of it, but the, some new concept of this is the opposite, maybe not the opposite of vibe
[04:34-04:34] UNKNOWN: code.
[04:34-04:34] SPEAKER_05: I mean,
[04:34-04:36] SPEAKER_02: that'd be context engineering,
[04:36-04:36] UNKNOWN: right?
[04:36-04:37] SPEAKER_02: Is what the new.
[04:37-04:42] SPEAKER_05: Yeah, I guess so. Yeah, I guess this is in the context engineering. Like
[04:42-04:56] SPEAKER_02: that's really like what we're trying to do. And so there might be another, yeah. It's bringing them together. Like how can you make context engineering a little more vibey? Or make vibe coding a little more. Context engineering.
[04:56-04:57] UNKNOWN: Right, yeah.
[04:59-05:03] SPEAKER_02: But yeah, this was like my stream of consciousness I had before I went to sleep last night.
[05:03-05:50] SPEAKER_05: So what do you think then are our next steps? Do you want to try to define these sessions or just go and like make the session rules? I don't actually mean rules rules. Like meaning, like literally when we start a new session, say, hey, here's what I want you to do in this session. And then eventually we figure out how to, what the rules are or there's specific, like what I was getting ready to say is in the Aunt Wyker, in my day job, I literally have a document with two different types of sessions defined, right? So not these same ones. And I have a prompt that, depending on which type of session I'm trying to, one of them is a planning session and one of them is an execution session.
[05:50-05:50] UNKNOWN: I
[05:50-06:06] SPEAKER_05: don't, they're different names. But I grab the prompt for the one that I want to, the type of session that I want to start. And there's, it's not cursive so there's no rules. So the prompt has to have all the rules in
[06:06-06:07] SPEAKER_03: it.
[06:07-06:24] SPEAKER_05: Like every like, hey, here's what we're doing. Here's the format. Go look at this, read me. Here's the topic of this session. And it works, but it's all self -contained. There's no rules about it. So we can, in some ways to start to execute this, we remove a couple rules.
[06:25-06:43] SPEAKER_02: Yeah, I think these almost become rules in and of theirself or there's like the, like open project has to be a rule that it can know what the fuck that even means because there's no project open, right? Right. But I think probably at the very least,
[06:43-06:43] UNKNOWN: a
[06:43-06:57] SPEAKER_02: light definition of what these are or a reference to a very robust definition of what these are in the actual like user level rules. Makes sense to me, is what my plan was at least. Say that again.
[06:58-07:01] SPEAKER_05: Like so, like literally open the rules and
[07:01-07:09] SPEAKER_02: define each type of session. That's one of the options, yes. And then the other one is have one rule that basically is like,
[07:09-07:09] UNKNOWN: hey,
[07:09-07:12] SPEAKER_02: session definition references. So if someone says,
[07:12-07:12] UNKNOWN: hey,
[07:12-07:25] SPEAKER_02: planning session, it'll go to look at this one rule that says, hey, the definition of a planning session is in this document. And so in that case, we would always have to create that document in any project or have it created.
[07:26-07:36] SPEAKER_05: Makes sense. Oh, I always thought you were referring to like, instead of having a bunch of rules, have a rule that says, hey, the definition of this rule is in this document because it's giant. Right. Go look at this. Yeah,
[07:36-07:38] SPEAKER_02: then that gives us a very
[07:38-07:38] UNKNOWN: like,
[07:38-08:04] SPEAKER_02: very robust definition of what a session is. Right. And then I think that makes more sense and we've kind of pared down to one or there might be a couple more rules still left over, but session definitions get offloaded. And then that gives you a little bit of control in between projects to make those sessions. Okay, babe. A little more specific to the project if that makes sense for whatever reason. Like,
[08:05-08:05] UNKNOWN: hey,
[08:05-08:11] SPEAKER_02: we're doing a stock picker, so as part of new session, go and pull all the prices from yesterday or something. Right, makes
[08:11-08:35] SPEAKER_05: sense. So I'm gonna let, why don't you drive? Yep, there should be a pull. Okay. But from basically what we just talked about, you're gonna have to break everything, which is fine. Like I embedded though the steps in there and I don't know how much of that you wanna break out, whatever, do whatever.
[08:36-08:39] SPEAKER_02: So it's this document basically
[08:41-08:41] SPEAKER_05: that
[08:41-08:42] SPEAKER_02: you sent me yesterday?
[08:42-08:45] SPEAKER_05: Is that the newest one? That is not the newest one, I don't believe.
[08:46-08:49] SPEAKER_02: I think it's the last one that was shared with me.
[08:50-08:58] SPEAKER_05: There should be, there is a end -to -end, I guess you're right, the very.
[08:58-09:01] SPEAKER_02: The audio transcription service design on.
[09:01-09:18] SPEAKER_05: Yeah, that's it. Right. Yeah, and that has a bunch of sessions defined there in like 2 .1, 2 .2, 3 .1, whatever. I guess there's more than, there's a 2 .3 .1.
[09:19-09:28] SPEAKER_02: Yeah, so I guess we need to kind of, does what we talked about this morning align with this?
[09:28-10:56] SPEAKER_05: Sorry, no, that's not it. The link that I sent you is to a Gemini descriptor. I never pulled it out because it wasn't formatting, right? Yeah, I remember now. Yeah, it is, I didn't know you could do that. So you can just share a document directly from Gemini and it keeps the formatting and everything. So that's the latest one. And it has the specific prompts and everything associated. It is basically what we're talking about, but it's all task sessions. Yeah, so then if you go over here, it has a new refactoring and implementation readme. We can get rid of it, but it doesn't have all of the detail, but it has the sessions built in it. Like, so session 1 .1 is build a GCS bucket and update the resources in Markdown file. And then session 1 .2, it kind of rolls all the way through the different sessions, all the way through testing. But it doesn't have the specific prompt. So that's kind of, if we were to let it do what it's gonna do, it would walk us through those sessions, I believe. And then for each session, we would go back over here and say, okay, the prompt now is this. And so I think we would need to change some of the rules, say don't read everything. Basically take or never call new session. Basically.
[10:56-10:56] UNKNOWN: Do
[10:56-10:59] SPEAKER_02: you wanna drive with this execution plan?
[11:00-11:00] UNKNOWN: And
[11:00-11:06] SPEAKER_02: then if, because I think coming up with the sessions and stuff is gonna be a lot of quiet AI in person work. I
[11:06-11:09] SPEAKER_05: agree, and so, which is not this work.
[11:09-11:09] UNKNOWN: I
[11:09-11:11] SPEAKER_05: don't know which one is best.
[11:11-11:21] SPEAKER_02: I mean, this is a test. This is the one that you came up with. And it is the one that has a chance of us finishing the transcription and diarization.
[11:22-11:22] UNKNOWN: And
[11:22-11:28] SPEAKER_02: almost like, well, this is up and ready. So let's see if it works. Yeah, I kind of. It's kind of proof of concept. I
[11:28-11:41] SPEAKER_05: kind of wanna see if it works, but I think that as far as rules, and I kind of need help thinking through this, I think we just need to take out the one rule, or maybe we don't need to take out anything. That's what I'm saying,
[11:41-11:41] UNKNOWN: like as is.
[11:41-11:44] SPEAKER_05: That just never say new session start.
[11:44-11:46] SPEAKER_02: Exactly. Just. Yeah, just say,
[11:47-11:47] UNKNOWN: hey,
[11:47-11:50] SPEAKER_02: phase 1 .1 or whatever, or session 1 .1.
[11:51-12:04] SPEAKER_05: Yeah, and just put it in there. Like literally never say new session start, but then you won't get the chat transcripts, or the transcripts. I want that. You know what
[12:04-12:04] UNKNOWN: I'm
[12:04-12:04] SPEAKER_05: saying? Oh
[12:04-12:06] SPEAKER_02: yeah, the new session transcripts. Right,
[12:06-12:21] SPEAKER_05: so I do think, so I think we just need to edit this rule. I'm gonna copy it for now, and put it somewhere else just so I can see it. Because it, you know, it stops. Oh yeah.
[12:22-12:26] SPEAKER_02: It's like a video game trying to add or edit shit.
[12:27-12:38] SPEAKER_05: Yeah, so we do want it to create a new temporary file name, whatever, and then all notes go in there. So basically take out the,
[12:38-12:38] UNKNOWN: read
[12:38-12:43] SPEAKER_05: the entire README. Like so, basically take that out.
[12:44-12:49] SPEAKER_02: Yeah, and so instead of read the entire README, add read whatever that file's called.
[12:49-12:56] SPEAKER_05: No, I think not that. I think it is what I, I don't want to load any context at all.
[12:56-12:56] UNKNOWN: I
[12:56-12:57] SPEAKER_05: think literally,
[12:58-12:58] UNKNOWN: Create
[12:58-12:58] SPEAKER_05: the
[12:58-13:01] SPEAKER_02: log file and then you'll paste the, Yeah, I'm gonna paste this in there.
[13:01-13:01] SPEAKER_05: Like,
[13:02-13:02] UNKNOWN: and
[13:02-13:09] SPEAKER_05: you will know your context because I'm gonna, you don't need to look at all of those things. We're managing context for you. I just want you to do this one thing.
[13:09-13:12] SPEAKER_02: Yeah, this might be better.
[13:12-13:12] UNKNOWN: So
[13:12-13:41] SPEAKER_02: I've been thinking lately, like I think a lot of people are working in this space. Obviously, like the major companies are releasing papers on it. So I think what the vibe I'm getting from the universe, the cushion, whatever, is we're gonna make something that helps us make things. Yes. As opposed to like, we're gonna sell some application of this thing is gonna help us make things in the world of like now creators are back.
[13:42-13:46] SPEAKER_05: And people are like, holy crap, how do you guys do all of that stuff? It's like, well, we have a system.
[13:47-13:59] SPEAKER_02: Right, and so maybe like, who knows if it becomes a business minded thing, they'll buy our studio or some shit like that. Maybe. But that's just like the vibe, like where my head has just been bouncing around.
[13:59-14:08] SPEAKER_05: I mean, I would argue that for me personally, and I've mentioned this several times, that AI saved my job for first, like, Oh,
[14:08-14:08] UNKNOWN: I
[14:08-14:33] SPEAKER_05: actually be able to keep up. Me augmented with AI was able to get me up to speed. And now I would say ahead of my peers, because I use it all the time. Like I run these sessions, like for my job, like anything that I recorded, and I'm always running a session on any given topic, and I'm up to speed and managing stuff at 10X.
[14:33-14:33] UNKNOWN: And
[14:33-14:38] SPEAKER_02: I think that even like the people that were ahead of you and all that stuff, we talk about them,
[14:39-14:39] UNKNOWN: but
[14:39-14:56] SPEAKER_02: they're not learning the new skill. It's not that you're like, you are better, congratulations. But like the next generation of programming looks like requires this. It's not just like this, Oh, I can outperform my actual ability. It's not that anymore.
[14:56-14:56] UNKNOWN: And
[14:56-14:57] SPEAKER_02: oh,
[14:57-14:57] UNKNOWN: I
[14:57-14:58] SPEAKER_02: know these commands.
[14:58-14:58] UNKNOWN: Like,
[14:58-15:01] SPEAKER_02: no, that's too slow. Right.
[15:01-15:01] UNKNOWN: You
[15:01-15:11] SPEAKER_02: need to know how to get the AI to do it. If you don't, you're a bad coder. That is just what it is now. Because you're either bad because you write amazing codes. So slow, no one,
[15:11-15:11] UNKNOWN: you
[15:11-15:12] SPEAKER_02: can't keep up with anything.
[15:12-15:17] SPEAKER_05: Or, you don't like this. It's like going to a studio and say,
[15:17-15:17] UNKNOWN: Hey,
[15:17-15:22] SPEAKER_05: I'm a great painter. That's cool. But we're working on animation. Like I get
[15:22-15:22] UNKNOWN: it. I
[15:22-15:28] SPEAKER_05: mean, you need to sit down at this computer and be able to animate. Right. That's cool. We
[15:28-15:29] SPEAKER_02: stopped drawing in the 50s.
[15:29-15:37] SPEAKER_05: Right. Or maybe the 2000s. Yeah, you need to animate your character and maybe draw them the first time by hand, but it's gonna be on an
[15:37-15:52] SPEAKER_02: iPad. Exactly. You can draw it for like, Hey, if this blows up, it'll be a cool artifact of the thing that you hand drew that one time. Right, but somebody needs to actually put this into the computer and turn it into a 3D character. But even that, like we're getting into where that can become like,
[15:52-15:52] UNKNOWN: Hey,
[15:52-15:58] SPEAKER_02: take your hand, draw the thing. And if you know how to work with AI, you can make it come to life. I agree, but some sort of work like
[15:58-16:09] SPEAKER_05: that. But it is like those, the skill sets to be successful are these. Right. But it is to get this amazing AI focused enough to do great things.
[16:09-16:33] SPEAKER_02: Even if it never progresses from here, it's going to get more and more ingrained from here. Because if nothing else, the thing that these old people are complaining about is this new generation all uses AI. What the fuck do you think the next one's gonna do? Right. And then eventually this new AI generation is gonna be 35 and middle management. And
[16:33-16:33] UNKNOWN: like,
[16:33-16:33] SPEAKER_02: then what?
[16:33-16:34] SPEAKER_05: But I mean,
[16:34-16:34] UNKNOWN: I
[16:34-16:41] SPEAKER_05: get it to a certain extent, certainly for creative things, but you like typing your own emails.
[16:41-16:45] SPEAKER_02: You just feel, it's always forever made you feel better than people. Right, I guess.
[16:45-16:45] UNKNOWN: As
[16:45-16:45] SPEAKER_02: the
[16:45-16:46] SPEAKER_05: thing that you're better at.
[16:47-16:47] UNKNOWN: And
[16:47-16:49] SPEAKER_05: so like, I guess, and that's what people are holding on to.
[16:49-16:50] SPEAKER_02: It's like,
[16:50-16:50] SPEAKER_05: it doesn't
[16:50-16:51] SPEAKER_02: make sense to me.
[16:51-16:51] UNKNOWN: Like
[16:51-16:54] SPEAKER_02: a general like distrust and Yeah, I get that too.
[16:54-16:54] UNKNOWN: Not
[16:54-17:00] SPEAKER_02: being on the forefront as much as we say, like we are right at the edge of this thing.
[17:01-17:01] UNKNOWN: And
[17:01-17:11] SPEAKER_02: like, maybe like just back from the research level is literally like the edge of it. Like the people at the labs. Right, we're very close. We're behind them. We're
[17:11-17:19] SPEAKER_05: very close. Yeah, so I think for now, just delete this part of the rule and keep everything else in there. And
[17:19-17:23] SPEAKER_02: then just do that in the Yeah. Go to the research instead. Yeah.
[17:24-17:26] SPEAKER_05: And then just drop the prompt in there.
[17:26-17:32] SPEAKER_02: Yep. And then we won't necessarily end session or maybe we'll do a small edit on the end session.
[17:33-17:49] SPEAKER_05: No, I think we still do end session. I want to see what it is. I'll keep these two so that
[17:49-17:49] UNKNOWN: Yeah, and
[17:49-17:49] SPEAKER_05: I've got
[17:49-18:35] SPEAKER_02: them still too. Right now at least. Yeah, I actually think this might be a better way than what I was talking about. I think this is still good. Okay. Um, because I think it is with the session names, once you learn them, you can get pretty like reflexy, like okay, planning session looks good, new session, boom, like update plan session, that type of stuff could become, but like if you're having to at least kind of look at the prompt that you're giving it, that at least helps them to understand versus saying new session, it goes, looks at a bunch of stuff and says, all right, let's get it. You'll approve all this coding that I just did. All right, let's push
[18:35-18:37] SPEAKER_05: it. Effectively, it's all manual session running.
[18:38-18:38] UNKNOWN: Like
[18:38-19:03] SPEAKER_05: hey, you can plan it. You can have a planning session, but that prompt should be, hey, in this session, we're gonna plan. And here's the things that I want to think, whatever, like you're planning, and then now, okay, now I have a few sessions planned, and then in the next session, you grab the prompts from your planning and say, in this session, we're gonna do this thing. And so it's all kind of manual. You can script it, and that's kind
[19:03-19:03] UNKNOWN: of
[19:03-19:07] SPEAKER_05: what I did, and we don't have to run down that thing the whole time. But it is,
[19:07-19:07] UNKNOWN: hey,
[19:08-19:38] SPEAKER_05: do you agree? Like I think what we should do literally right now is grab this session, which we're getting ready to do. I've looked at it, and say, hey, do you agree that this is what we're getting ready to do before we drop it in there? Do you want to keep these? What's that? Like these, like you want me to save these and then? No, you don't
[19:38-19:39] SPEAKER_02: have to.
[19:42-19:43] UNKNOWN: I
[19:43-19:51] SPEAKER_02: still have them in mind, and if we get, hold on, just a minute. Oh, that's a crumb.
[19:52-19:52] SPEAKER_01: Yeah.
[19:53-19:56] SPEAKER_02: If we feel like we need them back, we can have it generated, worst case.
[19:58-19:59] SPEAKER_05: That sucks, it didn't actually.
[19:59-19:59] UNKNOWN: It's a crumb.
[20:00-20:10] SPEAKER_05: Come on, that's interesting. It didn't put returns in there.
[20:10-20:10] UNKNOWN: Maybe
[20:10-20:17] SPEAKER_05: it was the way that, that sucks.
[20:19-20:21] SPEAKER_02: Yeah, because that's like,
[20:22-20:22] UNKNOWN: I
[20:22-20:24] SPEAKER_02: mean that code should just be text.
[20:24-20:37] SPEAKER_05: It should be. I don't know that it matters to it. It matters to us, because I'm trying to read it.
[20:38-20:49] SPEAKER_02: Yeah, I mean, maybe have it generated not as a code block. Because that's Markdown. That's what's going on with those Astros.
[20:50-20:56] SPEAKER_05: For sure. I did have, yeah,
[20:56-20:56] UNKNOWN: I
[20:56-21:06] SPEAKER_05: was having, maybe if I grab it from here.
[21:06-21:17] SPEAKER_02: Is there like a copy button? Yeah, there is, but it's copy everything. Yeah, I mean, and we can do that. Or export to Docs and then do the copying from there.
[21:26-21:26] UNKNOWN: Yeah,
[21:26-21:30] SPEAKER_05: there we go. Well, we can read it here.
[21:30-21:30] UNKNOWN: I don't
[21:30-21:32] SPEAKER_05: need a copy of that. Okay.
[21:35-21:40] SPEAKER_02: Oh yeah, I also had a thought. Should we just delete the project? I
[21:40-21:49] SPEAKER_05: had the same thought, but I kinda wanna keep going because there's enough foundational stuff in there, I believe. I agree,
[21:49-21:56] SPEAKER_02: I just think you could make them again in like three minutes. Probably. But there's like, I've had the thought.
[21:56-21:56] UNKNOWN: It
[21:56-22:05] SPEAKER_02: wouldn't make all of them, but there's also definitely some artifacts from previous designs, not definitely, but probably kicking around. And quota
[22:05-22:08] SPEAKER_05: stuff, right? That quota stuff is per project.
[22:08-22:11] SPEAKER_02: Yeah, but we haven't really done it. Yeah,
[22:12-22:16] SPEAKER_05: well, we only got the one, which I think they will actually give you for free.
[22:16-22:17] SPEAKER_02: Probably upfront,
[22:17-22:19] SPEAKER_05: yeah. Not for free, but you
[22:19-22:28] SPEAKER_02: know. Without anything, because that's how you prove that you can use them. Yeah. I mean, that is part of this. Like it's gonna create a bucket.
[22:33-23:07] SPEAKER_05: But I think if we do that, we need to spend the morning replanting everything. I kinda wanna play with this to see how it works. Let's keep pushing. Okay.
[23:07-23:07] UNKNOWN: Oh,
[23:07-23:12] SPEAKER_05: I don't know. I didn't put that in there, but that should not be in there.
[23:13-23:13] UNKNOWN: Okay.
[23:24-23:26] SPEAKER_01: Yeah, so it's still an update, even if
[23:26-23:26] UNKNOWN: it's
[23:26-23:26] SPEAKER_01: not there.
[23:28-23:28] UNKNOWN: I
[23:28-23:32] SPEAKER_05: think we just say update.
[23:34-23:40] SPEAKER_02: Well, it's got like the next one, add a new section or update an existing one. Yeah,
[23:40-23:42] SPEAKER_05: I'm scared that it's going to not see it.
[23:43-23:46] SPEAKER_02: It should. Like when you explicitly call it out.
[23:46-23:55] SPEAKER_05: No, I agree, but what I'm saying is, it says create a new markdown file, name this at the root if it doesn't exist. Well, we know it exists. So don't, what I'm saying,
[23:55-23:55] UNKNOWN: take
[23:55-24:03] SPEAKER_05: gray area. We know it exists because it's a prompt specifically for this task. So it's more locate.
[24:07-24:09] SPEAKER_01: That makes sense.
[24:21-24:28] SPEAKER_02: Do you want to watch the first Star Wars mix? Yeah. By first I mean fourth. Yeah, new hope.
[24:29-24:30] UNKNOWN: Yeah.
[24:41-24:46] SPEAKER_05: Yeah, I think this is a
[24:46-24:46] UNKNOWN: good,
[24:47-24:52] SPEAKER_05: a good, maybe not that you're an AI assistant part.
[24:52-24:53] SPEAKER_03: Yeah, I agree.
[24:59-25:01] SPEAKER_05: We're actually going to do a new session.
[25:04-25:11] UNKNOWN: Right. Yeah,
[25:15-25:19] SPEAKER_02: I think turn our Read Me back into a Read Me.
[25:19-25:24] SPEAKER_05: Right. That's kind of overall high level of what the project is doing.
[25:24-25:24] UNKNOWN: I
[25:24-25:34] SPEAKER_05: mean, it's documenting what we've recreated instead of a guide. Right. Like, hey, so far we've created these, but whatever. It's supposed to be a, somebody else can
[25:34-25:34] UNKNOWN: do it.
[25:34-25:41] SPEAKER_02: Generally on GitHub, a snapshot of like, I guess there's other uses, but that's what it's used for, is to show what your project is on GitHub.
[25:47-25:51] SPEAKER_05: Go back to, cloud. Yeah.
[26:04-26:05] SPEAKER_04: Yeah.
[26:38-26:39] UNKNOWN: Yeah.
[26:40-26:43] SPEAKER_02: Go out like the right way. Maybe.
[26:44-26:48] SPEAKER_05: I don't think so. Typically, if it's out, this,
[26:48-26:48] UNKNOWN: it
[26:48-26:54] SPEAKER_05: won't even read these documents. It'll say, because even to type in a document, you have to
[26:54-26:54] UNKNOWN: have it.
[26:54-27:08] SPEAKER_05: It's actively saving it. My other test is to look at scrolling on YouTube. Yep. Because otherwise it will shimmer. There
[27:08-27:11] SPEAKER_01: you go. There it goes.
[27:16-27:17] UNKNOWN: Man,
[27:20-27:31] SPEAKER_05: that is slow. Yeah. Hey guys, not faster if it's like this. It's probably still.
[27:31-27:38] SPEAKER_02: Probably still quite a bit faster actually. Cause at the end of this, it's gonna be, I've done like an hour worth of work.
[27:56-27:57] SPEAKER_00: Man, that is slow.
[28:08-28:11] SPEAKER_02: We could create our own sci -fi universe.
[28:11-28:13] SPEAKER_05: Yeah. For sure.
[28:13-28:16] SPEAKER_02: And straight up steal from all of them. For sure.
[28:16-28:16] UNKNOWN: Cause
[28:16-28:18] SPEAKER_02: fuck everybody, dude.
[28:18-28:20] SPEAKER_05: And make it awesome.
[28:20-28:24] SPEAKER_02: Because all of them are the exact same stories. We just gotta make cool characters.
[28:25-28:36] SPEAKER_05: Right. And build up the characters. Do all the things that people have been complaining about for the last five years. Just do those things. Exactly. And do it at a
[28:36-28:58] SPEAKER_02: hundredth of the cost. Exactly. And just start to post them. Unlike YouTube, people are like, holy shit, what's this hour and a half fucking movie on YouTube? We just made it. You can also start to do this stuff like saving,
[28:58-28:58] UNKNOWN: like
[28:58-29:04] SPEAKER_02: recreating people. Like start to get recordings of yourself and like you'll be around forever. That's true.
[29:05-29:11] SPEAKER_05: Yeah, you know, a while back when I was traveling, one of the thoughts that I had was creating a person,
[29:12-29:12] UNKNOWN: a
[29:12-29:13] SPEAKER_05: historical person, a persona.
[29:14-29:14] UNKNOWN: But
[29:14-29:20] SPEAKER_05: it applies to anything. You could be a living person, of course. You mean you captured their essence.
[29:22-29:27] SPEAKER_02: Yeah, and that is especially like anybody with a lot of video, you can basically recreate.
[29:30-29:33] SPEAKER_01: Man. It's tough.
[29:38-29:38] UNKNOWN: Yeah,
[29:38-29:39] SPEAKER_05: so it was pretty empty.
[29:40-29:40] UNKNOWN: Yep,
[29:40-29:46] SPEAKER_01: that makes sense. I think I still have
[29:46-29:47] UNKNOWN: that.
[29:53-30:06] SPEAKER_05: I kind of want to monitor it, well, in general, but to see if it picks up anything from the project. And I don't think it has so far, but it's still generated. I don't know what it's generating.
[30:06-30:06] UNKNOWN: Right.
[30:07-30:07] SPEAKER_05: Okay.
[30:14-30:35] SPEAKER_02: You just make sick ass movies based on actual history. Yeah. You take Dan Carlin's podcast, feed it to the AI, and be like, movie, please. Yeah, yeah, make a movie. Okay.
[30:35-30:35] UNKNOWN: And
[30:35-30:36] SPEAKER_02: that might have to be on the list.
[30:36-30:36] UNKNOWN: If
[30:36-30:46] SPEAKER_02: we really start cranking this shit out, I'm definitely doing Alexander's old story. I'm not going to ruin it like fucking Oliver Stone or whoever did it.
[30:52-30:53] SPEAKER_01: It's creating a bucket.
[30:55-30:56] UNKNOWN: So
[30:56-30:56] SPEAKER_05: did it
[30:56-30:58] SPEAKER_02: look, first it did.
[30:59-31:09] SPEAKER_05: It looked to see if, it looked at the resources, the reference file, and then created the
[31:09-31:09] UNKNOWN: bucket.
[31:11-31:18] SPEAKER_02: Oh, that is the new one. Okay, I'm good with that. I thought it was trying to create transcription buckets or some shit, because I'm dumb.
[31:18-31:26] SPEAKER_05: No, it's just creating the one that's going to be used for - And then theoretically it should have updated this.
[31:26-31:26] UNKNOWN: I
[31:26-31:30] SPEAKER_05: don't see where it updated. It's right there. Yeah, and it put it in the right place.
[31:31-31:45] SPEAKER_02: Yeah, so another thing I've been doing is forcing myself to look one at a time. So you can click accept. There's only one in this one. Right. But instead of accepting files or accepting all, I do that, and then it always goes down to review next file.
[31:45-31:45] UNKNOWN: If
[31:45-31:46] SPEAKER_02: there's any other
[31:46-31:46] UNKNOWN: - Where
[31:46-31:55] SPEAKER_02: you see, okay, nice. And yeah, so that is another way to find changes it's made. Yeah, that was a big one. I like it. I liked it that much too.
[31:57-32:03] SPEAKER_05: Yeah, and then that's it for this session. Right. And so I don't know that we want to - You're
[32:03-32:05] SPEAKER_02: just going to go press the plus button, I think.
[32:05-32:08] SPEAKER_05: Well, we could, no, we would log this in.
[32:08-32:08] UNKNOWN: So
[32:08-32:13] SPEAKER_05: if it was faster, well, we can do it, but yeah, the goal is this, right? Like it
[32:13-32:13] UNKNOWN: -
[32:15-32:30] SPEAKER_05: So there's an extra overhead, because we do so much in our in -session, it's going to write to GitHub and all of those things like that, and it's being slow. But so maybe we rethink how much we do for in -session and log in all of these things, because the sessions are much smaller now.
[32:31-32:37] SPEAKER_02: It might be worth switching to auto when you do the session stuff. Yeah, I don't know how you do that.
[32:37-32:37] UNKNOWN: I
[32:37-32:46] SPEAKER_02: think just instead of Cloud4, Sonnet down there, you switch to auto, and it picks, and it's fast.
[32:47-32:47] UNKNOWN: So
[32:47-32:48] SPEAKER_02: if this is
[32:48-32:49] SPEAKER_05: a
[32:49-32:49] UNKNOWN: -
[32:49-33:10] SPEAKER_02: Right. I think it might still use them if it determines it needs them, but my guess is it really, really tries to determine it doesn't need them, because that costs them less. But yeah, if this is dumb AI task, then let the auto one do it. And for the not dumb ones,
[33:11-33:17] SPEAKER_05: please be explicit. So the next, so I think we can, yeah.
[33:19-33:20] UNKNOWN: I
[33:20-33:28] SPEAKER_02: don't know why sometimes it copies it and then deletes, versus sometimes it just moves it, which does both things at the exact same time.
[33:29-33:31] SPEAKER_05: Because we let it be auto,
[33:31-33:31] SPEAKER_02: and it
[33:31-33:31] UNKNOWN: -
[33:31-33:57] SPEAKER_02: That's true. But it ends in the same exact result, so it's fine. It's probably worth at some point coming up with a log, such archive cleanup for those logs and archives that
[33:57-33:57] SPEAKER_01: it's writing in.
[33:57-33:58] SPEAKER_02: Oh,
[33:58-34:04] SPEAKER_01: got it. Or maybe not.
[34:04-34:06] SPEAKER_05: I mean, it's cheap. Depending on how long
[34:06-34:06] UNKNOWN: it goes.
[34:06-34:08] SPEAKER_05: Just leave it in there, and
[34:08-34:08] UNKNOWN: this is a good thing.
[34:08-34:11] SPEAKER_05: This is the archive of this project. It's
[34:11-34:24] SPEAKER_02: all free as of now. It's sitting in GitHub for free. If the project were to grow to some craziness, but then you could just be like, well, it's worth to have every little thing, we'll push it to a cold storage bucket and pay a penny a fucking
[34:24-34:32] SPEAKER_05: year. And just keep it there for posterity's sake. And maybe one day we wanna go back and look at it, but maybe not. If it's
[34:32-34:40] SPEAKER_02: cheap enough, then it doesn't matter. Once vector databases are only cost pennies, we'll move it all to a vector database.
[34:43-34:56] SPEAKER_05: So now, I told you, this is for the human. So I assume it's gonna start up the cluster first.
[34:56-34:57] UNKNOWN: Yeah.
[34:59-35:02] SPEAKER_02: This is a summary of the prompt, so you don't necessarily have to read the prompt.
[35:02-35:06] SPEAKER_05: Yeah, I mean, I think it'd still do both. But yeah, this is the human version of the prompt.
[35:07-35:07] UNKNOWN: Gotcha.
[35:29-35:37] SPEAKER_05: Oh yeah, so this is not even deploying. It's modifying the deploy script to include this driver and pointing at the bucket.
[35:38-35:38] UNKNOWN: That
[35:38-35:41] SPEAKER_02: makes sense to me. This is the level of granularity you
[35:41-35:41] UNKNOWN: should
[35:41-35:45] SPEAKER_02: be operating at. You've been pushing for it for a week and a
[35:45-35:45] UNKNOWN: half.
[35:45-36:04] SPEAKER_05: And don't load the full context. Just do this thing. Because everything, my goal of when I was creating this is the prompts should have everything necessary to achieve the task without looking at anything. Don't look anything up. I'm gonna give you everything you need in the prompt.
[36:04-36:21] SPEAKER_02: Yeah, and then at the end of this, say we get through phase one, we should have it analyzed against the plan or something like that. But then we should still be taking some prompt from over here and going like, okay, well here was the beginning of phase one. What do we got? Everything looks good.
[36:21-36:34] SPEAKER_05: Right, but again, every session starts with a prompt that doesn't require you to look up and understand and figure it out on your own. I'm gonna tell you, just do the thing that I tell you to do. Drive from here to Walmart. Here to here.
[36:35-36:38] SPEAKER_02: Don't worry about what we're getting at Walmart. That's not up to you.
[36:38-36:38] UNKNOWN: Drive
[36:38-36:38] SPEAKER_02: here to here.
[36:42-36:46] SPEAKER_05: Yeah. Yes, it gives the, yeah, I think this is everything it needs.
[36:55-36:55] UNKNOWN: I
[36:55-36:58] SPEAKER_05: don't know that that's the name of the bucket it just created.
[36:59-36:59] UNKNOWN: I
[36:59-37:03] SPEAKER_05: guess it is. It is. It is the name of the bucket.
[37:07-37:14] SPEAKER_02: So there may be a place in there for like. Go look up. Exactly, I mean it's right this time. But yes, but in,
[37:15-37:15] UNKNOWN: yeah.
[37:16-37:24] SPEAKER_02: Or that is useful to make the, human go exactly what you just did. I'm like, yep, we're good. That keeps you engaged.
[37:50-37:51] SPEAKER_01: I think this is good.
[37:52-37:55] SPEAKER_02: Yeah, and reading all of it like teaches you. Yeah.
[37:55-37:55] UNKNOWN: As
[37:55-37:56] SPEAKER_02: well.
[37:58-38:03] SPEAKER_05: I guess I should have been starting a new session while I was listening. Because it's freaking.
[38:07-38:10] UNKNOWN: I think you broke the music. But.
[38:20-38:22] SPEAKER_05: I got it on auto still.
[38:23-38:23] SPEAKER_03: Oh
[38:23-38:24] SPEAKER_05: yeah.
[38:24-38:25] SPEAKER_03: That might be okay.
[38:26-38:27] SPEAKER_05: Especially with this level of detail.
[38:33-38:53] SPEAKER_02: And it's also like a value judgment of speed versus like the high end model. Right. Yeah, as long as it can do it. Yeah, it might do it like. Copying the file over and then deleting the existing one instead of just moving it. But job done.
[38:53-38:54] UNKNOWN: Right.
[38:55-39:10] SPEAKER_02: Yeah, so I thought that just hit me is, it's a very different strategy if we were running our own model. Because basically this is saying, oh you guys are paying for it? All right, well I'm gonna prompt the mother.
[39:10-39:10] UNKNOWN: That
[39:10-39:15] SPEAKER_02: is true. But that is like the case. This is basically, it's $20 a month.
[39:17-39:22] SPEAKER_05: We can use the shit out of it. And there are limits. But it gives you the limit, it'll let you know.
[39:22-39:50] SPEAKER_02: Right, and if our system lets auto handle it, then those limits are non -existent basically. And that's an escalation path of like, hey we fucked up in phase 1 .3, run it back and do it with Gemini 2 .5 Pro. Right. Like delete all work before, or after 2 .2 or 1 .2, and start again with a premium model.
[39:50-39:54] SPEAKER_05: Because it's logged into GitHub every time. Exactly.
[39:54-39:54] UNKNOWN: So
[39:54-40:11] SPEAKER_05: you can revert back to wherever we were and the session names, like we know which ones are sessions. Is that right? I don't know if that's right.
[40:11-40:11] UNKNOWN: I
[40:11-40:18] SPEAKER_02: mean, it's probably worth letting it try. Yeah,
[40:18-40:18] UNKNOWN: I
[40:18-40:21] SPEAKER_02: guess this would be where auto would be like, just winging it maybe.
[40:23-40:29] SPEAKER_05: Yeah, because. But was that in there? It says. Yeah, it's in there. Where do
[40:29-40:29] UNKNOWN: you
[40:29-40:30] SPEAKER_05: see that? Right
[40:30-40:35] SPEAKER_02: here. Yeah, it is. Down from your cursor, down, down, down, down, down.
[40:35-40:42] SPEAKER_05: I saw it earlier. It says typically involved. Oh, okay. Yeah, so did you just do that in there because it says typically involved? I
[40:42-40:44] SPEAKER_02: would bet my life on that, yes.
[40:44-40:56] SPEAKER_05: So I don't know that that. I got it. I got to
[40:56-40:56] UNKNOWN: do
[40:56-40:56] SPEAKER_05: it already.
[40:56-41:12] SPEAKER_02: Yeah, that's like. If nothing else, it removes the question. Like, no, it's not just using a dumb model. I hate that a little bit.
[41:16-41:16] UNKNOWN: Yeah.
[41:22-41:23] SPEAKER_05: Yeah,
[41:23-41:30] SPEAKER_02: of course I want you to do that. That's where the plan should have maybe included a push to
[41:30-41:30] UNKNOWN: the docks. Like,
[41:30-41:34] SPEAKER_02: go look at it, yeah. Exactly. Can always
[41:34-41:34] UNKNOWN: do that.
[41:34-41:39] SPEAKER_02: Just ask what could I have done better to improve your response?
[41:51-41:55] SPEAKER_01: Well, that's not necessarily the problem.
[42:06-42:10] SPEAKER_05: Why are you doing that? You just created a
[42:10-42:16] SPEAKER_02: new one? Yeah. It's just a more explicit name.
[42:40-42:41] UNKNOWN: Okay.
[42:53-42:56] SPEAKER_02: It's already moving faster than it was. Yep.
[43:28-43:30] UNKNOWN: Okay.
[43:48-43:51] SPEAKER_05: What's next? It's like, I
[43:51-43:53] SPEAKER_02: want to test this.
[43:55-43:55] UNKNOWN: I
[43:55-44:01] SPEAKER_02: think that is the next one. They build the Docker file and see what's going on.
[44:02-44:06] SPEAKER_05: So this is the new Docker. That's the new base image. Oh,
[44:06-44:07] SPEAKER_01: you're right.
[44:10-44:18] SPEAKER_05: So I think then maybe we test it. Well, I guess to do that, you gotta deploy the cluster.
[44:19-44:37] SPEAKER_02: That's where my guess is like it's getting toward a pretty extensive test of like all of phase one is my guess. That is the other variable in the super granularities.
[44:38-44:38] UNKNOWN: Can't
[44:38-44:49] SPEAKER_02: necessarily test the stuff we've done so far. You can be like, okay, yeah, the bucket is created, but the persistent volume claims like ultimately you gotta see along the cluster.
[44:49-44:49] SPEAKER_05: I agree.
[44:50-44:50] UNKNOWN: So
[44:50-44:54] SPEAKER_05: yeah, so it's redoing the Docker file because it's new too.
[44:54-44:54] UNKNOWN: And
[44:54-44:56] SPEAKER_05: then. It's
[44:56-44:56] UNKNOWN: gonna
[44:56-45:00] SPEAKER_05: refactor for whisper X. And then push.
[45:00-45:04] SPEAKER_02: It's build it, push it, spin up the cluster, I guess.
[45:06-45:09] SPEAKER_05: Yeah, it's doing all the refactoring with no testing.
[45:11-45:12] SPEAKER_02: Last session two, you're in two.
[45:13-45:37] SPEAKER_05: Yeah, so far we haven't deployed anything like or like done the startup script in that plan. So that plan probably is not good. Like I'm already ready for a test. Yeah. I want to test this. And I guess that that's one of the things that I left out of the planning is test at every step.
[45:38-45:38] UNKNOWN: Yeah.
[45:43-45:50] SPEAKER_05: Which I don't know if I'm out of context over here, but that's effectively, I'm still in it.
[45:51-45:52] UNKNOWN: Right.
[45:54-45:57] SPEAKER_02: Maybe tell it not to say you're an AI assistant if we're
[45:57-45:57] UNKNOWN: doing
[45:57-45:58] SPEAKER_02: updates.
[46:42-46:44] UNKNOWN: Okay.
[47:18-47:41] SPEAKER_02: So in theory, it may be it's worth testing it out. You could queue these prompts. Like in cursor. What do you mean? You can like make the to do list now. Like you can go even when it's working.
[47:41-47:41] UNKNOWN: Oh,
[47:41-47:42] SPEAKER_02: in cursor? Yeah.
[47:42-47:48] SPEAKER_05: Yeah, like it was, it did do that. Like before when I went in the session that I had open yesterday.
[47:48-48:00] SPEAKER_02: Well, I'm saying like right now, if you were gonna add testing, you could run the do all this prompt and then go ahead and send the now make sure that test it all and update or whatever.
[48:01-48:02] SPEAKER_05: I'm confused.
[48:02-48:07] SPEAKER_02: Like right now it's working. If you were to go and type something and hit send, it would like queue it up as a to do.
[48:07-48:29] SPEAKER_05: Oh, got it. I understand what you're saying. Yeah. I think it's stuck. Like it's still. Oh geez. It's being weird. What was it?
[48:30-48:36] SPEAKER_02: It's like option. Option. Yeah. Option.
[49:17-49:20] SPEAKER_05: So that's where we're at right now.
[49:24-49:29] SPEAKER_02: So in theory, you can just take that last little set of bullets and feed it to it at the end.
[49:30-49:32] SPEAKER_05: Like give it all of this. I
[49:32-49:35] SPEAKER_02: think above, is this the one we're on?
[49:35-49:35] UNKNOWN: No,
[49:36-49:39] SPEAKER_05: this is the one we're on right now. Yeah, I assume that the. Oh,
[49:39-49:44] SPEAKER_02: verification. Yeah. I assume the rest of it's pretty much the same.
[49:58-50:00] SPEAKER_01: It's enabled by the bolt.
[50:23-50:24] SPEAKER_05: Yeah, I kind of
[50:24-50:41] SPEAKER_02: remember that from before. Yeah, I think almost everything. Like there's a lot of stuff. I think the persistent file store thing was also like. You just had to have the API there though.
[51:02-51:07] SPEAKER_05: I mean. I don't know if that's right.
[51:07-51:14] SPEAKER_02: Yeah, the only thing that's in my head is did it actually make a change with that name compared to what it was told to do.
[51:15-51:16] SPEAKER_05: What do you mean?
[51:16-51:21] SPEAKER_02: Like at some point it changed the name. It did like move from this to this. Yeah. Because of this.
[51:21-51:21] UNKNOWN: Which is
[51:21-51:30] SPEAKER_02: dumb. Well, like was that a change that is gonna affect the follow on steps or is like the only thing in my head?
[51:31-51:32] SPEAKER_05: I'm vibing,
[51:32-51:32] UNKNOWN: I
[51:32-51:39] SPEAKER_05: guess. I don't know. This I
[51:39-51:39] UNKNOWN: don't
[51:39-51:47] SPEAKER_05: really care about. I do care about it. It's just logs and things. Well, I guess we can go back and look at what it did.
[51:48-51:48] SPEAKER_03: Yeah.
[51:56-51:57] SPEAKER_05: GCS,
[51:57-51:58] UNKNOWN: that's cache.
[51:58-51:59] SPEAKER_05: Yeah, so.
[52:01-52:03] SPEAKER_01: Not just PVC.
[52:09-52:21] SPEAKER_05: I mean, I think that the only way to know is tested. Yeah. And then it created this. This is the deleted
[52:21-52:21] UNKNOWN: file.
[52:21-52:25] SPEAKER_05: The deleted one? Yeah, that's gone apparently.
[52:29-52:38] SPEAKER_02: I don't know. I would give it that whole prompt again. It's like say, hey, did we complete all these?
[52:43-52:45] SPEAKER_01: That's the previous one.
[53:12-53:13] SPEAKER_02: Yeah. Yeah,
[53:13-53:13] UNKNOWN: so
[53:13-53:19] SPEAKER_02: the name that it changed was specifically in that.
[53:19-53:33] SPEAKER_05: Yeah, but I think it changed it. From what's different now. Or it's GCS slash cache, that's PVC. I think that's the one that it deleted. Right, and it's now GCS. I just saw it.
[53:35-54:10] SPEAKER_02: GCS cache storage, now 42. Yeah. Yeah.
[54:10-54:10] UNKNOWN: I mean,
[54:10-54:14] SPEAKER_02: I suppose as long as it updated the resources page
[54:17-54:18] UNKNOWN: and
[54:18-54:21] SPEAKER_02: that doesn't now mean that all of our future prompts are broken.
[54:22-54:32] SPEAKER_05: Yeah, well, I mean, I think that maybe what we should do then is just deploy the cluster the way it is now. What
[54:32-54:32] SPEAKER_02: do
[54:32-54:32] UNKNOWN: you
[54:32-54:40] SPEAKER_05: mean? Run, like just do deploy cluster. And just run it and see? Run it just ourselves. Yeah. And see how it goes.
[54:42-54:48] SPEAKER_02: I mean, it should, in theory, if you tell it to test, like what would those verifications?
[54:49-54:52] SPEAKER_05: It basically said to verify that it did
[54:52-55:03] SPEAKER_02: it. Show the script, provide the complete content, explain how they, full verification needs to go in. What is that last one? What occurred during phase three deployment?
[55:05-55:05] UNKNOWN: Yeah,
[55:05-55:13] SPEAKER_05: so basically, what it wants to do is do everything and then in phase three, just deploy everything and say,
[55:13-55:13] UNKNOWN: oh,
[55:13-55:35] SPEAKER_05: it's gonna work. Because we did it all. It might have a thousand errors from all of this and so this is just not a good plan because it pushes all testing and deployment to the end. Whereas what we shifted to last week was do a thing, test a thing, do a thing, test a thing.
[56:47-56:47] UNKNOWN: What did
[56:47-57:09] SPEAKER_01: it change out here?
[57:28-57:31] SPEAKER_05: Just in that that's what's used for GCS fuse integration.
[58:00-58:01] UNKNOWN: I
[58:01-58:12] SPEAKER_05: never know if the internet's working. AJ Mitchell signed for a multi -year contract. You see that?
[58:12-58:13] SPEAKER_02: No,
[58:13-58:13] UNKNOWN: I
[58:13-58:14] SPEAKER_02: didn't miss, what's up?
[58:14-58:14] SPEAKER_05: Yesterday.
[58:15-58:18] SPEAKER_02: Oh yeah. Oh, so we should be hearing about Jade open chat here pretty soon.
[58:19-58:19] UNKNOWN: I
[58:19-58:19] SPEAKER_02: imagine.
[59:31-59:34] SPEAKER_05: Oh yeah, so now there's a verify.
[59:37-59:45] SPEAKER_02: In here. That makes sense. Yeah, I know nothing's gonna happen after but spin that motherfucker up and let's see what
[59:45-59:45] UNKNOWN: happens.
[59:45-59:50] SPEAKER_05: Right, exactly. I just want to make sure that there's not a bunch of errors in here.
[59:51-59:57] SPEAKER_02: Right, and we don't have to shut it down afterwards so follow on test should be easy to just like,
[59:57-59:57] UNKNOWN: okay
[59:57-59:59] SPEAKER_02: push this change up to the cluster that's running.
[59:59-60:00] SPEAKER_04: Right.
[60:39-60:40] SPEAKER_05: I wonder what happens
[60:40-60:41] UNKNOWN: around here.
[60:42-60:44] SPEAKER_05: It does it to it over here.
[60:46-60:48] SPEAKER_02: Oh yeah, it's all formatted fucked up.
[60:49-60:49] SPEAKER_05: No, it's right.
[60:50-60:52] SPEAKER_02: Oh, it actually has the returns in it, yeah.
[60:56-61:07] SPEAKER_05: So, but I don't think that's the right. Yeah,
[61:08-61:08] UNKNOWN: I
[61:08-61:13] SPEAKER_05: think the PVC name is not right. Do you know what I'm saying? Yeah,
[61:13-61:17] SPEAKER_02: it's like storage instead of cache or something.
[61:19-62:43] SPEAKER_05: It is GCS cache PVC. Yeah, it's not that thing. I just thought, yeah.
[62:50-62:52] SPEAKER_01: Might be always having to change
[62:52-63:00] SPEAKER_02: the document just in case it's referencing that every phase. I agree.
[63:38-63:59] UNKNOWN: Okay. Okay.
[64:23-64:26] SPEAKER_05: I don't understand, they simulate the outputs.
[64:49-64:51] SPEAKER_02: Yeah, don't simulate shit.
[64:51-64:52] SPEAKER_04: Right.
[64:52-64:53] SPEAKER_02: You
[64:53-64:54] SPEAKER_01: have actuals.
[65:28-65:30] UNKNOWN: Okay.
[65:54-65:56] SPEAKER_01: I'm gonna stop making a coffee.
[65:56-65:56] SPEAKER_04: Yeah.
[65:56-66:31] UNKNOWN: Me too. Okay.
[66:45-66:46] SPEAKER_05: That's interesting.
[66:47-66:53] SPEAKER_02: Right. Because that's what it said isn't necessary.
[66:55-66:55] SPEAKER_04: Yeah.
[67:02-67:06] SPEAKER_01: That was in a previous session, I suppose. Yeah. But we'll see.
[67:32-67:33] SPEAKER_04: Okay.
[67:33-67:33] UNKNOWN: Hey, babe.
[67:34-67:35] SPEAKER_05: Hi. Hi.
[67:35-67:36] SPEAKER_04: I'm
[67:36-67:36] UNKNOWN: running
[67:36-67:37] SPEAKER_01: to resource.
[67:37-67:38] SPEAKER_05: Okay, babe.
[67:39-67:41] SPEAKER_01: To get some oatmeal, do you need anything?
[67:41-67:43] SPEAKER_05: I don't think so.
[67:43-67:44] SPEAKER_01: Okay.
[67:44-67:45] SPEAKER_05: I'm
[67:45-67:46] SPEAKER_01: gonna go to resource and I'll be home.
[67:46-68:03] SPEAKER_05: Okay, babe. I love you. I love you. Basically putting it back. So no changes to that.
[68:05-68:10] SPEAKER_02: So there's a review next file down there somewhere or did it change somewhere?
[68:10-68:12] SPEAKER_01: So that's just the trend strip is good.
[68:28-68:34] SPEAKER_02: I think that is a very good example of like, you just have to be kind of paying attention.
[68:34-68:35] SPEAKER_05: Yep, you just gotta be watching.
[68:36-68:45] SPEAKER_02: Because even when you're being careful, like it had that context in a previous chat and that's gonna become more
[68:45-68:45] UNKNOWN: and
[68:45-68:53] SPEAKER_02: more common with these granular focus chats. Yeah, I agree. I remember talking about it, but you don't.
[68:53-69:20] SPEAKER_05: Right, and we are the glue between the chat, between the sessions. I don't understand what that is.
[69:22-69:29] SPEAKER_02: I was just describing, so it's just trying to like, point out exactly what it's trying to see.
[69:33-70:14] UNKNOWN: So I'm just gonna go ahead and just go ahead with wounds like all over the place
[70:14-70:15] SPEAKER_05: Cause
[70:15-70:15] UNKNOWN: that's why I love this.
[70:15-70:17] SPEAKER_05: That's crazy, they're gonna do Runnin' Other Pools?
[70:17-70:31] SPEAKER_02: Yeah, he mentioned that They were going to I didn't realize I mean it makes sense that it's a whole production And like somebody paid him to come over there and do this and they're wearing their swag and shit.
[70:31-70:36] SPEAKER_05: Yeah, which is sick And that you get hit by one of those freaking bulls.
[70:36-70:48] SPEAKER_02: Yeah, I was looking at it a few days ago And apparently there's eight running of the bulls and it's every morning for the week So I guess it starts tomorrow
[70:48-70:48] UNKNOWN: or
[70:48-71:10] SPEAKER_02: whatever And there's like there's only a few of them because they're the ones that are going to the bull ring, right? And then there's a few cows so females that kind of guide them, right? Well people still get got Yeah, but I assume
[71:44-72:38] UNKNOWN: I hope You You
[72:56-72:58] SPEAKER_02: You
[73:44-73:46] UNKNOWN: Yeah
[74:06-74:08] SPEAKER_01: Yeah
[74:22-74:33] SPEAKER_05: Yeah Yeah, it's gonna do all the stuff this stuff in a bit, right we'll
[74:33-74:33] UNKNOWN: see
[74:44-74:55] SPEAKER_05: It's Slower From the perspective of well, we're testing this one thing right and I don't care about the follow -on steps I'm trying to get the GCS few stuff working, right? Are these drivers
[74:55-75:01] SPEAKER_02: working? In on the actual completion time of the practice, right then
[75:01-75:20] SPEAKER_05: it's best But this is the way it should have always looked like not just vibing through and it's like oh I don't know where these freaking errors are coming from. What like we're trying to do this thing In the big scheme of things. I would guess I'd be happy if the GCS fuse tied to the bucket is working Yeah, and it mounts it and
[75:20-75:20] UNKNOWN: I
[75:20-75:21] SPEAKER_05: think
[75:21-75:21] UNKNOWN: the system
[75:21-75:22] SPEAKER_05: available to the cluster
[75:22-75:38] SPEAKER_02: it might even be worth for moving the download from the process entirely and Go and download it put in the bucket and then whenever you upload it's already there like that is The theory anyway of how it's gonna work long term.
[75:38-75:40] SPEAKER_05: Oh, I see what you're saying
[75:43-75:45] SPEAKER_02: No, it would do
[75:45-75:46] SPEAKER_05: it the first time
[75:46-76:03] SPEAKER_02: for sure but that's just one step and I Guess the issue with that is you almost Want a clean one right every time just in case there have been updates Shit which I've never actually experienced but it is a thing
[76:03-76:25] SPEAKER_05: over sure like it may certainly worth thinking about it Or like I said, we go just put them in there Like you have the permissions like, you know, all of that stuff Go do it go download it and put it in there
[76:30-76:30] SPEAKER_02: And
[76:30-76:30] UNKNOWN: then
[76:30-76:49] SPEAKER_02: if As I understand it once that gets mounted it just has it right? There's no like It's instantaneous right as instantaneously. Right? so never a spin of the The lag in the beginning of a first run is literally spinning with the cluster
[76:49-77:12] SPEAKER_05: I think it still has to get loaded into the pod. Yeah, because it's a computer But it's loading it from the GCS bucket Like in this in the same zone, right that bucket is in the same zone with the computer It'd be like in the closet like there's a drive in there and the computers in there and it's like loading it from right here And it's
[77:12-77:12] SPEAKER_02: fast
[77:17-77:21] SPEAKER_05: It's not actually downloading it it's already downloaded it's just
[77:34-77:35] SPEAKER_02: I
[77:35-77:35] UNKNOWN: Want
[77:35-77:43] SPEAKER_02: the cluster It should be working pretty fucking quick after you upload that pod the audio file.
[77:43-77:45] SPEAKER_05: I agree. I agree completely
[78:10-78:11] UNKNOWN: You
[78:27-78:27] SPEAKER_05: I
[78:27-78:27] UNKNOWN: just
[78:27-78:30] SPEAKER_05: went right by it like it's done.
[78:34-78:54] UNKNOWN: Yeah I
[79:40-79:41] SPEAKER_05: I
[79:41-79:41] UNKNOWN: For
[79:41-80:36] SPEAKER_05: some reason if I might I was thinking this like CJ with Izzy She's not here she know you We just did yes You
[80:36-80:36] UNKNOWN: You
[80:36-80:38] SPEAKER_05: say you're generating command, okay
[80:46-80:46] SPEAKER_04: Okay
[80:58-80:59] SPEAKER_02: Yeah Yeah,
[80:59-80:59] UNKNOWN: so
[80:59-81:05] SPEAKER_02: I'm guessing still but that format five is the same give me the entire yaml except only this
[81:06-81:30] SPEAKER_05: Right makes sense So I don't understand what this is That memel models cash,
[81:30-81:31] SPEAKER_02: I
[81:31-81:31] UNKNOWN: mean
[81:31-81:34] SPEAKER_02: that should be the bucket, right
[81:37-81:37] SPEAKER_05: I
[81:37-81:37] UNKNOWN: Then
[81:37-81:40] SPEAKER_05: what's that what is this one? It's just
[81:40-81:42] SPEAKER_02: the claim that's like the yaml file
[81:54-81:54] UNKNOWN: It
[81:54-81:58] SPEAKER_05: looks like there's already one there to
[81:58-81:59] UNKNOWN: me I
[82:00-82:10] SPEAKER_02: think But pending one is the bucket and the Top one is how much of that bucket is clean
[82:10-82:11] SPEAKER_04: got it, okay?
[82:21-82:24] SPEAKER_02: You know models cash is what it named the bucket.
[82:24-82:36] SPEAKER_05: Yeah, so I think this is file store Yeah Yeah, that's the the one that's and it's not working because file store is deleted,
[82:36-82:37] SPEAKER_03: right?
[82:38-83:00] SPEAKER_05: Yeah, so I think we need to so it tested it and this one is working Yeah, this old this other because this what it looks like to me. There's a second That's pending Right it's looking for like I said, I didn't know what that was for like it's it was a file store
[83:01-83:03] SPEAKER_02: On some dumb shit, maybe
[83:12-83:18] SPEAKER_05: So I think in this session I'm not gonna update the plan let's delete that
[83:34-83:35] SPEAKER_02: Yeah,
[83:38-83:39] SPEAKER_05: so this is good
[83:47-83:48] SPEAKER_02: Email models
[83:48-83:49] SPEAKER_05: cash
[83:49-83:55] SPEAKER_02: yeah, so on my 151 through 153
[83:59-84:02] SPEAKER_05: Yeah, so we need to get rid of this
[84:10-85:24] SPEAKER_02: It runs a check for that as well on 285 to 288 I
[85:24-85:39] SPEAKER_05: Have not seen that that's cool GCS cache storage. Yeah, this is what we do want when we don't want this
[86:16-86:17] UNKNOWN: I
[86:35-86:36] SPEAKER_05: I
[86:36-86:36] UNKNOWN: Well,
[86:36-86:42] SPEAKER_05: you're gonna have to change the numbers for everything or you're just gonna just
[86:42-86:43] SPEAKER_01: say yeah,
[86:43-86:43] SPEAKER_05: there you
[86:43-86:52] SPEAKER_02: go Oh
[86:52-86:56] SPEAKER_05: Yeah, it's this one
[87:03-87:04] UNKNOWN: I'm
[87:04-87:09] SPEAKER_05: gonna let it do I think this is the new one, right?
[87:18-87:18] UNKNOWN: I
[87:31-87:38] SPEAKER_02: It's slower if By that you mean the definition is it doesn't do as much stuff all at once,
[87:38-88:00] SPEAKER_05: right? Because but all that stuff is slop. That's what that's where it is by a lot comes from It's going super slow This is just the way it looks like you literally have to know what it's
[88:00-88:00] UNKNOWN: doing
[88:00-88:02] SPEAKER_05: and like down to the line,
[88:02-88:21] SPEAKER_02: right? Even if you don't know the code explicitly. Yeah, you need to Understand what it's trying like be able to guess or you need to ask it, right? Force it to not be able to use up its own context. Basically double -a
[88:21-88:26] SPEAKER_05: Giving it small discrete steps following the detail and then do it
[88:26-88:26] SPEAKER_02: again.
[88:27-88:27] UNKNOWN: Yeah
[88:27-88:41] SPEAKER_02: Yeah, I think my thought of it is more likely to devolve into the vodka Any of them can without discipline by the user, but I think yours is more resistant to that
[88:50-89:21] SPEAKER_05: Okay, that's the check What I want to see is is it checking Like the other like is there a step I mean this is just you know, say
[89:21-89:23] SPEAKER_02: literally what gets printed out
[89:23-89:24] SPEAKER_05: Yeah,
[89:24-89:24] UNKNOWN: like
[89:24-89:27] SPEAKER_05: the the cache is ready
[89:29-89:29] SPEAKER_03: Yeah,
[89:30-89:31] SPEAKER_05: you see what I'm saying
[89:31-89:31] SPEAKER_03: for sure
[89:31-89:40] SPEAKER_05: like there should be a set that says the cache is ready But it's just not it's just to say the GCS cache is ready
[90:00-90:03] SPEAKER_02: I Guess maybe I
[90:03-90:05] SPEAKER_05: mean I'm just going to
[90:05-90:07] SPEAKER_02: cuz that's literally just like print statement.
[90:07-90:08] UNKNOWN: Yeah
[90:19-90:20] SPEAKER_02: I
[90:20-90:20] UNKNOWN: Think first
[90:20-90:25] SPEAKER_02: time I've seen whatever they call copilot like it tried to finish it.
[90:25-90:30] SPEAKER_05: Yeah exactly Yeah, I think it should be that
[90:30-90:38] SPEAKER_02: I agree and Basically, this just means hey it didn't break. I made it to this last statement about print a bunch of stuff.
[90:38-90:39] SPEAKER_04: You're right
[90:48-90:51] SPEAKER_05: I Feel pretty good with not really like it's just taking notes.
[90:52-91:01] SPEAKER_02: Yeah, you don't necessarily You're gonna read the same stuff. You just read I guess And we're not referencing the transcripts much anyway, right? This is
[91:01-91:06] SPEAKER_05: just for future reference if we need to go back and like what did we do in what session, right?
[91:12-91:12] SPEAKER_03: Think
[91:12-91:33] SPEAKER_05: that's good Just leave the cluster up for now or yeah, we can take it down whenever Because we're eventually going to this may take us to the end like Building and pushing this not not me it is going to
[91:33-91:33] UNKNOWN: be
[91:33-91:42] SPEAKER_05: Building like so we might as well take the cluster down but building and pushing this is going to be forever because this is the diarization service
[91:50-91:51] UNKNOWN: Container To
[91:51-91:56] SPEAKER_05: you yes, so updating the Dockerfile to use the deep learning container
[92:10-92:30] SPEAKER_02: Yeah, and I think like maybe at the end of the phase Like progress audit and go almost like a Product progress audit to make sure everything's aligned and then reassessment like try to make a better plan than the currently implemented Right and see like
[92:30-92:32] SPEAKER_05: from this point for it Including
[92:32-92:47] SPEAKER_02: oh, let's say again like thinking about the past if we had gotten through this phase in this structure And we had asked it to do it. It might have gone. Oh actually, there's a better container for this We should be using the deep learning container. Let's go back. That's right Yeah,
[92:48-92:48] UNKNOWN: we
[92:48-92:55] SPEAKER_02: didn't find that right weeks after we've been working on it, right? So yeah almost challenge it to like hey optimize and improve what you
[92:55-92:55] UNKNOWN: want
[92:55-92:56] SPEAKER_02: existing structure Yep,
[92:57-92:57] UNKNOWN: and
[92:57-93:11] SPEAKER_02: if it's like, okay, well, let's add big query and do all this things like okay But bring it down if there are true optimizations like hey whisper X would actually be better than regular whisper, right? Okay, well dive deeper why why is it better like that type of
[93:11-93:21] SPEAKER_05: right exactly? Planning planning an assessment independent of execution don't let it vibe cook the whole thing like make a plan Okay, we're gonna do this right session and
[93:21-93:59] SPEAKER_02: then don't rely on that initial plan all the way through Because that was huge context. Yep. So have replaning phases It also could be some shits like oh man whisper to dropped yesterday actually and people are losing their minds Let's go. That's something and literally when we made the initial plan that wasn't a thing. So it made sense that it wasn't That could have been what happened was right,
[93:59-94:04] SPEAKER_05: you know, I don't understand This
[94:04-94:04] UNKNOWN: thing
[94:04-94:08] SPEAKER_05: but that's it I'll fix it
[94:14-94:15] SPEAKER_02: I It's
[94:15-94:15] UNKNOWN: almost
[94:15-94:37] SPEAKER_02: going back to the Jim and I and going like hey don't change anything, but why do you keep saying similarly? Just like explain that shit You
[94:37-94:37] UNKNOWN: That
[94:37-94:47] SPEAKER_02: is the thing I've learned to start doing to like especially in cursor if I just have a question Okay, we don't need to do a new session or any of that stuff. Just answer this question, please
[95:25-95:27] UNKNOWN: I
[95:39-95:43] SPEAKER_05: I It didn't move that It was
[95:43-95:44] SPEAKER_02: called oh
[95:44-95:48] SPEAKER_05: it is clad. Yep. There you go
[96:03-96:04] SPEAKER_02: It's not cursor
[96:04-96:29] SPEAKER_05: Right, but you know, you're creating instructions for cursor You can imagine I Want it to up you
[96:29-96:29] SPEAKER_02: yeah,
[96:29-96:29] UNKNOWN: I
[96:29-96:42] SPEAKER_02: agree This is part of the workflow too if you're keeping it separate and cursors not doing the overall plan for you You're gonna have to update it regularly.
[96:42-96:43] SPEAKER_04: Yep
[97:13-97:30] UNKNOWN: I You
[97:48-97:50] SPEAKER_02: I Yeah
[97:57-97:57] UNKNOWN: So
[97:57-98:04] SPEAKER_05: our big run day so far has been post or and it's only a couple dollars few dollars,
[98:04-98:05] SPEAKER_02: right?
[98:06-98:06] UNKNOWN: Yeah
[98:07-98:23] SPEAKER_02: Yeah, there was some compute going on there with GKE as well Yeah, but of that day was it was basically the compute has been even so The difference between these two days was five. Yeah Don't use it.
[98:24-98:27] SPEAKER_05: Yeah So but the current is eight dollars eight dollars
[98:27-98:30] SPEAKER_02: and five fifty of it was that day,
[98:30-98:30] SPEAKER_05: right?
[98:55-98:56] UNKNOWN: Oh
[98:59-99:01] SPEAKER_05: Not that many things
[99:26-99:26] SPEAKER_02: You
[99:26-99:26] UNKNOWN: Both
[99:26-99:40] SPEAKER_02: in headsets you update that session or that Gemini session you go. Okay. Here's the updated version. Just throw it up into the space Yeah, and I can also interact with it. Hey duplicate that so we can most it's gonna be
[99:40-99:40] UNKNOWN: the
[99:40-99:46] SPEAKER_02: right It has to be there worth $3 ,000 if you get easy
[99:46-99:52] SPEAKER_05: My guess is they're gonna get him down to two two And that'll be enough for me to fight
[99:52-100:22] SPEAKER_02: that'll be enough where games Maybe that should be our focus fuck movies. I'm with you cuz that's experience And especially like mixed reality games Was talking about like a Sasquatch hunt at Carlton landing Yeah, and it's literally like running through and it doesn't have to be smart initially like it can run through trees and shit Right, but you get a pretty dumb one with some dumb glasses that have this thing that you can make a silly little game
[100:27-101:22] SPEAKER_05: We're not getting money from that but that's gotta be like the $20 I Guess I didn't know the diarization that is actually where it
[101:22-101:22] UNKNOWN: is
[101:23-101:31] SPEAKER_02: It never Assume that you can make a plan with the AI so robust that your work is done,
[101:31-101:31] SPEAKER_05: right?
[101:31-101:34] SPEAKER_02: You always tell me
[101:34-102:03] SPEAKER_05: yes exactly always have to provide oversight it detailed oversight In the big scheme of things This is how you do complex things if you break it down into small achievable tasks And execute on those tasks.
[102:03-102:08] SPEAKER_02: Yep Yep,
[102:09-102:30] SPEAKER_05: it is doing the same thing 12 .4 It's gonna do 12 .1
[102:32-102:35] SPEAKER_02: Point So
[102:35-102:35] UNKNOWN: one
[102:35-102:37] SPEAKER_02: two one two dash three
[102:40-102:46] SPEAKER_05: I was looking at that, but I don't know why I chose that one. That's different It's
[102:46-102:46] UNKNOWN: a
[102:46-102:51] SPEAKER_05: package like so it's yes. These are the pie torch in That
[102:51-102:53] SPEAKER_02: is the video specific.
[102:53-102:54] SPEAKER_05: Yes. Yes,
[102:54-102:54] UNKNOWN: this
[102:54-102:56] SPEAKER_05: drivers for Nvidia processors
[102:56-103:08] SPEAKER_02: man, apparently That Chinese AI They basically cracked Yeah,
[103:08-103:14] SPEAKER_05: and we're able to get Nvidia driver or Nvidia chips to work without Yeah, cool to
[103:14-103:17] SPEAKER_02: drive which just was like this slight optimization with their like fuck
[103:18-103:41] SPEAKER_05: I got it So It took Python and pip out because it's in them in that was with it.
[103:41-103:42] UNKNOWN: Yeah
[103:44-103:50] SPEAKER_05: Yeah, and you don't need to install all of this stuff right because it's just in there so maybe fast
[103:50-103:55] SPEAKER_02: I imagine that container takes so many to build itself, right?
[103:55-103:55] SPEAKER_05: Right?
[104:14-104:15] SPEAKER_01: Speech those
[104:15-104:20] SPEAKER_05: are already in there. Okay, so it's taking out torch stuff.
[104:20-104:20] SPEAKER_02: Yeah.
[104:20-104:21] SPEAKER_05: Yeah, it's just removing
[104:21-104:23] SPEAKER_02: that's part of the
[104:24-104:30] SPEAKER_05: It's now included in yeah That's cool
[105:41-105:42] UNKNOWN: Oh Yeah,
[105:42-106:02] SPEAKER_01: yeah. I always got it. Assuming
[106:02-106:04] UNKNOWN: it's right.
[106:10-106:12] SPEAKER_02: I'm just going
[106:12-106:12] UNKNOWN: to
[106:12-106:20] SPEAKER_02: run from the root and copy the diarization file. Maybe tell it about the doctor more.
[106:44-106:44] SPEAKER_01: I'm
[106:44-106:44] UNKNOWN: just
[106:44-106:47] SPEAKER_01: going to have to get through this shit.
[106:47-106:47] UNKNOWN: There
[106:47-106:54] SPEAKER_01: we go.
[106:58-106:59] SPEAKER_02: What am I trying to
[106:59-106:59] UNKNOWN: do
[106:59-107:00] SPEAKER_02: in there,
[107:00-107:00] UNKNOWN: bro?
[107:01-107:17] SPEAKER_02: Oh, it's going to add diarization surface to that. But that's still wrong. I don't like it. Because it's going to also copy the other ones in the doctor, ignore that it's not ignoring. Let's see what it comes
[107:17-107:18] UNKNOWN: up with.
[107:23-107:24] SPEAKER_01: Oh, you got it accepted.
[107:25-107:28] SPEAKER_05: Oh, well we don't want it to do that, right?
[107:28-107:29] SPEAKER_01: I think so,
[107:33-107:34] UNKNOWN: yeah.
[107:43-107:53] SPEAKER_02: I would just say how is it not going to copy the other things? Isn't that not good?
[108:05-108:09] SPEAKER_05: I'm not sure. I don't ever follow this.
[108:12-108:12] UNKNOWN: I
[108:12-108:13] SPEAKER_05: don't understand why it's a problem.
[108:14-108:20] SPEAKER_02: So it can't, when you build from whatever you are, it can't go up
[108:20-108:21] SPEAKER_05: unless I
[108:21-108:27] SPEAKER_02: think it can go and get them and copy them into here and build from here.
[108:27-108:28] SPEAKER_05: What does the doctor ignore do?
[108:29-108:46] SPEAKER_02: That is just like getting north. So anything in there, when you doctor build, it will ignore that. So what we're doing right now is ignore everything and then explicitly call out, here's the things that I do want and say don't ignore them.
[108:50-108:51] SPEAKER_05: Copy the
[108:51-108:52] SPEAKER_02: other.
[108:53-108:55] SPEAKER_05: And the other doctor files is going to copy this.
[108:55-109:06] SPEAKER_02: Right. And in this one, it's going to copy the other ones. So that's going to give us a lot of bloat.
[109:21-109:43] UNKNOWN: Okay. Okay.
[109:43-109:45] SPEAKER_01: Okay. Okay.
[110:08-110:35] UNKNOWN: Okay. Okay.
[110:59-111:16] SPEAKER_02: Okay. We're doing it too much. Doesn't need those. Like, does it need the GKE cluster manager for that organization? No. I don't think so.
[111:24-111:25] SPEAKER_05: Yeah.
[111:26-111:26] UNKNOWN: So
[111:26-111:40] SPEAKER_05: these are exceptions. Right. So basically, so everything in a doctor, it will always include these.
[111:40-111:42] SPEAKER_02: Right. If you're running it from the
[111:42-111:42] SPEAKER_05: root.
[111:42-111:43] UNKNOWN: Right.
[111:44-111:46] SPEAKER_02: And then it will even
[111:46-111:47] SPEAKER_05: in all of
[111:47-111:47] SPEAKER_02: them,
[111:48-111:48] UNKNOWN: exclude
[111:48-111:50] SPEAKER_02: the next section.
[111:51-111:58] SPEAKER_05: Yeah, we want that. Yeah, don't include it in all files.
[111:58-112:02] SPEAKER_02: Right. Anytime you, yeah, never include .git, .pycache, all that stuff.
[112:02-112:07] SPEAKER_05: And these will include in all doctor ignores running or doctor files run from the root.
[112:07-112:09] SPEAKER_02: Yeah. If you build in the root, you're
[112:09-112:09] UNKNOWN: going
[112:09-112:10] SPEAKER_02: to get all three of those.
[112:10-112:13] SPEAKER_05: Right. And that's bloat for
[112:13-112:14] SPEAKER_02: all three of
[112:14-112:14] UNKNOWN: them.
[112:14-112:16] SPEAKER_05: Right. You don't want to add diarization service.
[112:16-112:16] UNKNOWN: So
[112:16-112:26] SPEAKER_02: I guess you want K8s. K8s is like one of the reasons for this function. And that's probably the only one that should be in here. And the other one should be run from their own. Right.
[112:45-112:45] SPEAKER_03: Yeah.
[112:51-112:56] SPEAKER_02: So it's going to copy the entire case directory or whatever directory
[112:56-112:56] UNKNOWN: it is.
[112:56-112:56] SPEAKER_02: Right.
[112:56-112:56] UNKNOWN: And then it will copy the entire case directory
[112:56-113:02] SPEAKER_02: as it needs from the root. It will copy them in as the first part of the build. Use that and then go on.
[113:03-113:03] SPEAKER_04: Right.
[113:25-113:26] UNKNOWN: I
[113:26-113:28] SPEAKER_05: just want to get this started.
[113:53-113:54] SPEAKER_04: Yeah.
[114:10-115:21] UNKNOWN: Okay. Okay. Okay. I
[115:21-115:25] SPEAKER_05: don't even know that there's any other things we could be working on.
[116:25-116:25] SPEAKER_02: So,
[116:25-116:25] UNKNOWN: yeah, it
[116:25-116:37] SPEAKER_02: can do it without diarization, but it is also built to receive. Right. Diarization is the field I get from its initial output.
[116:42-116:49] SPEAKER_05: So, does this have a build and push? Yeah.
[116:50-116:50] UNKNOWN: So,
[116:50-116:52] SPEAKER_05: is refactor both?
[116:54-116:55] UNKNOWN: Okay.
[116:55-116:59] SPEAKER_05: Sorry. Did you just put it back?
[116:59-117:32] SPEAKER_02: Yeah. My guess is it was trying to make a bunch of changes. Okay. So,
[117:42-117:42] UNKNOWN: it's
[117:42-117:43] SPEAKER_05: going to
[117:43-117:43] UNKNOWN: take
[117:43-117:46] SPEAKER_05: us out. I got to go anyways.
[117:46-117:46] UNKNOWN: But
[117:46-117:47] SPEAKER_02: so
[117:47-117:52] SPEAKER_05: it is, it wants to refactor. This is, we're on 1 .3. Yeah.
[117:54-117:55] UNKNOWN: And
[117:55-118:02] SPEAKER_05: then 1 .4 is refactoring transcription and then push both. Yeah. I assume.
[118:02-118:04] SPEAKER_02: Yeah. That was it. You just scrolled past it a little
[118:04-118:06] UNKNOWN: bit.
[118:08-118:20] SPEAKER_05: Yeah. That makes sense. And then phase two is testing. No, no, it's rewriting the
[118:20-118:21] SPEAKER_03: actual Python.
[118:21-118:26] SPEAKER_05: Yeah. Okay. Seems reasonable.
[118:26-118:39] SPEAKER_02: Yeah. Yeah. Watch. And I'll share. That build finished yesterday. I do wish it would just open in Gemini.
[118:40-118:41] SPEAKER_05: It will, but it's just
[118:41-118:41] UNKNOWN: ugly.
[118:41-118:43] SPEAKER_02: Oh, yeah.
[118:44-119:07] SPEAKER_05: I mean, it is like this works. Like if you copy this into directly into cursor, it works. Yeah, it actually is readable. So that's what I was doing the last couple of times is copy that whole gray section. It comes out human readable in here and then read it in here to do what any modifications in there. But it should be good because it's now from the perspective of cursor and not trying to simulate anything.
[119:07-119:08] UNKNOWN: Right.
[119:09-119:15] SPEAKER_05: And although it's Google, you know how cursor works. Right. Don't connect me with your bullshit.

==================================================
Generated on: 2025-07-30 17:05:30
Total words: 10498
Total speakers: 7
==================================================




Summary:


creation_date: 2025-07-30 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1645_ZOOM0042_transcript.txt participants: [SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04, SPEAKER_05, SPEAKER_00]
Executive Summary
This meeting centered on refining the development workflow for an [[AI Agents|AI-driven]] project, moving from a "vibe coding" approach to a more structured, session-based methodology. The participants discussed the concept of breaking down the development process into discrete "sessions" (e.g., planning, focus, update plan) to better manage the [[AI Tools|AI's]] context and prevent it from "spinning out." This new approach emphasizes manual session running, where the human user provides explicit, context-limited prompts for each task, ensuring active oversight and engagement. This method is contrasted with their previous approach of letting the [[AI Tools|AI]] run with broader instructions. The team decided to test this new, granular workflow on their ongoing [[Transcription Service]] project, recognizing that while it may feel slower on a micro-level, it leads to a more stable and predictable development process overall. They also touched on the broader implications of [[AI Tools|AI]] in programming, viewing the ability to effectively manage and prompt an [[AI Tools|AI]] as the next essential skill for developers.
Key Topics Discussed
	•	Session-Based Development Workflow
	•	The team discussed moving away from a freeform "vibe coding" approach to a more structured workflow using different types of "sessions" to guide the [[AI Tools|AI]].
	•	Proposed session types include:
	•	Planning Session: High-level project planning to create or update the main [[Project Plan]] or [[README]].
	•	Focus Session: Takes a specific set of tasks from a "focus [[README]]" and works until they are complete.
	•	Update Plan Session: Compares the work done in a focus session against the initial expectations and determines the next steps.
	•	This approach is designed to manage the [[AI Tools|AI's]] context by breaking tasks into smaller, more manageable chunks.
	•	The human user's role shifts to one of active oversight, guiding the [[AI Agents|AI]] by selecting and initiating the appropriate session for the next phase of work.
	•	Context Engineering vs. Vibe Coding
	•	The new session-based method was framed as a form of "context engineering," where the user carefully curates the information provided to the [[AI Agents|AI]] for each task.
	•	This is seen as the opposite of "vibe coding," where the developer allows the [[AI Agents|AI]] to work with a large, open-ended context, which can lead to unpredictable results or "spinning out."
	•	The goal is to find a balance, making context engineering more intuitive ("vibey") while making vibe coding more structured.
	•	The Future of Programming with [[AI Tools|AI]]
	•	The participants view the ability to effectively prompt and manage an [[AI Tools|AI]] as the next evolution of programming skills.
	•	They argued that developers who cannot efficiently use [[AI Tools|AI]] will be at a disadvantage, as they will be too slow to keep up with the pace of development.
	•	This skill set is compared to the shift from traditional animation to digital animation; while the foundational skills are still relevant, the tools and methods have fundamentally changed.
	•	Practical Implementation and Testing
	•	The team decided to test the new session-based workflow on their [[Transcription Service]] project.
	•	They modified the [[Cursor Rules]] in their development environment ([[Cursor]]) to support this new method, removing the rule that automatically read the entire [[README]] at the start of a new session.
	•	The new process involves manually providing a detailed prompt for each specific session, ensuring the [[AI Agents|AI]] only has the context it needs for that single task.
Action Items & Decisions
	•	Decision: To adopt a manual, session-based development workflow to better manage the [[AI Tools|AI's]] context and ensure active human oversight.
	•	Decision: To test this new workflow by continuing development on the [[Transcription Service]] project.
	•	Action: Modify the existing [[Cursor Rules]] to remove the automatic reading of the main [[README]] at the start of a session.
	•	Action: Proceed with the project by manually providing specific, context-limited prompts for each development session.
Suggested New Links/Tags
	•	[[Context Engineering]]
	•	[[Vibe Coding]]
Linked Concepts
	•	[[AI Agents]]
	•	[[AI Studio]]
	•	[[AI Tools]]
	•	[[Apple Vision Pro]]
	•	[[Cursor]]
	•	[[Cursor Rules]]
	•	[[Diarization Service]]
	•	[[End Session Protocol]]
	•	[[GCS Fuse]]
	•	[[Gemini]]
	•	[[GitHub]]
	•	[[Project Plan]]
	•	[[Proof of Concept]]
	•	[[README]]
	•	[[Transcription Service]]
	•	[[Whisper]]
#Tags
	•	#AI
	•	#Automation
	•	#Deployment
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom43
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1445_ZOOM0043_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:03-00:07] UNKNOWN: There's like 4 cents of
[00:07-00:10] SPEAKER_05: the yesterday. Good!
[00:10-00:10] UNKNOWN: So
[00:10-00:17] SPEAKER_05: yeah. $8 .88.
[00:31-00:35] SPEAKER_03: So we need to start today with some planning?
[00:36-00:53] SPEAKER_05: Yeah, so I was just reading the daily summary just to check and make sure. I think it did a pretty good job. Basically, I actually like how it did it. Big overview and then it broke it down into like in the morning this happened, mid -morning this happened, afternoon this happened.
[00:53-00:54] SPEAKER_03: Right, okay. And then...
[00:55-00:56] SPEAKER_05: Where is that?
[00:56-00:57] SPEAKER_03: It's in the summaries?
[00:57-01:05] SPEAKER_05: Yeah, the daily summary. No, the other one. It's daily MD reports.
[01:06-01:06] UNKNOWN: Okay.
[01:07-01:31] SPEAKER_05: And it's the last one. $8 .87. So ultimately, like we built those two images and pushed them and you, in the morning, we confirmed everything basically before that push. Those are the next thing that are up. So I think spinning up the cluster and seeing if those services are available and doing the right thing. You think just keep pushing
[01:31-01:40] SPEAKER_03: through? Or... Like what you're proposing is that we push through this plan as it was developed?
[01:40-01:40] UNKNOWN: I
[01:40-01:45] SPEAKER_05: think so, like the latest version of it that you sent out yesterday morning.
[01:46-01:46] UNKNOWN: And
[01:46-02:00] SPEAKER_05: whatever, I think 1 .4 is what I was working on yesterday. So then 1 .5 mostly we did. Yeah, image build and push. Right, like that was, we did that as part of 3 and 4. Right, so
[02:00-02:01] SPEAKER_03: we're basically at the step two.
[02:01-02:17] SPEAKER_05: Yep. So the actual logic, yeah. Unless we want to go, like do you want to ask Jim and I clean about whether we should pivot to WhisperX for the whole pipeline or
[02:17-02:28] SPEAKER_03: keep it separate? Sure, like that's the only thing that I meant by planning, like because you discovered yesterday that you could do that. And effectively what I want to do is go back to this. It's
[02:28-02:28] UNKNOWN: like
[02:28-02:40] SPEAKER_03: it's already up and I don't know if it has enough context window to continue having this conversation. Right. But I'm going to ask right here. What do you think, or do you want to think? No, that's
[02:40-02:43] SPEAKER_05: fine. That's what I did yesterday. Like the one you sent me,
[02:43-02:43] UNKNOWN: you
[02:43-03:21] SPEAKER_05: can basically, you can't continue it necessarily, but you can make a copy and continue from there. Right. And that's what I did. And it said, that's where it said like, well, here's why not. And it made the argument for the GPU thing. But it only made that argument after I pushed back a couple of times. So it wasn't obvious to me that it wasn't just like holding to its guns or holding to the design that was in the context. I'm going to do a clean one as well. Just see what it says. I should move over to GROK.
[03:27-03:34] SPEAKER_03: Yeah. I want to... Can you see the GROK, please? Is it up to four now?
[03:35-03:44] SPEAKER_05: I don't know, but it's got tasks that you can schedule. Huh. No, I haven't. And various files that you can... this is... they're still working over there.
[03:46-03:53] SPEAKER_02: Do they keep talking about releasing a new one? Number four, yeah. That's still three.
[04:31-04:32] UNKNOWN: Okay.
[05:01-05:04] SPEAKER_05: What's the Diorization Service called? Piano.
[05:05-05:05] UNKNOWN: P
[05:05-05:06] SPEAKER_05: -Y -A -N -N -O -T -E.
[05:53-09:15] UNKNOWN: Okay. Okay. Okay. Okay. Okay. Okay. Okay. What did you come
[09:15-09:38] SPEAKER_05: up with? GROK said a bunch of words and ultimately said do both as one because it's simpler unless you have a complex project that requires tuning of the Diorization process. Same.
[09:41-09:54] SPEAKER_03: You should consider a separate pipeline approach only if you encounter specific and consistent issues with Diorization accuracy in the integrated whisperX of AFA. So basically,
[09:55-09:55] UNKNOWN: if
[09:55-10:01] SPEAKER_03: it's complex or you're having... getting consistency problems, then consider splitting them. But otherwise, just use whisperX.
[10:01-10:01] UNKNOWN: Yeah.
[10:01-10:01] SPEAKER_03: And some
[10:01-10:17] SPEAKER_05: of them, like it was... some of the cons for whisperX, the full thing, was like increased processing time on the GPU for using it all the way across. But that was also one of the cons on the split one because we only had one GPU. Right. Exactly.
[10:17-10:27] SPEAKER_03: Like it just is what it is. For us, like the reduced complexity, I don't know that we need super high accuracy or like unless it's just trash, but I can't imagine it's going to be that.
[10:27-11:02] SPEAKER_05: Yeah, but it's going to output and we have an AI that I, from experience, know is really good at dealing with noise and taking the context out of a focus thing. Yeah. Because I just kind of... I don't worry about what I'm typing. Yeah. I know it's close and it's going to understand what I'm saying. Right. And so with those two things, we should get to our ultimate goal of this pretty good tagged up synthesized, but also logged fully transcribed and all this like, I don't know, there's going to be inaccuracies. It's never going to be 100%. Right. I'm good with it. Yeah, I'm
[11:02-11:06] SPEAKER_03: good with whisperX. Like that means it simplifies a lot of things. Right.
[11:07-11:07] UNKNOWN: It
[11:07-11:08] SPEAKER_03: went from three steps to one.
[11:08-11:15] SPEAKER_05: Yeah. And if what I was looking at yesterday, based on what Kershaw was saying is true, then... It's already ready.
[11:16-11:21] SPEAKER_03: Yeah, like that's it. Like the image that we have will do it. Right. Right now. And
[11:21-11:24] SPEAKER_05: we can very easily pivot it to do the other way, the split.
[11:25-11:25] UNKNOWN: Like
[11:25-11:39] SPEAKER_05: it takes, like basically, as I understand it, I didn't look super deep into it because we hadn't even talked, but it's like a variable. Right. That says, and I think it's like request diarization or something like that is what it said. Like, hey, it just depends on whether you tell whisper to diarize it or
[11:39-11:40] SPEAKER_02: not.
[11:42-11:42] SPEAKER_03: I'm going
[11:42-11:42] UNKNOWN: to
[11:42-11:49] SPEAKER_03: see if there's enough context to replaying this. Did it suggest or did you do a clean? I did a clean one. Really? I changed my mind.
[12:20-12:29] SPEAKER_05: Yeah, it's literally upload to one bucket, pass it to one service and have one output. Right. Like that's amazing.
[12:39-12:44] SPEAKER_03: I don't know if it can do it. I've replanned it like five times now.
[12:50-12:50] SPEAKER_05: Nothing else.
[12:50-12:50] UNKNOWN: You
[12:50-12:57] SPEAKER_05: just grab that transcript, grab its canvas, start a new chat with the most current one. Right. Exactly.
[13:05-13:11] SPEAKER_03: The problem is it's going to produce an output. The question is, is it trash? Yeah, that's
[13:11-13:17] SPEAKER_05: fair. Does Jim and I throw in here like, hey, you want to start a new chat flags?
[13:18-13:19] SPEAKER_03: It just starts being dumb.
[13:19-13:19] UNKNOWN: Start
[13:19-13:36] SPEAKER_03: sucking. It's good so far. Okay. Okay. Okay.
[14:03-14:04] UNKNOWN: Okay.
[14:12-14:23] SPEAKER_05: Yeah, my instinct says that it is the most optimized it can be as a package that was released by open AI. Right.
[14:24-14:24] UNKNOWN: But
[14:24-14:32] SPEAKER_05: I guess if there's like fine, fine tuning and it's like there's decision points at some point and they went with a default, maybe. But I
[14:32-14:39] SPEAKER_03: think this is what that tuning is talking about. Like it's taking a model and running it through fine tuning with examples.
[14:39-15:02] SPEAKER_05: I imagine there's like, yeah, one of the things that mentioned was like if there's a lot of background noise or something. So there might be variables literally like that you have to set. And so they set it some way and it's like, you know, account for or one of the things that mentioned is control over number of speakers and things like that. Maybe they don't even provide that. So there might be an added thing that we have to put yet. Maybe.
[15:03-15:12] SPEAKER_03: But that's like very high level stuff. Like if you're making a professional service or something like that. I don't know. A commercial service.
[15:14-15:27] SPEAKER_05: I mean, I still have you gone through with a fine tune. Literally the service you pay for acknowledges that it's not that accurate because they offer a human red one. They might be doing this. Like for real.
[15:27-15:27] UNKNOWN: They
[15:27-15:27] SPEAKER_05: might
[15:27-15:46] SPEAKER_03: have taken whisperX and thrown it up there. I assume they are. Right. That's what. And they're controlling costs by how much you pay and how they're controlling their profitability by making sure you only get so many minutes and things like that. You look at what
[15:46-16:18] SPEAKER_05: we've seen, like those costs probably line up pretty well to account for like business overhead. Yeah. Because you're paying, we think about, I mean, we think it should cost less than a dollar for the 10 minute or for an hour. Yeah. We're paying for their cars. Yeah. Well, I don't even think it's that. We're paying for their offices and their employees. Sure. Probably. Like I don't think any of, I don't think that service is making billions. There's probably a few people at the top that got to like scrape their little piece off of the VC stuff.
[16:20-16:30] SPEAKER_03: Deprecate the diarization service Dockerfile. Dockerfile, refactoring, transcription service. Yeah.
[16:31-16:31] UNKNOWN: So
[16:31-16:33] SPEAKER_03: just. Yeah. Make
[16:33-16:34] SPEAKER_04: it the
[16:34-16:35] SPEAKER_03: full thing.
[16:44-16:46] SPEAKER_04: What was that phase? Just
[16:46-16:46] SPEAKER_03: testing. That,
[16:47-16:47] UNKNOWN: this
[16:47-16:54] SPEAKER_03: was the build, still the build and push. So this is doing the Dockerfile and then the build and push step.
[16:54-16:54] UNKNOWN: And
[16:54-17:12] SPEAKER_03: then. From there it's. Phase. Pretty much the same. It's just a different refactoring, but. Right. So I think that we do two things. One is give this to cursor. Like say, Hey, this is a new plan. Yeah. Because it had like the stuff up here is a better, a new update of,
[17:12-17:12] UNKNOWN: Hey,
[17:12-17:29] SPEAKER_03: what we're trying to do. Right. Like the design. And then it'll refrag or I frag as a military or whatever. It'll read, it'll adjust the steps. Oh yeah. And. And then we'll, we'll still manually do it just in case it's in there.
[17:29-17:33] SPEAKER_05: Yeah. Do you want to delete the refactoring implementation more time it's in there?
[17:34-17:35] SPEAKER_03: I do think we do that. Since
[17:35-17:37] SPEAKER_05: I mean, that's what this is going to become.
[17:37-17:37] SPEAKER_03: Right.
[17:37-17:37] UNKNOWN: Basically
[17:37-17:50] SPEAKER_03: is my guess. Copy the contents. And I actually also want to share canvas. Oh, well,
[17:50-17:50] UNKNOWN: I
[17:50-18:03] SPEAKER_03: just broke my copy. And they can't read this. I tried to give it that link. I want to copy the
[18:03-18:18] SPEAKER_05: content. Yeah. It's Gemini, but not completely. Yeah. It says it needs a login. That's fair. Actually, no, it's not. You don't have to log in to look at it. I know because whenever you share it with me, there's a login button at the top while I'm
[18:18-18:22] SPEAKER_03: reading it. I asked, well, I gave it the link. It's like,
[18:22-18:22] UNKNOWN: Hey,
[18:22-18:25] SPEAKER_03: can you read this install now?
[18:25-18:46] SPEAKER_05: Yeah, I did it. It didn't come with a little pop up. So I assume it's a incremental. Might as well. Docker has a little. Yeah. What's the thing is always there. I
[18:46-18:46] UNKNOWN: don't
[18:46-18:58] SPEAKER_05: know why it seems like a bad design icon. Definitely in the phase of like, you want to delete this? Yeah,
[18:58-18:58] UNKNOWN: I
[18:58-19:29] SPEAKER_05: think so. I'm starting to be wondering if any content that I'm taking in is real or if it's a. Oh, yeah, I'm with you. Like, I'm pretty sure that one you pointed out yesterday was the real guy because he's got like a big channel that's existed for a while. But I do a lot of times, especially when I'm just listening, go like, is this a person doing like the standard presenter voice?
[19:30-19:30] UNKNOWN: Or
[19:30-19:32] SPEAKER_05: is this an AI not
[19:32-19:38] SPEAKER_03: doing a person that well? Right. I get it. Should I have started a session? I should have started a session.
[19:39-19:39] SPEAKER_05: Yeah,
[19:39-19:39] UNKNOWN: probably.
[19:54-19:59] SPEAKER_05: Because pretty soon the answer is almost always going to be not real.
[19:59-19:59] UNKNOWN: It
[19:59-20:00] SPEAKER_03: is.
[20:00-20:00] UNKNOWN: I
[20:00-20:00] SPEAKER_05: agree. It's
[20:00-20:03] SPEAKER_03: probably more than we think already.
[20:03-20:03] UNKNOWN: For
[20:03-20:11] SPEAKER_03: sure. Because, you know, YouTube, right, because there's videos on there that are I don't know if they're not real, but certainly not real voices.
[20:12-20:12] UNKNOWN: And
[20:12-20:20] SPEAKER_03: they're like purse people, less channels, whatever. Right. There's a lot of them. Like a third.
[20:21-20:31] SPEAKER_05: Some of them crank out a lot of content. There's a lot. Yeah. And it's just going to be more and more. The more these tools become available to more people.
[20:37-20:37] UNKNOWN: Sorry.
[20:44-20:46] SPEAKER_05: It's cool that you noticed that.
[20:46-20:47] SPEAKER_03: Yeah.
[21:14-21:16] UNKNOWN: Hold on.
[21:21-21:22] SPEAKER_03: Did I do that right?
[21:29-21:31] UNKNOWN: I think so.
[21:35-21:37] SPEAKER_05: It didn't do it.
[21:38-21:39] SPEAKER_02: Like,
[21:39-21:39] SPEAKER_05: formatted
[21:39-21:49] SPEAKER_03: the way. The detailed implement. I don't know. I don't think that I copied. Oh yeah, it was right here. Yeah. With transcription.
[21:49-21:49] UNKNOWN: It
[21:49-21:53] SPEAKER_05: says not a production system in there yet on the third line.
[21:55-21:55] SPEAKER_00: Yeah.
[21:55-21:56] UNKNOWN: Okay.
[21:57-21:58] SPEAKER_05: Our windows are not in
[21:58-21:58] UNKNOWN: the right place.
[21:59-22:04] SPEAKER_05: I appreciate that it wrote the not a production thing too. Yeah. I'm sure you got it in there.
[22:04-22:08] SPEAKER_03: I did when I was doing the design step.
[22:17-22:19] SPEAKER_04: Yeah.
[22:35-22:43] SPEAKER_03: So we're good with bucket creation and documentation. And fuse driver. Yeah. We might need
[22:43-23:02] SPEAKER_05: to. Want to go back through them? Yeah, go through and maybe delete some and make sure I assume like whichever one is just called transcription output is what we want to keep. Yeah. But like diorization output and alignment and all that stuff. I think we had some bad naming to begin with.
[23:11-23:15] SPEAKER_03: But we did do this. Like, so this one is just making the new bucket. Yeah, the bucket for
[23:15-23:16] SPEAKER_05: the model
[23:16-23:23] SPEAKER_03: cache. The question is, does it still does have the same name? Oh
[23:23-23:31] SPEAKER_05: yeah. Another con on there was you have to provide the hugging page token. So motherfucker, that's both of them. No,
[23:31-23:31] UNKNOWN: I
[23:31-23:45] SPEAKER_05: think only the whisper X uses hugging uses pilot, uses the exact same model. Oh, but I think it's built into it. You have to provide the token. Okay. Good. Well, I mean, according to Rock and that YouTube video I watched yesterday. Got it.
[23:47-23:54] SPEAKER_03: So I think we're good with these first two steps. I agree. I'm going
[23:54-23:54] UNKNOWN: to
[23:54-23:54] SPEAKER_03: ask.
[23:55-23:55] SPEAKER_02: The
[23:55-23:59] SPEAKER_05: third one was actually like deprecated.
[23:59-24:09] SPEAKER_03: Yeah. So now I skipped that one on accident. So 1 .1 and 1 .2. I'm going to ask cursor. Do you think we need to go back and do 1 .1 and 1 .2?
[24:12-24:18] SPEAKER_05: Yeah, because even the way it wrote 1 .1, it said like GCS bucket update.
[24:39-24:59] UNKNOWN: Okay. Okay.
[25:29-25:32] SPEAKER_03: You determine. Yeah, let it figure out what it needs.
[25:42-25:45] SPEAKER_05: I assume it's going to look at the actual transcripts. Yeah.
[25:45-25:45] UNKNOWN: I don't
[25:45-25:46] SPEAKER_05: know what you said,
[25:47-25:48] UNKNOWN: but
[25:48-26:15] SPEAKER_05: it surprises me sometimes. I'll get rid of a 13 gigabyte image too. Yeah. I had to do it.
[26:15-26:15] UNKNOWN: It said
[26:15-26:22] SPEAKER_05: that would be like $2 a year or something like that in the registry. But it's
[26:22-26:27] SPEAKER_03: super cheap storage, which is very cheap everywhere except for file store.
[26:29-26:54] SPEAKER_05: Yeah. Storage that's like being handled for you and readily available at a moment's notice. Not as cheap. Even file store stands out as a big variable on a month where we spent $9. I agree. So it's not like, holy shit, that cost like the compute did.
[26:54-27:04] SPEAKER_03: Right. We let it run for a fucking day. Yeah. But running that freaking file store is going to be a few dollars a day just sitting there. And it didn't even have a bunch of stuff in it.
[27:04-27:04] UNKNOWN: It
[27:04-27:10] SPEAKER_05: had almost nothing. Yeah. It might have had nothing. I think it did actually.
[27:12-27:21] UNKNOWN: It's huge. Yeah.
[27:43-28:31] SPEAKER_05: I think the next session should be 1 .3. That's like, because it said 1, 1 and 1, 2 are basically good. So get the CLI out, look at the code, see what we need to get rid of. Yeah. Should be quite a bit actually. I agree. I would really like to have this done before Saturday. I was going to say,
[28:31-28:31] UNKNOWN: I
[28:31-28:40] SPEAKER_05: think we're going to have it done this week. I'd like to be able to use it when we work with CJ. Yeah. And even like show it to him a little bit. Maybe show him all the transcripts and shit.
[28:40-28:43] SPEAKER_03: Yeah. And even like this process of like we're talking to it
[28:43-28:55] SPEAKER_05: like a worker. Yeah. Like it's part of a team. Yeah. You have when you're working solo with it, again, like don't expect it to just answer you. Right. Expect it to be like another person on your team.
[28:55-28:59] SPEAKER_03: With limitations and capabilities that are just different than yours.
[28:59-28:59] UNKNOWN: And
[28:59-29:08] SPEAKER_03: superpowers. Right. Yeah. It has a lot of capabilities, has some limitations. Right. But so do you. Right. And it's just, it's part of the team and you got to compensate for it.
[29:18-29:34] SPEAKER_05: And even get him into coding. Maybe. Like, hey, we didn't write any of this. Right. We put in our, you know, few hundred hours at least of learning a lot of stuff. But he might be a good use case of like, well.
[29:34-29:42] SPEAKER_03: You got to start somewhere and you don't need to deep, super deep dive. You just need to understand what it's doing like. And we're here to guide and help you.
[29:42-29:42] UNKNOWN: He
[29:42-29:42] SPEAKER_03: might even be a
[29:42-30:01] SPEAKER_05: good team member in the sense of like, well, he's the person we're trying to make the tool work for. Exactly. Hey, don't delete my budget emergency chef. Yeah. We probably want to go back through that sucker and make sure it's working at the end of all of this. I agree.
[30:01-30:01] UNKNOWN: I
[30:01-30:03] SPEAKER_05: think we're doing mostly manual
[30:03-30:13] SPEAKER_03: monitoring for now. Yeah, it is for the overnight either left something on or got hacked in bread. Somebody's trying to use my one freaking GP.
[30:15-30:15] UNKNOWN: But
[30:15-30:38] SPEAKER_03: it's just one. It's not the type. It's not just L4. It could be an A100. We could use an A100. Yeah. It's just more expensive. Well, I don't know. It's that maybe it runs right. That may be something we may want to move up to a more powerful one because. It runs less. Yeah, it may run everything in 10 seconds.
[30:38-30:42] SPEAKER_05: My guess is the math is close, but the
[30:42-30:43] SPEAKER_03: cheaper ones are actually cheaper.
[30:43-30:44] SPEAKER_05: Yeah.
[30:45-30:52] SPEAKER_03: If you specifically don't care about speed and only care about cost, then the cheaper one is cheaper.
[30:52-30:56] SPEAKER_05: Yeah, you have to introduce other variables of why you need it done quickly. Right.
[31:22-31:23] UNKNOWN: Okay.
[31:35-31:59] SPEAKER_03: I like it. Yeah. So I'm going to have it develop the sessions with the same kind of concept even like with the goal of being give me a prompt, all things necessary to do. I don't know that you need that because it.
[31:59-32:00] SPEAKER_05: I
[32:00-32:00] UNKNOWN: think
[32:00-32:22] SPEAKER_05: in this case, it's got a list of things that needs to go delete. So I think it can just do that. Because those are the sessions and the prompts are like, we'll delete those things. Add that stuff to get to delete the deprecated service directories.
[32:23-32:31] SPEAKER_03: Or maybe we just do all of these zero sessions, phase zero sessions. That's what I think. Like right now before we do a new session. Yeah. Go
[32:31-33:01] SPEAKER_05: ahead. Knock that stuff out. You've got a great list. Yeah. Start with phase zero cleanup and then the new session will be 1 .3. I don't think there's a ton of context in here so far. I agree. And even if it fucks around and delete something we need,
[33:01-33:03] SPEAKER_03: we'll put it back. Yeah. It's fine.
[33:03-33:13] SPEAKER_05: Or you'll just make it again. It's fine. Exactly. Man, in the checklist thing, there is something to it. It's like a little bit of just context efficiency.
[33:14-33:21] SPEAKER_03: Yeah. I kind of want to turn it in auto. Not auto down, not the agent,
[33:22-33:22] UNKNOWN: but
[33:22-33:24] SPEAKER_03: like. Let it just run stuff. Yeah.
[33:25-33:33] SPEAKER_05: I'm not there yet. I guess you can auto run as long as you're paying attention. Because it's not going to run like a GPU. It's
[33:33-33:36] SPEAKER_03: going to run those things right there. Right. And you're going to watch. I'm not going
[33:36-33:53] SPEAKER_05: to do it. Okay. Be careful of the external sources. Getting in there and getting it to run a bunch of commands on GCP as you.
[33:53-33:56] SPEAKER_03: Yeah. I'm going to turn it back off after it finishes these steps.
[33:56-33:56] SPEAKER_05: That makes sense.
[33:58-33:58] UNKNOWN: It
[33:58-34:19] SPEAKER_05: would be interesting if you could programmatically do that. I know you don't want that. You want to have to click it. And you're watching the same. It just makes you not have to click the button seven or eight times throughout the process.
[34:19-34:22] SPEAKER_03: And I know the steps is going to run.
[34:23-34:23] SPEAKER_05: Yeah.
[34:24-34:31] SPEAKER_03: And I assume at the end of that it's going to stop. Right. If it keeps going and doing like going through 1 .3. Yeah, it didn't stop.
[34:32-34:50] SPEAKER_05: That's where like you don't want to go run errands while it works. Because you'll come back to who the fuck knows what. Hopefully it just sit in there waiting for you to ask it something. Right. So is it auto applied? Yeah, I think it just
[34:50-34:53] SPEAKER_03: is going to do that whole to do list is my I've never done this.
[34:53-34:53] UNKNOWN: But
[34:53-35:02] SPEAKER_03: my guess is it's going to go through those tests and hopefully stop. But I think it just keeps keeps going.
[35:02-36:11] SPEAKER_05: Yeah. Yeah, I don't hate it as you're still sitting watching it. Right. That's that makes sense. But almost to the level of like even if you're just going to grab a drink, literally stop in the middle of what it's doing. Yeah. Or just change it to auto if that's doable now. But that's a little dramatic. But going to get a drink could be like, oh, I need to go to look at that thing at the pool. And then somebody showed up to do something. And again, in most scenarios, it'll probably be fine still. But there's a couple where it's not. And it quietly spins up a fucking always on cluster. Yeah. With a public API key or some retarded like that. And even then, we would probably catch that and go like,
[36:11-36:11] UNKNOWN: what
[36:11-36:12] SPEAKER_05: the fuck are these logs?
[36:12-36:12] UNKNOWN: I
[36:12-36:14] SPEAKER_05: don't know. Yeah, exactly. But still.
[36:28-36:29] UNKNOWN: Yeah.
[37:00-37:06] SPEAKER_03: This is working. Like our overall process, not just this thing right here, like just being able to say,
[37:06-37:06] UNKNOWN: hey,
[37:06-37:11] SPEAKER_03: go back and look at what we did. Like it is the brain. You got
[37:11-37:13] SPEAKER_05: some context and it was able to look it up.
[37:13-37:23] SPEAKER_03: Yeah. And hey, like we want to execute this new plan. Go enforce like in not enforce. Whatever. And
[37:23-37:23] UNKNOWN: act.
[37:23-37:27] SPEAKER_03: Make do this new plan. Clean up, do whatever. Look at what we've done.
[37:27-37:27] UNKNOWN: And
[37:27-37:39] SPEAKER_03: yeah, I understand. And it's doing it. Knocking it out. It understands the context because we have these notes. Right. And it's not just, hey, load all of this and understand. It's like, no, go look. Right. It's in
[37:39-37:48] SPEAKER_05: there. And gave it specific direction. But this is also like it kind of did it on its own. Like this is an agent. Yeah. Versus a workflow.
[37:48-38:04] SPEAKER_03: Yeah. But it was augmented by logs. Right. By notes or whatever. And the only way that works is these transcripts. Right. Like it's just keeping track of everything. And if you want to know what happened,
[38:04-38:04] UNKNOWN: go
[38:04-38:10] SPEAKER_03: look. Yep. There's the auto run option. Yep. So you can't turn it off.
[38:11-38:16] SPEAKER_05: And I assume not interrupt it. It will just ask before it
[38:16-38:16] UNKNOWN: runs
[38:16-38:16] SPEAKER_05: the next one.
[38:21-38:22] UNKNOWN: It would
[38:22-38:26] SPEAKER_05: be interesting to introduce like,
[38:26-38:26] UNKNOWN: hey,
[38:26-38:41] SPEAKER_05: run 11 commands. Do whatever the fuck you want. But run the next 11. Then you could, in theory, get up, go out, and come back and be like, OK, well, what 11 commands did it run?
[38:41-39:13] SPEAKER_03: Right. I'm less comfortable with that than I don't think I would have put it in auto run if it didn't have this planning thing there. Like if I can see exactly, like, hey, I know exactly what you're getting ready to do. Yeah. And not just random. Like it used to be. It's not random. But it's on this path just trying to figure things out. Guessing as it goes. Like this is equivalent to what we've just done. Like, hey, here's a plan for what we need to do. Yes. Do you agree with this plan? OK. Well, execute the plan. And stop. And then we'll re
[39:13-39:13] UNKNOWN: -plan. So in
[39:13-39:13] SPEAKER_05: this case,
[39:13-39:13] UNKNOWN: you
[39:13-39:19] SPEAKER_05: could have, in theory, said run six. There are six to do steps. Whatever number you pick out of there.
[39:20-39:20] UNKNOWN: But
[39:20-39:29] SPEAKER_05: generally, you should also then when you come back, literally look at all six, look at any changes. That's one thing I'm curious about is like,
[39:29-39:29] UNKNOWN: can
[39:29-39:58] SPEAKER_05: you see what it changed in the files? My guess is no. Like they aren't highlighted green. Right. Yeah. It's just there. So I don't love that. I guess I could track it down through the git changes. That's probably the move. And you can get them in the chat as well. Like it says it right there.
[39:59-40:39] SPEAKER_03: Yeah. It doesn't. You can't see the changes. It's just in there. Right. It auto accepts. Yeah. We've gone through so many ups and downs and changes. And now this is much more simplified. Yeah. I guess it's on demand. I don't know if I'd call it on demand cluster. But a single job. There's going to be two services. I think still the controller and the actual jobs.
[40:46-40:50] SPEAKER_05: And it recognized that and didn't delete the job controller.
[40:51-40:58] SPEAKER_03: Yeah. So I think, yeah. It's going to say it needs to be updated or anything. Yeah. But we'll do that.
[41:04-41:13] SPEAKER_05: So what I assume it didn't do is delete those GCP resources. But I think that was part of the list,
[41:13-41:13] UNKNOWN: right?
[41:15-41:16] SPEAKER_05: I don't
[41:16-41:16] UNKNOWN: know.
[41:16-41:28] SPEAKER_05: Oh, there's got two more steps down there. Makes sense.
[41:47-41:55] SPEAKER_03: I think that's the next step before we go to 1 .3 is, okay, now look at GCP. Go look at it. It did it before.
[41:56-41:56] UNKNOWN: But
[41:56-42:01] SPEAKER_03: look at it. But specifically, go clean up any unnecessary service accounts.
[42:02-42:03] SPEAKER_05: We dropped down the to -do list.
[42:03-42:03] UNKNOWN: It
[42:03-42:10] SPEAKER_05: might be. It's going to go clean up the container registry.
[42:10-42:15] SPEAKER_03: It's going to do PubServe. Yeah. But specifically point it to service accounts.
[42:15-42:27] SPEAKER_05: Yeah. And maybe like I assume that's the Kubernetes service account manifests. But like it's got all three of them, I assume, in it still.
[42:28-42:29] SPEAKER_03: So theoretically,
[42:29-42:29] UNKNOWN: we
[42:29-42:40] SPEAKER_03: just need, we had a service account in GCP for each of the services. But now there's only one service. Right. So, yeah, exactly.
[42:49-42:50] SPEAKER_04: Oh,
[42:51-42:52] SPEAKER_03: it started
[42:52-42:52] SPEAKER_05: at
[42:52-42:52] UNKNOWN: four.
[42:53-42:55] SPEAKER_02: Okay. Point four.
[42:58-42:58] UNKNOWN: Yep.
[43:08-43:29] SPEAKER_03: And theoretically, it can clean these too. Yeah. Like it can look, I mean, in the same way, these are files on my computer. Right. Like you can just, for sure, go in there and get rid of these too that it doesn't need. I'm not necessarily ready to do that because if we do go back and do something with the layer, you know, it's downloaded again. Yeah, and they're still in good. Right. We just have
[43:29-43:31] SPEAKER_05: to rebuild them and do all that,
[43:32-43:32] UNKNOWN: yeah.
[43:47-43:52] SPEAKER_04: I don't know if it looked at functions. Alright, Raして.
[44:26-44:26] UNKNOWN: There
[44:26-44:30] SPEAKER_05: you go. Two repositories.
[44:32-44:32] UNKNOWN: I
[44:32-44:33] SPEAKER_05: like it.
[44:35-44:39] SPEAKER_03: If we are missing something, we'll have to do it again. Yeah,
[44:39-44:44] SPEAKER_05: exactly. I would rather feel closer to comfortable that there's not a bunch of extra shit.
[44:44-44:49] SPEAKER_03: I agree. I think there's more danger to being extra stuff that's in there and you forgot about
[44:49-44:49] UNKNOWN: that
[44:49-44:52] SPEAKER_03: tip. Then, oh well, you've got to build it again.
[44:54-44:55] SPEAKER_05: Yeah.
[44:55-44:55] UNKNOWN: Building
[44:55-45:17] SPEAKER_05: is easy now. Yeah. It's just going to get easier or at least stay this easy. Especially like we've got version histories all over the place. Yeah. I see you got personal logs there and
[45:17-45:17] SPEAKER_03: get
[45:17-45:17] UNKNOWN: home.
[45:17-45:36] SPEAKER_03: Right. Yeah. Our process of doing a session and going to get each time. This is it. This is working. I agree. I think the answer is automating this. Like that just in the background is doing this. Right. When you say,
[45:37-45:37] UNKNOWN: hey,
[45:37-45:40] SPEAKER_03: I want to change, it knows that it has this stuff and goes and looks like,
[45:40-45:40] UNKNOWN: hey,
[45:41-45:52] SPEAKER_03: some way that it knows that it doesn't have full context in order to get information. Just like you search the internet, go search your brain to know what you did.
[45:52-46:08] SPEAKER_05: It knows that it doesn't have enough or can recognize that it has too much and offload or start a new one, whatever. A new session or whatever. Yeah. Write itself a quick summary of where to start this new one, completely wipe its context and start again with its escalation
[46:08-46:08] UNKNOWN: path. It
[46:08-46:08] SPEAKER_05: needs to
[46:08-46:18] SPEAKER_03: know that it's simple. Right. That I can only do simple tasks and I'm jumping from task to task and I write my own next task and keep doing that. And if it gets confused, go back and look.
[46:19-46:32] SPEAKER_05: And how many steps to go deeper before you reference the current understanding to the high level, big picture and maybe even go back through that fucking whole thing again. Make sure you end up at the same place, that type of stuff.
[46:32-46:54] SPEAKER_03: Then write a new, then break everything into sessions, clear and run a session. Clear, run a session. Right. And do that. Like we are managing it, but do it yourself. Exactly. And then it's general. So as context windows get bigger, it will just put more in the context. Right. Yeah, it just won't have to reset as often. Right. Do all the other stuff.
[46:55-46:55] UNKNOWN: Yeah.
[46:55-47:13] SPEAKER_03: And ideally, it has some way to understand its context window. Right. And literally like I've seen it and I told you, in a percentage. Right. Everybody needs to know how full its context window is. And what that means. And like,
[47:13-47:13] UNKNOWN: okay,
[47:13-47:16] SPEAKER_03: I'm getting bloated. Right. Let's restart.
[47:16-47:39] SPEAKER_05: Like 50%, I can keep doing stuff like log in and doing all that stuff up to 75 even. But after that. At 60, I started getting bad at coding. And at this rate, I started this. And so you need to identify the type of job you're currently working on and whether your context window or your context usage is exhausted based on that task.
[47:40-47:40] UNKNOWN: Right.
[47:43-47:47] SPEAKER_03: This is going to work. I think so. I don't know what's going
[47:47-47:47] UNKNOWN: to
[47:47-47:52] SPEAKER_03: come out of it. Yeah. But we're moving in the direction that we said we wanted to.
[47:53-47:53] UNKNOWN: I
[47:53-47:54] SPEAKER_03: agree. Yeah,
[47:54-48:03] SPEAKER_05: I think I'm excited to sit down with CJ and just generally start like making stuff. I
[48:03-48:03] UNKNOWN: don't know
[48:03-48:04] SPEAKER_05: what stuff
[48:04-48:04] UNKNOWN: is. I don't know
[48:04-48:05] SPEAKER_05: what it's going to be.
[48:05-48:07] SPEAKER_03: But it's going to be something.
[48:09-48:09] UNKNOWN: Right.
[48:11-48:27] SPEAKER_05: Because we haven't sat down for like, I don't even know what one would be right now, but like a dedicated session. Like, okay, let's do this and then record it and have it output and do the whole thing. Yeah. Yeah, I
[48:27-48:27] UNKNOWN: like
[48:27-48:44] SPEAKER_05: this to be working and then at least have some semblance of our plan for our next step, which is the summary and all that stuff. Because I think that's the best way to show CJ how to work
[48:44-48:45] SPEAKER_03: with it is to work
[48:45-48:45] UNKNOWN: with it.
[48:45-49:05] SPEAKER_03: Just work with it, right? Jump in this session and, hey, here's what we're trying to do. Watch what we're doing. Hey, you may not use this tool. Maybe he wants to use Cursor, but whatever it may be, what we did before is like, hey, here's Gemini. Here's what we're trying to do. We're trying to get it to make this plan and break it down into useful sessions. I almost think that
[49:05-49:15] SPEAKER_05: using Cursor just to like throw the temptation out there. Like, hey, coding isn't what it was a year ago. No. And it's not that scary. Watch this. I'm going
[49:15-49:15] UNKNOWN: to
[49:15-49:16] SPEAKER_05: have it do something.
[49:16-49:16] UNKNOWN: And
[49:16-49:20] SPEAKER_05: then just literally you have to see it start to work and maybe it won't impact him as
[49:20-49:20] UNKNOWN: much
[49:20-49:26] SPEAKER_05: because he hasn't actually built it inside of a vehicle. Still seeing it work.
[49:26-49:26] UNKNOWN: And
[49:26-49:36] SPEAKER_05: it's almost like probably the best example to use is like a Flutter project or something like watch this. Make me a tic tac toe game and just watch it pull the emulator up.
[49:36-49:36] UNKNOWN: And
[49:36-49:43] SPEAKER_05: now it's here. It's like it's done. That's just easier than to be like,
[49:43-49:43] UNKNOWN: yeah,
[49:43-49:46] SPEAKER_05: now this cluster is running. Look at it. What is
[49:46-49:52] SPEAKER_03: a cluster? What do you mean? What is cloud? Like it's like the closet, but a lot bigger.
[49:53-49:55] SPEAKER_05: Right. Yeah. And also like this is just,
[49:56-49:56] UNKNOWN: I
[49:56-50:02] SPEAKER_05: think, AI at its most impressive. So it might as well show that.
[50:02-50:25] SPEAKER_03: Yeah, I agree. And I think at some point you become a believer, which again, you became a believer well before I did even in Cursor. Yeah. Then it's like, oh, I get it. It can do stuff. Right. This is crazy. It can do the very things that I'm trying to do much faster and better than me. It really is like a miracle.
[50:26-50:26] UNKNOWN: But
[50:26-50:36] SPEAKER_05: I think we have a pretty good understanding of what the picture is going to be 10 years from now as far as that's smart. Yeah. Like it's pretty much there.
[50:36-50:58] SPEAKER_03: Yeah. I think it's going to be like this, just more services. Like it's going to look like the internet, like the beginning of people, like, yeah, you can talk to people anywhere to now while you can stream YouTube. You can stream stuff on that. Like the underlying fundamentals have not changed in 20 years. It is just, you know, improvements, efficiency changes, whatever new
[50:58-50:59] SPEAKER_05: ideas.
[50:59-50:59] UNKNOWN: More
[50:59-51:10] SPEAKER_05: thoroughly identify its weaknesses and handle them like manually, not necessarily like having AI do it. And it'll just be more ubiquitous. People will use it more.
[51:11-51:17] SPEAKER_03: And I think you will have personal assistance. Yeah. That will just be always like actually do what we're doing,
[51:17-51:17] UNKNOWN: but
[51:17-51:22] SPEAKER_03: just for your life is just doing this and like, Hey, do you want me to,
[51:23-51:23] UNKNOWN: you know,
[51:23-51:26] SPEAKER_03: whatever? Yes. Go do
[51:26-51:34] SPEAKER_05: that. You'll have the glasses on and everyone will just not care that they're being recorded at every step. Yeah. Like some people already are.
[51:34-51:34] UNKNOWN: There'll
[51:34-51:35] SPEAKER_05: be the
[51:35-51:49] SPEAKER_03: crazy people. Right. It's like what, who cares? Well, I mean, I guess you got to go live in the woods because you can't get, you can't get away from it now. Right. Like there, there's in fact a recording device, but that one, you can't get away from that one. And that
[51:49-51:49] UNKNOWN: one, and
[51:49-52:04] SPEAKER_03: that one, and that one, and that one. And that one. You can't get away from it now. No. You can. You can go in the woods and live with just power. You can have power, but you can't have any electronic devices. Yeah. Any communication devices at all. Maybe
[52:04-52:04] UNKNOWN: like
[52:04-52:04] SPEAKER_03: old
[52:04-52:08] SPEAKER_05: Walkmans, you can listen to music. You're right. Records.
[52:09-52:09] UNKNOWN: Yeah.
[52:11-52:11] SPEAKER_03: Which
[52:11-52:12] SPEAKER_05: is fine. You can do that.
[52:12-52:12] UNKNOWN: And
[52:12-52:38] SPEAKER_05: even that is like. That's probably an enjoyable life. That's conspicuous in its own way. Like if you're wanting people to not pay attention to you, you might have satellites looking at you. So you just have to come to terms with the fact that whoever they are, they are listening, they do absolutely control your life. Right. It is what it
[52:38-52:49] SPEAKER_03: is. Right. And if you want to stop them from having that much power. You can't. That's a very different discussion. It's like Star Wars. Yeah. You should
[52:49-52:55] SPEAKER_05: take that same level of energy and really try to figure out how to fly. Right. By yourself. Because they're
[52:55-52:55] SPEAKER_03: equally doable.
[52:56-53:00] SPEAKER_05: Right. Like to take down the empire. Yeah.
[53:00-53:00] UNKNOWN: You
[53:00-53:18] SPEAKER_05: can't. It's silly nonsense. And it's only going to mean other shitty people are running the same mechanism. So just let it go. Exist inside your world. Yeah. Maybe a hundred years from now they'll look back and call us a slave society. Who gives a shit?
[53:18-53:18] UNKNOWN: Oh, we can't go
[53:18-53:18] SPEAKER_05: to the emergency.
[53:23-53:28] SPEAKER_03: Yeah. As long as it's not truly like empire at all. It is.
[53:29-53:42] SPEAKER_05: Like Andor 2 was literally like Gaza. It was. Like that's what it was. People speaking in the Senate and getting fucked up and all this stuff. We don't exactly have an emperor yet. Right. But that's what that was.
[53:43-53:44] SPEAKER_03: But we're headed that way.
[53:44-53:50] SPEAKER_05: And it's like, oh no, the people, the galaxy will hear us. Guess what? No, they didn't. Yeah.
[54:16-54:17] UNKNOWN: Okay.
[54:17-54:21] SPEAKER_03: I wanted to make sure it kept a billion emergency. Yeah.
[54:21-54:21] UNKNOWN: A
[54:21-54:21] SPEAKER_03: billion of us.
[54:32-55:33] SPEAKER_05: Like could be deleted, but harmless. But like, why would it not be deleted? Which one? Diretization line 249. Diretization request, dead letter topic is what that DLT is. That's to stop it running. So it genuinely is harmless, but also like. The need to be there. Cluster manager request is still here.
[55:36-55:39] SPEAKER_04: Where do you see that? In the PubSub topics.
[55:46-55:53] SPEAKER_03: It doesn't show it in this list, but oh yeah, it is. Yeah. Cluster manager request. I think that's the one that it used.
[55:54-55:54] UNKNOWN: That's
[55:54-55:57] SPEAKER_03: the. Okay. That's the. Yeah. That's the deep. Okay.
[56:23-56:23] UNKNOWN: Is
[56:23-56:25] SPEAKER_03: there something else that we want to look at,
[56:26-56:26] UNKNOWN: right?
[56:26-56:40] SPEAKER_05: I mean the other thing in my head was specifically inside the case manifests for those service accounts and Namespace the namespace should just be transcripts. I think
[56:40-56:41] SPEAKER_03: this is good. I think
[56:41-56:53] SPEAKER_05: that looks good In the service account yaml it's got alignment and diarization, okay
[57:00-57:23] SPEAKER_03: I What are you thinking about yeah
[57:27-58:17] SPEAKER_05: Will you drop down that case folder? Oh
[58:26-58:26] UNKNOWN: I
[58:33-58:37] SPEAKER_05: Dire ization request DLT's pops up topic was that the other thing?
[58:38-58:44] SPEAKER_03: Um it was not okay. It's fine. I think we're good with just looking at service accounts
[58:47-58:48] UNKNOWN: Okay
[58:52-58:59] SPEAKER_05: Yeah, we're probably at around New session time yep yeah for
[58:59-59:02] SPEAKER_03: this yeah, we didn't go to session 1 .3.
[59:03-59:04] UNKNOWN: Yeah
[59:11-59:17] SPEAKER_03: And in fact we can literally say We're gonna do session 1 .3.
[59:17-59:22] SPEAKER_05: Yeah, not even so much as that just go give it that prompt right? Hey for sure
[59:22-59:34] SPEAKER_03: mission and then here we go I agree definitely give it just give it the prompt but I think it knows right so in the history It will say yes, we did session 1 .3. Then we did session 1 .5 So we're
[59:34-59:34] UNKNOWN: gonna do session 1 .3. We're gonna do session 1 .3. We're gonna do session 1 .3
[59:34-59:39] SPEAKER_03: Like hey this do this current task if this is session 1 .3 that makes sense
[59:48-59:51] SPEAKER_05: Cube CTL get surface accounts.
[59:51-60:07] SPEAKER_02: Oh, there's no cluster. Yeah, that's right To check the main lists
[60:16-60:17] UNKNOWN: I
[60:30-61:15] SPEAKER_05: It's not a way that necessarily this is on demand and all that stuff like it wouldn't be there because focus That's Job controller service account. Yeah, but there's also a job controller in the service accounts Yeah,
[61:17-61:19] SPEAKER_03: I'm sure it's just bloat
[61:19-61:19] SPEAKER_04: yeah
[61:20-61:30] SPEAKER_03: from it just Multiple rewrites and refactors and it just it has stuff That's why we're doing
[61:53-62:04] SPEAKER_05: So Found the GCP ones in the reference file and found the Kubernetes ones from the manifest
[62:07-62:07] UNKNOWN: I
[62:13-62:17] SPEAKER_03: Need that one need that one need those two
[63:05-63:10] SPEAKER_02: I Okay walk away from I
[63:10-63:16] SPEAKER_03: think it's
[63:16-65:27] UNKNOWN: fine I I I I
[65:32-65:36] SPEAKER_05: That's a good trigger, right I really actually like that a lot
[65:38-65:39] UNKNOWN: I
[65:39-66:11] SPEAKER_05: Know that it is doing what I think buddy can see that yeah And so that might be the the monitor is how big is the session log in right? Yeah, this has been a big session We need to make sure that it keeps logs the exact same way every time but like hey when the session log reaches X number of lines. Yeah, like start about time. Let's go. Yeah, or yeah, if nothing else throw that notification Like hey, but this has been a pretty long session. Maybe look for an off -ramp whenever we can or something like that. I like that a lot
[66:12-66:16] SPEAKER_03: Yeah, it is working. The thing that we said we wanted to do is doing it
[66:34-67:48] UNKNOWN: I I I
[68:07-68:08] SPEAKER_05: I
[68:08-68:08] UNKNOWN: Yeah,
[68:08-68:12] SPEAKER_03: I need to create a cleaner Completion long is that what you're talking about?
[68:12-68:12] UNKNOWN: Yeah,
[68:12-68:16] SPEAKER_05: but it said let me replace the transcript file with a one focused on 0 .6
[68:16-68:19] SPEAKER_03: Yeah, I did see that but then it didn't really do anything.
[68:19-68:20] SPEAKER_05: Okay, it's not
[68:24-68:39] SPEAKER_03: Because it has all of the stuff like it replaced it with The same stuff. Yeah, I can see all this green Like I don't know what it like I was concerned but then it like it's all of that
[68:43-69:01] UNKNOWN: Okay I
[69:07-69:08] SPEAKER_03: Steal the not
[69:31-70:30] UNKNOWN: I I
[70:47-70:51] SPEAKER_03: I Didn't know you weren't done with your copy you can go. Oh, no, I was
[70:52-71:30] SPEAKER_05: It was being fucking stupid as shit. Just watching that so Did it get status for no fucking reason capital a don't know why but fine does this commit Then Goes and updates this session transcript runs get status again Runs an echo for some fucking reason. It's confused. I get that specific things It's like I'm not convinced that ever actually pushed anything, but I'm gonna go over here and see Yeah, so it's committed which is fine
[71:31-71:43] SPEAKER_03: Yeah Yeah, it's running out of content like that's sure that's what I noticed We started being dumb and starting to act like on my god. Yeah when it's running out of context like it's confused.
[71:43-71:53] SPEAKER_05: Yeah Yeah, but I think we're good enough Who knows what it's? Yeah Thing did but we'll have the context of the new prompt. So it's fun
[72:50-72:52] SPEAKER_03: you
[72:52-72:52] UNKNOWN: You
[72:52-73:08] SPEAKER_03: see that little Warning hmm, I wonder what that means I don't know. I'm just gonna yeah, did it
[73:08-73:08] UNKNOWN: did
[73:08-73:14] SPEAKER_03: it make a transcript or okay They didn't move it away
[73:16-73:32] SPEAKER_05: Yes, go to the archives Summaries should have one that's like Seven eight there's not yeah, you probably do it again just a inch a protocol
[73:36-73:38] SPEAKER_03: Even though can you go back to your old checks?
[73:39-73:39] UNKNOWN: I
[73:39-73:57] SPEAKER_05: mean, I don't think you even do that like it still knows what the protocol is and it is to Summarize that transcript Update the reason It will have some context missing blue probably certainly do a better job than not deleting it, right?
[74:05-74:19] SPEAKER_03: Yeah, this is what it should be doing. Yeah, it's still not around this You
[74:19-74:19] UNKNOWN: Maybe
[74:19-74:22] SPEAKER_03: that's the answer is start a new chat and run the intercession protocol.
[74:23-74:31] SPEAKER_05: Yeah, there's still the danger of the way that It wrote its laws at the end Like we just went too far. Yeah
[74:35-74:36] UNKNOWN: If
[74:36-74:55] SPEAKER_05: you get the Instinct that it's already exhausted. You should not run the in chat protocol inside of that. I agree that is a new new bit of knowledge, but Generally you should try to Be able to run the in chat protocol inside or in
[74:55-74:55] UNKNOWN: the
[74:55-75:01] SPEAKER_05: in session inside of the session that it actually did everything. I agree That was just a big session.
[75:06-75:06] UNKNOWN: Yeah
[75:06-75:08] SPEAKER_05: If it ever says like wow,
[75:08-75:08] UNKNOWN: this
[75:08-75:12] SPEAKER_05: is this is big should definitely Yeah,
[75:12-75:29] SPEAKER_03: and
[75:29-75:40] SPEAKER_05: then that's the the auto run thing it's like well There's a way going literally read the entire evening, but I'm from that perspective I agree
[75:47-75:48] UNKNOWN: Well,
[75:50-75:56] SPEAKER_03: we got rid of that document well, there you go. They got rid of that statement
[76:06-76:07] UNKNOWN: You
[76:26-76:28] SPEAKER_03: Why are we doing this
[76:28-76:33] SPEAKER_05: Changes and it's the in session
[76:44-76:45] UNKNOWN: All
[76:45-76:48] SPEAKER_05: right, that was much better. Yes
[77:02-77:03] UNKNOWN: I
[77:03-77:08] SPEAKER_03: Didn't necessarily need to read me in there. I don't know if it actually looks at it
[77:10-77:16] SPEAKER_05: Yeah, it should from the perspective of like it doesn't need to
[77:16-77:17] SPEAKER_03: right
[77:26-78:12] SPEAKER_05: I Certainly had things in that context that is ignored before when I didn't want it to So Do we even need that anymore what because I think in the cleanup step we just It's like to deprecate the diarization pot. I think we just did that now that I Think about it So we did jump ahead yeah, we implemented section 1 3 I Forgot that's what that was.
[78:12-78:16] SPEAKER_03: All right. Well then the sign let's go to session 1 .4
[78:21-78:40] SPEAKER_05: I I'm gonna read it just to make sure that we did all of it Did you not see me I
[78:40-78:42] SPEAKER_03: may not have
[78:47-78:48] UNKNOWN: You
[79:23-79:36] SPEAKER_05: You Yeah, let's delete the Docker file delete those so delete the repository and then update the readme or any other design documents that reference it And that's it.
[79:36-79:38] SPEAKER_03: Yeah, so I think we're good to go to 1 .4.
[79:38-79:46] SPEAKER_05: I agree and my guess is That Docker file is Yeah,
[79:46-79:48] SPEAKER_03: I agree it's probably good,
[79:48-79:49] SPEAKER_05: right
[80:08-80:09] UNKNOWN: We
[80:09-80:22] SPEAKER_05: do have in here I think on every single step Technical development guideline mandatory root directory builds Yeah, and so I deleted that yesterday because we actually don't want that necessarily
[80:22-80:28] SPEAKER_03: Um, you want to take that? Well, I don't want it to update the plan again.
[80:29-80:53] SPEAKER_05: Yeah, I agree I think just go to catch it in the prompt. Yeah, just delete it and it is You
[80:53-80:53] UNKNOWN: Is
[80:53-81:09] SPEAKER_05: certainly gonna be that doctor Yeah, it's the Fifth or sixth line
[81:09-81:11] SPEAKER_03: in the prompt.
[81:11-81:14] SPEAKER_05: Yeah, the doctor file must adhere to the
[81:14-81:14] UNKNOWN: directory
[81:14-81:15] SPEAKER_05: doctor builds guideline.
[81:19-81:20] UNKNOWN: Okay
[81:43-81:57] SPEAKER_05: And it's doing also some local testing stuff It's got in there Which I think once it tries to get there, which go hey, this doesn't tell us anything Let's move forward. What do you mean by local? I guess gonna
[81:57-81:57] UNKNOWN: try
[81:57-82:08] SPEAKER_05: to build a local It's gonna build the bucket. Hopefully doesn't even need to do that because we've already pushed this Yes, that's good
[82:11-82:12] UNKNOWN: If it
[82:12-82:21] SPEAKER_05: Tries to like basically there's a request to do a local testing to confirm that it's working And it's in the props, but it's
[82:21-82:21] UNKNOWN: easy
[82:21-82:21] SPEAKER_05: to skip to
[82:30-82:30] UNKNOWN: Yeah,
[82:37-82:42] SPEAKER_05: that would be the only difference is if there's anything extra for the diarization,
[82:42-82:43] SPEAKER_03: right
[82:45-82:50] SPEAKER_05: Yeah So we're
[82:50-82:50] UNKNOWN: gonna
[82:50-82:58] SPEAKER_05: need something hugging face or the secret manager or some shit
[83:17-83:21] SPEAKER_02: Yeah Yeah
[83:21-83:21] UNKNOWN: We
[83:21-83:26] SPEAKER_02: have to do a build hopefully it has Most
[83:26-83:32] SPEAKER_05: of I think what's gonna virus is the fact that we deleted the time section stuff up here already
[83:32-83:37] SPEAKER_03: No, it's still over here Those layers are still in there. I think you
[83:37-83:38] SPEAKER_02: really right.
[83:38-83:39] UNKNOWN: Yep
[83:40-84:12] SPEAKER_05: Yeah, so that's why it's got that dash local on that name Just because it's thinking it's gonna do a test But it doesn't matter because I'm pretty sure when you push it you name it. Yeah and tag it It took I forgot to send it to you it was like 2000 seconds to do the pip install. Yeah Which is 600 seconds is 10 minutes, yeah
[84:18-84:22] SPEAKER_03: It's not super fast, but it's fine it
[84:22-84:35] SPEAKER_05: gets done. Yeah, and it's because it's Huge it's like running so much. It's It's a machine learning. It's optimized to do the most heavy lifting thing in the way we've ever made computers have ever done
[84:41-84:41] UNKNOWN: I
[84:41-84:52] SPEAKER_05: Want to get to be fast is like driving that big -ass tractor that Harley saw that one time Oh, yeah on a racetrack, right? It's not it's not be that impressive at
[84:52-84:57] SPEAKER_03: that or to make it fast You need a data center and a city worth of power.
[84:58-84:58] UNKNOWN: Yeah
[85:00-85:04] SPEAKER_03: You can't do it it's just very expensive and it uses a lot of energy
[85:06-85:06] UNKNOWN: I
[85:08-85:10] SPEAKER_05: Don't think it's gonna actually
[85:10-85:11] SPEAKER_02: Do that much
[85:11-85:31] SPEAKER_03: more? I agree, but I mean I if you think about Even doing what we're doing like so just the vision we said ten years from now like not necessary Yeah, just a little bit faster and more ubiquitous everybody's you like what we're doing is in that phone or whatever Or like it's doing it for every person.
[85:31-85:34] SPEAKER_05: Yeah, that could be I guess Maybe
[85:34-85:34] SPEAKER_03: there's
[85:34-85:34] UNKNOWN: a lot
[85:34-85:49] SPEAKER_05: bigger a jump in performance off of Just the scale of human feedback, right? So reinforcement learning human feedback like the more people use it maybe the model is a little better It's just like knowing
[85:49-86:10] SPEAKER_03: human this I don't think so but even if you did the models don't get bigger or better just stay at the current size and capabilities and scale to get more service 10 ,000 X because Every service is using them every person is using them every app is you I guess just scale from here out like the internet did Yeah Yeah,
[86:10-86:10] UNKNOWN: that
[86:10-86:46] SPEAKER_03: will require Insane amounts of energy. Yeah Yeah, so just doing that and to a certain extent like if this could be used to solve Like real -world problems not just driving like so just even just driving Yeah But thinking like medicine and things like that if you could use it like even if it's not just super genius AGI level You're using these systems like doctors just like we're doing this doctors are using these systems for research enough Then I guess you're obligate like you should if I use this system. I can discover new things and save lives. Yeah Should you do it?
[86:46-86:46] UNKNOWN: Well,
[86:47-86:55] SPEAKER_03: of course, I should Yeah Should I deploy these self -driving systems and save lives? Well, of course you should
[86:55-86:56] SPEAKER_05: yeah that
[86:56-86:56] SPEAKER_03: not
[86:56-87:08] SPEAKER_05: even the money like medicine side Like I feel like it's been at least a year since they were like, oh man, it can do the protein holding It's like what what? Yeah, what was it? I was this big like Holy Grail suppose Yeah
[87:08-87:13] SPEAKER_03: there I did put an if in there if it can be used to save And you should do
[87:13-87:21] SPEAKER_05: it Yeah I think driving is the most obvious and direct one like 20 to 30 thousand people in America die like every year supposedly Yeah,
[87:22-87:22] UNKNOWN: and
[87:22-87:27] SPEAKER_05: even cutting that in half is probably doable if you have across
[87:27-87:46] SPEAKER_03: the board usage if you you know get rid of Elon Musk hate in politics and all of those things and and then being EVs and all I just think of deploying these systems on Like and And it actually be good I think
[87:46-88:07] SPEAKER_05: the best version of it at a I'm monitoring to like the way the engines running and shit like that, right? that could work Because there's like I don't know there's a pathway to our grid supporting full electric car. No, I agree Yeah, I don't think it's like there's a pathway to this thing understanding more shit. It's like I
[88:07-88:08] SPEAKER_03: don't
[88:08-88:08] UNKNOWN: I
[88:08-88:17] SPEAKER_03: don't necessarily think There is it is fusion and it's a thousand somewhere between one and ten thousand years away Yeah, it's just
[88:17-88:20] SPEAKER_05: like the answer to the smarter AI is quantum is like, okay.
[88:20-88:25] SPEAKER_03: Yeah Okay The answer for self -driving is to put it on regular gas cars.
[88:25-88:26] SPEAKER_05: Yeah, that makes sense
[88:30-88:37] SPEAKER_03: And then it will dramatically improve the road safety right and Not necessarily be like what we got to
[88:37-88:37] UNKNOWN: do
[88:37-88:41] SPEAKER_03: easy like just put it on the face to it on everything
[88:41-88:43] SPEAKER_05: if there's value Take it apart from this
[88:46-88:58] SPEAKER_03: And even if it's not the full LiDAR based systems and everything like that which are expensive Even the vision systems are cheap and better then better than nothing better than
[88:58-89:14] SPEAKER_05: people generally but then you have the same like Conditions so like the question is gonna be like so they can shut down my car when it starts raining But now I'm allowed to drive. No, I think you were allowed to drive. I think what's the I think that's the answer It's not made eight people's ability
[89:14-89:38] SPEAKER_03: to drive when mostly you're not What I think would happen is just like when it like super downpours and you're on the people start pulling over It's like I'm not driving in that if you can't see I can't either. Yeah, but how many people start pulling over? I agree. I don't Alright, I'm gonna slow down a little bit Well, I mean, I think the answer will be like what you teach your kids toward
[89:38-89:38] SPEAKER_05: a
[89:38-89:45] SPEAKER_03: freedom Is you teach your kids? Hey, don't drive when the weather's freaking crappy pull over
[89:45-89:45] SPEAKER_05: That's
[89:45-89:50] SPEAKER_03: never like you just lost the whole society and what's gonna happen?
[89:50-89:50] UNKNOWN: Well,
[89:50-90:02] SPEAKER_03: there's gonna be a bunch of wrecks When the weather's crappy and you'll know double like hey this icy rainy snowy Don't freaking drive because those crazies are out there first of all Yeah, the system
[90:02-90:03] SPEAKER_05: won't
[90:03-90:03] UNKNOWN: drive
[90:03-90:13] SPEAKER_05: it took us one minute to get to this like breaking Issue like it's never gonna get implemented probably given that think about the freedom people They're gonna be like,
[90:13-90:13] UNKNOWN: oh,
[90:13-90:17] SPEAKER_05: yeah, my car can just decide what I can drive which means the government can decide what I can
[90:18-90:53] SPEAKER_03: Make it just like it is right now you turn it on turn off whenever you want to you're responsible for the car Yeah, and obviously your life You turn it on when you want to but the system will not work under certain conditions like it is now Like when it detects the poor weather it just says no I guess there's a there's a level between that first it will stay on but slow down increase Oh, yeah Like well my max speed now is 60 and it just like if you want to go faster than that you take over Yeah, and then the next level is well, so it won't come on like if you want to drive right now You have to do it. I'm not doing
[90:53-91:15] SPEAKER_05: it. Yeah, I think you run into the issue of like people Oh, I at least become significantly diminished like if you do something right now a Hundred hours a week not that but like and then you start doing it ten hours a week You're gonna be worse at that. No question. No, the only time you're gonna do it is when the
[91:15-91:37] SPEAKER_03: conditions are too shit I hope that people realize that Hey Man I haven't done this in like a month and it's freaking snowing and icy But I really want that taco yeah, I
[91:37-91:41] SPEAKER_05: don't even want it but nobody's gonna tell me what the Home
[91:41-91:54] SPEAKER_03: I Got the keys I can't freaking walk. Hey, but There's ice cream to be in that ice cream he did he got his freaking ice
[91:54-92:03] SPEAKER_05: cream for free. Yeah Yeah, I think they're They're gonna do what they're
[92:03-92:03] UNKNOWN: gonna
[92:03-92:21] SPEAKER_05: do. Yeah, it does seem like Surf them is their target but What are you gonna do? If this is a hundred years from now gonna be looked back at modern slavery like what's modern certain look like is it that bad
[92:21-92:34] SPEAKER_03: I Mean I'll play devil's advocate for justice. Yeah If I can have my family my loved ones So I'm saying man, I get this is modern
[92:36-92:39] SPEAKER_05: Gives a shit, you know what I'll say it's
[92:39-92:39] UNKNOWN: like But
[92:39-92:43] SPEAKER_05: if this is what like and I
[92:43-92:56] SPEAKER_03: never have to work and I can like actually pursue relationships and pleasure and art and And I don't have to and it's just yeah. Hey, you're up there and this is what my life looks
[92:56-93:08] SPEAKER_05: like It really is like it sucks to be an enemy of the regime, but don't be that And don't get yourself worked up about the evil shit They're gonna do it and if you bring them down some
[93:08-93:29] SPEAKER_03: other evil motherfuckers gonna take their place right and I guess if the alternative Was hey if we replace them there's gonna be this utopia and God's gonna raise this is just waiting for us to bring this Take over take over and everything's gonna be great if that's the alternative, but I don't think it is Yeah, it is. It's gonna be bad and keep getting worse and worse But
[93:29-93:45] SPEAKER_05: yeah, the current system is so fucked happened after Hitler, right? I'm just saying like so that was the ultimate bad and here we're still we're still going so it's not gonna happen get yourself right and Stop paying attention to me, right? I'm getting closer
[93:46-93:50] SPEAKER_03: Unless you can actually change it, but you can't but you can't right? It's like
[93:50-94:04] SPEAKER_05: yeah, even if you can change it you can't right on like a you know Looking as like a history nerd. It's actually kind of dope for the first couple of improves. I'm just saying right There's a strong man.
[94:04-94:04] UNKNOWN: They
[94:04-94:38] SPEAKER_05: come in they deal with a lot of this bullshit That was like the boat and then it maybe devolves whenever you get a psycho But I'm gonna be dead by then anyway, let's keep it pushing The Romans had like four or five up front and then like another five or six after Sporadically that were pretty good Marcus Aurelius wasn't one of the first ones I guess this was pretty extreme,
[94:39-94:39] UNKNOWN: but
[94:39-95:03] SPEAKER_05: you know he Was like trying to use Offering incentives for people to make babies because the population was declining and Maybe took that a little overboard and started to like require it But like it wasn't that crazy, right? Wasn't that cool to be a family
[95:03-95:03] UNKNOWN: member
[95:03-95:52] SPEAKER_05: Because he was kept it real 100 top to bottom like like what he was like killing people or something I mean he sent his daughter to an island because she slept with one of his friends and she died there not immediately, but And it's because he was going for this like thing where we're promoting the family and doing all this stuff You're not gonna be fluzzy in it out about around Rome right and the people were talking about it And that motherfucker did not flake it like okay, it's like go you're out Yeah, and his mom was all pissed about it. He was like you can go to I tried to tell you What was gonna happen, right? But the Empire was kind of cool to live in if you weren't trying to resist that much right so Okay.
[95:52-96:01] SPEAKER_03: Yeah, I mean I think it makes sense. This is easy to say but Resist where it makes sense like if it's truly evil and go you had Jesus
[96:01-96:02] SPEAKER_05: Resist not evil
[96:02-96:03] SPEAKER_03: that
[96:03-96:25] SPEAKER_05: is straight from the guy There you go Straight -up you're trying to be like that one and I am three words resist not evil It's what that Tolstoy book the kingdom of heaven is within you That's the thesis is it's all built around resist not evil and his shit aligns with Gandhi pretty good. I Like it
[96:25-96:29] SPEAKER_03: yeah, I got some work to do apparently yeah, it's in the
[96:29-96:47] SPEAKER_05: same Mean it's in the same passage as like turn the other cheek if they take your shirt give them your cloak or whatever That that stuff is it's like You were not put here to deal with them right like guys got them right put here to test you I Like
[96:47-96:49] SPEAKER_03: it I got some work to do
[96:52-96:52] UNKNOWN: But
[96:52-96:56] SPEAKER_05: that's that hate shit you're not even supposed to
[96:56-96:56] UNKNOWN: hate
[96:56-97:08] SPEAKER_03: Yeah I'm not even supposed to resist it. I'm doing a lot better. Yeah, it's first since our last conversation like this Maybe not a lot better. I am definitely been processing it and moving in the right direction
[97:08-97:35] SPEAKER_05: I think it makes me think of literally something. I was thinking this morning when I was meditating after I was meditating the Not getting down on yourself whenever you your focus wanders Because the only time you do that is when you notice it and that's a win, right? Okay, and so if you're like you notice that you're feeling this hate It's like that's good because the wind because yesterday you wouldn't have noticed right and you would have just kept going
[97:35-97:52] SPEAKER_03: that is effectively Exactly where I'm at. It's like I'm in the place where at least I notice now and I can deal with it and like These are your words those first few milliseconds Well, I can't control that right but right after I could say yep, right there it is
[97:52-97:52] SPEAKER_05: and every once a
[97:52-97:52] SPEAKER_03: while
[97:52-97:57] SPEAKER_05: you Realize oh man, I shaved another millisecond off. Yeah catching it earlier and earlier Yep, and
[97:57-97:59] SPEAKER_03: that's exactly what
[97:59-98:54] SPEAKER_05: I'm working on that is I was talking to one of them one of the AIs this morning about it and looking for a quote because I feel like there's something in Buddhism like the thousandth time you Get is like a thousand success or something. Mm -hmm, but It couldn't find my quote but it really is like it made it look like it's that is working out the muscle of that and The more you work out your muscles the stronger they get so every time is actually great Yeah, it's like nice. We got better at you got a little workout in it feels like Yep, I'm still in that place but then it's also like the peloton never gets easier Could you turn the resistance up? It's like well, maybe this happened a Minute later than it would have and that's in its huge progress, but it's still whenever it is. It's like, yeah still
[98:54-99:07] SPEAKER_03: there Yeah, that's good this never gets easier Yeah, you just keep ratcheting like you're now in more and more challenging situations or the standards change
[99:07-99:19] SPEAKER_05: which philosopher it is but They're like suffering is the point They're not suffering is pointless. Yes There's nothing to it right so like point of
[99:19-99:30] SPEAKER_03: life if you want that Suffering if you if your expectation is to never suffer and to always be happy Well, that's not like it's not and it's unrealistic. And in fact, you're gonna be miserable trying to live like
[99:30-99:59] SPEAKER_05: that. Exactly That's why the sad little rich kids. It's like everybody gets the suffering Yours is just in this form. It's just if you feel like you have everything but you're always sad Doesn't make sense. It's because you're not doing the things that are required of you, right? I Feel like even like working out that's like, okay Well, I took I took a little off the docket today because that sucked and so some of my suffering was accounted for there instead of Some other place, right? I
[99:59-99:59] UNKNOWN: think
[99:59-100:01] SPEAKER_03: I agree. That's a purpose a great
[100:01-100:10] SPEAKER_05: way of looking at it And you're gonna get what you're gonna get tomorrow. And so Might as well get some that you have control over. I like it
[100:20-100:24] SPEAKER_03: Say your Thousand seconds
[100:24-100:33] SPEAKER_05: not bad. Yeah, and it's exporting so yeah, I mean this still might take a couple minutes, but Complete
[101:11-102:44] UNKNOWN: You You You You You
[102:54-103:09] SPEAKER_05: Finished I told it and this is where it's gonna try to do that local test. I just wanted you to see like I Think we tell it. Hey, this isn't gonna tell this what I was telling you yesterday This isn't gonna tell us anything about how this will run on the cluster and GCP. So let's not
[103:32-103:33] UNKNOWN: I
[103:52-103:52] SPEAKER_03: I
[103:52-103:52] UNKNOWN: Do
[103:52-103:55] SPEAKER_03: we need to rename it or I guess when we
[103:58-104:09] SPEAKER_05: It's still called it we need to push it. Yeah, that's what we do and tag it and make it the right name. Yes But that is part of Phase two actually, I
[104:09-104:09] UNKNOWN: think
[104:09-104:10] SPEAKER_05: or
[104:10-104:11] SPEAKER_03: I don't see it.
[104:11-104:14] SPEAKER_05: So go back to phase one. Like what's the last?
[104:14-104:24] SPEAKER_03: We're in phase two. Well, I don't know maybe not Build it but 1 .5 is building push. Yeah, so that's where we're at. Are we on 1 .3?
[104:24-104:26] SPEAKER_05: We're doing 1 .4 just then
[104:27-104:28] SPEAKER_03: Yeah,
[104:28-104:35] SPEAKER_05: so 1 .5 would be Technically we just did half of it by building. Yeah
[104:38-104:41] SPEAKER_03: Then what was 1 .4 yeah
[104:42-104:49] SPEAKER_05: Retooling instead of so it's split out which I actually think makes sense the changing
[104:49-104:52] SPEAKER_03: it Build it locally and run a minimal test,
[104:52-104:55] SPEAKER_05: right and then do the actual push
[104:59-105:01] SPEAKER_03: Okay, so we're ready to end the session
[105:04-105:04] SPEAKER_05: Yeah,
[105:05-105:06] SPEAKER_03: and just do for 1 .5,
[105:06-105:07] SPEAKER_05: yep
[105:10-105:17] SPEAKER_03: I Mean it's already built but well it built a local image. So it may be a little different
[105:18-105:48] SPEAKER_05: Yeah Yeah, I would say in session and then Go ahead and just give it that 1 .5 prompt and it will determine That it's already built My guess is it will check all the world's off Yeah
[105:48-105:49] SPEAKER_03: Yeah for sure
[106:05-106:21] UNKNOWN: Yeah What's
[106:21-106:28] SPEAKER_01: up buddy They
[106:28-106:29] UNKNOWN: do
[106:34-106:36] SPEAKER_04: You You go outside
[107:27-107:29] UNKNOWN: You
[107:39-107:40] SPEAKER_03: You
[107:40-107:40] UNKNOWN: Yeah,
[107:40-107:45] SPEAKER_03: so we captured the session name It
[107:45-107:55] SPEAKER_05: really is like Even versus what we were doing Tuesday last week much more optimized. Yeah
[108:13-108:14] UNKNOWN: You
[108:15-108:16] SPEAKER_05: It
[108:16-108:16] UNKNOWN: needs
[108:16-108:22] SPEAKER_05: the token it's already up there I don't know that it has secret manager so but
[108:22-108:30] SPEAKER_03: it should be built into the the the Cluster it is the cluster
[108:33-108:33] SPEAKER_05: Yeah,
[108:37-108:38] SPEAKER_03: we may have
[108:38-108:40] SPEAKER_05: to that's a simple change that
[109:01-109:11] SPEAKER_03: It certainly does better when it has more context window left for
[109:11-109:17] UNKNOWN: sure I
[109:20-109:24] SPEAKER_03: Do I have a dev folder I don't know why it's in there
[109:26-109:29] SPEAKER_05: Is that even like that's
[109:29-109:30] SPEAKER_03: it's outside of
[109:30-109:42] SPEAKER_05: yes, not even like a No, it's CD that's what it did I don't know why it's doing it Now it's CD and back into it.
[109:45-109:46] UNKNOWN: Yeah
[109:47-109:49] SPEAKER_03: Like what went too far,
[109:49-109:49] SPEAKER_04: yeah
[109:52-110:08] SPEAKER_03: Because I think this whole thing is in dev slash Transcription service. Yeah Yeah, and this like it went past your inscription service like whoa, okay get back down in there Okay
[110:12-110:13] SPEAKER_05: Yeah
[110:51-110:52] UNKNOWN: I
[110:52-110:54] SPEAKER_05: Just got the bills from the project
[110:59-111:00] UNKNOWN: You
[111:00-111:03] SPEAKER_05: can't triple tap a line no,
[111:03-111:03] UNKNOWN: I
[111:03-111:05] SPEAKER_05: still think yeah exactly
[111:27-111:28] SPEAKER_03: I
[111:28-111:28] UNKNOWN: That
[111:28-111:34] SPEAKER_03: right I think that might be
[111:34-111:35] SPEAKER_05: right.
[111:36-111:37] UNKNOWN: Yeah
[111:37-111:50] SPEAKER_05: That seemed like container registry is what CR means but I also think that is in Whatever the file path I
[111:58-112:03] SPEAKER_03: Don't know why it's building it a second time just to throw latest on it, but it should just be fast,
[112:03-112:07] SPEAKER_05: right But we weren't supposed to build it
[112:07-112:07] UNKNOWN: in
[112:07-112:10] SPEAKER_05: this step according to that prompt we haven't built it
[112:10-112:18] SPEAKER_03: No, it is like so it no like the the last I'm confused why it did that but the instructions were to
[112:18-112:20] SPEAKER_05: Do it local
[112:20-112:21] SPEAKER_03: build. All
[112:21-112:21] UNKNOWN: right,
[112:21-112:32] SPEAKER_03: so this is the now we're building it for deploying it, right? Which okay. Well, I did go back and say hey do testing in between and that's how you would test
[112:32-113:06] SPEAKER_05: Yeah, it just misunderstood our definition to test Which is like put it to the poster and see if it is what we want it to be, right? I
[113:06-113:08] SPEAKER_03: Don't think it is
[113:15-113:16] SPEAKER_04: That's fine
[113:36-113:39] SPEAKER_03: I Can ask
[114:16-114:24] UNKNOWN: You You
[114:28-114:35] SPEAKER_05: What's the difference I don't know it's artifact is images and containers actual Oh
[114:35-115:07] SPEAKER_03: like between artifact registry and Whatever It allowed other Artifacts like so container registry was more limited It only allows you to update containers where artifact registry you can put anything that you can put like like VM images in there you put any type of Artifacts They brought in the capabilities and said like a day an iteration later and Container ratio is already deprecated.
[115:07-115:07] UNKNOWN: I
[115:07-115:18] SPEAKER_03: believe like before a while you could do both since we've been working together You could do both but recently like in the last year or six months or so Container registry is actually deprecated. You can't use it
[115:33-115:34] UNKNOWN: You
[115:34-115:39] SPEAKER_04: You watched the blue I did I watched all of it,
[115:39-116:04] SPEAKER_03: um because I had Um pause time built up and at some point and so then I could just They look pretty good they the two people Yeah, they look great. Yeah, that's the takeaway and the big I don't remember his name. He's not playing he was there Yeah, he's at camp, but he's not
[116:04-116:06] SPEAKER_05: Traffic looks about yeah
[116:09-116:37] SPEAKER_03: Yeah, barnheiser Heiser or something like that. Yeah, so I mean that in he like I don't know how much playing time He'll get he's a hustle guy and he's good, but and he's gonna I assume he's gonna be on the team He's a hustle defensive guy, but I really like topish because he isn't his shot hasn't come together yet I assume it's going to because he's a shooter But his hands are good like he's defense his passing he's a good ball handler like he might
[116:37-116:40] SPEAKER_05: like slow But I like steps, but
[116:40-116:52] SPEAKER_03: I feel like he is a little bit like Luca Like his deceptive that he gets by people, but it looks like he's moving slow. Yeah, right I think that is that that does make sense to
[116:52-116:57] SPEAKER_05: me. Yeah Into training with the first team
[117:00-117:10] SPEAKER_03: And I think that I could see him starting I really could Lou I think that's Do
[117:10-117:12] SPEAKER_05: also like who's who are the stars?
[117:13-117:13] UNKNOWN: Yeah
[117:13-117:16] SPEAKER_05: exactly Yeah, exactly like there was no consistent
[117:16-117:21] SPEAKER_03: starting lineup. Yeah, I think it just to be like certainly for if we go a small lineup
[117:21-117:22] SPEAKER_04: Yeah,
[117:22-117:41] SPEAKER_03: he he can be on the court and I think that he reminds me of somewhere between Like so just thinking of the Thunder was The defensive guy from Chicago that we're so crucial. Yeah, it reminds me of Caruso, but I think he's more dynamic Yeah, he's like,
[117:42-117:42] UNKNOWN: I
[117:42-118:02] SPEAKER_03: don't know that he's quite to the defensive level cruiser But he's pretty handsy and he like interrupts passes Right just being especially being on that team where the emphasize defense and But he's more dynamic he can shoot better and just like oh he hasn't you can tell from his like
[118:05-118:05] SPEAKER_05: Right
[118:05-118:11] SPEAKER_03: and so I think he's just him and he didn't fit in great. Yep, I Can see that he's a top 20 pick
[118:11-118:30] SPEAKER_05: most likely worst case is We get a bunch of assets for him. He's so good that we can't Keep him But he's not good enough like he's not better than j -dove, right? So we got to go. Hey, we'll take 10 more drafts It's in the next four years Yeah, so it
[118:30-118:31] SPEAKER_03: is
[118:31-119:00] SPEAKER_05: that that looks like what I was yeah what I've been seeing over the last few weeks I Can't see You never know what happens But I can't see Chet and Jay or Shay and Jay does not be in the core core of this half a decade,
[119:01-119:02] SPEAKER_03: right? For sure. I agree
[119:02-119:38] SPEAKER_05: unless I mean Just tofu which becomes undeniable. Then he comes up. Well, you get not Shay off the friction theory, but seems unlike Want you to guess
[119:39-119:44] SPEAKER_03: But it looked and said hey the file is actually in there. I don't know why basically I don't know why that didn't
[119:44-120:56] SPEAKER_05: work I What directory is it running from the wrong one? Yeah, it's in the root I Think this is our naming issue, I guess right it's in the transcription service directory the wrong one. Oh Maybe it knows it's in the root. Yeah
[121:35-121:43] SPEAKER_03: Oh, she's still in there I do I forgot about that. But yes, I do but she I know she's still in treadmill for that. You're hurts
[121:46-121:48] SPEAKER_05: That's cool if she's been Yeah
[121:50-121:55] SPEAKER_03: And she's been doing swimming and working out stuff in the pool to know so she finally caught the bug
[122:04-122:10] SPEAKER_05: It's just consistency there's no amount of like savage workout that you can do that can just do it right you gotta do something
[122:14-122:14] UNKNOWN: And
[122:14-122:20] SPEAKER_05: if you find it in yourself Struggling with that. Yeah,
[122:20-122:22] SPEAKER_03: I'm doing okay. I'm doing all
[122:22-122:47] SPEAKER_05: right at my window. I still yeah like an asshole inside my window I Mean I could see it
[122:47-122:49] SPEAKER_03: Yeah, it's just
[122:49-122:54] SPEAKER_05: Like it was already built like that local one. Yeah was right
[122:54-122:55] SPEAKER_03: and it just changed the name
[122:55-123:11] SPEAKER_05: pretty much And it did say at least that it went through all 11 Bunch of layers already existing one big dog with a bunch of new Diorization and then take this to our natural. Yeah,
[123:11-123:12] SPEAKER_03: I gotta go.
[123:13-123:19] SPEAKER_05: Yeah I'll watch that push it. I'm gonna I'm not delivering today. So I'm gonna keep jamming on I really want to
[123:19-123:19] UNKNOWN: get
[123:19-123:21] SPEAKER_05: this stuff You're done. Yeah, I agree

==================================================
Generated on: 2025-07-30 15:04:52
Total words: 11986
Total speakers: 7
==================================================




Summary:


creation_date: 2025-07-30 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1445_ZOOM0043_transcript.txt participants: [SPEAKER_00, SPEAKER_02, SPEAKER_03, SPEAKER_04, SPEAKER_05]
Executive Summary
The team convened to simplify their audio processing pipeline by consolidating the separate transcription and diarization services into a single, integrated service using the full capabilities of [[Whisper]]. After a brief discussion and confirmation with AI models, they decided this approach would significantly reduce complexity without a major impact on performance or accuracy for their purposes [10:17-11:06]. The majority of the session was a hands-on working session where they used [[Cursor]] to update their [[Project Plan]], refactor the codebase, and systematically clean up all deprecated resources from [[GCP]], including old [[Docker]] images, [[Pub/Sub]] topics, and [[Service Account]]s [32:23-33:01]. This effort involved deprecating the old [[Diarization Service]] and refactoring the primary [[Transcription Service]] to handle the combined workflow. The session successfully streamlined their architecture and cleaned up their cloud environment.

Key Topics Discussed
	•	Pipeline Simplification Strategy
	•	The primary topic was whether to merge the [[Transcription Service]] and [[Diarization Service]] into a single pipeline using [[Whisper]]'s integrated features [02:01-02:17].
	•	Both team members and external AI tools ([[Gemini]]) concluded that a single pipeline would reduce complexity, and a separated approach should only be considered if significant accuracy issues arise [09:15-10:01].
	•	The decision was made to move forward with the integrated [[Whisper]] approach, simplifying the workflow from three steps to one [11:02-11:08].
	•	Project Refactoring & Cleanup with [[Cursor]]
	•	The team used [[Cursor]] as a collaborative tool to implement the new, simplified [[Project Plan]] [17:12-17:29].
	•	A significant portion of the session involved a "Phase Zero Cleanup," where they systematically removed legacy components from the project [32:23-33:01].
	•	Cleanup tasks included:
	•	Deprecating the [[Diarization Service]] [[Dockerfile]] [16:20-16:30].
	•	Deleting old [[Docker]] images from the [[Artifact Registry]] to reduce storage costs [25:48-26:15].
	•	Removing unnecessary [[Pub/Sub]] topics and subscriptions related to the old architecture [42:10-42:15].
	•	Cleaning up deprecated [[GCP]] [[Service Account]]s and associated [[IAM roles]] that were no longer needed [41:56-42:01].
	•	AI Collaboration & Future Vision
	•	The team reflected on their workflow, noting how their process of using session notes and transcripts was creating an effective external [[brain]] or [[Knowledge Graph]] for their AI assistant [37:00-37:39].
	•	They discussed the future of AI, envisioning personal assistants that manage daily life and the increasing ubiquity of AI-generated content [51:11-51:34].
	•	There was a philosophical discussion on societal control, the nature of progress, and the importance of focusing on personal growth and awareness [52:38-53:18].

Action Items & Decisions
	•	Decision: Consolidate the transcription and diarization processes into a single service using the integrated features of [[Whisper]] [11:02-11:06].
	•	Action: Deprecate and delete the standalone [[Diarization Service]] [[Dockerfile]] and its related code [16:20-16:30].
	•	Action: Refactor the main [[Transcription Service]] to incorporate the full [[Whisper]] pipeline [16:20-16:35].
	•	Action: Use [[Cursor]] to perform a "Phase Zero Cleanup" of all deprecated [[GCP]] resources, including [[Artifact Registry]] images, [[Pub/Sub]] topics, and [[Service Account]]s [32:23-33:01].
	•	Action: Build and push the new, consolidated [[Docker]] image for the updated [[Transcription Service]] [1:04:24-1:04:35].

Suggested New Links/Tags
	•	[[WhisperX]]

Linked Concepts
	•	[[AI Agents]]
	•	[[Artifact Registry]]
	•	[[Cloud Build]]
	•	[[Cloud Run]]
	•	[[Cursor]]
	•	[[Diarization Service]]
	•	[[Docker]]
	•	[[Docker build]]
	•	[[GCP]]
	•	[[Gemini]]
	•	[[GitHub]]
	•	[[Hugging Face]]
	•	[[IAM roles]]
	•	[[JSON]]
	•	[[Knowledge Graph]]
	•	[[Obsidian]]
	•	[[OpenAI]]
	•	[[Project Plan]]
	•	[[Pub/Sub]]
	•	[[README]]
	•	[[Service Account]]
	•	[[Session Log]]
	•	[[State Machine]]
	•	[[Transcription Service]]
	•	[[Whisper]]
	•	[[WhisperX]]
	•	[[brain]]

#Tags
	•	#AI
	•	#Automation
	•	#Deployment
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom44
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1426_ZOOM0044_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:00] SPEAKER_00: What I
[00:00-00:00] UNKNOWN: want
[00:00-00:03] SPEAKER_00: to add is, we talked about it before,
[00:04-00:04] UNKNOWN: but
[00:04-00:11] SPEAKER_00: like a start -up date. Oh. So actually reference that end -of -day document. Right. Because I've actually been reading it in
[00:11-00:11] UNKNOWN: the
[00:11-00:31] SPEAKER_00: last few days and it's doing a pretty good job from that perspective. I mean at a minimum we can do it manually. That's true. And I'll do that right now. Yeah, we don't necessarily need a rule that just as part of, it almost should be manual in the sense of you should go read it and then go like,
[00:32-00:32] UNKNOWN: hey,
[00:33-00:51] SPEAKER_00: look at this too. Because that gives like just a little bit of you checking in on how it summarized it the day before and checking in on like just refreshing yourself at the beginning of a
[00:52-00:54] UNKNOWN: day. A
[00:54-00:55] SPEAKER_00: landmark day for the project.
[01:49-01:50] SPEAKER_02: Um, do
[01:50-01:50] UNKNOWN: you
[01:50-01:51] SPEAKER_02: know what the error
[01:51-02:28] SPEAKER_00: was? Well, it claims that it did figure it out and it had to do with this multi -aligned command in the YAML file. And it says that it corrected that. That hasn't been tested yet, but because when like we deleted it and it was rewriting and then I was looking and I saw that new images or new pods were being spun up and that at the end of that conversation was when I was cursing at it so I walked away. Because it was like, no, there's no notifications in PubSub at all. And then it was doing shit like I sent,
[02:28-02:28] UNKNOWN: I
[02:28-02:36] SPEAKER_00: gave it a screenshot of a new pod that was failing and it was like, oh, it looks like one of them got through right after I sent that message.
[02:37-02:37] UNKNOWN: That's
[02:37-02:37] SPEAKER_00: probably what happened.
[02:38-02:38] UNKNOWN: And
[02:38-02:42] SPEAKER_00: I was like, mother fuck. That is not what happened.
[02:44-02:44] SPEAKER_02: That's
[02:44-02:44] UNKNOWN: funny.
[02:45-02:48] SPEAKER_02: Um, so we're on 2 .4.
[02:48-02:48] UNKNOWN: Uh,
[02:48-03:02] SPEAKER_00: 2, 3 .1 is done, which I think we should probably do it again because all it is is watching the cluster spin up. Right.
[03:02-03:02] UNKNOWN: For
[03:02-03:08] SPEAKER_00: the most part, like it's confirming all that stuff. So it's probably, probably wouldn't hurt to do that again, but we don't have to.
[03:09-03:09] SPEAKER_02: No, let's do it.
[03:10-03:34] SPEAKER_00: It's 2, 3 .1 and then. And then 3, 2 is where we're going to start debugging what happened in that. Yeah. And in theory it fixed the problem already, but my guess is there's going to be a, a debugging period at this part. But as soon as this starts properly, it should finish right. Properly. Right.
[03:37-03:38] UNKNOWN: I
[03:38-03:45] SPEAKER_00: also had to clean up the read me yesterday. So it is much more condensed than it was.
[03:46-03:46] UNKNOWN: I
[03:46-03:48] SPEAKER_00: gave it the full,
[03:49-03:49] UNKNOWN: um,
[03:49-04:02] SPEAKER_00: it had most of this was in place, but just talking to it. But then I gave it the full plan that you sent me and just to make the phases align because it had like, it was based on how we had been working. Yeah. Um,
[04:02-04:02] UNKNOWN: I
[04:02-04:14] SPEAKER_00: was just like lining these phases up and they're still just like not nearly the full prompts or anything, but it's just a high level. Here's what we need to do in
[04:14-04:14] UNKNOWN: these stages.
[04:19-04:45] SPEAKER_00: You using clod or, um, Jim in there. I didn't really think it's better now. I don't think it just feels better, but maybe that's just the human. Okay, babe. I love you. Um, I agree with you. It could also be that I'm only using Jim and I when cause not available, I eat the most high traffic times. So maybe everybody sucks at that point, but I don't know.
[05:21-05:23] UNKNOWN: Okay.
[06:01-06:07] SPEAKER_00: Actually make like the movie of the little cartoon character, Kyle.
[06:08-06:08] SPEAKER_01: Yeah.
[06:09-06:29] SPEAKER_00: And like literally basically make all of them to like Jordy and Shiloh and Mary and all of the parents, grandkids. Yeah. I think that would be cool. Cause that just doesn't even have to be anything like, it's just a hyper specific cartoon for them. Right. And
[06:29-06:29] UNKNOWN: we
[06:29-06:31] SPEAKER_00: can make like, that's,
[06:31-06:31] UNKNOWN: I
[06:31-06:37] SPEAKER_00: think I've mentioned this to you before, but like the same story, but for the parent and for the kid, Oh, yeah.
[06:37-06:37] UNKNOWN: You
[06:37-06:37] SPEAKER_00: can
[06:37-06:37] UNKNOWN: watch
[06:37-06:42] SPEAKER_00: different things and still talk about the same story. Yeah. Like, Oh, can you believe that this happened?
[06:42-06:48] SPEAKER_02: Yeah. That'd be cool. That's a unique and cool idea that you can do if you can just make whatever you want.
[06:48-07:26] SPEAKER_00: Right. You just have to be able to kind of even figure out what the hell that looks like. Right. Truly fleshing it out. But we can make some really cool shit. I'm with you. Really. And more is like the almost, if you can make your own, any kind of Pokemon go type shit that you want to do. You can. Yeah, exactly. And if there were glasses instead of the phone and like,
[07:27-07:33] SPEAKER_02: Yeah. So the thing about that is the hardware hasn't necessarily matured as much or,
[07:34-07:34] UNKNOWN: and
[07:34-07:42] SPEAKER_02: it's not as popular, right? So you might spend a lot of time and money making something in a hundred people use it. Yeah. Well, what if
[07:42-07:51] SPEAKER_00: it's also, right? That's true. Also just kind of trying to predict the future a little bit that hardware is common. It is definitely. I
[07:51-07:55] SPEAKER_02: think 2027 is going to be the year. I don't even think 26 is going to be.
[07:55-08:14] SPEAKER_00: As long as you're building with whatever Flutter is on BR, but basically it can deploy to any place, then build whatever you can. And if you want more like powerful tools that that, whatever that framework is, I assume it's like Unity or Unreal. Yeah. One of those,
[08:14-08:14] UNKNOWN: I
[08:14-08:16] SPEAKER_00: think Unity is more 3D, but I don't
[08:16-08:22] SPEAKER_02: know. You were into it much more than I did. I never really did it. Three or four years ago at this point, you're the fuck know where the
[08:22-09:01] SPEAKER_00: industry's at, but, um, because that was pre AI doing anything. Yeah. Like, man, it's going to be crazy. That's when you just had to know. Yeah. You said like, I've got doc documentation. Yeah. I'm going to flip through this both real quick. Okay. There it is. But even that wasn't that hard because the tech is so good. Like I built my room out. Yeah. That's cool. It's not, not that crazy. And when you're building a world, it's like, obviously you can build your own, but it's like, here's a sample of grass, drag that everywhere and make it like,
[09:02-09:02] UNKNOWN: like
[09:02-09:11] SPEAKER_00: whatever, sand the middles so they don't look like it's just repeating the same block a hundred times. Right. That's all you're doing. And you just do that for a hundred hours and all of
[09:11-09:11] UNKNOWN: a
[09:11-09:12] SPEAKER_00: sudden you have one
[09:12-09:15] SPEAKER_02: little thing. Because if it's super challenging, nobody,
[09:15-09:15] UNKNOWN: it
[09:15-09:27] SPEAKER_02: would be accessible. Right. Or if it was just, even if it's not like computationally or intelligence wise complex, It's still, even if it's just hard to like, well, nobody's going
[09:27-09:27] UNKNOWN: to
[09:27-09:30] SPEAKER_02: do it. Yeah. So
[09:30-09:33] SPEAKER_00: that's why video games suck now is because no one's doing it. Right.
[09:35-09:38] SPEAKER_02: I don't think that's why video games suck. Maybe
[09:38-09:44] SPEAKER_00: it's a combination of a lot, but I think genuinely like the talented people were out in all the entertainment industries.
[09:44-09:44] UNKNOWN: It's
[09:44-10:04] SPEAKER_00: like, it's not even that some, it's not the DEI thing at all. The people that used DEI explicitly and not even like to get the job, the people that were like maintaining it and being like, you should be doing and doing all that shit. Those people ran the talent out because the talent just wants to go, Hey, I want to
[10:04-10:04] UNKNOWN: go
[10:04-10:07] SPEAKER_00: into my room for a hundred hours a week and just,
[10:07-10:07] UNKNOWN: you
[10:07-10:28] SPEAKER_00: leave me alone. But what about the messages? We need you to come to this meeting about inclusiveness. Right. All right. It's like, okay. And obviously they didn't need to be encouraged to let those people be pushed out the door because that's just more stuff that they can put their people in. Right. And now everything sucks. And nothing became about talent.
[10:28-10:28] UNKNOWN: It
[10:28-10:30] SPEAKER_00: was just like, if we can, it's the,
[10:31-10:31] UNKNOWN: the
[10:31-10:40] SPEAKER_00: conqueror metaphor that came up a long fucking time ago of like, they know how to conquer. They don't know how to run an empire. Right. And so it's like people thought,
[10:40-10:40] UNKNOWN: Oh,
[10:40-10:48] SPEAKER_00: if we can just take over control of Star Wars, we'll be famous and this big like beloved runners of Star Wars. Now it's like, no,
[10:48-10:51] SPEAKER_02: you'll be famous for screwing it up. Yeah.
[10:51-11:11] SPEAKER_00: And that has happened to across the board. Like obviously Disney is the best example because they've got Marvel and Star Wars and Disney, but like that has happened across the board. I mean, why do you think Joel got killed? Really? Why do you think? Cause freaking Ellie don't need no man.
[11:12-11:12] SPEAKER_02: He's a guy.
[11:13-11:21] SPEAKER_00: I don't know if you heard anything about Superman. Watch the snarky J video. She said like, basically it could have been good.
[11:21-11:36] SPEAKER_02: Yeah. There's potential to it. And basically she was like, he's been this whole time getting this ass kicked and getting saved by a dog. It's like, I knew it had to be something. That's like, how are they going to figure out how to make a strong woman beat soup, like save Superman. It's like, well,
[11:36-11:36] UNKNOWN: it
[11:36-11:38] SPEAKER_02: wasn't a dog. My guess is,
[11:39-11:39] UNKNOWN: is
[11:39-12:03] SPEAKER_00: a girl dog. And I can make the, I mean that dog, I think exists in the comics, but you can, it's not that hard to draw that line. If I wanted to, to go like, Hey women, they replaced you with a dog. It's not even taking men down anymore. It's so obvious that what they're pushing is nonsense that you just had to be pushed out of the way for
[12:03-12:03] UNKNOWN: a
[12:03-12:04] SPEAKER_00: fucking, for something else, for the next
[12:04-12:10] SPEAKER_02: thing. Whatever. Yeah. But who knows? Yeah. Maybe he'll come back.
[12:11-12:22] SPEAKER_00: I think it is like those, those are the ones that are going to take the longest to turn around because they take the longest to make. Yeah. Right. So that guy started making in the heat of it. Yeah, for sure.
[12:22-12:24] SPEAKER_02: It takes two, three years to make a movie.
[12:24-12:38] SPEAKER_00: Yeah. And so we kind of started, I think to see some of the smaller, you know, they take 10 months to produce movies are starting to be less absurd if nothing else. Yeah.
[12:39-12:39] UNKNOWN: And
[12:39-12:45] SPEAKER_00: like Harley, I still haven't seen it, but said that that last Marvel one was not bad slash pretty good. Yeah. I
[12:45-12:49] SPEAKER_02: know what you're talking about. I haven't seen it though.
[12:49-12:56] SPEAKER_00: Yeah. But it's at least, I don't know that I'm going to, no, I'm probably not going to, but I'm not like a huge, I'm not a big Marvel fan anyway.
[12:56-13:02] SPEAKER_02: Yeah. And so I'm primarily like sci -fi. I don't watch anything, but,
[13:03-13:03] UNKNOWN: um,
[13:03-13:06] SPEAKER_02: and we've had some good ones. So
[13:06-13:07] SPEAKER_00: they're coming along.
[13:07-13:09] SPEAKER_02: Yeah. I mean, and or, it
[13:09-13:30] SPEAKER_00: was really, really good. And, and an example of the opposite is fucking house of the dragon. Unfortunately. There you go. And everything that HBO HBO is just calling it's a different company. No, it's not what we used to have because discovery Max like bought it and now it's a for -profit corporation in the wars.
[13:30-13:48] SPEAKER_02: Yeah. And so, I mean, I think that what I hope is what you hope is that these small studios like us just take over because well, you open the door and start producing bullshit, although it's beautiful, beautiful looking bullshit. So
[13:48-14:18] SPEAKER_00: I saw a video. I'm in this loop of like celebrity takedown videos. Like basically like Will Smith is losing his shit. Yeah. Like look what printing shops got going on. And it's at least it's not politics, but there was one about Will Smith and this tour, I didn't even know he was doing a thing right now, but yeah, he's like dropped some music and apparently a couple of music videos and it's rough. It's an old dude like trying to. I haven't seen anything. That's funny.
[14:19-14:19] UNKNOWN: I
[14:19-14:19] SPEAKER_00: didn't,
[14:20-14:20] UNKNOWN: I got
[14:20-14:55] SPEAKER_00: exposed to none of it. I got exposed to it when people were bashing it. So basically this guy's point is like one, he's just doing a lot of cringe stuff and the stuff we knew about Will Smith, like he had his like formula for what makes a good movie and he, that's why he turned down the matrix because it didn't match the formula and it worked like he killed it, but he was like, he's in a time and place right now where, uh, he's being kind of cringe and doing the like midlife crisis, he trying to get back to old days, but also you're in a time where we're kind of over celebrities in general. And it's like,
[14:55-14:55] UNKNOWN: he
[14:55-15:04] SPEAKER_00: also equated it to that Snow White chick. It's like, you just did the standard celebrity studio shit, but you're wrong place, wrong time for that bullshit.
[15:04-15:04] UNKNOWN: I
[15:04-15:05] SPEAKER_00: agree. But
[15:05-15:05] UNKNOWN: chances
[15:05-15:10] SPEAKER_00: are they actually did want you to say all that stuff initially. Cause that was the tone of the time.
[15:11-15:14] SPEAKER_02: But yeah, I think in general, we're over celebrities. We see them too much.
[15:14-15:14] UNKNOWN: I
[15:14-15:21] SPEAKER_02: think that's the flip side of TikTok and always on it is like, well, there's a thousand celebrities and whatever.
[15:21-15:21] UNKNOWN: It's
[15:21-15:50] SPEAKER_00: really cool at the beginning. Right. And then it just becomes too much. Right. And we're at the too much point, but that is why we have an opportunity because the celebrities dead. Right. And that's why that's like my thesis on they're not going to be around anymore because if nothing else is economically infeasible, we might have human actors, but they're going to be like back to like the actors in game of Thrones, scraping by going from fucking town to
[15:50-15:50] UNKNOWN: town
[15:50-15:52] SPEAKER_00: and like constantly working for a
[15:52-15:52] UNKNOWN: hundred
[15:52-16:05] SPEAKER_00: different studios. Cause I don't need that much out of you. Like it's mostly AI going on in here. So I'll pay you 10 grand to have the fucking like, you know, old school feel of it of a real person on the screen.
[16:06-16:06] UNKNOWN: But
[16:06-16:13] SPEAKER_00: I'm not, we're not even going to approach six figures from one job anymore. Don't even talk about millions.
[16:14-16:20] SPEAKER_02: I agree. Cause I don't think basically doing voiceover here and there and that kind of likeness, right?
[16:20-16:32] SPEAKER_00: But like, why would I pay for your likeness a lot, at least when I can just make this other fake thing popular and I can try a thousand of them. One of them catches on. I'm golden.
[16:32-16:37] SPEAKER_02: Right. See, yeah, I don't need you to actually be talented and
[16:37-16:37] UNKNOWN: act
[16:37-16:38] SPEAKER_02: like pretty. You're like,
[16:38-16:38] UNKNOWN: I
[16:38-16:39] SPEAKER_02: can make you
[16:39-16:40] SPEAKER_00: exactly.
[16:42-16:49] SPEAKER_02: And it turns out there's like 30 % of the women in the world are beautiful. Time runs out. You're not that special.
[16:50-17:14] SPEAKER_00: That's like why the whole, uh, Weinstein thing was able to happen. Cause ultimately he, like, there's not that many good actors. And so he's pretty, he's picking a person out of this pool of a thousand and going, Hey, you're rich and famous now. Like that's, and that's what they are trying to apply for. I'm not saying it was cool. No, I agree. But it's like,
[17:14-17:14] UNKNOWN: you
[17:14-17:23] SPEAKER_00: got to pay the piper. That's why it was able to do that. Cause he's literally picking you out of obscurity with like some talent, but like nobody's a good actor. There's like seven good actors.
[17:25-17:25] SPEAKER_02: And then the rest,
[17:26-17:26] UNKNOWN: we
[17:26-17:27] SPEAKER_02: can make it work. Yeah. We're
[17:27-17:27] UNKNOWN: getting
[17:27-17:28] SPEAKER_02: a
[17:28-17:28] UNKNOWN: camera
[17:28-17:28] SPEAKER_02: magic.
[17:28-17:28] UNKNOWN: And
[17:28-17:30] SPEAKER_02: yeah, you're not coming with, you're not a writer. The system,
[17:30-17:36] SPEAKER_00: you want to show up to a set with everything already done for you. You didn't put anything in place, write any script and just say,
[17:37-17:37] UNKNOWN: and
[17:37-17:37] SPEAKER_00: get a bunch of money.
[17:37-17:37] UNKNOWN: And
[17:37-17:38] SPEAKER_00: that's
[17:38-17:38] UNKNOWN: like
[17:38-17:39] SPEAKER_00: that. I agree, man.
[17:39-17:41] SPEAKER_02: That would be sweet. But a lot of people can do that.
[17:41-17:47] SPEAKER_00: Everybody wants that. Right. And that's just going to
[17:47-17:53] SPEAKER_02: be gone. You literally want to sell yourself to the devil. You can do it. Here it is. Yeah. This is the pathway. That's the devil.
[17:57-18:00] SPEAKER_00: But yeah, that's going by the wayside. We're
[18:00-18:00] UNKNOWN: going
[18:00-18:01] SPEAKER_00: to have famous
[18:01-18:09] SPEAKER_02: ads. So I don't understand what's happening. Like what this script is doing. Like it built a content built and pushed a container.
[18:09-18:27] SPEAKER_00: Yeah. So that is it pushing it to the cluster? No, it's deploying it or it will push it to the cluster. I think like that whole thing deploys. I don't think we had used it before yesterday. Maybe we had, but yeah, that is the actual job controller. It builds it, pushes it and deploys it.
[18:27-18:27] UNKNOWN: I
[18:27-18:43] SPEAKER_00: believe every time it's already in there. I know. That's why the script is done. I think we had stopped using the script or like I had to make it executable on my machine, so I had obviously never used it. And.
[18:43-18:44] SPEAKER_02: Yeah.
[18:44-18:44] UNKNOWN: So
[18:44-18:54] SPEAKER_02: I feel like this is the script to create the stuff, not started up. Do
[18:54-18:54] UNKNOWN: you
[18:54-19:12] SPEAKER_02: see what I'm saying? Well, there's you already ran the deploy cluster, right? I did. Okay. Clusters up. What I'm saying is like this creates a pub sub topic. It creates it.
[19:14-19:14] UNKNOWN: Yeah.
[19:16-19:18] SPEAKER_02: Like this, that's step three is created.
[19:19-19:21] SPEAKER_00: Checks if it exists first.
[19:21-19:34] SPEAKER_02: I agree. But like, this is the process of setting everything up. Do you see what I'm saying? For sure. They shouldn't run every time. Maybe that's what it's doing. Like it's going through the process of setting it up and we're only going to run this script once.
[19:34-20:13] SPEAKER_00: I mean, that is what it's doing for sure. But I don't like, I think it might have just found that script. In that directory and been like, Oh, that's what we can use versus not using scripts and I agree. It's like over the top. It's not even going to build it every time. It's just going to go, Oh, it's built, but still that's not necessary. Unless it kind of is because the only reason we would be like, if we make any changes to that, we need to rebuild it, redeploy it, re push it and redeploy it. That's true. That's the purpose of the script. Yeah. And I think actually, no,
[20:13-20:13] UNKNOWN: I
[20:13-20:59] SPEAKER_00: went through this yesterday in my head. I think that's the one that you said you wanted. Like that's, that's our manual automatic at the beginning of the day. It's like the deploy cluster, deploy job controller. Almost a dollar yesterday.
[20:59-20:59] SPEAKER_02: Not
[20:59-21:01] SPEAKER_00: bad. 59 cents. I mean,
[21:02-21:02] UNKNOWN: legit
[21:02-21:32] SPEAKER_00: did have a cluster up a lot and stuff like that. 40 cents of compute. Okay. That's not bad.
[21:42-21:42] SPEAKER_02: Oh, I
[21:42-21:42] UNKNOWN: guess
[21:42-21:44] SPEAKER_02: the buckets are different
[21:44-22:20] SPEAKER_00: now, or we haven't cleaned those up. Uh, no, there's some, I think all we really need is input audio, HF model, and whichever one of those transcriptions, probably not the multi -region one. I didn't realize that was a thing. Yeah.
[22:20-22:20] UNKNOWN: So
[22:20-22:34] SPEAKER_00: there's already a job in there. So some kind of pumps over whatever is still rocking. Yeah. I'm going to go clear.
[22:58-23:05] SPEAKER_02: There's two in there now. We just added them. Um, I'm going to
[23:05-23:05] SPEAKER_00: put it in. I'm
[23:05-23:05] UNKNOWN: going
[23:05-24:43] SPEAKER_00: to tell it that I'm clear. Yeah. Where are those messages from though? Like if all we've done is deployed the job controller, I think it's worth seeing if it can figure out what. Unless that script has something in it. Yeah. One of the last echoes in this script is important next steps, disable the cloud function. Function should be like that's from however long ago it was when we were,
[24:44-24:44] UNKNOWN: we
[24:44-24:47] SPEAKER_00: pivoted back, but we still had that thing creating VMs.
[24:47-24:53] SPEAKER_02: So we need to just have it look at this job controller script. Yeah. What?
[24:56-26:11] SPEAKER_00: I mean, that is three .one. Yeah. I think technically. Actually trying to figure out what's wrong with the jobs. I think is space three point
[26:11-26:17] SPEAKER_02: two. Got it. Um, I'm going to clear the queue.
[26:28-26:36] SPEAKER_00: So currently I'm pretty sure it's still is, which is why these are here. Um, it's commented out the auto cleanup. So I'm going
[26:36-26:36] UNKNOWN: to
[26:36-26:41] SPEAKER_00: delete these four and we'll either see new ones or not.
[26:41-26:47] SPEAKER_02: Yeah. I think we're going to continue to see new ones until that queue is empty. Right. And then, um,
[26:47-26:48] SPEAKER_00: but you just purged it. Yeah.
[26:48-26:49] SPEAKER_02: It just,
[26:49-26:49] UNKNOWN: it
[26:49-26:54] SPEAKER_02: takes some time. They may still trickle in there until it actually is done.
[26:55-26:56] UNKNOWN: Right.
[27:12-27:14] SPEAKER_02: So what is happening?
[27:29-27:31] SPEAKER_00: That is serious.
[27:31-27:34] SPEAKER_02: Yeah, exactly. That right there.
[27:34-27:35] SPEAKER_00: Yeah.
[27:35-27:36] UNKNOWN: And
[27:36-27:36] SPEAKER_00: it's like,
[27:37-27:37] UNKNOWN: it
[27:37-27:41] SPEAKER_00: may not benefit. Yeah. That's exactly what's going to happen. I mean, that's not our current problem,
[27:42-27:43] SPEAKER_02: but I think we should.
[27:43-27:45] SPEAKER_00: It is a problem though.
[27:45-27:45] UNKNOWN: I
[27:45-27:48] SPEAKER_00: think, I think we just delete all the scripts.
[27:49-27:50] SPEAKER_02: Yeah. But I mean, I think.
[27:51-27:51] UNKNOWN: I
[27:51-27:58] SPEAKER_00: think deploy cluster. Once we had the job controller up there, deploy cluster should be able to do that.
[27:59-28:00] UNKNOWN: Right.
[28:01-28:05] SPEAKER_02: You to do deploy the job controller. Right. And just move that into that.
[28:05-28:28] SPEAKER_00: Yeah. We just have one script. I guess maybe it has the weight until the cluster is up. Yeah, I think so. Do you
[28:28-28:28] UNKNOWN: want
[28:28-28:28] SPEAKER_00: to
[28:28-28:28] UNKNOWN: work
[28:28-28:42] SPEAKER_00: on this? It's not making new ones. Okay. So purging that message did work. We just need to find out where in the heck it's coming from. And based on it happening this morning, sure seems like it's one of those deploy scripts.
[28:43-28:44] SPEAKER_02: No, I mean, I think it was already in
[28:44-28:44] SPEAKER_00: there.
[28:45-28:45] UNKNOWN: Like,
[28:46-28:52] SPEAKER_02: yeah, like, yeah. So for all of this time, there was that, it was at one. And then when we deployed a second one, it went to two.
[28:52-28:52] UNKNOWN: Got
[28:52-29:02] SPEAKER_02: it. Like, so there was already a message just sitting in there and it set for seven days. Like when you look at this, it's retention at seven days. So it's from yesterday. Right. It's just sitting in there.
[29:02-29:02] UNKNOWN: As
[29:02-29:16] SPEAKER_02: soon as there was a handler, it's like, okay, let's start making jobs. Let's get in there. Now there's two. And it's just kicking out jobs until it, and then all these jobs are failing. So it never went away because the job never finished. My question,
[29:16-29:16] UNKNOWN: I
[29:16-29:36] SPEAKER_02: don't think it's abnormal. Why couldn't it see it? Oh, I agree. That is the question. Like, cause I can go, we went round and round on this for a while, but we eventually figured out, well, yeah, the message is still sitting in there and it's doing exactly what it's supposed to do. It sees the message. It tries to process it and kicks off a job, kicks off a job, kicks off a job, and it just keeps doing it. And now there's two.
[29:38-29:39] SPEAKER_00: Yeah.
[29:41-29:41] UNKNOWN: So
[29:41-29:50] SPEAKER_00: that does make sense. And that is an issue on top of the fact that it can't see it is an issue. And that's like, that's
[29:50-29:59] SPEAKER_02: a secondary issue. The core issue is the job's not running right. Right. If the job was running correctly and purging the queue. Yeah. If the job was doing
[29:59-30:01] SPEAKER_00: success message back then it's done. We would be done.
[30:01-30:01] UNKNOWN: If
[30:01-30:13] SPEAKER_00: the, what we don't want to have is it actually spinning up jobs while it's working because it's success message is at the end of this long processing or whatever.
[30:14-30:32] SPEAKER_02: Right. So I think we should tell it these things and like talk about this for a second. And there's two, they're calling this a minor issue, but whatever, I think we need to address both of these. I agree. And basically new sessions, maybe not new sessions, maybe right then this session. I don't think we should go on to the next thing without resolving both of
[30:32-30:32] UNKNOWN: these.
[30:32-30:36] SPEAKER_00: I agree. And it's got something like this GCS bucket notification.
[30:36-30:36] UNKNOWN: I
[30:36-30:37] SPEAKER_00: don't know.
[30:38-30:39] SPEAKER_02: Where you see that?
[30:39-30:56] SPEAKER_00: Number one under next steps. Yeah. And it's going to fix the discrepancy. See that cloud function is not there. So that script is just old and yeah.
[30:59-31:01] SPEAKER_02: Do I still know.
[32:35-32:36] UNKNOWN: Yeah.
[32:40-32:55] SPEAKER_00: Issue is quite failure. Right. Not telling the pump sub topic to cut it out. Right. Yes. We almost need a message upfront. That's like,
[32:55-32:55] UNKNOWN: I
[32:55-33:07] SPEAKER_00: got it stops sending it regardless. Right. It doesn't matter whether I finish or not. And then a mechanism for handling failure that just literally starts the topic again.
[33:07-33:17] SPEAKER_02: I mean, I think it's this is this acknowledgement deadline. Okay. So it's two minutes, right? So it's not sending it over and over. It's sending it every 10 minutes. I think that's reasonable.
[33:17-33:22] SPEAKER_00: That, but what if it takes 11 minutes to successfully complete the job?
[33:23-33:28] SPEAKER_02: Or it wasn't, maybe we'll change it. Right. That's, that's the issue. Like it's these two things.
[33:28-33:29] SPEAKER_00: I agree.
[33:29-33:29] UNKNOWN: And
[33:29-33:50] SPEAKER_00: this, if we just lower the seven days, but generally for it to work like well and reliably, I think it needs to send the message. Once it receives it stops sending the message. Just like kill that and, but keep a state or whatever of like, if you need to, if this fails, we need to start that back up.
[33:51-33:59] SPEAKER_02: Well, I mean, I don't think it could do that. I think this is the only way that if it receives an acknowledgement is the only way that it feels the message that takes it out of the queue.
[34:00-34:43] SPEAKER_00: I agree. But there's a way to like, there's a line you can run a command that you can run to make that message start if you want it. Like, so you could keep the reference to the bucket that started that pub sub message, like that's the way we test it now, instead of uploading the file. It goes and looks and manually creates a message. Right. So just some way, like there's something that needs to be put around because we don't have a feel for how long our processing is going to take, especially based on how long the actual audio file is. And so any hard coded deadline is kind of vulnerable.
[34:44-34:49] SPEAKER_02: Yeah. I understand what you're saying. Um, there may be a way to do that.
[34:51-34:51] UNKNOWN: I
[34:51-34:52] SPEAKER_02: want to see.
[34:56-34:56] UNKNOWN: Yeah.
[34:58-35:02] SPEAKER_00: But now it's saying it's resolved. Yeah. Well, I mean, I think it
[35:02-35:08] SPEAKER_02: is resolved from the perspective of a rogue publisher. It's not a rogue publisher. That message is just sitting in there.
[35:08-35:08] SPEAKER_00: Yeah, you're right.
[35:09-35:12] SPEAKER_02: And so handling it differently is a,
[35:12-35:12] UNKNOWN: is
[35:12-35:29] SPEAKER_02: an option, but it was getting ready to go down to where did this message come from? It's like, well, we it's still in there from the last time you put a message in there. And the new one didn't process because it's designed to pull one at a time and it's still pulling that old one and until it's not going to fix it. That
[35:29-35:30] SPEAKER_00: makes sense.
[35:33-35:41] SPEAKER_02: But I do agree with you. Like if you look at the workloads, these three, it produced four very quickly.
[35:41-35:44] SPEAKER_00: Yeah. Which is Kubernetes magic. Like that's what's happening. But
[35:44-36:00] SPEAKER_02: it should only process that job one time. It should only have one job. Or maybe it's because the clusters did like the press could pull the, the job controller pulled the message and the cluster is trying to reach the, like the cluster is doing it, not the pubs up.
[36:00-36:00] UNKNOWN: Yeah.
[36:19-36:27] SPEAKER_02: I think though that we should go through and get it working and find out if,
[36:28-36:28] UNKNOWN: cause
[36:28-36:37] SPEAKER_02: man, a 10 minute message, like if it, like based on what, how fast we think this is supposed to be, that's like, uh,
[36:38-36:41] SPEAKER_00: how long, like it's like a eight hour. I mean,
[36:41-36:41] UNKNOWN: if
[36:41-36:44] SPEAKER_00: it's 70 times faster than whatever,
[36:45-36:45] UNKNOWN: so
[36:45-36:52] SPEAKER_00: let's just do 70 minutes would take one minute. Right. So 10 minutes,
[36:52-37:11] SPEAKER_02: 700 minutes. That's a 700 minute file. Right. That's what it's like. I think 10 minutes is fine. Yeah. It just needs to work. Like if any of it starts working, 10 minutes is probably too long. Yeah. Like we should be able within two minutes should be able to know that,
[37:11-37:11] UNKNOWN: Hey,
[37:12-37:12] SPEAKER_02: something's wrong.
[37:12-37:24] SPEAKER_00: Yeah. 10 minutes is probably still good because it'll still shut it down whenever it's done. Right. I agree. And so don't send it for another 10 minutes. Right. Is all
[37:24-37:30] SPEAKER_02: pubs up doing. Right. I agree. And I think that's good for us at a minimum, our troubleshooting to get through that. Cause if it starts up,
[37:30-37:30] UNKNOWN: our
[37:30-37:38] SPEAKER_02: test file is 10 minutes. Yeah. She's going to just like seven, if it ever works, this is going to work. Like we're going to be surprised when it's just going to work.
[37:39-37:39] UNKNOWN: I think
[37:39-37:43] SPEAKER_02: 10 minutes is long enough for us to troubleshoot and then we can go back and tweak and tune and do whatever.
[37:43-37:58] SPEAKER_00: Yeah. I agree. And we have the absolute control over like we're starting to stop in the cluster. Right. It's not going to run away from this.
[37:58-37:59] SPEAKER_02: Right.
[39:06-39:32] SPEAKER_00: Maybe tell it that cluster manager function doesn't exist. It's a artifacts from the deploy job controller script. So where do you see that? I'm pretty sure it's getting that from line 145, which is basically a print statement that is really,
[39:33-39:49] SPEAKER_02: I think we need to remove this. I'm just going to delete this. It's all that stuff right there. Important next steps. Yeah. I don't know what that triple or maybe it needs that. Where? Oh, it's a new line. Got
[39:49-39:49] UNKNOWN: it.
[39:56-40:06] SPEAKER_00: I don't think we need this. I don't either. It's just print statements and one, it is actively fucking up. Cursors understanding right now.
[40:07-40:07] UNKNOWN: And
[40:07-40:17] SPEAKER_00: two, the other ones are like, okay, now go test. Right. They're not providing anything real. So I really just
[40:17-40:17] SPEAKER_02: want to do this.
[40:33-40:33] SPEAKER_00: Oh yeah.
[40:33-40:33] UNKNOWN: It
[40:33-40:39] SPEAKER_00: also wasn't logged in yesterday until I would say,
[40:39-40:39] UNKNOWN: Hey,
[40:39-40:44] SPEAKER_00: you haven't logged in yet. Oh, really? Yeah. The only reason I thought of it just now is because it said,
[40:44-40:44] UNKNOWN: let
[40:44-40:45] SPEAKER_00: me do that real quick.
[41:12-41:25] SPEAKER_02: And I want to redeploy the job controller. Right. That may be the issue.
[41:25-41:33] SPEAKER_00: My guess is when you redeploy that job controller, we're going to see new pods spin up in here. Well, there's no messages in
[41:33-41:34] SPEAKER_02: there.
[41:34-41:34] UNKNOWN: There
[41:34-41:40] SPEAKER_02: shouldn't be. So it shouldn't spin up. Yeah. So the job controller, it should just stay like this. This will go inactive for a little while
[41:40-41:40] UNKNOWN: and
[41:40-41:46] SPEAKER_02: come back. Yeah. And then it will look, it will try to pull, but there's not going to be anything in there.
[41:46-42:07] SPEAKER_00: And then we can probably do a new session, but then upload the audio file and see an output. We're getting closer to, I'm not actually joking when I say that. No, no, I agree. I agree. We're not all the way there yet, but we're getting closer.
[42:07-42:22] SPEAKER_02: Yes. So my guess is we're going to see that go yellow or whatever at some point. Why maybe not? Maybe it just is fast. So fast because it's a small
[42:22-42:38] SPEAKER_00: application. It's not even trying to delete.
[42:48-42:49] SPEAKER_02: Yeah.
[42:57-43:09] SPEAKER_00: Started letting it run this hide similar entries query that it asks about all the time. Yeah. And I think it is, does provide some value. Like it gets rid of the Kubernetes noise basically.
[43:10-43:10] UNKNOWN: Yeah.
[43:42-47:26] SPEAKER_02: She went to the, to the track. Um, it actually.
[47:48-48:00] SPEAKER_00: Yeah. When this thing starts, we almost shouldn't have enough time to go look at it before it's there. I agree. Unless there's just some like processing steps that aren't the actual process.
[48:01-48:01] UNKNOWN: And
[48:01-48:03] SPEAKER_00: I go, okay, finalize everything in variety. I agree.
[48:14-48:14] UNKNOWN: Yeah. How
[48:14-48:17] SPEAKER_00: many hours you think you're on that sucker right now?
[48:20-48:37] SPEAKER_02: So I'm just going to average the two hours a day for like six days a week for three weeks. Yeah. So 36, 40 ish. Yeah. It's not terrible, but significant. Be a significant cost if we were running and we're paying for
[48:37-48:46] SPEAKER_00: it. Yeah. I mean, I forget, it would be the highest level, whatever that is. I think that there is an unlimited level, but it was like hundreds.
[48:50-48:51] SPEAKER_02: I'm going to go make.
[48:55-48:56] UNKNOWN: I don't want to put it
[48:56-49:00] SPEAKER_00: in auto. Yeah. I'll see. Click it.
[49:09-49:10] SPEAKER_02: Yeah. Yeah.
[49:10-49:10] UNKNOWN: My
[49:10-49:15] SPEAKER_02: guess it needs to get a message added and then we'll see how it goes.
[49:16-49:16] UNKNOWN: Yep.
[51:40-51:41] SPEAKER_00: Yeah.
[51:41-51:41] UNKNOWN: Did
[51:41-51:42] SPEAKER_00: a bunch of bullshit for a second,
[51:44-51:44] UNKNOWN: but
[51:44-51:45] SPEAKER_00: it's
[51:45-51:45] UNKNOWN: now
[51:45-52:12] SPEAKER_00: looking for the audio file. It saw an error, a failed test from 30 minutes ago. It was like, oh no, let me go check all the pods and see what's going on. We're out of a, it was a quota error, error. More like it maxed out the four pod limits. Oh, got it. But it was like, oh shoot. It looks like there's nothing running. This doesn't make sense. Like bro, it's from earlier. Let's go.
[52:13-52:14] SPEAKER_02: Hold
[52:14-52:14] UNKNOWN: on.
[52:16-53:16] SPEAKER_02: Let's just manually make a message. I don't know the functions call trigger pipe. Like it's using the function to do it. Why is it? That's not right. It's not that right message. I
[53:16-53:17] SPEAKER_00: would just have it upload the
[53:17-53:17] UNKNOWN: file.
[53:18-53:32] SPEAKER_00: Like stuff with the audio file. You're confused. That's the true testing.
[53:32-53:33] SPEAKER_02: It is.
[55:33-55:35] SPEAKER_00: That's all.
[56:22-56:24] SPEAKER_02: Did not trigger the function.
[56:25-56:26] UNKNOWN: Yeah.
[56:28-56:36] SPEAKER_00: That function's not there. All we have is a budget emergency shutdown. Well.
[56:42-56:46] SPEAKER_02: So now it's just going to publish a message. Yeah. That's fine.
[56:46-56:52] SPEAKER_00: Which is what we wanted to do at the beginning, but we need that function back. Yeah.
[56:52-56:53] SPEAKER_02: That's
[56:53-57:33] SPEAKER_00: easy. It says missing
[57:33-57:39] SPEAKER_02: audio GCS URI. Right. Cause the format of that message is not freaking right.
[57:39-57:50] SPEAKER_00: I'm guessing it moved it wrong. Where do you see that? You're
[57:50-57:50] UNKNOWN: going to
[57:50-58:03] SPEAKER_00: have to do the go to query library. This is just one that you've run. I
[58:03-58:04] UNKNOWN: think.
[58:08-58:11] SPEAKER_00: It's always recommended. Will you send it to me? Oh, yeah.
[58:16-58:22] SPEAKER_02: Yeah. That message type is not freaking right. It just has two things in it. It just has the URI of the bucket.
[58:22-58:33] SPEAKER_00: Right. And it's, I think that is right. My guess is it put the wrong thing. Like it's looking for audio GCS
[58:33-58:43] SPEAKER_02: URI. Oh no. I'm saying like, send me, you can send me that, but the message, just grab the message that you see and send like, give me the, um, JSON or just copy it.
[58:47-58:47] UNKNOWN: Yeah.
[58:47-58:49] SPEAKER_00: Well, not that
[58:49-58:51] UNKNOWN: one. Yeah.
[58:54-59:04] SPEAKER_02: Just do the copy because I think it copies more than that. Like copy as JSON. It may not copy more than that.
[59:04-59:11] SPEAKER_00: It looks like it does. Oh yeah. Cause there's more drop down. I'm like, guess is it also copied?
[59:15-59:21] SPEAKER_02: That is the log that you are looking. That's why I didn't create a job.
[59:21-59:24] SPEAKER_00: Yeah. Will you look at the command that it wrote for that message?
[59:33-59:45] SPEAKER_02: Yeah. This one right here, like it's just supposed to give you a URI, not the name of the file. Yeah. It's supposed to be just to figure in URI.
[60:05-60:05] UNKNOWN: Just
[60:05-60:12] SPEAKER_02: shouldn't be mad at it. It doesn't specifically know that. Right. That's the, I guess,
[60:12-60:12] UNKNOWN: quote
[60:12-60:20] SPEAKER_02: unquote downside of hyper focus. Right. You make, you need to make sure it has all the context that it needs. Right. But
[60:20-60:51] SPEAKER_00: also it does have a reference to the GCP resources. Pipeline failed. Failed to load template transcription job .yaml. I mean, there's a lot of them. Also, sometimes you get failure messages while it's spinning out. Right.
[60:53-60:53] UNKNOWN: So
[60:53-60:57] SPEAKER_00: it's failing because it's actually not ready yet.
[60:57-61:05] SPEAKER_02: But it doesn't even have that other part in there yet. Yeah. It picked that up.
[61:13-61:21] SPEAKER_00: What you change? Just got rid of
[61:21-61:24] UNKNOWN: that comment. That
[61:24-61:28] SPEAKER_00: would be weird if that works, but we shall see.
[61:29-61:33] SPEAKER_02: But now this is going to be two messages in there and it still has a, like,
[61:34-61:34] UNKNOWN: they
[61:34-61:40] SPEAKER_02: stay in there for seven days. If granted, it won't redo it. It won't send it again
[61:40-61:40] UNKNOWN: for seven days.
[61:40-62:04] SPEAKER_02: For another 10 minutes. Yeah. I'm very much in vibland. I don't really understand what is the job controller process. You say so. I don't see a job.
[62:10-62:51] SPEAKER_00: I guess in theory, this is way behind. Starting transcription of full seat speaker alignment or assignment job. Yeah. So receive message processing transcription request, single step pipeline plan, but it ultimately gets up to fail to load the template.
[63:27-64:16] SPEAKER_02: Yeah. The transcription job definition. That's what it's working on is looking at the job. Transcription job. Do you have to push that again? Like you haven't updated the YAML. They want me to give them back.
[64:17-64:50] SPEAKER_00: Those are the ones that jump out at me as of right now. And I think they're repeating, especially that failed to load template. Maybe it was that comment that it noticed, but that one's definitely repeating. Yeah. Yeah.
[64:59-65:05] SPEAKER_02: You're changing it on the computer, but the cluster is still using the same thing.
[65:05-65:09] SPEAKER_00: Yeah. And that's context that should understand.
[65:35-65:37] UNKNOWN: Yeah.
[66:01-66:07] SPEAKER_02: It's trying to restart the job controller but it doesn't like it's fine but it is there
[66:37-66:49] SPEAKER_00: zero one pods at home the job controller is updating right at the same time
[66:49-67:24] SPEAKER_02: yeah that's ok it's doing a roll and restart it actually has two pods that's why like cause it's made a new one and it's gonna deprecate the old one but it didn't change anything it just restarted it it didn't actually change it didn't need to but fine it's ok yeah this makes sense that if there's more than one job in there there shouldn't be but if there is you can only run one of them because it uses a GPU
[67:25-67:26] UNKNOWN: exactly
[67:40-68:34] SPEAKER_02: just making up stuff just time out 30 seconds like unknown flag some gcs views exited with error yeah it's not mounting the drive the fuse drive
[69:02-69:07] SPEAKER_00: it's got still running but active pods still zero
[69:11-69:12] UNKNOWN: yep
[69:14-69:18] SPEAKER_00: is it as dumb as a permissions thing for writing to that bucket
[69:19-69:19] SPEAKER_02: maybe
[69:48-70:01] SPEAKER_00: that makes sense to me if we build from roux i don't know what we did but it saw something that made it think it did
[70:04-70:05] UNKNOWN: right
[70:14-70:19] SPEAKER_02: keep publishing these things we'll clear it out at some point
[70:20-71:34] UNKNOWN: yep back to I
[71:34-71:54] SPEAKER_02: mean we're eventually just gonna get a bunch of cuz my guess is maybe you cleared all the jobs they cleared the jobs from the cluster but it's not from here like so my guess is there's like ten in here now four four yeah unacknowledged but like it keeps adding them which is fine they should
[71:54-71:56] SPEAKER_00: all work right like those jobs are
[71:56-72:02] SPEAKER_02: yeah eventually it's gonna process that over and over right and whenever it was like ten seconds
[72:02-72:03] SPEAKER_00: combined
[72:03-72:07] SPEAKER_02: yep whenever it works is it on process all of them right
[73:24-73:29] SPEAKER_00: we've got an active pods one on the job sample
[74:17-74:18] UNKNOWN: okay I
[74:18-74:22] SPEAKER_00: don't know exactly what happened.
[74:22-74:23] SPEAKER_02: What?
[74:23-74:26] SPEAKER_00: I just said perfect. I understand exactly
[74:26-74:26] SPEAKER_02: what
[74:26-74:26] UNKNOWN: happened.
[74:26-74:28] SPEAKER_02: Yeah right. Yeah you too.
[75:21-75:29] SPEAKER_00: So it is using transcripts for the bucket.
[75:32-75:33] SPEAKER_02: I'm not sure which one it's using.
[75:33-75:36] SPEAKER_00: That's just one of the things it says.
[76:06-76:06] UNKNOWN: Is that
[76:06-76:06] SPEAKER_00: statement one still?
[76:07-76:07] UNKNOWN: Is
[76:07-76:39] SPEAKER_00: that one? Because part of its last statement was... 3 .2. Like the architecture is sound. So I guess 3 .3 is output verification but like we're not even actually seeing the job start working. We are technically. It says it on the log. But if it were starting it would be done.
[76:48-76:49] UNKNOWN: Yeah it's...
[76:50-76:51] SPEAKER_02: It's not right.
[77:14-77:21] SPEAKER_00: Do you remember? It's like GPUs all region. I think it's all caps.
[77:31-77:37] UNKNOWN: It's GPUs. There
[77:37-77:37] SPEAKER_02: it
[77:37-77:37] UNKNOWN: goes.
[77:39-79:03] SPEAKER_02: I gotta do it. Yeah I mean. I'm unable to grant you additional quota at this
[79:03-79:05] UNKNOWN: time. Okay.
[79:13-79:17] SPEAKER_00: So usage one. What are you seeing there?
[80:05-80:10] UNKNOWN: I don't know.
[80:35-80:36] SPEAKER_02: I'm not
[80:36-80:36] UNKNOWN: sure.
[80:40-80:43] SPEAKER_02: It's gonna keep adding. Yeah
[80:43-80:50] SPEAKER_00: my guess now is. I'm guessing that one that is aired out and failed still has a GPU.
[80:51-80:52] UNKNOWN: Maybe.
[80:59-81:04] SPEAKER_00: And it's gotta get all the way done and released.
[81:12-81:17] SPEAKER_02: Yeah because there's only one. Okay.
[81:17-81:20] UNKNOWN: Okay.
[81:47-81:48] SPEAKER_02: Okay.
[82:17-82:34] SPEAKER_00: Okay. Okay.
[82:54-83:40] SPEAKER_02: Okay. Okay. Okay. Okay.
[83:40-83:40] UNKNOWN: I
[83:40-83:48] SPEAKER_02: purged all messages and pods. And here's the message that. That
[83:48-84:20] SPEAKER_00: one has the. Okay. Okay. Okay.
[84:25-84:57] UNKNOWN: Yeah. Yeah. Yeah.
[85:07-85:15] SPEAKER_00: Maybe add a comically overboard amount of logging please.
[85:15-85:15] SPEAKER_02: Maybe.
[85:16-85:22] SPEAKER_00: And we can back that down. Right exactly. Once we figure it out, it's no longer necessary. You've got to
[85:22-85:22] UNKNOWN: have
[85:22-85:36] SPEAKER_00: all of them. That one certainly did jump out at me as like a regular Python. Oh yeah, that's just fucked up.
[85:36-85:36] UNKNOWN: We
[85:36-86:16] SPEAKER_00: need to install this thing. Chill out with that fucking line, bro. Perfectly. Yeah, that's just not what that means. That's about as accurate as like, my house didn't blow up tomorrow. I'm going to get a promotion today. Right. Or yesterday. I'm going to get a promotion tomorrow.
[86:46-86:57] SPEAKER_02: Yeah, and from now on, I'm only going that one message be in that queue and if it doesn't process them clear it again before you send another one just kill it yes only have one in there only have one
[86:58-87:08] SPEAKER_00: job are on here and there's clearly some disconnect between you being able to see jobs from the CLI when they're there and not there
[88:27-88:30] SPEAKER_02: it's just gonna work one of these times
[88:30-88:31] SPEAKER_00: I
[88:31-88:31] UNKNOWN: agree
[88:58-89:00] SPEAKER_00: in that untolerated taint
[89:00-89:09] SPEAKER_02: yep they saw that too okay and is in the one of the four issues
[89:20-89:29] SPEAKER_00: that also maybe from it's spinning up this like it's look it's talking about the CPU pod that's available maybe like no that's tainted
[89:29-89:30] SPEAKER_02: yeah
[89:32-89:34] UNKNOWN: five more issues
[89:37-89:46] SPEAKER_00: it should be working on all that
[89:46-90:00] SPEAKER_02: yeah and I think I saw something that said that it's looking for preemptible GPUs yeah which are cheaper but maybe that's not
[90:02-90:03] UNKNOWN: yeah
[90:03-90:08] SPEAKER_00: we think generally our stuff is gonna take less than five minutes right probably preemptibles are okay
[90:08-90:21] SPEAKER_02: yeah and it just waits like it's slower it's fine I don't care how long it takes right there goes it finally got one okay and it's done is it really exactly like but it should be like
[90:21-90:40] SPEAKER_00: that exactly exit with error code one yeah so there's this is definitely Kubernetes stuff but like authentication using node publish secret ref is disabled TLS is disabled
[90:40-91:01] SPEAKER_02: I'm going to delete that freaking message yeah go ahead and purge right now but I think this is progress so it's not GPU scheduling right oh there's another one in there now already
[91:01-91:12] SPEAKER_00: you already purged so I did it might have happened because it's
[91:12-91:12] UNKNOWN: fast
[91:12-91:14] SPEAKER_00: it once you see one fail I
[91:15-91:17] SPEAKER_02: think this is the cluster doing
[91:17-91:18] SPEAKER_00: it
[91:18-91:43] SPEAKER_02: like it failed it restarted the job but then it's never gonna get a GPU right so basically we need to make that go away I give it fails just don't start a new job because then it locks because you can never get the one that failed will never release the GPU right and I'm gonna tell that
[91:43-91:50] SPEAKER_00: probably close oh they
[91:50-91:51] SPEAKER_02: wanted to look in there
[94:23-94:24] UNKNOWN: I
[94:24-94:28] SPEAKER_02: think we do one more round and then redo it yeah
[94:33-94:35] SPEAKER_00: we can make our max jobs one
[94:35-95:03] SPEAKER_02: I think it's fine once you set it again that you clear that it automatically clears those jobs in fails the reason that it changed it is because it wants to be able to look at those pods to troubleshoot right it was it was like that it was I think that standard to automatically out failed pods and then that resource will be available again when the new pod is then it recreates a new pod right but we don't want to do that right now
[95:30-95:42] SPEAKER_00: yeah that's ultimately the issue it's not any of this other shit what's causing that exit code one failure right that's that's the like we anything down the pipeline doesn't actually everything else is
[95:42-96:07] SPEAKER_02: working right like so we don't have that function that's triggering right but that's easy right but the uploading well when we have the function will create the message the message queue is triggering the job controller job controllers making the job and it's getting the resources right when there's only one it will get the resources right and start it just fits it so we're
[96:07-96:13] SPEAKER_00: right there it's only one service so once that service gets what it needs and works it's done
[96:13-96:30] SPEAKER_02: yeah I guess triggering the job it's unscheduled right now but it eventually especially because we're using preemptible GPUs it may wait up to five minutes or minutes until it can find one and then once it gets it it starts up it just doesn't run
[96:30-96:38] SPEAKER_00: yes I guess is it possible if it's preemptible that it gets it and loses it immediately
[96:38-96:40] SPEAKER_02: I
[96:40-96:40] SPEAKER_00: don't
[96:40-96:40] SPEAKER_02: know
[96:40-96:46] SPEAKER_00: I don't want to like send it on a
[96:46-96:55] SPEAKER_02: guy got a hard stop at 745 I have a I'm taking my car to finally get the door handle and so I got to go drop that
[96:55-97:06] SPEAKER_00: off I'll finish up find the in session on your device I
[97:06-97:08] SPEAKER_02: feel like today's today
[97:09-97:09] UNKNOWN: yeah
[97:13-97:21] SPEAKER_00: it's possible that I'm gonna end up spinning up a VM doing all the manual installs and getting an output just to see
[97:21-97:21] UNKNOWN: just
[97:21-97:22] SPEAKER_00: to see if it works you
[97:22-97:35] SPEAKER_02: know where are the where the errors I get switch directions not permanently but temporarily let's just go on this path of just have a long -running VM give it the job right what areas you're getting now give it the job
[97:35-97:45] SPEAKER_00: again did that work and if it did work and then we go try to put it on the cluster and it doesn't what's different right if you just say Kubernetes to me I'm gonna lose my fucking mind because
[97:45-97:53] SPEAKER_02: this it looks like to me all of this is working right it's little slow but it's fine and eventually slow on purpose
[97:53-97:59] SPEAKER_00: because the ultimate fast design is always on right so we understand that
[98:03-98:14] SPEAKER_02: yeah and it's good now like it knows like hey it's waiting for this pod to get scheduled right and that's
[98:14-98:14] UNKNOWN: what
[98:14-98:19] SPEAKER_02: G bird you'd be that's what GKE does right and it's working yeah
[98:19-98:45] SPEAKER_00: the entire mystery that it can't understand because context is what's bringing that exit why is it failing once it's in there and has the GPU right it is getting there and it does have a GPU at some point yeah it just fails immediately there probably is some retarded shit in the Python that we didn't write and if we did we know
[98:45-98:46] SPEAKER_01: exactly
[98:48-98:49] UNKNOWN: yeah
[98:55-98:58] SPEAKER_02: it is running right capture the locks
[98:58-99:01] SPEAKER_00: and it is doing the sidecar yeah there we
[99:03-99:04] UNKNOWN: go
[99:14-99:15] SPEAKER_02: yeah
[99:15-99:15] UNKNOWN: maybe
[99:15-99:44] SPEAKER_02: you found it no module name transcribed that's important that's the root there right module not found error and this is regular old Python exactly that's what this
[99:44-99:44] SPEAKER_00: is
[99:44-99:44] UNKNOWN: good
[99:44-99:52] SPEAKER_00: thinking like okay I'm gonna run this bitch on a VM yeah and just in real time debug that thing
[99:52-100:25] SPEAKER_02: I am going to kill this freaking stop freaking don't send it anymore yeah and I mean it's the cluster though is going to resend this job right and it's gonna try again but it's gonna oh it did it twice so I don't know why I don't know
[100:29-100:33] SPEAKER_00: because it hasn't uncommented the auto cleanup stuff right it
[100:33-100:43] SPEAKER_02: has not I mean otherwise they would go away right I was gonna have to there at the same time but this is good
[100:43-100:49] SPEAKER_00: I agree I love these such barriers that are like oh yeah import this thing
[100:49-101:05] SPEAKER_02: from transcribed import TCS handed on we're running the module with this should be transcription service dot screen transcribe okay that's that's an easy one yeah I guess just the other
[101:05-101:09] SPEAKER_00: didn't fix the config one so we don't have to do the loop back to that one
[101:09-101:17] SPEAKER_02: and then reapply the transcription job okay I like it these are good books like it
[101:17-101:20] SPEAKER_00: full -on hallucinating which is right do that much
[101:20-102:27] SPEAKER_02: no I when we saw that error I'm going to you If you say so. This is probably the right answer.
[102:28-102:29] UNKNOWN: Well,
[102:29-102:51] SPEAKER_02: in which one did you delete the job? Okay, yeah, we already deleted it. And before you send that message, I just want to see if there's nothing else in here. And I want to see this actually. It should be zero, but it's not. It just takes some time. It's fine.
[102:57-103:12] SPEAKER_00: All right. So further example of like human necessity, even of like watching logs. See that? That was quick.
[103:12-103:13] SPEAKER_02: That was quick.
[103:15-103:16] UNKNOWN: Okay.
[103:16-103:29] SPEAKER_02: That may be it. That may have been it. I'm excited. Hopefully, I'm going to refresh and exit it with error code one. With code one. It's fine.
[103:41-103:45] SPEAKER_00: But the serving system is - With error signal killed.
[103:46-103:46] SPEAKER_02: Will you
[103:46-103:48] SPEAKER_00: grab that for me? Yeah. Please. And
[103:48-103:48] UNKNOWN: it
[103:48-103:52] SPEAKER_00: happened several times in like a millisecond.
[104:24-104:31] SPEAKER_02: I also want you to delete the jobs. It says that the
[104:31-104:31] UNKNOWN: -
[104:31-105:01] SPEAKER_02: Yeah, it updated the job controller. It is updating this in that it didn't get its updates. Gotcha. So I'm going to hold on that message unless you see it again. Yep. And I did - Oh no, I did not. I'm going to do this again.
[105:04-105:06] SPEAKER_00: So I'm reading that Thomas Jefferson book.
[105:07-105:07] UNKNOWN: So
[105:07-105:16] SPEAKER_00: he was an ambassador to France for a while. Everybody kind of knows that. And he had this reputation when he came back as being a bit
[105:16-105:16] UNKNOWN: of
[105:16-105:33] SPEAKER_00: a francophile dandy amongst his opponents especially. And it's like, you'll miss us with all that European shit. But there was this quote from some famous French diplomat that said that
[105:33-105:33] UNKNOWN: Jefferson
[105:33-106:38] SPEAKER_00: was like a great diplomat but too philosophical and tame to either love or hate any other country without the respect of what it would gain for the United States of America. Huh, that's interesting. And so all about America. And then what people accuse him of when he came back to America, apparently he was all about that in France because they would be like, oh, he liked birds. They were like, listen to the song of this bird. And he was like, yeah, that's nice. He'd be like the third best one in America though. That's what he was about. And there's this letter some dude was talking about like they're hunting or something. So he sent a letter back to a friend in America and he was like, hey, find me the biggest buck antlers you can find and send them here please. I need to show these fuckers once what. Yeah, they don't know. They think they know. Yeah. So he was like, America, bro, fuck everybody else. So I'm making more than I did before.
[106:39-106:42] SPEAKER_02: That's what you need theoretically to be in charge.
[106:42-106:47] SPEAKER_00: And oh yeah. Also, he was a fucking psycho worker. Really?
[106:47-106:50] SPEAKER_02: Yeah. Oh, you probably need that.
[106:50-106:58] SPEAKER_00: Basically wake up, start working, finish work and go to sleep. Right. Like, why are you talking to me? Why are you
[106:58-107:11] SPEAKER_02: talking to me right now? I got work to do. Yeah. Probably need that too. Like that is probably in there to being like highly successful. But also, you know.
[107:11-107:11] SPEAKER_00: What's that life like?
[107:11-107:12] SPEAKER_02: Right, exactly.
[107:13-107:47] SPEAKER_00: Yeah, he, there's one documented letter of like how he wanted his nephew to be like, he saw some potential in the kid or whatever. He's like, here's what his education needs to be. And I don't exactly understand the school systems from back then, but like I'm pretty sure this was a private education. And he was like, basically get up at like eight, do two hours of exercise, study music, study this language, study this. And it's like broken down. And then at the end, study some more music and then be done for your day. And then go to sleep.
[107:47-107:47] UNKNOWN: And
[107:47-107:49] SPEAKER_00: it's like segmented throughout the entire day.
[107:50-107:50] UNKNOWN: And
[107:50-107:57] SPEAKER_00: it's like, and he's like, yeah, and this will prepare him whenever he's 16 to go to this school, this college, get his thing. And then he'll be running shit.
[107:58-107:58] SPEAKER_02: Basically, it
[107:58-107:58] UNKNOWN: was
[107:58-107:59] SPEAKER_02: like,
[107:59-107:59] UNKNOWN: and
[107:59-108:11] SPEAKER_02: then go to sleep, go to sleep and then keep doing this. And then, yeah, that is the, I agree. I bet that that is the answer to success. No different than, or you have a highly likely chance, especially if you're intelligent.
[108:11-108:21] SPEAKER_00: Yeah, there's the outliers that are just bored with it. And it's like, well, you can't account for them when making a plan for yourself. Right. That's not a, you were not born. Right. You're not the problem. Exactly.
[108:21-108:30] SPEAKER_02: But for everybody else, grind all day. As long as, as many hours as you can all day forever and ever and ever. Don't take a day off. Right. That's the answer.
[108:30-108:40] SPEAKER_00: And that's how you achieve great things. From the perspective of our current society, which may be counter to the Bible.
[108:41-108:42] SPEAKER_02: Right. It's
[108:42-108:52] SPEAKER_00: like becomes value judgments, but you can get up and grind all day from that perspective. Like be on the cushion all fucking day.
[108:53-109:19] SPEAKER_02: I agree. Like, so when I last thought about this, let's pray about it, I had the similar thought that you just had. And it's like, well, then the answer is, well, whatever the value, whatever is the highest priority for your life, whether it is praying, grind all day at that. Focus all day. Not saying like reach out for whatever worldly success. Right. Whatever the definition of success is.
[109:19-109:22] SPEAKER_00: That should take, that should absorb all of your waking hours.
[109:24-109:24] UNKNOWN: Right.
[109:39-109:43] SPEAKER_02: Not surprising. It was surprising when it went
[109:43-109:57] SPEAKER_00: fast. I had the idea of a short film, basically starting to make two things. Historical stories in the movies like that. And I love the idea of he wasn't this, he was super proper and like knew how to play the game even in France.
[109:58-109:58] UNKNOWN: But
[109:58-110:04] SPEAKER_00: him being like, y 'all ain't shit. Check out this bucket. I just had a little maker. Look,
[110:04-110:04] UNKNOWN: this
[110:04-110:26] SPEAKER_00: ain't even anything where I'm from. Yeah. Look, look at this. They're looking down on him. Is this like rough American? Y 'all are trash. Also, I told you about some of the YouTube videos I was watching a while back that were like,
[110:26-110:26] UNKNOWN: what
[110:26-110:57] SPEAKER_00: if Robert lost Robert's rebellion and the Targaryen son was victorious? And then they make this hour long video of what I think doing that with those things even, but also historically like what if this thing had happened? And then you just kind of run with it. I think that would be cool. It's a combination of storytelling with historical. I mean, there's a movie or not a movie show. That's like, what if the Nazis and Japanese hit? Oh, it's big. It's something like Gulu.
[110:58-112:07] SPEAKER_02: Um, I know what you're talking about, but let me go get this. All right. Exit with job exit code one. Yeah, there you go. And this one's never going to schedule.
[112:10-112:12] SPEAKER_00: Yeah. Getting that caller is not authenticated thing.
[112:13-112:14] SPEAKER_02: Okay. You want to send it?
[112:14-112:15] SPEAKER_00: Yeah.
[112:54-113:06] SPEAKER_02: To you. How does it ever queue? How do you jump?
[113:07-113:12] SPEAKER_00: I assume when it actually completes, you can also send to force into it
[113:12-113:12] UNKNOWN: if
[113:12-113:12] SPEAKER_00: you have a. Yeah.
[113:21-113:22] UNKNOWN: Are
[113:22-113:29] SPEAKER_00: you sure about that? I mean, maybe it's looking at actual pod logs, so that's different than what I've seen.
[113:51-113:53] UNKNOWN: Yeah.
[113:58-113:59] SPEAKER_00: Wa
[113:59-113:59] UNKNOWN: Y睨?
[113:59-114:02] SPEAKER_00: on WordPort Identity and then it's gonna find out,
[114:03-114:03] UNKNOWN: oh,
[114:03-114:05] SPEAKER_00: actually Autopilot has it automatically turned on.
[114:06-114:12] SPEAKER_02: Right. But it may be a permission issue.
[114:13-114:13] UNKNOWN: And
[114:13-114:14] SPEAKER_02: that would be fantastic.
[114:14-114:15] SPEAKER_00: Of course.
[114:20-114:31] SPEAKER_02: Yeah, so the pod is gonna have a Kubernetes service account which should be connected to a Google service account with the right permissions.
[114:32-114:42] SPEAKER_00: Now it's, at least on that track. Okay.
[114:44-114:54] SPEAKER_02: Okay. Look at both. Okay.
[114:54-114:54] UNKNOWN: Yeah,
[114:54-115:01] SPEAKER_02: I gotta go. Okay. It may be time to start a new session anyway, so.
[115:01-115:01] UNKNOWN: Yeah,
[115:01-115:02] SPEAKER_00: we're pretty close.
[115:03-115:05] SPEAKER_02: You can move to your, you work here obviously,
[115:05-115:05] UNKNOWN: but.
[115:06-115:12] SPEAKER_00: Yeah, I don't think you've built anything that makes your laptop required.
[115:13-115:14] SPEAKER_02: No, I don't think so. To
[115:14-115:23] SPEAKER_00: find a natural endpoint. And hopefully it does a good job
[115:23-115:23] UNKNOWN: of
[115:23-115:25] SPEAKER_00: ending its session.
[115:26-115:31] SPEAKER_02: Yeah, and then you can point to, even if it doesn't just run a new session,
[115:31-115:31] UNKNOWN: it
[115:31-115:37] SPEAKER_02: ends a session. Right, yeah, that's true. And then you can point back to the session log of like,
[115:37-115:37] UNKNOWN: hey,
[115:37-115:38] SPEAKER_02: here's everything, here's where we work.
[115:38-115:41] SPEAKER_00: Here's what you were writing before you went all retarded at the end.
[115:42-115:42] UNKNOWN: Right.
[115:46-115:58] SPEAKER_02: Okay, well I'm gonna delete jobs and delete this first, this cube. Technically I guess I have four minutes.
[115:59-116:03] SPEAKER_00: Yeah, but you might have four minutes for this stuff and that little sentence. I have four minutes
[116:03-116:12] SPEAKER_02: for this stuff to do. I need to change shoes and get ready. Yeah, I'll watch it from here. Okay.
[116:12-116:22] SPEAKER_00: Move over to mine. All right, good luck. Yeah, there's still progress to do. I might pivot pretty quickly over to the, let's deploy this bitch on a
[116:22-116:22] UNKNOWN: vehicle.

==================================================
Generated on: 2025-07-30 14:45:00
Total words: 9561
Total speakers: 4
==================================================




Summary:



creation_date: 2025-07-30 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1426_ZOOM0044_transcript.txt participants: [SPEAKER_00, SPEAKER_01, SPEAKER_02]
Executive Summary
This meeting was a deep-dive troubleshooting session focused on resolving a series of issues preventing the [[Transcription Service]] from functioning correctly on [[GKE]]. The participants diagnosed and addressed multiple problems, including a rogue [[Pub/Sub]] message causing a loop of failing jobs, outdated deployment scripts, and a critical Python module import error that was causing jobs to exit with an error code. After several iterative cycles of diagnosing log files, modifying code, and redeploying, they successfully identified the root cause of the job failures as a simple import error in their [[Python]] code. The conversation also touched upon the decline of celebrity culture and the entertainment industry, attributing it to a shift away from talent and the economic infeasibility of the traditional model in the face of emerging [[AI Tools]].
Key Topics Discussed
	•	Troubleshooting [[GCP]] Services
	•	[[Pub/Sub]] Message Loop: A persistent message in the [[Pub/Sub]] queue was causing the [[Job Controller]] to continuously spin up new jobs that would immediately fail. This was resolved by purging the queue and understanding that the message retention policy was keeping the faulty message active [28:46-30:13].
	•	Outdated Deployment Scripts: The team identified that their deploy-job-controller.sh script contained outdated print statements and references to a non-existent cluster-manager function, which was confusing the [[AI Tools|AI assistant]] ([[Cursor]]) and needed to be removed [39:06-40:06].
	•	[[GKE]] Job Failures: The core of the session was spent diagnosing why [[Kubernetes]] jobs were failing with an exit code 1. After analyzing pod logs, they discovered a ModuleNotFoundError in the Python code, where a module was being imported incorrectly (from transcribed import instead of from transcription_service.transcribe import) [95:30-101:05].
	•	[[GPU]] Quota Issues: They encountered and resolved a [[GPU]] quota limit issue, which was preventing new pods from being scheduled [77:14-80:50].
	•	Entertainment Industry and [[Creative AI]]
	•	The conversation explored the idea that the traditional entertainment industry (Hollywood, video games) is in decline due to a focus on messaging over talent, leading to subpar products [09:30-10:51].
	•	They discussed the economic unsustainability of the celebrity model, predicting that [[AI Tools]] will replace the need for high-cost actors and allow for the creation of thousands of AI-generated personas, one of which could become popular [15:21-16:32].
	•	The participants see an opportunity for smaller, independent studios to rise by leveraging [[Creative AI]] to produce high-quality, targeted content, such as personalized cartoons or alternate history films [06:01-07:26], [109:43-110:57].
	•	Future of Work and Technology
	•	A brief discussion on the potential of augmented reality glasses to replace phones as the primary interface for [[AI Tools]] [07:26-08:14].
	•	They touched upon the disciplined work ethic of historical figures like Thomas Jefferson as a model for success in complex endeavors [105:04-108:30].
Action Items & Decisions
	•	Decision: To merge the deploy-cluster and deploy-job-controller scripts into a single, streamlined deployment script for simplicity and to avoid confusion [27:45-28:05].
	•	Action: Correct the Python import statement in the transcription job from from transcribed import to from transcription_service.transcribe import to fix the ModuleNotFoundError [99:15-100:49].
	•	Action: Add "comically overboard" logging to the Python application to better diagnose any future issues during the development phase [85:07-85:22].
	•	Decision: To manage the [[Pub/Sub]] queue more carefully during testing, ensuring only one message is in the queue at a time to avoid cascading failures [86:46-86:57].
Suggested New Links/Tags
	•	[[Python]]	
Linked Concepts
	•	[[AI Tools]]
	•	[[Cloud Function]]
	•	[[Cluster Manager]]
	•	[[Creative AI]]
	•	[[Cursor]]
	•	[[End-of-Day Protocol]]
	•	[[GCP]]
	•	[[GKE]]
	•	[[GPU]]
	•	[[Job Controller]]
	•	[[Kubernetes]]
	•	[[Pub/Sub]]
	•	[[Python]]
	•	[[Service Account]]
	•	[[The Last of Us]]
	•	[[Transcription Service]]
	•	[[VM controller]]
#Tags
	•	#AI
	•	#Deployment
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom45
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1748_ZOOM0045_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-02:34] SPEAKER_01: It's 20 Okay But what that reddit post didn't say and what rock does seem to be implying is that? After that it still goes into the you still use premium models. It's just slower Right there unclear about how they throttle things and the story thread specifically was like and they're like making it worse Like basically what we've seen what my I've been postulating like in the busy times, right? It is works, right? I could see that But not a huge issue One thing that you can do and they certainly don't try to make it obvious And I'm not even sure that it worked But you can go in and opt out of the new model And so I asked rock like what should I opt out and it was like basically Their numbers are saying and they hold up pretty well that the $20 would represent somewhere between like 220 and 250 Claude requests, but Claude Costs two of the 500 When you use it on that model, so it's about 250 in that 500. You see what I'm saying? I don't so both models one of them is 500 a month one of those $20 in credits $20 in credits gets 220 to 250 the 500 actually it actually cost two to use Claude. So it's 250 guy So it's a little bit more if you're primarily using Claude, which we are but so But then it just goes into the slow ones and it said Gemini It is around 500 ish maybe a little bit more after like 550 But it's 500 on the 500 one right and then it said open a or a 4 .1 GPT for one I literally forgot the GPT of it first Can get out to like 650 or something, but we don't use that right and it's still that's not that much better So you can go in and opt out. I did it and It said it failed and then I did it a couple of times said it failed every time And Refreshed went back and the option to do it was gone. So maybe it didn't feel or just told me to go fuck myself Do you want to look at see? So it's an online like on the website
[02:38-02:42] UNKNOWN: So, I
[02:42-04:42] SPEAKER_01: don't know and I'm ultimately I did decide to go back to the 500 so I hope that's where I'm at but even if I'm not and they were just like get out of here as long as It just goes into the slow ones. I'm fine. We're still paying $20, right? I did see in that thread it basically discussed like yeah, this has been coming. Oh, yeah, and there's a new $200 tier on cursor and so like they're basically saying It seems like to me the feel I'm getting from like kind of new exposure to this information is They need these like nuke Generators and stuff to maintain the current I believe that not to grow I believe that like they've been doing the VC thing and losing to acquire users and Somebody quoted in that it look up and see if this was true But said that Sam Altman had made a statement saying that they underestimated how much people would use the $200 tier and they're losing money So basically if you view it as they've been in VC phase, right for the entire existence Not just open AI, but even like the Gemini wing of Google They're in like we're losing money right phase, but we're learning we're acquiring customers Now they've kind of found the end and now they go like oh shit like how do we do this? Probably make this work prices go up a lot exactly or you have to produce more energy or whatever it is and Then I think make the cost go down right so that's where okay, this is the foundation what do we have to do to like exist right here and not Revert and what whatever that is do that and then build the system on top of it that makes it more efficient So for instance don't Tell cursor to delete a file just go delete the file tell you did it while you're telling it to do the next thing Right like do not optimize your process Yeah Like take AI out
[04:42-04:48] SPEAKER_00: of every step that you can and only because it's super expensive right use it where it's doing something that you Can't or don't want to do exactly
[04:48-05:02] SPEAKER_01: and it's cool Because they're still crazy opportunity even at just like go get a job level At the current state of AI it's not taking it's taking some people's jobs. It's not taking The people
[05:02-05:10] SPEAKER_00: that weren't working I agree, but where we're at optimizing the limitations is fantastic because it's super expensive That's not the go get
[05:10-05:40] SPEAKER_01: a job shit either. That's a sell it and not worry about job shit I think we're in the space or We're gonna just spin off and become this creative joker nut right I'm starting to I Know and just like general stories or whatever I want to that we've talked about or that I'll have in mind and just whenever I get downtime board whatever waiting on a build to finish just gonna kind of like jam Yeah, I like it. Maybe jam with AI a little and just
[05:40-05:51] SPEAKER_00: oh I So what do I need to do on here? No, so
[05:51-06:18] SPEAKER_01: yeah go to a cursor and then it is Settings Advanced settings advanced account settings Yeah, so you don't even have the button Yeah, so they may have done that for like a week while they read if they announced it quietly, right? but again like as long as the Standard tier is whatever and it's just going to be slower a little bit quicker, but then I'm okay
[06:18-06:19] SPEAKER_00: Yeah,
[06:19-06:27] SPEAKER_01: and I get it like are there any alternatives to the one that opening I bought Yeah, or cloud code which cost $200, but
[06:27-06:28] SPEAKER_00: I imagine they're just as expensive.
[06:28-06:57] SPEAKER_01: Yeah, I think more. Yeah, I assume this is them like Pinching pennies and slicing shit at like they're not trying to screw people and make a bunch of money yet No, because it's not that well established yet and people could just go pay $10 for fucking Copilot and go back to VS code right pretty easily like the market Factors are still out there. They can't just go like,
[06:57-06:57] UNKNOWN: you
[06:57-06:57] SPEAKER_01: know what?
[06:58-06:58] UNKNOWN: I
[06:58-07:11] SPEAKER_01: want a new house $25 a month. Yeah, exactly people I like a lot of people did cancel their subscriptions Yeah, just off of this thing, which I think isn't that big of a move. Right? I use a move
[07:11-07:26] SPEAKER_00: but It in some ways reminds me of the vision Pro. It's like hey, this is awesome And it's great, but you know it cost five hundred dollars a month like well I'm never gonna use it. I'm not paying five hundred dollars a month for it.
[07:27-07:27] UNKNOWN: So
[07:27-07:33] SPEAKER_00: It's great. I agree like Lamborghinis are great as well $400 ,000
[07:33-08:08] SPEAKER_01: for a car because it's not worth it. Yeah Yeah, so that was all For that as far as where we're at I Pushed the transcription service image it finished it like fucking 730 last night I Redeployed that function that triggers it haven't actually like I sent one up there while the cluster was dead and it started a message And did all that stuff. I'm It's got being triggered by the event arc and stuff. We just need to make sure it's not sending anything any weird places
[08:08-08:14] SPEAKER_00: Yeah, I want to go in and kill Any message zero message? Yeah,
[08:14-08:38] SPEAKER_01: I did it last night before I stopped like it's part of the shutdown process And Yeah, I think we're Actually ready to spin up the cluster upload a file See what happens because like I'll iron out a bunch of dependency issues. There might still be something in there who knows but Should be able to do
[08:38-08:41] SPEAKER_00: we have a session prep or we just need to do our own.
[08:41-08:46] SPEAKER_01: I mean in theory we're in three I Mean we started three one.
[08:47-09:05] SPEAKER_00: I mean, I don't know that we need to specifically do it says in some ways I'm thinking Just manually start up the cluster get everything going less for and then say hey The cluster is running. I'm getting ready to upload a file Not even like you said I didn't have it do it. I'm gonna upload the file.
[09:06-09:45] SPEAKER_01: I Mean you can or like spinning up the cluster is running deploy cluster script running job controller deploy script, right and running Add this file to the bucket so it could also do that either way. Well, what I was saying is well, I'm gonna do this Yeah, I'm gonna run those two scripts Yeah, use AI to develop the things that allow you to not use AI right that makes yeah and like we have the scripts That's what we would do. All it's gonna do is run it right there Move it to the background because it's gonna take a while Yeah You're right Let's start up the cluster using the two scripts and then copy and paste the whole terminal back to it whenever you're ready to go Tell it all the context it needs
[09:45-09:47] SPEAKER_00: right and just like hey, we're I want to do some testing
[09:47-10:04] SPEAKER_01: Yeah, maybe like yeah, so run that script while it's running and say new session and give it that context of like hey I'll let you know when the job controller is deployed or I'll let you know when the files uploaded I guess
[10:04-10:06] SPEAKER_00: I Wonder if you can do
[10:08-10:08] UNKNOWN: this
[10:09-10:10] SPEAKER_00: Nice
[10:13-10:15] SPEAKER_01: Just over
[10:15-10:16] SPEAKER_00: oh
[10:16-11:05] SPEAKER_01: no, it's in quotes. Yeah I think the move there is to Use super user Tab just start typing Yeah, what you want to run and tab a bunch and it gets there pretty quick That's gonna take forever so I would at least a new session and give it a little bit of heads up did you pull She has a 730 said you stop like 715 I just need to be in
[11:05-11:10] SPEAKER_00: there will probably skip this one. Yeah, I and she doesn't know that I have a 730 Yeah,
[11:10-11:10] UNKNOWN: I
[11:10-11:54] SPEAKER_00: didn't know I had a 730 You got another long day everything gets I do think I'm gonna have another long day Maybe not like into the evening. I was working into the evening again last night. It's just I Don't anticipate that happening. I didn't anticipate happening today. It's these side projects that are like hey, we got this thing tomorrow Yeah, it's fine. It's fine. Yeah, I would rather be in the midst of doing things that are Bringing value then Either bored or just like nobody knows what I'm working up, right? It's not that hard like I was mostly doing arts and crafts last night is what I was moving things around in the spreadsheet. Yeah
[11:55-11:59] SPEAKER_01: Which is like shouldn't matter but does
[12:01-12:12] SPEAKER_00: So I was gonna manually do a Like prompt or just say like basically say hey go look at the
[12:13-12:20] SPEAKER_01: Yeah, we need to watch that And so once this is done, we still have to deploy the job controller.
[12:20-12:25] SPEAKER_00: Oh, I agree. I'm not gonna I'm just gonna get it set up for yeah, I
[12:25-12:31] SPEAKER_01: would tell it exactly what you're doing and Tell it to look at that at some transcripts or that summary.
[12:31-12:32] SPEAKER_00: I
[12:32-12:32] UNKNOWN: mean
[12:32-12:35] SPEAKER_00: this the summary and the transcripts from yesterday.
[12:35-12:35] SPEAKER_01: Yeah
[13:05-13:56] UNKNOWN: I I
[14:33-14:52] SPEAKER_00: I Thought I was thinking that I kind of want to talk through What should be happening and like just generally hey, I'm just gonna look at long and see what I see right like Maybe we'll do that this time. But that's once. Yeah,
[14:52-15:26] SPEAKER_01: I literally had a prompt yesterday that I saved in my notes that was Two options which one we go with is up to you option one spin up a VM on the whisper container Manually to debug the actual Python blah blah option to continue as we are but add logging statements at every step And then I will I know you think that you know what I mean by every step and it's something less than every step Right, that is not what I mean I mean every step every step and it said please don't undershoot every and make me Make you at a log statement after literally every line even where it doesn't make sense.
[15:26-15:39] SPEAKER_00: I Agree, I'm about right like I think we do one more time of just see if it works. All right And then go into The detailed troubleshooting mode like we did that one time That's what
[15:39-15:41] SPEAKER_01: I did yesterday and literally like I was like,
[15:41-15:41] UNKNOWN: okay
[15:41-15:52] SPEAKER_01: I'm gonna send this one and if I get a error back that makes sense I'll let it keep going and that's what I ended up doing yesterday It's the freaking rebuilds that take
[16:14-16:14] UNKNOWN: I
[16:20-16:20] SPEAKER_01: Don't know
[16:20-16:20] UNKNOWN: if
[16:20-16:59] SPEAKER_01: that makes sense Man that makes me think of I might have to find it in the book Thanks, we think of this passage from checkers guy I
[16:59-16:59] UNKNOWN: This
[16:59-17:10] SPEAKER_01: isn't like a thing That this book does it just kind of comes out of nowhere but this is what that sentence made me think I read that paragraph and into like
[17:59-18:00] UNKNOWN: You
[18:06-18:07] SPEAKER_01: I
[18:07-18:07] UNKNOWN: Have
[18:07-18:07] SPEAKER_01: to read the second
[18:11-18:17] SPEAKER_00: I'm rereading it. Yes. Yeah exactly and I'm trying to understand.
[18:18-18:19] UNKNOWN: Yeah
[18:23-18:34] SPEAKER_01: And it does make sense like the commas are in the right places To make it make sense, but that's just what like basically said look at what we see and then see what we're seeing Right. It's like is
[18:34-18:35] SPEAKER_00: that right? Yes, it
[18:35-18:55] SPEAKER_01: is right and I literally followed the flow of like Was like whatever it was just gonna move past it and then it calls it out and then it was like read it again And I was like you little fucker. That's Exactly Got it worked and that's some of the like quirky shit that that book does but it just kind of comes out of nowhere
[18:57-18:59] SPEAKER_00: Need to read that book
[19:01-19:41] SPEAKER_01: That is like five books the first of which is the hitchhiker's guide to the galaxy it's called the ultimate it's all Probably don't need to read more than the first one. Okay, I'm just turning through it because I have to It gets a little Like you're doing different things, but you kind of just writing and you wrote this one great thing And it's associated with this and your sequels were not as good which is not so no and I'm gonna say the positive side of that is like the Actual hitchhikers you guys the galaxy like 150 pages. It's not bad. Okay. Yeah, I read that pretty quickly I think
[19:41-19:42] SPEAKER_00: quickly for me.
[19:43-19:45] SPEAKER_01: Yeah, and they're like Big rat
[19:45-19:53] SPEAKER_00: like it's 150 pages of that size writing right there quick stages Do you think I should load that much into the context say hey read all of these sessions or is the daily?
[19:53-20:04] SPEAKER_01: I think you can get it from the daily summary and then say like if you need more Like if that doesn't tell you everything you feel like you need to know then dive deeper into the session transcripts
[20:42-20:45] SPEAKER_00: I Really just want
[21:04-21:09] SPEAKER_01: Your sentence makes complete sense it just sounds kind of
[21:09-21:09] UNKNOWN: funny.
[21:09-21:10] SPEAKER_00: Yeah
[21:14-21:26] UNKNOWN: Yeah That's it
[21:34-21:35] SPEAKER_00: There's
[21:35-21:59] SPEAKER_01: two of them yeah You can do it like in pieces so I'd eat it would have finished deploy, okay requires the next got it makes sense And it'll show usually like whenever you it'll do like a basic mini LS Show you what is available based on what you've typed every time you hit tab nice I
[21:59-22:02] SPEAKER_00: Saw those to pop up there, but I wasn't sure what that's
[22:02-22:04] UNKNOWN: gonna. Yeah
[22:08-22:09] SPEAKER_01: Clusters up.
[22:09-22:11] SPEAKER_00: Yeah, it's doing the deployment
[22:33-22:34] UNKNOWN: Well
[22:42-22:49] SPEAKER_00: Said it so what does this do?
[22:51-23:16] SPEAKER_01: I Mean I think in that script it Builds and deploys it or pushes it, but it's already there so it kind of just jetted through that and then it is the thing that does all the namespace and service accounts and all that stuff, right And I believe is the thing that is waiting for that pubs of message
[23:16-23:16] UNKNOWN: Once
[23:16-23:23] SPEAKER_01: we start the
[23:23-23:23] UNKNOWN: pipeline
[23:25-24:16] SPEAKER_01: Yeah Yeah, it just monitors it as far as I know and that might represent our 14 cents of Club monitoring maybe from yesterday But Yeah, it's just there it it works like it'll complete once that things available I go words Are you gonna do
[24:39-24:54] SPEAKER_00: Buckets buckets we need fewer buckets. Yeah, I did that already those aren't all there. Okay I
[24:54-24:54] UNKNOWN: Would
[24:54-24:57] SPEAKER_00: need these these are the ones are thrown by Google.
[25:02-25:02] UNKNOWN: Yeah
[25:09-25:11] SPEAKER_00: So that's gonna be the cash
[25:11-25:19] SPEAKER_01: yep, we need that and one note I had and then they put it up with txt file in there I
[25:19-25:19] UNKNOWN: Inside
[25:19-25:20] SPEAKER_01: of that
[25:23-25:25] UNKNOWN: Yeah, I
[25:25-26:08] SPEAKER_01: Mean yeah, it's nothing it says like a one. I think it's like literally one bite. Yeah, that's this is a baby fire Just the one transcription bucket I Guess of the job before the thing finished Here it's okay
[26:26-28:16] UNKNOWN: I I I
[28:21-28:22] SPEAKER_01: I
[28:46-30:22] UNKNOWN: I I I I
[30:49-30:50] SPEAKER_00: I
[31:04-31:25] SPEAKER_01: Added a turkey bacon avocado I need to look into that whatever that Grits recipe no,
[31:25-31:25] UNKNOWN: no,
[31:26-31:40] SPEAKER_01: it's I just use the old one for taking orders Burger bowls. Mm
[31:40-31:41] SPEAKER_00: -hmm. Yeah, that was
[31:41-31:51] SPEAKER_01: good. Yeah both times like Stephanie's everyone Never both mom and it's just Crown beef and potatoes basically and then do a fresh pack. Yeah,
[31:52-31:52] UNKNOWN: like
[31:52-32:17] SPEAKER_01: the sturdiest lettuce that'll stand up. I think it's a The big long ones is what we've used in the past for salads. Yeah Romaine. Yeah So like it had a romaine don't even necessarily chop it up. Maybe Maybe some tomatoes diced up And some onions diced up and then like some burger sauce Yeah,
[32:17-32:17] UNKNOWN: and
[32:17-32:21] SPEAKER_01: I got the recipe for the burger sauce too. Yeah, and I think that'd
[32:21-32:22] SPEAKER_00: be fantastic.
[32:22-32:36] SPEAKER_01: Yeah, and then on the Turkey sandwiches, it's turkey bacon and then again on the side The breads on the side. So you just like basically the house gets a little bit right?
[32:36-32:36] UNKNOWN: It
[32:36-33:18] SPEAKER_01: is what it is Yeah, and then you have this Smoked turkey so I think we trigger turkey breast or however many you need You slice it kind of thick not like necessarily sandwich thin but like maybe where you need two slices to make the sandwich. Yeah Whatever cheese we want like Super easy prep and probably bomb is shit make a little like mason jar But I got a honey mustard and a garlic aioli recipe either which one Depending on what people order So it's like cooking fantastic Yeah, yeah, and then like bomb ass sourdough turkey bacon and then also Avocados the answer is like well, here's your avocado, right?
[33:19-33:19] UNKNOWN: Let
[33:19-33:25] SPEAKER_01: us know who wants them and who doesn't please don't make me buy five bad avocados for you to throw away we could
[33:25-33:27] SPEAKER_00: do the
[33:27-33:28] SPEAKER_01: Pod
[33:28-33:28] SPEAKER_00: things.
[33:28-33:46] SPEAKER_01: Yeah, it recommended because I was asking it like well make a guacamole style like Avocado paste right and It's fine, but like there's something to the avocado still having a little bit of texture 100 %
[33:46-33:47] SPEAKER_00: Yeah,
[33:48-33:48] UNKNOWN: but
[33:48-34:12] SPEAKER_01: I think Ultimately like to meet our metrics I had to do two sandwiches per serving and so because like we always shoot for half a pound of protein and like Yeah, so basically one whole Avocado is those two sandwiches, right? Like basically if it's gonna be too difficult order it
[34:12-34:25] SPEAKER_00: without in my mind I would rather Put in effort for a better meal. Yeah, not everybody Yeah, I would rather do the prep to get a much better product
[34:25-34:35] SPEAKER_01: in this like if we were to go through with the sandwiches It's gonna include some prep. It's not throw it in the microwave and eat it Put the bread on it's making sandwiches. It's just really
[34:35-34:53] SPEAKER_00: good ones, but most of it is though. Yeah I've known did what's happening. It's stuck This is stuck on this running terminal command and all it was doing is getting pods and they're there And this is stuck this is positive
[35:11-35:12] SPEAKER_01: I
[35:12-35:12] UNKNOWN: System
[35:12-35:23] SPEAKER_01: successfully mounted is the last log inside the job Failed to close socket TCS fuse no such file or directory
[35:25-35:33] SPEAKER_00: I need to get my logs going this is inside me logs Inside
[35:33-35:34] SPEAKER_01: the job, okay
[35:48-35:49] SPEAKER_00: This one
[35:49-35:50] SPEAKER_01: yeah
[35:53-35:55] SPEAKER_00: There was a way to like copy
[35:58-36:11] SPEAKER_01: Yeah, it's different and you can't Adjust it to being on top either like the newest ones are on the bottom in there. Yeah, it's just like Haven't gotten that yet
[36:29-36:38] SPEAKER_00: I Mean I clicked open in logs Explorer and It gave me it kicked me into a new window. Oh like the
[36:38-36:39] SPEAKER_01: regular logs Explorer.
[36:40-36:40] SPEAKER_00: Yes
[36:59-37:06] SPEAKER_01: I Need to look like inside the hot logs at that level
[37:30-37:35] SPEAKER_00: Maybe it takes that long for a pod to start up Yeah,
[37:35-37:35] UNKNOWN: and
[37:35-37:35] SPEAKER_00: you
[37:35-37:35] UNKNOWN: know
[37:35-37:37] SPEAKER_00: like this giant and it has to load
[37:37-37:47] SPEAKER_01: that freaking that's true That container is fucking mega and it took like Ten minutes to do the pip install on the bill, right? So I
[37:47-37:58] SPEAKER_00: hope every pod is not like that. Yeah I Every time it runs a job that's to start up with the pod and it takes that long
[37:58-38:04] SPEAKER_01: Yeah, hopefully not because like the content like I don't know I don't know.
[38:06-38:07] UNKNOWN: We'll see
[38:08-38:32] SPEAKER_01: Like immediate use case it doesn't really matter Right works for us if it takes seven hours to spin up, right? We'll have it the next morning, but And I don't know that this is our product that we're driving towards this is this already I agree We do want to make it convenient for ourselves And that's good we should be able to at least check some logs now
[38:43-38:50] SPEAKER_00: There's a lot of failed Yeah, I'm
[38:50-38:51] SPEAKER_01: out stuff
[39:07-39:09] SPEAKER_00: I want
[39:09-39:14] SPEAKER_01: yeah motherfucker jumps around like crazy stuff stuff right there
[39:21-39:22] SPEAKER_00: I
[39:22-39:22] UNKNOWN: Want
[39:22-39:23] SPEAKER_00: one of those
[39:51-40:06] SPEAKER_01: So my guess is The real like shady shit that cursors doing No shit is the way they throttle and or maybe pass it on to a different model Right background without you maybe noticing
[40:06-40:09] SPEAKER_00: right? To make it cheaper for them.
[40:09-40:09] SPEAKER_01: Yeah,
[40:10-40:13] SPEAKER_00: like that's not what I asked for right
[40:14-40:18] SPEAKER_01: That's what's required occasionally when it's busy to make it
[40:18-40:18] UNKNOWN: 20 minutes
[40:18-40:20] SPEAKER_01: $20 a month my plate tip you
[40:52-41:25] UNKNOWN: I I
[41:25-41:50] SPEAKER_01: Also started just Editing its commands whatever is trying to look for like filter shit, right? Just delete that shit. Okay. I know QCTL logs and that is right. So here's the red like get rid of the rest Look at everything I get why it's doing it if you were looking at like a Production environment and you just say hey, it's show me the logs. It's gonna be ridiculous Right,
[41:50-41:53] SPEAKER_00: but this all logs are associated with what we're doing. We're
[41:53-41:53] UNKNOWN: only
[41:53-41:54] SPEAKER_00: doing one thing
[42:09-42:10] UNKNOWN: I
[42:14-42:23] SPEAKER_01: Mean that's not bad It's good that it's a real thing, right? It just sucks that ultimately is gonna require a fucking
[42:32-42:32] SPEAKER_00: It's
[42:32-42:32] UNKNOWN: not gonna be a good thing Maybe
[42:32-42:36] SPEAKER_00: we shouldn't be using that giant freaking deep learning container,
[42:40-42:40] UNKNOWN: maybe
[42:41-42:48] SPEAKER_01: Yeah, what was its argument for it it was basically just like it has all this stuff already now, I don't think about it
[42:55-42:56] UNKNOWN: I
[43:14-43:53] SPEAKER_01: But that's going to make it conflict with the one provided by the That's what happened yesterday Another option is maybe to pivot to cloud build. I don't know what it costs I don't know it would be probably a lot faster because it literally has at the very least it has that container,
[43:58-43:58] UNKNOWN: right?
[44:04-44:06] SPEAKER_01: Deal with our network issues
[44:22-44:23] SPEAKER_00: I
[44:33-44:34] UNKNOWN: Know
[44:34-44:36] SPEAKER_00: a couple times it tried to do
[44:36-45:21] SPEAKER_01: it Make two pushes and they both took fucking forever Okay, if that single line change doesn't trigger a full refill,
[45:22-45:23] UNKNOWN: yeah
[45:27-45:42] SPEAKER_01: And also like You have it look up what Or I guess it knows whisper X requires to that oh that too
[45:42-45:44] SPEAKER_00: Yeah, that's what it thinks
[45:44-45:49] SPEAKER_01: and that's from it looking at the readme which I did make it look up yesterday,
[45:49-45:54] SPEAKER_00: okay So just do this quick test
[45:54-46:38] SPEAKER_01: yeah You It wants to build starts That looks like it's gonna be a long one ask it to go to internet search for If this version is gonna work
[47:10-47:12] UNKNOWN: I
[47:41-47:48] SPEAKER_00: I cents an hour point zero zero three cents a minute I can handle that
[47:48-48:13] SPEAKER_01: reasonable in first hundred and twenty minutes daily I can handle that we should live well I don't think I've seen cloud build on any of the budget reports I agree billing reports and so the ones that we have done have not shown up so that's some evidence
[48:58-48:59] UNKNOWN: and
[48:59-49:04] SPEAKER_00: my guess is it's down those are a lot faster than us
[49:06-49:17] SPEAKER_01: and like even if the build takes just as long the push it's like already there yeah and that's for us the push takes as long or longer I
[49:17-49:18] SPEAKER_00: agree
[49:18-49:20] SPEAKER_01: that
[49:20-49:22] SPEAKER_00: should be lightning fast
[49:22-49:40] SPEAKER_01: exactly that's what like the I think that I built three times and pushed three times the third push had to restart twice because the network dropped no so like that's all arguments with the cloud
[49:40-49:42] SPEAKER_00: yeah I agree
[49:50-49:50] UNKNOWN: at
[49:50-49:52] SPEAKER_01: least when you're
[49:52-49:52] UNKNOWN: making
[49:52-49:54] SPEAKER_01: doing big shit
[49:54-49:59] SPEAKER_00: I mean if it's that cheap right do it all time
[49:59-50:03] SPEAKER_01: yeah especially if it's gonna be less than two hours is literally
[50:03-50:03] SPEAKER_00: yeah
[50:13-50:17] SPEAKER_01: they said like point three cents an hour after that point zero zero
[50:17-50:18] SPEAKER_00: three
[50:18-50:22] SPEAKER_01: yeah so like of a dollar so point three of us yeah yeah
[50:22-50:32] SPEAKER_00: yeah yeah I got the ten percent warning
[50:32-50:38] SPEAKER_01: yeah and that's ten dollars that is actually accurate
[50:48-50:54] SPEAKER_00: yeah don't do that again
[50:54-51:04] SPEAKER_01: which if we continue our current trend we made like a $30 mistake and a $5 mistake so we'll be well under a dollar on the
[51:04-51:15] SPEAKER_00: next one right and I mean I think we have the right habits and we try to teach this to customers who are not super familiar with cloud like you better be watching it what you're doing
[51:15-51:20] SPEAKER_01: like I work for Google and I can't really even explain the billing page right exactly just watch
[51:20-51:25] SPEAKER_00: it and make sure you understand what you're about to do before you spin up something crazy
[51:25-51:31] SPEAKER_01: yeah and then watch the logs you think it's off go sit and watch it for 30 minutes and make sure it's off
[51:31-51:37] SPEAKER_00: yeah because you might have a $10 ,000 bill and I can't help
[51:37-51:45] SPEAKER_01: you yeah especially you're fucking around with AI at all yeah especially if you're letting AI do any kind of pushing at all.
[51:46-51:46] SPEAKER_00: You
[51:46-51:46] UNKNOWN: better
[51:46-57:25] SPEAKER_00: watch out I'm gonna go get coffee. So the Docker build failed it specifically said that whisper it can't meet the dependency we're dependency hell okay so basically we can't use whisper X effect or we can't use it
[57:25-57:42] SPEAKER_01: well what about the strategy to make it update NumPy like what it was claiming it was gonna try to do was remove that dependency call and then when it's installing whisper it should install the NumPy that it needs I
[57:42-57:45] SPEAKER_00: will let you read what it's okay
[57:55-58:03] SPEAKER_01: that's a whisper needs so how do we get NumPy 2 .0 .2 onto that container is like the
[58:03-58:03] UNKNOWN: question
[58:03-58:06] SPEAKER_00: I don't think you can have two different ones on there right so I think
[58:06-58:13] SPEAKER_01: you can't update it like that's what I'm saying like it's just a container is just a computer at the end of it right
[58:13-58:23] SPEAKER_00: I agree well what I'm saying like I think the issue is that in the in the back end what was requested NumPy 1 .2 .0 .2
[58:23-58:23] UNKNOWN: I
[58:23-58:23] SPEAKER_00: think
[58:23-58:32] SPEAKER_01: that's what the container comes with or something to effect that we added that to the requirements I thought that it was
[58:32-58:32] UNKNOWN: I
[58:36-58:37] SPEAKER_00: guess we can look over here
[58:46-58:50] SPEAKER_01: like right there it was saying maybe it won't
[58:50-58:50] UNKNOWN: though
[58:55-59:02] SPEAKER_00: maybe I just missed understand hold on yeah
[59:09-59:09] UNKNOWN: yeah
[59:09-59:39] SPEAKER_00: so pytorch the the pytorch version that's on there requires but going for like we did previously we upgraded from 1 .2 .5 to 2 .0 to and but that caused pytorch to break right and so the question what we were trying to say okay we'll pin it at 1 .2 .5 right and see if whisper X will work anyways and it didn't right and so basically it failed to build because it's saying hey there this version
[59:43-59:44] UNKNOWN: mismatches
[59:44-59:56] SPEAKER_00: but get rid of that do a base pie torch install I go back to what we were doing before it's effectively good we're gonna rebuild and start with three point or five
[59:56-59:57] SPEAKER_01: minutes
[59:57-59:57] UNKNOWN: I
[59:57-60:07] SPEAKER_01: was getting like this giant in this dump and it's got stuff we don't need right it's kind of against like frameworks are the interview once you really start to try to think about efficiency
[60:07-60:10] SPEAKER_00: I agree so we're gonna build our start over
[60:10-60:35] SPEAKER_01: and install what we need right it's not slower because that bucket still has to be installed with all the shit let's see what's it recommending the updated archive to use Python slim base instead of the pie torch with CUDA so it's still trying to use that same container
[60:48-60:53] SPEAKER_00: what was the name of that it's like yeah
[61:31-61:32] UNKNOWN: you
[61:50-61:53] SPEAKER_00: it's fine with me
[62:01-62:19] SPEAKER_01: I mean as long as that container was just installing specific things like pie torches there's nothing I mean there might be some Google magic going on with like the way it's maybe my but it's running the latest pie torch
[62:29-62:33] SPEAKER_00: you want to um certain recession
[62:45-62:54] SPEAKER_01: it should be able to do I mean that's a relatively small change it's gonna be like a couple of lines on the doctor file
[63:02-63:04] SPEAKER_00: back to Python slim I
[63:04-63:29] SPEAKER_01: would probably tell it like hey look at all of whisper X's requirements and it's Doc's or something like that and make sure we have oh yeah and get ready for this because I was oh yeah
[63:29-63:29] UNKNOWN: so
[63:29-63:31] SPEAKER_01: that's it exactly
[63:36-63:42] SPEAKER_00: who exactly who manages us
[64:06-64:20] SPEAKER_01: That's whisper. So go down to hugging face. I found some kind of something yesterday.
[64:20-64:24] SPEAKER_00: Maybe we just need to go back to using whisper and not whisper X.
[64:24-64:25] UNKNOWN: Maybe.
[64:26-64:28] SPEAKER_01: But whisper X like...
[64:31-64:33] SPEAKER_00: It's a big backtracking.
[64:35-64:39] SPEAKER_01: Reintroduced ionization. Yep. Separately.
[64:58-65:13] SPEAKER_00: I'm going to kick this off. Do the cloud build. Because I don't know that there's good docs to point it to.
[65:13-65:14] SPEAKER_01: Yep.
[65:15-65:15] UNKNOWN: So
[65:15-65:17] SPEAKER_01: it is not,
[65:17-65:17] UNKNOWN: whisper
[65:17-65:53] SPEAKER_01: X is not managed by open AI. It's an open source project developed by that Max Bane guy. Building on open AI's whisper model. It extends whisper's capabilities and features like blah blah blah. Primarily through GitHub repository. While it uses open AI's whisper as its base, it is a separate effort supported by the visual geometry group and the University of Oxford. Not open AI. I mean, but still, I guess... It's open source. I mean, it's a project. And, I mean, how many stars does it have and shit like that? 16 ,000 up here on the top right. It's probably
[65:53-66:19] SPEAKER_00: pretty well looked through. So we probably need to add this to just the documents. Docs. How do you do that? Models. Rules and memories. Docs.
[66:20-66:20] UNKNOWN: There
[66:20-66:20] SPEAKER_00: it
[66:20-66:20] UNKNOWN: is.
[66:22-66:30] SPEAKER_00: No, that's cursor docs. Do you remember how to do that? General. What are you looking for? How to add this
[66:30-66:31] SPEAKER_01: to... I
[66:31-66:31] UNKNOWN: think it's going
[66:31-66:33] SPEAKER_01: in docs, I think. Down,
[66:33-66:33] UNKNOWN: down,
[66:33-66:33] SPEAKER_01: down.
[66:34-66:34] UNKNOWN: Oh,
[66:34-66:35] SPEAKER_00: there it is.
[66:54-67:54] SPEAKER_01: Yeah, so basically, I said is it safe? I said it's an open source project generally considered safe to use. There's always nuances to using open source projects. Code safety is public and researchers from the University of Oxford are part of the people that push to it. It's open for review, which is like a standard open source. Be careful, but as well as active. And people are looking at it. I thought it was just some dude when I looked at that. That's what I thought. I never even clicked on that GitHub repository because I was like, fuck that. I don't know you. And didn't think to ask because I was dumb. And it said basically, it runs locally or wherever you're running it. So it's not passing any of your data around. So it's as secure as you make your project. Right.
[67:55-67:55] UNKNOWN: OK.
[67:59-68:00] SPEAKER_01: What does it
[68:00-68:00] UNKNOWN: say
[68:00-68:04] SPEAKER_01: in the new? I don't see it. Scroll down a
[68:04-68:04] UNKNOWN: little.
[68:10-68:12] SPEAKER_01: OK. I don't know what that is.
[68:18-68:20] SPEAKER_00: So it's good. It does what we want.
[68:20-68:20] UNKNOWN: It
[68:20-68:23] SPEAKER_00: is effectively the workaround to what we were trying to do.
[68:24-68:25] UNKNOWN: Exactly.
[68:25-68:26] SPEAKER_00: With multiple
[68:26-68:30] SPEAKER_01: steps. With Pyano. Yeah. Like they literally just built a pipeline that we were working on.
[68:33-68:43] SPEAKER_00: Looks like you're stuck. I mean, unless it's building. Move it to the background.
[68:44-68:44] SPEAKER_01: Yeah.
[68:46-68:50] SPEAKER_00: It is. It is building.
[68:52-68:57] SPEAKER_01: Oh, it's got more. Yeah.
[69:01-69:07] SPEAKER_00: I think after this, we it's in the global region. I don't know if
[69:07-69:09] SPEAKER_01: that
[69:09-69:15] SPEAKER_00: matters. As long as you don't cost a lot of money.
[69:19-69:20] UNKNOWN: I'm going
[69:20-69:33] SPEAKER_00: to say is generate a detailed prompt. And.
[69:54-69:55] UNKNOWN: Yeah.
[70:25-70:28] SPEAKER_01: You can watch it here too.
[70:29-70:34] SPEAKER_00: Nice. I think that's the way to go, especially if it's free for two hours worth of
[70:34-70:34] SPEAKER_01: minutes.
[70:36-70:37] UNKNOWN: And then.
[70:38-70:58] SPEAKER_01: Point three cents an hour. So ten more hours of talking three cents. Yeah. So 12 hours a day. Three cents. I don't think we should ever build. I mean, it aligns with a thing you've been pushing for like years, which is like, don't use your local devices to do compute. Like do whatever.
[70:59-71:06] SPEAKER_00: And you have access to everything. It's like just basic computer supercheap. Yeah. And storage like a lot of this stuff is already
[71:06-71:11] SPEAKER_01: just there. Yeah. Available or cached like forever cached. Yeah. I
[71:11-71:11] UNKNOWN: assume
[71:11-71:18] SPEAKER_01: Python packages and video packages just exist inside of a cache because someone's hitting it all the time.
[71:20-71:32] SPEAKER_00: I guess not going to download it from this website over and over for you. No, it's cached. It's there. Some 10 people probably did it in the last since we've been doing it. Exactly. The world's a big place. Maybe not.
[71:33-72:22] SPEAKER_01: But. And they're monitoring the updates quick enough that it happens instantly. Like all that. You want to get some story thoughts on record? Yeah. So my note that I started off is just like a bulleted list. I've got history, fiction and religion, history. Alexander the Great and Caesar just started my list. Not combined. That's two different things. I'm not on that tip just yet. Fiction. I got the kinetic kylan and whatever else that could end up
[72:22-72:22] UNKNOWN: being.
[72:26-72:41] SPEAKER_01: Then alternate fantasy slash sci -fi. Game of Thrones is currently. I'm not even thinking. Or yeah. So alternate. That's like the what ifs. What if Robert's Rebellion fell? What if the Viper, Red Viper didn't get killed by the Mountain? What
[72:41-72:41] UNKNOWN: if.
[72:43-72:48] SPEAKER_01: But immediately after that, correct fantasy slash sci -fi that was previously pushed.
[72:48-72:48] UNKNOWN: Because
[72:48-73:10] SPEAKER_01: that's done poorly. Also Game of Thrones. Lord of the Rings, everything but the trilogy. Star Wars. I started a sub -bullet there. Basically the life of Anakin slash Darth Vader. Where you never really cut away. It's all from his perspective would be dope as shit. Yeah. It's all been done in places but never as like a singular thing. It would be awesome. Yeah.
[73:10-73:11] SPEAKER_00: I can't believe.
[73:12-73:20] SPEAKER_01: We don't have to worry about it anymore. The short story that Harley sent me when we were talking the other day. Crawl,
[73:20-73:20] UNKNOWN: walk,
[73:20-73:24] SPEAKER_01: run. I have a few of those. Thunder Championship Journey. Oh
[73:24-73:24] UNKNOWN: that would be
[73:24-73:32] SPEAKER_01: awesome. Any of the grandkids like literally their life so far. And animated and real pictures.
[73:32-73:32] UNKNOWN: And
[73:32-73:58] SPEAKER_01: then sometimes you make the real picture turn into this animate. Like animate the picture and make it start doing stuff and like play with that. And then like your original thing is like basically equating it to the process of learning anything. And then religious, the devil. The concept of the devil is a character here to tempt us. Basically he's on our level. He's not on our
[73:58-73:58] UNKNOWN: level.
[73:58-74:00] SPEAKER_00: So that's a great list.
[74:00-74:00] UNKNOWN: I
[74:00-74:09] SPEAKER_00: think the only thing that pops in my head is a story about an American Revolution. A new one.
[74:09-74:13] SPEAKER_01: So does that belong in like fiction or
[74:13-74:13] UNKNOWN: potential?
[74:15-74:44] SPEAKER_00: But gritty like Andor. But not Andor. You know in Oklahoma and Texas. You know what I mean. I got it. Might have people throw up on that freaking door. Here's what it is bro. Where'd you fucking go? I like
[74:44-74:44] SPEAKER_01: that.
[74:50-75:59] SPEAKER_00: Give me a prompt. Okay. There it is. Yeah. I like it. I'm literally going to copy that. Yeah. And say start a new chat. New session. And once it's done we'll paste that in there. I literally am going to copy all of this up through there. Yeah copy and use this prompt to start the next session. There you go. I will. That's what I was been hoping. Like so if we get off plan which we kind of are just do this hop between like build your own next prompt.
[75:59-76:08] SPEAKER_01: Yeah. Yeah. Build that in real time even if you start a new session. Have it do just the prompt building and then start a new session and give it that
[76:08-76:23] SPEAKER_00: prompt. Right. I actually need to hold this somewhere because I don't want to lose it and forget that I didn't copy it. Or did I copy something else? Because I'm also going to end the session whenever this finishes.
[76:37-76:38] UNKNOWN: Right.
[76:42-76:47] SPEAKER_00: So it automatically pushes or I don't know if that was in the original command.
[76:47-76:48] SPEAKER_01: Yeah that's what
[76:48-76:48] UNKNOWN: I
[76:48-76:56] SPEAKER_01: was actually about to ask you was what did that command look like? It's way up there. If you look at this progress bar on the side.
[76:58-77:11] SPEAKER_00: Oh wow. Oh it doesn't even see it. I mean I could should be able to see it from over here. Yeah. It's after that. Is it? Yeah
[77:11-77:11] UNKNOWN: I
[77:11-77:28] SPEAKER_00: think because that's where you asked it about the container. Right here. So Gcloud builds submit. Tag it with the latest and yes submit is just build and push. Yeah. Yeah I think it just does that.
[77:30-77:37] SPEAKER_01: Yeah so maybe it's not that much faster because my guess is this is the layer that's about 3 gigabytes. Probably.
[77:37-77:37] UNKNOWN: I don't
[77:37-77:54] SPEAKER_01: think. Alright so I like the American Revolution, modern American Revolution concept and or as a kind of inspiration for the field.
[77:55-77:55] UNKNOWN: Not
[77:55-78:03] SPEAKER_01: necessarily like they're surrounding this small city and like they're not going to fucking genocide an American city and start that shit up.
[78:03-78:03] UNKNOWN: No
[78:03-78:05] SPEAKER_01: but yeah. I
[78:05-78:05] UNKNOWN: think it would
[78:05-78:16] SPEAKER_01: start the revolution. Oh it would. I think it may have is what I'm saying but yeah a lot of people are very not happy with things that are going on. Yeah I agree. And they
[78:16-78:22] SPEAKER_00: blame us and by they I mean Americans. I would like to maybe it's too real.
[78:23-78:23] UNKNOWN: I
[78:23-78:47] SPEAKER_00: don't know but certainly because I'm into the like the cinematography and of like I that's one of the things that interests me in general. That good characters, good story and beautiful cinematography. Yeah. You almost can't miss. Like of course if you can make compelling characters and compelling stories but even if I don't it's going to be pretty.
[78:47-79:09] SPEAKER_01: So you could play with it a little bit make it a alternate modern America almost. Yeah. So maybe in America where the empire is honest and we know about it publicly we're not pretending with this democracy bullshit. So you're trying to overthrow an empire.
[79:09-79:26] SPEAKER_00: Yeah. Here's a new idea. None of these are probably surprising to you. But I would like to do a post revolution or post fall. Yeah. What it would look like to try to restore everything.
[79:27-79:37] SPEAKER_01: That's kind of where my head was going is like. Yeah. It changed the setting just a little bit so it's not like get a call from the secret service level. Right.
[79:38-79:44] SPEAKER_00: Like but you know post apocalyptic but not bad like just hey. Post the whatever we think. Whatever. Whatever the
[79:44-79:50] SPEAKER_01: worst potential that we can come up with that will be referenced as a thing that just happened in
[79:50-79:55] SPEAKER_00: this story. Right. Exactly. And then like rebuilding put it in the council. Yeah.
[79:55-79:56] SPEAKER_01: All
[79:56-79:58] SPEAKER_00: of those things like that what that would look like.
[79:58-80:14] SPEAKER_01: It would be interesting. I'm trying to think if we're in pre revolution and I'm reading the Jefferson biography right now. So that's where my head is at. But I mean he was very much post as well. But if we're in pre like who's Ma Mothma. Right.
[80:14-80:14] UNKNOWN: Who
[80:14-80:33] SPEAKER_01: are the various government. Thomas Massey if we're using real world people he's a he's a G maybe they've got me maybe he's the one that I got through and like the propaganda got me. But like who are those people. Right. Like we just have to be imaginary with that shit. To like.
[80:33-80:33] SPEAKER_00: I mean we can
[80:33-80:37] SPEAKER_01: base characters on real world people. Yeah.
[80:37-80:55] SPEAKER_00: But basically do that. I'd even like to do a fictional utopia. Not fictional fictional. Yes. But not necessarily real world possible. Yes. Like what it would look like.
[80:55-81:12] SPEAKER_01: You gave you call the call. Probably. That's what that ends up because the real world utopia is like communism but it works. But yeah that's. I'm not against making it either. Like that's a real thing.
[81:12-81:12] UNKNOWN: And
[81:12-81:28] SPEAKER_01: ultimately we could. That is. Brave New World. And it is like it does the beginning of Brave New World builds the utopia and then you introduce the darkness. So you could just not introduce the darkness and try to tweak it in ways that the darkness isn't there.
[81:28-81:28] UNKNOWN: Or
[81:28-81:35] SPEAKER_00: no no not necessarily. I'm not trying to completely say hey it's possible. I think between the three of us we would.
[81:35-81:35] UNKNOWN: It
[81:35-81:43] SPEAKER_00: would be an attempt at a utopia and it would fall like I think the story would be also it's not possible because somebody is
[81:43-81:43] UNKNOWN: going
[81:43-81:44] SPEAKER_00: to get
[81:44-81:46] SPEAKER_01: it. Or yeah the message.
[81:46-81:46] UNKNOWN: If
[81:46-82:05] SPEAKER_01: we want to get in this game is you can never just have it right. Like the people that fought for it went and got it. You have to fight for it to keep it right. And like constantly this is the guy that came up with this term is one of the deep people that you get kicked off of
[82:05-82:05] UNKNOWN: your head.
[82:05-82:06] SPEAKER_01: You know
[82:06-82:06] UNKNOWN: the youtuber
[82:06-82:33] SPEAKER_01: saying his name but totalitarian tiptoe. He's like motherfuckers don't come in and just start doing shit even to the level of the Nazis. Hitler never told the German public that they were exterminating Jews. Right. Because they wouldn't have been down with that shit. Of course not. You just kind of start and you do these things and 9 -11 happens and it's like oh now we have to deal with all this airport shit. And now we're just a little bit less free and it just tiptoes and tiptoes until all of
[82:33-82:33] UNKNOWN: a
[82:33-82:35] SPEAKER_01: sudden you look up and go like what the fuck. How did we get here?
[82:38-82:44] SPEAKER_00: Which my not so veiled attempts are like I actually want to educate the public.
[82:45-82:45] UNKNOWN: I
[82:45-82:50] SPEAKER_00: guess I do have a message but maybe that's I'm those people already. Exactly.
[82:51-83:08] SPEAKER_01: It's but if you have to constantly fight for it then entertainment has always been propagandized. Always. Like literally the whole like rap music getting black people to do drugs and be in prison. It worked. That's a thing. I used to think it was crazy and it's not. It's so clearly not.
[83:08-83:08] UNKNOWN: It
[83:08-83:12] SPEAKER_01: worked. Like Chicago doesn't have to exist like it does. It just that's intentional.
[83:13-83:19] SPEAKER_00: But I would like to tell stories about hey those people are not your friends first of
[83:19-83:19] SPEAKER_01: all.
[83:19-83:19] UNKNOWN: Even the
[83:19-83:39] SPEAKER_01: American mythos post World War II that's all from they told us what it is in the movies. Like and I'm not even like Holocaust 9. I'm talking straight up our like yeah we're the good guys and Soviets are the bad guys and we fight for freedom and don't don't talk don't think about me and that massacre and
[83:39-83:39] UNKNOWN: all
[83:39-83:48] SPEAKER_01: that stuff. Let's not talk about how we went to Afghanistan and rebooted the poppy production and then once fentanyl showed up we were like okay we don't need Afghanistan anymore.
[83:50-83:51] SPEAKER_00: Yeah.
[83:51-83:51] UNKNOWN: I
[83:51-84:04] SPEAKER_00: want to tell some. Synthetic heroin. Real world stories. You've got to veil them enough. Yeah exactly. To make people go huh. I wonder if that could happen. Yeah. Yeah. Surely they
[84:04-84:06] SPEAKER_01: wouldn't do that. They wouldn't do that.
[84:07-84:08] UNKNOWN: I
[84:08-84:12] SPEAKER_00: guess I'm those people just different messages. Yeah
[84:12-84:12] UNKNOWN: I
[84:12-84:12] SPEAKER_00: guess.
[84:12-84:12] UNKNOWN: It's
[84:12-84:18] SPEAKER_00: disgusting. It's the question. I'm going to stop talking for a little bit and think about you. Re -evaluate my
[84:18-84:24] SPEAKER_01: existence. Is there value in a message. When it's like
[84:24-84:25] UNKNOWN: actually
[84:25-84:44] SPEAKER_01: I don't know. But I think they're right to. Well that's the question. Do they are the people that are pulling the strings. Do they think it's right. Are they using it. Maybe use the useful idiots are not in question here because you're not one of them. Right. So if you have a message that is good I mean that's a Jesus. Jesus had a good message.
[84:44-84:56] SPEAKER_00: And I guess my objective is I just want people to actually see things and think about it. You don't have to agree with me. Tell me what you think in it not just. Well you're stupid. Like well. Yeah I think. OK
[84:56-85:24] SPEAKER_01: stop. What it makes me think is more in the vein of just again leading by example. And so make the thing that you're passionate about that you believe in put your beliefs in there. Not necessarily like hitting people with them. Just like the way you write things and create is going to be you. Right. And so do that. And if people hate on it. You're like that's fine. That's me. Like I don't know. Yeah it's fine. You can talk trash to it. It's fine. But don't make it
[85:24-85:24] SPEAKER_00: to try to
[85:24-85:25] SPEAKER_01: start
[85:25-85:29] SPEAKER_00: an argument. No. The goal is not to just like I got you. Like I'm right. You're wrong.
[85:29-85:57] SPEAKER_01: Well even resist when people start an argument because they're in they are in that mode. Not necessarily bad people. That's just the society we're in. If you're looking for a change you're going to get this vitriol coming at you just from instinct. Right. And you have to resist the urge to engage there too. Of like I don't hate you. I don't. That's how I felt. If you disagree that's fine. I'm not going to fight you over it. Right. Especially on those like unwinnables. It's like come on.
[85:58-85:59] UNKNOWN: Right.
[86:01-86:02] SPEAKER_01: I don't want to talk to
[86:02-86:02] UNKNOWN: you.
[86:02-86:07] SPEAKER_01: I don't think abortion is cool. But if you do I'm not going to fight you over
[86:07-86:07] UNKNOWN: it.
[86:07-86:10] SPEAKER_00: I'm not going to fight you over it. You're never going to convince me to
[86:10-86:10] UNKNOWN: do
[86:10-86:16] SPEAKER_00: this. And I'm probably never going to convince you. Actually I do think that I could convince you.
[86:16-86:16] UNKNOWN: Maybe
[86:16-86:17] SPEAKER_00: not. Right.
[86:17-86:29] SPEAKER_01: Ultimately I guess yeah if the message is on the side of truth then the message is okay. If the message is boys can be girls the message is not okay. That is a good. Because truth and love win the day.
[86:29-86:29] SPEAKER_00: Yes.
[86:30-86:30] UNKNOWN: Like
[86:30-86:34] SPEAKER_00: I'm not trying to convince people of things that are not true. I don't need to
[86:34-86:35] SPEAKER_01: convince you. This is truth.
[86:36-86:44] SPEAKER_00: The current realm or set of entertainment is trying to do that. It's trying to teach people lies. Trying to propagandize.
[86:45-86:53] SPEAKER_01: Like develop a narrative versus reality against reality. Right. So messages aren't inherently wrong. Jesus had a lot of
[86:53-86:53] SPEAKER_00: them.
[86:53-86:54] SPEAKER_01: Right.
[86:54-87:09] SPEAKER_00: But they were all good. I think that in fact that's one of the indicators of a good show to me. I keep processing. I'm processing and the mom -moth speech was
[87:09-87:12] SPEAKER_01: really good. And the way they were popping around and back to her.
[87:13-87:13] UNKNOWN: And
[87:13-87:13] SPEAKER_01: she's like yeah.
[87:14-87:33] SPEAKER_00: It was really good. And it was accurate. Like hey when you lose control, lose objective truth. It's over. And we're like on the precipice of that. The precipice. We're free falling. I was drinking when we went off the precipice. We're free falling.
[87:35-87:35] UNKNOWN: And
[87:35-87:46] SPEAKER_00: it's just like I, yeah I guess I want to create stories that are grounded in truth. And I actually think it's objective truth.
[87:47-87:48] UNKNOWN: And
[87:48-87:55] SPEAKER_00: you know mixed with the hey following this through it looks like terrible. Yeah.
[87:57-88:04] SPEAKER_01: And like truth and love right. I'm telling what I feel pretty confidently and I put a lot of thought into it to be the truth.
[88:05-88:06] UNKNOWN: And
[88:06-88:09] SPEAKER_01: I'm open. You actually can convince me that I'm wrong. Right.
[88:09-88:09] UNKNOWN: Because
[88:09-88:40] SPEAKER_01: I'm seeking truth. Me too. But also like the other half of that is love. Like I don't hate any of this even if I fundamentally disagree with whatever you're saying at my core. Hate isn't going to solve anything. Right. Like to the point of like if you're saying we should kill all the white people. Like me killing you ain't going to stop. It ain't going to solve anything. No. Because that's hate. Right. That's just going to be proof. You're like yeah white people are dangerous. We should kill these motherfuckers.
[88:40-88:46] SPEAKER_00: Oh yeah. I guess we got to go look at what's happening over here. I
[88:46-88:46] UNKNOWN: assume
[88:46-88:54] SPEAKER_01: it's just four dead jobs. Because that is our hard limit. Which is good. I assume that PubSub message is still cranking.
[88:55-88:56] SPEAKER_00: I completely forgot about that.
[88:57-88:57] UNKNOWN: Me
[88:57-89:16] SPEAKER_00: too. We should have been doing this already. This right here. There's still a message in there. Let's purge these messages. And I will let you know that I am going to purge the messages. Get one
[89:16-89:16] SPEAKER_01: right in here.
[89:40-89:45] SPEAKER_00: I'm leaving those freaking jobs up there until I see this thing say zero.
[89:45-89:52] SPEAKER_01: And then just now, seven minutes ago, there was a push. Tag latest.
[89:55-89:55] UNKNOWN: Yeah.
[89:55-89:59] SPEAKER_00: Cop Illman. It's the way to go. It was faster. For sure.
[89:59-90:14] SPEAKER_01: I think it probably didn't have to build. Everything. Partially because Google just has it and also because we pushed loads of it. But I agree it was a lot faster. That push yesterday was like three hours each time.
[90:17-90:28] SPEAKER_00: I think we're good. It popped up a message that said, purge complete. It may take a while for the chart to update. So I think it's actually purged.
[90:29-90:29] UNKNOWN: I
[90:29-90:45] SPEAKER_01: agree. If you delete those, we'll know in 10 seconds. I dropped that down to one day instead of seven. Either way. I don't ever want it sending again. It shouldn't once it's working.
[90:48-90:48] UNKNOWN: Because
[90:48-91:03] SPEAKER_01: if there's a bug in that, it's going to literally start the process. Once it's working and there's a bug in that, it's just going to process that motherfucker for seven days. Yeah. Every time there's an unavailable bug.
[91:03-91:05] SPEAKER_02: For sure.
[91:25-91:32] SPEAKER_00: Oh, we probably need to redeploy everything.
[91:32-91:43] SPEAKER_01: I mean, it should in theory. The cluster should pick up the latest transcription service and the job controller is already deployed.
[91:44-91:44] UNKNOWN: The
[91:44-91:53] SPEAKER_01: job controller didn't change, right? I don't think so, unless it needs to would be the only new deploy, I think, as long as the cluster is still running.
[92:07-92:44] UNKNOWN: Okay. Oh,
[92:59-93:17] SPEAKER_01: yeah, definitely. What is it saying? It's saying there's just one in the job controller that says always pull the image. And basically it's saying if you don't have that, it might try to use that old DLC container. Got it. So it's right about that. And all it's saying is literally every single time, go grab the image.
[93:18-94:11] SPEAKER_00: Right. Yep. That's what like, because I'm typically in a dock or something like that. And like to even live, it's always connected. I got to figure that out. I'm not completely sure that it's inside the house or out. I'm not fully sure one way
[94:11-94:11] UNKNOWN: or
[94:11-94:12] SPEAKER_00: the other.
[94:12-94:14] SPEAKER_01: Anything ever come from talking to them?
[94:14-94:20] SPEAKER_00: They basically said restart a bunch of things and call us back. Well, they wanted me to do it live. Yeah. And like, I'm not doing that.
[94:33-94:34] SPEAKER_01: It's not that bad.
[94:38-95:14] SPEAKER_00: I'm just going to do this over here. Whenever it comes back. Oh, well, I guess it's still trying to talk. Oh, yeah. That is literally my test. I love you too.
[95:27-95:28] SPEAKER_01: Yeah.
[95:28-95:28] UNKNOWN: One
[95:28-95:36] SPEAKER_01: of my sub bullets on the crawl walk run for a grand kid is make the people cry. What do
[95:36-95:36] UNKNOWN: you mean?
[95:36-95:39] SPEAKER_01: Because they will. We make one of those videos to show it to.
[95:40-95:50] SPEAKER_00: Oh, got it. Yep. I agree. I'm ready. I'm ready to start. Finish this. I
[95:50-95:50] UNKNOWN: got
[95:50-95:52] SPEAKER_00: to get through this.
[95:54-95:54] UNKNOWN: I
[95:54-95:58] SPEAKER_01: think we're
[95:58-95:58] UNKNOWN: back.
[96:05-96:06] SPEAKER_00: There it goes.
[96:08-96:08] SPEAKER_01: I'll
[96:08-96:08] UNKNOWN: be
[96:08-96:09] SPEAKER_01: back.
[96:37-96:42] SPEAKER_00: Yeah. This
[96:42-96:42] UNKNOWN: is
[96:42-96:44] SPEAKER_00: still struggling to catch up to the internet.
[96:47-96:47] UNKNOWN: Because
[96:47-96:56] SPEAKER_00: this doesn't. So it is things like this that make me think it's inside the house.
[96:56-96:57] UNKNOWN: Yeah.
[96:59-97:36] SPEAKER_00: Because some things go through, but that could still be outside the. Yeah. Like those messages are making it through. Which is weird.
[97:36-97:37] SPEAKER_01: Right.
[97:39-97:39] UNKNOWN: And
[97:39-97:44] SPEAKER_01: I guess maybe try to connect to the router and look at logs there.
[97:44-97:45] SPEAKER_00: Yeah. I mean,
[97:45-97:45] UNKNOWN: I
[97:45-97:56] SPEAKER_00: think that's a, I just need the hour or two to sit down and like connect to everything, run a bunch of tests, be sitting here when it goes off and like, okay, now go into.
[97:56-97:58] SPEAKER_01: Even that, if that thing keeps logs at all.
[97:58-97:59] SPEAKER_00: That's true. It does.
[98:00-98:00] SPEAKER_01: Yeah. So
[98:00-98:00] UNKNOWN: I think it's a good idea to have
[98:00-98:13] SPEAKER_01: it ready and when it goes off, run over there and check the logs for the last hour. Yeah. And either it's doing something or it's not. If it's not, then it's
[98:13-98:13] UNKNOWN: outside.
[98:35-98:36] SPEAKER_01: Well, I'm done.
[98:36-98:36] UNKNOWN: I
[98:36-98:37] SPEAKER_01: got four minutes.
[98:38-98:39] UNKNOWN: Yeah.
[98:41-98:44] SPEAKER_00: It's a dumb meeting. But.
[98:46-98:46] SPEAKER_02: Yeah,
[98:49-98:49] UNKNOWN: I'll
[98:49-98:54] SPEAKER_01: probably in this session have it go ahead and trigger.
[98:55-98:56] SPEAKER_00: What do
[98:56-98:56] UNKNOWN: you
[98:56-99:01] SPEAKER_01: mean? The, did it already do it? Oh, yeah. I triggered the pipeline, right? No, you're just up on the job.
[99:01-99:04] SPEAKER_00: Yeah. I'm just trying to restart the job controller because that's what it wanted to do.
[99:04-99:05] SPEAKER_01: Yeah.
[99:05-99:05] SPEAKER_00: So we're just
[99:05-99:08] SPEAKER_01: dealing with network stuff, but yeah. I
[99:08-99:08] UNKNOWN: think it's back to not getting anything. So I'm going to have it do
[99:08-99:11] SPEAKER_01: the Indian test, push the subscription message.
[99:12-99:12] UNKNOWN: And
[99:12-99:14] SPEAKER_01: see what happens and then in the session at
[99:14-99:14] UNKNOWN: the
[99:14-99:15] SPEAKER_01: end of that.
[99:15-99:16] UNKNOWN: Yeah.
[99:19-99:21] SPEAKER_00: Normally it doesn't take this long.
[99:22-99:30] SPEAKER_01: Yeah, I agree. I think it is back to not getting anything. Oh, I got a Google page.
[99:31-99:35] SPEAKER_00: Oh. Yeah, this is loading now.
[99:49-99:50] SPEAKER_01: Yeah.
[99:53-100:04] SPEAKER_00: I guess on the flip side, this being connected means that the network inside of here is working. Right. I don't know.
[100:07-100:12] SPEAKER_01: Yeah. If it were, I don't know enough about it, but if it were inside,
[100:12-100:12] UNKNOWN: I
[100:12-100:18] SPEAKER_01: would think it would basically not stop. Or like you said, when it happens, that shit would stop working.
[100:19-100:24] SPEAKER_00: I'm going to go pray. Okay. And then do my duty.
[100:25-100:27] SPEAKER_01: I'll watch it until
[100:27-100:28] UNKNOWN: I
[100:28-100:29] SPEAKER_01: think we're back.
[100:29-100:30] SPEAKER_00: There you go.
[100:31-100:32] SPEAKER_02: Of course.
[100:57-103:40] UNKNOWN: Okay. Okay. Okay. I'll go. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay. Okay.

==================================================
Generated on: 2025-07-30 18:03:53
Total words: 9345
Total speakers: 4
==================================================




Summary:


creation_date: 2025-07-30 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1748_ZOOM0045_transcript.txt participants: SPEAKER_00, SPEAKER_01

Executive Summary
This session covers a deep dive into troubleshooting the [[Transcription Service]] project, focusing on critical [[Docker]] dependency issues. The team diagnosed a "dependency hell" scenario involving PyTorch and NumPy versions required by [[WhisperX]] and made the strategic decision to abandon large, pre-built containers in favor of a slimmer base image. To resolve slow and unreliable local builds, they successfully pivoted to using [[Cloud Build]], which significantly accelerated the image push process. The conversation also explored the economic sustainability of [[AI Tools]] like [[Cursor]] and included a robust brainstorming session for various creative film and story projects, touching on themes of history, revolution, and societal rebuilding. The meeting concluded with the successful deployment of the new service image and preparations for a full pipeline test.

Key Topics Discussed
	•	Economics of [[AI Tools]] & [[Cursor]] Pricing
	•	Discussion on the new pricing tiers for [[Cursor]] and the underlying costs of premium models like Claude, [[Gemini]], and GPT-4.
	•	Speculation that [[AI]] companies like [[OpenAI]] are concluding their "VC phase" of losing money to acquire users and are now adjusting prices to become sustainable.
	•	Emphasis on optimizing workflows to use expensive [[AI]] processing only for tasks that cannot be handled by simpler, cheaper methods.
	•	Troubleshooting the [[Transcription Service]]
	•	The team hit a major roadblock with "dependency hell" between the PyTorch version on their base [[Docker]] image and the NumPy version required by [[WhisperX]].
	•	The large deep learning container was identified as the source of the problem, leading to the decision to switch to a minimal base image and install only necessary dependencies.
	•	Significant time was lost to slow local [[Docker build]] and push times, exacerbated by network instability.
	•	Adoption of [[Cloud Build]]
	•	A key decision was made to move the [[Docker build]] process from local machines to [[GCP]]'s [[Cloud Build]] service.
	•	The primary motivations were to leverage [[GCP]]'s internal network for lightning-fast image pushes to the [[Artifact Registry]] and to take advantage of the generous free tier.
	•	This shift proved successful, turning a multi-hour local process into a much faster cloud-based one.
	•	Creative Project Brainstorming
	•	A wide-ranging discussion on potential story ideas for future creative projects.
	•	Concepts Explored:
	•	Historical fiction centered on figures like Alexander the Great and Caesar.
	•	Alternate sci-fi/fantasy, including a "What If" scenario for Game of Thrones and a telling of Star Warssolely from Darth Vader's perspective.
	•	A gritty, "Andor-style" take on a modern American Revolution or a post-fall society rebuilding itself.
	•	The philosophy of embedding truth and positive messages in entertainment as a form of counter-propaganda.
	•	Pipeline Testing and Deployment
	•	The session concluded with preparing the infrastructure for a new test.
	•	The team purged old messages from the [[Pub/Sub]] queue to ensure a clean start.
	•	An important configuration change was made to the [[Job Controller]]'s [[Kubernetes]] deployment to set imagePullPolicy: Always, ensuring it always uses the latest container image from the registry.

Action Items & Decisions
	•	Decision: Shift from building [[Docker]] images locally to using [[Cloud Build]] to improve speed and reliability.
	•	Action: Refactor the [[Transcription Service]] Dockerfile to use a python-slim base image and install only the specific dependencies required, resolving the version conflicts.
	•	Action: Add the [[WhisperX]] [[GitHub]] repository URL to the project's documentation within [[Cursor]] for easy reference.
	•	Action: Update the [[Job Controller]]'s [[Kubernetes]] deployment configuration to set imagePullPolicy: Always.
	•	Action: Purge all messages from the [[Pub/Sub]] subscription before triggering a new end-to-end test of the pipeline.

Suggested New Links/Tags
	•	[[NumPy]]
	•	[[PyTorch]]
	•	[[Crawl, walk, run]]

Linked Concepts
	•	[[AI Tools]]
	•	[[Artifact Registry]]
	•	[[Cloud Build]]
	•	[[Cursor]]
	•	[[Docker]]
	•	[[Docker build]]
	•	[[GCP]]
	•	[[Gemini]]
	•	[[GitHub]]
	•	[[Job Controller]]
	•	[[Kubernetes]]
	•	[[OpenAI]]
	•	[[Pub/Sub]]
	•	[[Transcription Service]]
	•	[[WhisperX]]

#Tags
	•	#SoftwareDevelopment
	•	#Troubleshooting
	•	#GCP
	•	#Deployment
	•	#AI

zoom46
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1724_ZOOM0046_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:04] SPEAKER_03: to be installed together, right? Right. And so I kind of think we should do that. Okay.
[00:04-00:04] UNKNOWN: As
[00:04-00:09] SPEAKER_03: like, do the planning and the development, but I think the short version, like the last page,
[00:10-00:10] UNKNOWN: is
[00:10-00:17] SPEAKER_03: a decent encapsulation of what we're trying to do. I haven't read it. Yeah, I didn't read the big,
[00:17-00:17] UNKNOWN: long
[00:17-00:50] SPEAKER_03: one, but I was just reading this one. And it is basically pivot to Kubernetes, not autopilot, and make sure all the dependencies work with each other, make sure we have our secret from hugging face, develop the three independent services instead of WhisperX, and then it's gonna have them, which I always had this feeling, do transcription, then diarization, then alignment, because like, once you already have the transcription,
[00:50-00:50] UNKNOWN: like
[00:50-01:01] SPEAKER_03: I don't know, like that always made sense to me. We were doing it the other way around, but it always felt like that was because that's the one we did first, like we just happened to do it. I think in my mind, they were
[01:01-01:02] SPEAKER_05: always independent.
[01:03-01:05] SPEAKER_03: Yeah, but when we have to do them sequentially.
[01:06-01:17] SPEAKER_05: No, no, I get that, but what I'm saying is the first two steps don't depend on each other. Right. So really, it doesn't matter which direction you perform it, and I may be wrong, but that's what I thought.
[01:17-01:17] UNKNOWN: Yeah,
[01:18-01:40] SPEAKER_03: but that's how it's gonna do it while we're limited to one GPU. It was explicit about the one GPU thing, not in a persistent claim. Yeah, I would put GCSFuse in here somewhere, which I think we just jam a little with it,
[01:42-01:42] UNKNOWN: or
[01:42-01:43] SPEAKER_03: just take it from where
[01:43-02:06] SPEAKER_05: it's at. So no, I don't think it's bad, and I've kind of changed my mind a little bit in that I think we put this into Cursor and let it develop decisions. Because it has access to all the stuff. You said that originally. Yeah. It's still a bit of a hybrid because this originally got developed outside of Cursor, but then.
[02:07-02:11] SPEAKER_03: Yeah, I think there's some like, like a deep research thing like that big fancy one.
[02:12-02:12] UNKNOWN: I
[02:12-02:21] SPEAKER_03: think I didn't, I was at the end of my day and not providing a good enough like thorough prompt, but like that, Cursor can't do. No, I agree.
[02:21-02:21] UNKNOWN: And if that
[02:21-02:26] SPEAKER_03: were right and I had prompted it correctly, that would be like incredible. You're presenting that as a paper.
[02:26-02:52] SPEAKER_05: Do you want to go back and try to do that as deep research before we, as a part of the design? I don't know, like what do you, what do you, where's your head at? Is that Cursor doing? That was where I was before this, but I'm definitely a planner. Like I am in the mindset of like what I really liked, not the other one, like it didn't work. But, and so.
[02:52-02:52] UNKNOWN: The waves
[02:52-02:54] SPEAKER_05: breaking it down. Yeah, and it had like.
[02:54-02:54] UNKNOWN: It was
[02:54-03:06] SPEAKER_05: broken. Yeah, and it was all the way into the full, hey, this is what your Docker files should look like. This is like, and like, I would like to get to that level of detail where we're
[03:06-03:06] UNKNOWN: not
[03:06-03:11] SPEAKER_05: just trying to figure it out on the fly. But maybe it's not, but it did that and it was wrong.
[03:11-03:48] SPEAKER_03: Exactly, that's my pushback there is like, well, it's this big, really impressive looking thing. But it's not more accurate than anything else. Yeah, I don't think a combination of entities exists on the planet that can make that plan. Doesn't require, just once you're implementing, that's my argument that nobody really knows what's going on. Like ultimately the person that knows the most doesn't understand one step away from them. And so nobody can put that plan together and then you just go execute it without having to like dive down these other things
[03:48-04:02] SPEAKER_05: and rebuild and do all this other shit. Well then in that case, what I say we should stay practical, put that last page or the one pager in there and say, hey, like we've done before, hey, we're replanting. Let's start over. The EOD summary
[04:02-04:09] SPEAKER_03: says that we need to
[04:09-04:09] UNKNOWN: pivot
[04:09-04:24] SPEAKER_03: somewhere in there, it said there. Yeah, Whisper X incompatibility proven through testing custom three service pipeline architecture approved. So it's fairly close to that.
[04:24-04:36] SPEAKER_05: Yeah, and then we just picked back up, like basically pivoting back to where we were before. It shouldn't be too bad. And the only difference is we're gonna do a GKE Center.
[04:36-04:36] UNKNOWN: Right.
[04:38-04:54] SPEAKER_05: I said we give it, does it specifically capture? Well, that's one, like between the Read Me and the stuff from yesterday, it should capture all of the other details. Things like, hey, well, we're using GCS fuse.
[04:55-05:11] SPEAKER_03: Yeah, so in a planning session, we can be more explicit about like, hey, look at all of the Read Me and do all this because we kind of brought the start session back a little bit. Yeah. So hey, go through here and we're gonna make a full on plan. Right. I think
[05:11-05:11] UNKNOWN: -
[05:11-05:18] SPEAKER_03: So do we even need that necessarily? Like it knows it's time to go to all that. I
[05:18-05:18] UNKNOWN: think
[05:18-05:33] SPEAKER_03: the only thing that thing would provide right there is that we're moving away from autopilot. If we give it the book, there's a bunch of like helm charts and shit in there,
[05:34-05:34] UNKNOWN: but.
[05:34-05:44] SPEAKER_05: Yeah, I don't know that we need this. I agree, it's pretty simplified. Yeah, I think we just jam a little
[05:44-05:44] SPEAKER_03: bit.
[05:44-05:44] UNKNOWN: Just
[05:44-05:55] SPEAKER_03: like, look at the Read Me, read it thoroughly. And tell me what you think we should do. Yeah, maybe look at the EOD or the, yeah, yesterday's daily summary.
[06:00-06:00] UNKNOWN: Always
[06:00-06:06] SPEAKER_03: think your sides are maxed. At the, like my peripherals, I catch them for the first time, I'm like,
[06:07-06:14] SPEAKER_05: oh. Oh. It's maxed here. Yeah. I'm just in the habit of taking my shoes off. All right.
[06:14-06:14] UNKNOWN: I
[06:14-06:16] SPEAKER_05: get it, I do the same thing.
[06:21-06:43] SPEAKER_03: Yeah, so you're right. Between the Read Me and our documentation, everything's there. And ultimately, if we're not gonna do deep research, then let it do it in there. No, because it has everything. It has access to everything. I do think cursors, context windows are shorter than like Geminis. I agree.
[06:43-06:43] UNKNOWN: Even
[06:43-06:46] SPEAKER_03: using Geminis, your context window is shorter inside a cursor.
[06:47-06:48] SPEAKER_05: Oh, I see what you're saying. Yeah, because
[06:48-06:48] UNKNOWN: it's a little bit shorter.
[06:48-06:51] SPEAKER_05: Because it uses some of it for the control. Right, and it's for the
[06:51-06:52] SPEAKER_03: stuff, so yeah.
[07:33-07:34] UNKNOWN: If
[07:34-07:38] SPEAKER_02: you look at what it's,
[07:38-07:40] SPEAKER_03: it looked at the Read Me apparently.
[07:41-07:41] UNKNOWN: Because
[07:41-07:43] SPEAKER_03: it has a lot of content.
[08:27-08:33] SPEAKER_05: Do you want to do transcription first?
[08:34-08:53] SPEAKER_03: I'm open to whatever. I agree, it kind of doesn't matter as long as they're both there for alignment. I would ask it about moving away from autopilot so we have more control over what stuff is running. What drivers
[08:53-09:15] SPEAKER_01: and
[09:15-11:13] UNKNOWN: whatnot. Okay. Okay. Okay. Okay.
[11:39-12:03] SPEAKER_04: What's the one that adds the...
[13:00-13:01] UNKNOWN: Okay.
[13:24-13:30] SPEAKER_05: I don't know that I have to do that in this. I've never seen it fail and delete it.
[14:04-14:05] SPEAKER_03: Did you do a pull?
[14:06-14:06] UNKNOWN: I
[14:06-14:06] SPEAKER_04: did.
[14:08-14:12] SPEAKER_03: Why does it say my name two days ago? From the bottom?
[14:13-14:18] SPEAKER_05: I don't know. I did. Yeah,
[14:19-14:19] UNKNOWN: it
[14:19-14:23] SPEAKER_05: just...the only commit now is this. I did do it.
[14:23-14:26] SPEAKER_03: Will you hover over it? This... Yeah.
[14:29-14:37] SPEAKER_02: Huh. Is the phase two section...
[14:38-14:43] SPEAKER_05: I don't know. That's interesting. I did pull.
[14:44-14:59] SPEAKER_03: Yeah. I mean that's why I pulled. And it's from 710 which is yesterday so no matter what that's not two days ago. And it wasn't even...it was like 14 hours ago.
[15:42-15:43] UNKNOWN: Okay.
[15:57-16:05] SPEAKER_05: Still working on the GKE autopilot. That's my thought. Because it was not the source of the driver issue. It wasn't actually the source of
[16:05-16:05] UNKNOWN: the
[16:05-16:10] SPEAKER_05: issue. The source of the issue was the... The Luis Ferry X requirements. Yeah. And it's just easier.
[16:10-16:22] SPEAKER_03: Yeah, I'm not against it. And we can always work backwards. If we run into that same issue again with these which we probably won't. Right. Then we can run backwards,
[16:22-16:22] UNKNOWN: yeah.
[16:26-16:33] SPEAKER_05: Yeah, and both of those, not only the driver, it's cheaper to run GKE autopilot.
[16:34-16:37] SPEAKER_03: Is that true when we're shutting them down? Not necessarily.
[16:38-16:43] SPEAKER_05: You're right. See.
[16:44-16:44] UNKNOWN: But
[16:44-16:45] SPEAKER_05: I'm good either way.
[16:45-16:45] UNKNOWN: I
[16:45-16:49] SPEAKER_05: don't feel... They still want to use that D -Py container.
[16:49-16:49] UNKNOWN: I just
[16:49-16:52] SPEAKER_03: fucking hate when it says stuff is proven functional.
[16:52-16:53] SPEAKER_05: Where do you see that?
[16:53-17:36] SPEAKER_03: Like four lines above that. Oh. Like yeah, we're about to change the whole shit. So I'm not like sure. The thing that we're not going to do is almost kind of proven. Yeah, I'm not against diving straight through it. We know it's available. We don't have to do it right now. But if it's not up and running by the end of this session. I'm spinning the bitch up on a VM. And just like going through it. With the plan to deploy it, but just like getting the working version out.
[17:38-17:38] UNKNOWN: And
[17:38-17:44] SPEAKER_03: like having non -conflicting everything. I'm going
[17:44-17:44] UNKNOWN: to
[17:44-17:45] SPEAKER_03: get a transcript out of this.
[17:52-17:53] SPEAKER_02: For sure that.
[18:16-18:25] SPEAKER_03: $1 .33 yesterday. Not bad. I think most of it. Or some of it was counted for credits.
[18:25-18:26] SPEAKER_04: Yep.
[18:29-18:31] SPEAKER_03: It's the 11th and we're at $10.
[18:31-18:31] UNKNOWN: So
[18:31-18:34] SPEAKER_03: we're at a dollar a day almost with a few mistakes.
[18:34-18:36] SPEAKER_05: And that's mostly testing.
[18:39-18:45] SPEAKER_03: Yeah, once this thing is running a GPU. We spin it up and run it for four minutes a day to get our two hours.
[18:46-18:58] SPEAKER_05: Yep. So do you want to try to do the sessions or just say,
[18:58-18:58] UNKNOWN: Hey,
[18:58-19:02] SPEAKER_05: do everything. Because it knows how to, I guess, doing it right now.
[19:02-19:39] SPEAKER_03: Yeah, I think. The sessions are almost forcing us to be disciplined about starting new ones. So as long as we're deliberately, you need to know that we're only doing this one task. It's almost worth having it. Because whenever I went through phase one and two and into three, it was literally like, okay, do this thing. And it was like, okay, this is next. Like stop. We're keeping super focused. Okay. So I kind of just want to jam though. Let it run.
[19:40-19:46] SPEAKER_05: I'm good either way. I am the same. Let's just go. Yeah, let's just
[19:46-20:02] SPEAKER_03: go. And if we're not in a place that looks good by the end of the day, like my first session, I'm going to spin up a VM and manually install everything and see that it works. And then back engineer that onto an autopilot cluster. Or we're going to be done. So do
[20:02-20:02] UNKNOWN: you
[20:02-20:02] SPEAKER_03: want
[20:02-20:06] SPEAKER_05: to start over or just go ahead right now and go into the transcription service?
[20:06-20:06] UNKNOWN: Do you
[20:06-20:08] SPEAKER_05: think we have enough context? No, I
[20:08-20:09] SPEAKER_01: would definitely start over already.
[20:18-20:54] SPEAKER_03: Yeah, I think that's part of jamming is you start them over a lot. And even if it takes a couple minutes to end and then restart a session, it's worth it for the... Even 50 % is worse than zero. As far as context exhaustion. Oh, I agree. Right. And so it's still really good at 50%, but it's already starting to. So if you say, hey, go look at the logs, tell me what you think, log it, new session. That's maybe a little dramatic, but not overboard.
[20:54-20:55] SPEAKER_05: I agree with you.
[20:56-21:00] SPEAKER_03: And especially when it's looking at logs and you're not really sure how much it just looked at.
[21:02-21:03] SPEAKER_05: That's true.
[21:06-21:12] SPEAKER_03: Also, I'm coming off of working during what I assume are the busy hours and it being semi -retarded compared to its morning.
[21:12-21:21] SPEAKER_05: Right, exactly. And I rarely work during those times. I only see it like this. And sometimes it's slow, but sometimes it's usually like this. Yeah,
[21:21-21:23] SPEAKER_03: it usually does a pretty good job.
[22:00-22:59] UNKNOWN: Okay. Okay. Okay.
[23:32-23:39] SPEAKER_05: Battle tested libraries. Yes, they are. Not with us. We'll get there
[23:39-23:39] SPEAKER_01: now.
[23:43-23:46] SPEAKER_05: All that. Oh, implementation.
[23:51-23:52] UNKNOWN: Okay.
[23:54-23:55] SPEAKER_01: There's more files.
[24:01-24:03] SPEAKER_05: I guess I was going
[24:03-24:03] UNKNOWN: to
[24:03-24:05] SPEAKER_05: say, it's supposed to look like
[24:05-24:05] UNKNOWN: that.
[24:05-24:06] SPEAKER_05: It did.
[24:21-24:33] SPEAKER_03: Yeah, I think really this is the way you vibe code with some manner of accuracy is restart the context a lot. Right. And then every once in a while, understand you're
[24:33-24:33] UNKNOWN: going
[24:33-25:09] SPEAKER_03: to have to take like an hour and make sure everything's good. Do some high level planning and then go back into resetting the context a lot. And if you can like kind of in real time develop this pathway of finding the things that you've deleted, like references to the other ones and how to like what, like a short description of what they contain.
[25:09-25:09] UNKNOWN: I
[25:09-25:10] SPEAKER_03: mean that's a vector database I guess.
[25:10-25:26] SPEAKER_05: Right. Well, some sort of way that vector database is a way. But right now we're doing it. Just having these files that are they timestamped and be ready. You can always say, go back from the day to the sessions and go look at you.
[25:32-25:33] SPEAKER_03: But it's manual.
[25:33-25:33] UNKNOWN: But
[25:33-25:37] SPEAKER_03: it's
[25:37-25:45] SPEAKER_05: imperfect but available at any moment. We're doing the imperfect way of what we imagine.
[25:47-25:47] UNKNOWN: But
[25:47-25:48] SPEAKER_05: it's still happening.
[25:48-25:48] UNKNOWN: Because
[25:48-25:51] SPEAKER_03: we're still trying to do this other fucking thing. And get this
[25:51-25:51] SPEAKER_05: transcription
[25:51-25:52] SPEAKER_03: service.
[25:52-26:01] SPEAKER_05: But it's required. Like otherwise, otherwise we need a lot of money. Yeah, we're going to get one of those unlimited plans for whatever 200 hours a
[26:01-26:02] SPEAKER_03: month. Do
[26:02-26:02] UNKNOWN: you
[26:02-26:03] SPEAKER_03: see graph four?
[26:03-26:06] SPEAKER_05: I saw and it did something crazy. I heard right.
[26:07-26:31] SPEAKER_03: Supposedly, but it's in LLM. So yeah, it's at the top of all the, it beat all the benchmarks. But they also presented it with a graph that did not start at zero. So it really looked like it blew them out of the water. But it's pretty zoomed in. And then Elon's just talking shit. But it's in LLM.
[26:31-26:31] UNKNOWN: He
[26:31-26:31] SPEAKER_03: does that.
[26:32-26:33] SPEAKER_05: It's like,
[26:33-26:33] UNKNOWN: well
[26:33-26:37] SPEAKER_05: it technically hasn't produced any new physics or anything like that. But it's coming soon.
[26:37-26:41] SPEAKER_03: Exactly. And we're going to go to Mars in two
[26:41-26:41] SPEAKER_05: years.
[26:43-27:02] SPEAKER_03: And I haven't been saying that since 2016. Shut up. And I haven't quietly cut in half the amount of weight that Starship is expected to take to space without actually acknowledging it. And also that's still way overshot by all the people that are talking about it that don't work for me.
[27:03-27:04] SPEAKER_05: In the end,
[27:05-27:05] UNKNOWN: I'm
[27:05-27:13] SPEAKER_05: just like, I'm just going to focus on this. Exactly. And the stuff that I can control and the stuff that I cannot, I'm going to do my best to not think
[27:13-27:14] SPEAKER_03: about it. I
[27:14-27:14] UNKNOWN: can
[27:14-27:18] SPEAKER_03: get super heavy grok for $3 ,000 a year.
[27:19-27:21] SPEAKER_05: I saw that.
[27:21-27:21] UNKNOWN: Yeah.
[27:22-27:22] SPEAKER_05: $30
[27:22-27:26] SPEAKER_03: a month. And that's like the reduced amount for paying for a year.
[27:26-27:28] SPEAKER_05: Yeah. I saw it like the up -to -date
[27:28-27:28] UNKNOWN: payment. Oh,
[27:28-27:31] SPEAKER_05: it's asking? Yeah. And so if you click grok four,
[27:31-27:31] UNKNOWN: it
[27:31-27:36] SPEAKER_05: says, well, super grok is $30 a month. It's not crazy. I'm not paying it.
[27:36-27:37] SPEAKER_03: No.
[27:37-27:38] SPEAKER_05: But
[27:38-27:46] SPEAKER_03: especially with what they did last time, they were like, it's $30 a month. And two days later, it was like, it's free. Thanks for your money.
[27:46-27:49] SPEAKER_05: Yep. And I'm fine with Gemini.
[27:50-27:53] SPEAKER_03: Also grok three is incredible. I use it all the time.
[27:53-28:02] SPEAKER_05: I would like to use the best one. Yeah. Like I will pay for one. I'll pay for Cursor and one other one. So I'm paying for Gemini.
[28:02-28:05] SPEAKER_03: I get your benefits of Google and being in your Google family.
[28:05-28:05] UNKNOWN: Right.
[28:05-28:09] SPEAKER_05: But it's not. That one's $20 a month.
[28:11-28:11] UNKNOWN: And
[28:11-28:16] SPEAKER_05: I'm not specifically, the extra $10 is not that much, but I don't
[28:16-28:16] UNKNOWN: know.
[28:16-28:18] SPEAKER_03: That's what I listened to. I don't think it was Fireship.
[28:18-28:18] UNKNOWN: It
[28:18-28:43] SPEAKER_03: was that AI Explained, the one that like reads the papers. And he was comparing the $30 a month to Google's $20. Right. And he was like, I mean, Elon said that grok four will generate video, but VO already does. And you're looking at all these benchmarks, but like you say you want to use the best one, but like for what? For outside of here?
[28:43-28:43] UNKNOWN: Right.
[28:44-28:46] SPEAKER_05: Unless I could use it.
[28:46-28:46] UNKNOWN: It
[28:46-28:50] SPEAKER_05: might be good to if it's in here now. Oh, it will be. I assume
[28:50-28:54] SPEAKER_03: it might still be. It might be in like Max mode or something like that. But grok three is in there.
[28:55-28:55] SPEAKER_05: So one of
[28:55-28:55] UNKNOWN: the
[28:55-29:05] SPEAKER_05: things I really like about Gemini is it can produce documents and stuff like it's already in the Google. Like that's why they're going to
[29:05-29:05] UNKNOWN: win.
[29:05-29:16] SPEAKER_03: Because it's like why Apple's not going to die is because like, guess what? I'll just plug your shit into mine. That thing's fantastic. And the way it works with that thing and those things. And I
[29:16-29:19] SPEAKER_05: have no intentions of changing that anytime soon.
[29:19-29:19] UNKNOWN: No.
[29:20-29:20] SPEAKER_03: Ultimately,
[29:21-29:21] UNKNOWN: it
[29:21-29:36] SPEAKER_03: was like, we just got to take a step back more often because we were genuinely like, yeah, Apple's fucked. And it's just this hype thing. It's like, no, the fuck they're not. Because that thing is fantastic. All of the devices are fantastic.
[29:36-29:36] UNKNOWN: What
[29:36-29:37] SPEAKER_03: are we talking about? I have
[29:37-29:37] UNKNOWN: no
[29:37-29:38] SPEAKER_03: idea.
[29:38-29:38] UNKNOWN: I have
[29:38-29:41] SPEAKER_05: no idea what's happening. I just said.
[29:41-29:45] SPEAKER_03: Oh, it reads through the entire thing. Oh, no, no, that's a different thing. No, it's like working.
[29:46-29:50] SPEAKER_05: It's doing stuff. It started doing that. All I said was let's start a new session.
[29:52-29:53] SPEAKER_00: Oh shit.
[29:54-29:56] SPEAKER_05: I haven't said any. I just started a new session and it just.
[29:56-30:00] SPEAKER_03: Yeah, so drop down those to do's and let's see because it might have started making those.
[30:01-30:01] UNKNOWN: But
[30:01-30:02] SPEAKER_03: now it made a decision.
[30:03-30:14] SPEAKER_05: I mean, it's doing the stuff. It's doing it. Yes, but it's like literally going through all of it and updating all the stuff. So maybe we'll be ready to test at the end of this session.
[30:14-30:16] SPEAKER_02: I mean, probably a test.
[30:18-30:23] SPEAKER_05: Because it's literally going through every one of every one of the files and doing the whole thing.
[30:23-30:29] SPEAKER_03: I would say as much as it's doing, we probably don't even want to do the test in this session. Oh, no, I don't want to do
[30:29-30:29] UNKNOWN: it.
[30:30-30:31] SPEAKER_03: But I'm going
[30:31-30:31] UNKNOWN: to
[30:31-30:33] SPEAKER_05: let it get through these things and then in the session,
[30:33-30:46] SPEAKER_03: if it goes through its to do, like it's doing a mini version of what like that's what the to do list is. Yeah, I assume it's not actually like wiping its context, but that this is kind of it. Like, OK, wipe those steps out of your memory and then focus on the
[30:46-30:50] SPEAKER_05: next. Yeah, and just keep doing that. Maybe it is doing that. Maybe it is what we're thinking of some
[30:50-30:51] SPEAKER_03: version of it possibly.
[30:52-30:52] UNKNOWN: Yeah,
[30:52-31:02] SPEAKER_05: because it looks pretty freaking good. It makes me want to put the whole thing out like just build us the freaking transcription service, please.
[31:03-31:03] UNKNOWN: How
[31:03-31:11] SPEAKER_03: long so that little mini booklet you got over there by all intents and purposes, you don't dive into it.
[31:11-31:11] UNKNOWN: It
[31:11-31:15] SPEAKER_03: looks super impressive. It probably is even like fire fairly implementable.
[31:16-31:16] UNKNOWN: But
[31:16-31:54] SPEAKER_03: anybody that were even beginning to look at that would go, hey, Jim and I, tell me what's going on here. And so now it's an AI that wrote this thing. AI is going to summarize it. And then the people are kind of just vibing the whole fucking the whole way. Yeah, the whole way. Yeah. And that's just going to get more and more like that is my theory on AI has been running shit for years and years because powerful people have had these things for I mean, the rules of thumb are crazy, like 100 years ahead or 40 years ahead. Right. Constantly. So they had this shit in like 1980.
[31:54-31:58] SPEAKER_05: Right. And it was augmenting them back then.
[31:58-32:02] SPEAKER_03: Right. And not even controlling them and not even necessarily conscious. No, I
[32:02-32:07] SPEAKER_05: think augment is the way like it's been there helping for and it's very much so now.
[32:07-32:14] SPEAKER_03: Right. And so the more that happens or I mean, it just happened as quickly to them as it did to us.
[32:15-32:21] SPEAKER_05: See that? It's I literally am ready to.
[32:21-32:23] SPEAKER_03: Oh, you look at the. Whisper service conversion is
[32:23-32:24] SPEAKER_05: complete and ready for next phase.
[32:25-32:32] SPEAKER_03: We go click through like the review next file buttons. The easiest way to do it. But I actually want to see what it
[32:32-32:59] SPEAKER_02: wrote in these things. So this is the Docker file from transcription service. Oh, no, that's good. This is.
[33:08-33:12] SPEAKER_05: So just faster whisper and then all the ones that were there before.
[33:13-33:13] UNKNOWN: It
[33:13-33:18] SPEAKER_05: means for you. And it took these out. Yeah.
[33:24-33:27] SPEAKER_03: Yeah, we're still in notice the Python.
[33:29-33:30] UNKNOWN: This
[33:30-33:32] SPEAKER_05: is the one where I've never known how this thing works.
[33:33-33:36] SPEAKER_03: Right. And even just stepping through the files,
[33:36-33:36] UNKNOWN: I
[33:36-33:42] SPEAKER_03: think is valuable. Like, yep, looks like Python will fucking see. Right. Yeah, I've never known
[33:42-33:51] SPEAKER_05: how this thing works. And maybe that's the answer at some point when we're getting issues with the service won't start. Like, go look at the Python file.
[33:51-33:54] SPEAKER_03: I think assuming we get through it all,
[33:54-33:54] UNKNOWN: this
[33:54-33:57] SPEAKER_03: works like jumping to the VM is
[33:57-33:57] UNKNOWN: the best way to do it.
[33:57-34:08] SPEAKER_03: It's the like we should have done that two weeks ago. We can do it right now. No, I think like I should have done it in a single work session two weeks ago. But I guess whisper X happened like last week.
[34:08-34:34] SPEAKER_05: Right. And we thought it was the answer. Sorry, because of the red hair. I don't even know. Oh, this is a transcription handler. Yeah. What is that? Think like job handlers type stuff. OK. If you say so, cursor. This is main by. I don't I really don't know. Oh, it's in transcription service.
[34:35-34:35] UNKNOWN: Yeah.
[34:36-34:42] SPEAKER_05: So this is basically. Yeah.
[34:42-34:42] UNKNOWN: It
[34:42-34:46] SPEAKER_05: all looks good. It's faster whisper instead of whisper X.
[34:46-34:53] SPEAKER_03: Yeah. Where's high? Oh, it's not claiming to a bill. I know.
[34:57-34:57] UNKNOWN: OK.
[35:00-35:12] SPEAKER_02: Cloud build. Yeah, well, it makes sense. This is just session transfer. Oh, that's the old.
[35:14-35:17] SPEAKER_05: So we're going to just test the whisper service.
[35:18-35:22] SPEAKER_03: Sure. I'm actually all the way good with that.
[35:22-35:23] SPEAKER_05: Yeah.
[35:23-35:28] SPEAKER_03: See if this thing gets it runs on GPU and gets an output. Right. I know what it should look like.
[35:43-35:48] SPEAKER_05: It's crazy that I've never seen it do that. Start session and it did just.
[35:49-35:59] SPEAKER_03: It was like ultra vibey, but it's all contained in that one transcription service. So we're about to go test literally all of it. Right.
[35:59-36:00] UNKNOWN: OK.
[36:56-37:03] SPEAKER_05: What is that? Start up the cluster and stuff because so you can see if there's any issues with the
[37:03-37:04] UNKNOWN: script.
[37:04-37:05] SPEAKER_05: From
[37:05-37:30] SPEAKER_03: the script. Yeah, this is if we were designing outside or planning outside things like GCS views, who knows, like it might try to push back to my file store.
[37:30-37:30] SPEAKER_05: I agree.
[37:34-37:38] SPEAKER_03: And we would have caught it like that is the value of all of this is we've been through that.
[37:39-37:39] UNKNOWN: And
[37:39-37:39] SPEAKER_03: now,
[37:39-37:39] UNKNOWN: you
[37:39-37:47] SPEAKER_03: know, if somebody tries to spin or if an AI tries to spin a file store like, fuck, that's expensive. Right. If we're doing a cluster, just use this other GCS views.
[37:47-37:47] UNKNOWN: We
[37:47-37:47] SPEAKER_03: know what that is now.
[37:48-37:51] SPEAKER_05: Yeah. I'd heard of it, but I had never really played with
[37:51-37:59] SPEAKER_03: it. It literally is like exactly what it sounds like. It takes a GCS bucket and fuses it onto whatever the file store. Yeah.
[37:59-38:00] SPEAKER_05: About file service.
[38:13-38:13] SPEAKER_02: It
[38:13-38:37] SPEAKER_05: is. Yeah, this is very helpful for me and my data data. It's working great this morning. I agree. It's super fast and working well.
[38:37-38:45] SPEAKER_03: It usually does pretty good in the mornings. Sometimes it's a little bit
[38:45-38:50] SPEAKER_05: weird. Maybe everybody's on Aloha Friday. Let's
[38:50-38:50] UNKNOWN: see
[38:50-39:01] SPEAKER_02: what you do this time.
[39:14-39:15] UNKNOWN: I
[39:15-39:35] SPEAKER_03: think I'm supposed to stop doing the Amazon thing. Really? From the cushion. Yeah. I think I was getting it for a couple of weeks and then straight up was thinking about like, I'm
[39:35-39:35] UNKNOWN: going to do a
[39:35-39:37] SPEAKER_03: run of these things.
[39:37-39:37] UNKNOWN: I
[39:37-39:52] SPEAKER_03: was getting, there's always this stuff available and then it was just gone for like three days in a row. Nothing available. There was a few that were like trash. I forget exactly the day it was, but it was literally like,
[39:53-39:53] UNKNOWN: do
[39:53-39:58] SPEAKER_03: you get it now? I'm bouncing back and forth in is I'm looking around.
[39:58-39:58] UNKNOWN: I
[39:58-41:00] SPEAKER_03: saw some jobs like go get something consistent basically. But like part -time. And that's actually what I'm bouncing back and forth from now. Is it like time to spruce up the old resume and start pushing it back out to like tech type jobs or get a part -time and focus on this? Right. Which I think there's some value there. There's obviously some value there. But yeah, I think I'm going to start looking around. There's one for the Muskogee nation that is like a wildlife thing and it's literally posted as it's only like 15 bucks an hour, but it's $20 a week or 20 hours a week. Right. Which would be like ideal. Perfect for also working on this and being able to help my parents and shit like that. Yeah. So I think I'm going to send that one out and see because it also like literally the day I was like, okay, I get it. I Google and that was like the second job in this list of a random job search. And not because I searched for anything like this.
[41:00-41:01] SPEAKER_05: Right. That's cool.
[41:02-41:09] SPEAKER_03: So we'll see. But I really think there's I'm also getting the like focus as much as we can on this shit right here.
[41:09-41:17] SPEAKER_05: Which I yeah, I mean you obviously do whatever you want, but I mean, I think there's definitely something to this.
[41:17-41:30] SPEAKER_03: I agree. Basically, the Amazon thing was enough. I could make enough money to continue to have my car and pay for all the stuff that I had to do to continue to work that job. Right.
[41:38-41:39] UNKNOWN: And
[41:39-41:43] SPEAKER_03: also like this wildlife thing. All outdoorsy and shit.
[41:43-41:44] SPEAKER_05: Yeah.
[42:01-42:16] SPEAKER_03: In the same list, there was this thing that's like, hey, we're a company coming to Oklahoma and need architects for our cloud too. So yeah, that's why I don't know either direction is like which one of these paths am I supposed to go to?
[42:16-42:31] SPEAKER_05: I work from home job. I think you could you would like it. Some people can't because you're like stuck sitting in the same place for a long time. But obviously the flip, they also pay 150 to 200 ,000 dollars a
[42:31-42:32] SPEAKER_00: year.
[42:39-42:40] SPEAKER_05: All of them.
[42:44-42:58] SPEAKER_03: So ultimately, I wouldn't know it when I see it. Or not. And it'll just be like here. This is obviously the thing.
[42:59-43:03] SPEAKER_05: Yeah, don't do it. Yeah. Don't do this. Been trying to give you the.
[43:21-43:23] SPEAKER_03: It was doing this yesterday.
[43:23-43:23] UNKNOWN: It
[43:23-43:30] SPEAKER_03: was queuing them. That's what that top one is. That's the one you just seen. And it's cute.
[43:31-43:32] SPEAKER_05: Yes, I was waiting on resources.
[43:34-43:34] UNKNOWN: Right.
[43:35-43:39] SPEAKER_03: But like, how long are you going to wait? I'll wait for like 20 minutes yesterday.
[43:48-43:48] SPEAKER_05: Never mind the spill.
[43:49-44:10] SPEAKER_03: Yeah. Yeah, one thing I did yesterday was. It's going to start there. One thing I did yesterday when it was doing that was let's start a local build and. See if it works. While we're waiting, if this thing breaks immediately, then at least we'll know that. And it did.
[44:20-44:21] SPEAKER_01: Syntax error.
[44:28-44:30] SPEAKER_05: Once it gets started, we'll go get coffee.
[44:30-44:31] SPEAKER_03: Yeah, that's a
[44:31-44:31] UNKNOWN: good
[44:31-44:31] SPEAKER_03: call.
[44:35-44:41] SPEAKER_05: This is actually going. Because my guess is it's going to take a little. But maybe not.
[44:41-44:48] SPEAKER_03: Yeah, it's not. Who knows this one, but the ones I saw yesterday, they're not as long, but they're certainly not.
[44:48-44:49] SPEAKER_05: Short.
[44:49-45:16] SPEAKER_03: Yeah. There's still a lot of shit going on. What was the other file that it may change to? In here? Yeah, like it's just got the bubble down at the bottom.
[45:18-45:25] SPEAKER_02: Just that. There's another
[45:25-45:25] SPEAKER_03: one.
[45:27-45:27] UNKNOWN: It
[45:27-45:29] SPEAKER_03: might have just done.
[45:29-45:30] SPEAKER_05: Yes, that same one.
[45:38-45:39] SPEAKER_03: Hey, bro, you want to
[45:39-45:40] SPEAKER_05: always use latest
[45:40-45:44] SPEAKER_03: scanning real quick and see if there's any more of these motherfuckers. We're just going to
[45:44-45:44] UNKNOWN: do
[45:44-46:37] SPEAKER_03: this. Keep doing it. We really got to get rid of the. Like in between people that don't work because this can really be a problem in their hands. Oh, those are the people that are going to produce that document, then sell it like hell in a meeting. It's great. And then be like, all right, well, there's my job. Yeah, walk away.
[46:37-46:38] SPEAKER_05: It's not actually working.
[46:44-46:50] SPEAKER_03: And you'll bet like that's where we're. Oh, gosh, that's where it's all those people.
[46:50-47:13] SPEAKER_05: Yeah. Well, I mean, I think business and evaluations have to change, right? Because people can already like that. It's not a problem. It's an opportunity. Right. That's what people is already like that. That's what kind of what we've been talking about. That's another bit of a blow. Yeah.
[47:13-47:13] UNKNOWN: But
[47:13-47:25] SPEAKER_03: that is going to be represented as bloat for these companies that are already huge that can't necessarily just come in with a pickaxe and wipe them all out. Right. And so opportunity. Right.
[47:25-47:25] UNKNOWN: Just
[47:25-47:44] SPEAKER_05: be young. But like nimble and like actually effective with a small, effective team and actually moving market and actually using AI to its fullest potential, but knowing its weaknesses and we have these tools that make it actually be effective and not pretend effective. That's
[47:44-47:44] UNKNOWN: the.
[47:44-47:46] SPEAKER_05: There's something. Yeah. That's something to what we're doing.
[47:46-47:50] SPEAKER_03: Yep. It looks like this is working now.
[47:50-47:50] SPEAKER_05: Yeah.
[48:47-49:35] UNKNOWN: You. Yeah.
[49:35-49:36] SPEAKER_03: Yeah.
[50:09-52:16] UNKNOWN: Yeah. We really need this. What we have to. Yeah. Yeah. Yeah. Yeah. Right. Whatever
[52:16-52:19] SPEAKER_05: we're doing. Yeah. Yeah. To actually make money.
[52:19-52:19] UNKNOWN: For
[52:19-52:33] SPEAKER_03: sure. Like the pivot to that is like we see it on the horizon. We just need to get there quickly. Right. And it's like there's a funding offer or some shit like that. Yeah. That kind
[52:33-52:33] UNKNOWN: of.
[52:40-52:40] SPEAKER_03: Yeah.
[52:45-52:45] UNKNOWN: And
[52:45-52:46] SPEAKER_05: that's that's always enough.
[52:46-52:46] UNKNOWN: I
[52:46-52:46] SPEAKER_05: got a
[52:46-52:46] UNKNOWN: ton
[52:46-52:58] SPEAKER_05: of vacation. This is like even if it's one or two days at a time or basically for five weeks in a row, I'm going to do a four day weekend. I'm going to take two days. I'm going
[52:58-52:58] UNKNOWN: to
[52:58-52:59] SPEAKER_05: take Thursday and Friday. Yeah. And
[52:59-52:59] UNKNOWN: then for
[52:59-53:03] SPEAKER_05: like a few weeks in a row, we just do these four set four day grind sessions.
[53:03-53:03] UNKNOWN: Right.
[53:05-53:26] SPEAKER_03: But that's all. And when we get there, I think right now this is like being in the game for whenever whatever it is pops up. I don't know what you're doing. Successfully did the container build. So it's going to work on.
[53:28-53:29] SPEAKER_05: Transcription job. There
[53:29-53:34] UNKNOWN: we go. So
[53:34-53:42] SPEAKER_05: we're just going to do the transcription service. Yeah. Get it. And I think even like
[53:42-53:43] SPEAKER_03: to get to an output.
[53:43-53:43] UNKNOWN: I
[53:43-53:54] SPEAKER_03: think to the point of it like to the job, write the job controller up or don't like do it yourself and just build it as though that's the only service that exists. Yes, it is.
[54:00-54:07] SPEAKER_05: It is not. Definitely isn't.
[54:23-54:23] SPEAKER_01: I
[54:23-54:24] SPEAKER_03: think so.
[54:24-54:24] UNKNOWN: I
[54:24-54:32] SPEAKER_03: think it should be exactly the same because the job controller is what does all like the namespace and the service accounts and all that stuff.
[54:33-54:33] UNKNOWN: Yeah.
[54:34-54:46] SPEAKER_05: It may need new service accounts. It will in the job controller. Right. Yeah. Well, I'm saying we're this part of the startup script is doing the job controller. Right. No,
[54:46-54:52] SPEAKER_03: it's got you've got the job to deploy job controller is the other script. I think
[54:52-54:58] SPEAKER_05: that this does. Service accounts to maybe.
[55:02-55:13] SPEAKER_03: Check the requisite way. Create credentials. That's just to be able to like run. So right
[55:13-55:33] SPEAKER_05: here. Yeah, it does the service running in the service accounts. Yeah. And like ties the service accounts. It does the bind to the job controller to the like. So no, I'm saying like, oh, it's workload identity bindings too. So right now there's but there is a transcription service service account. So this fine for now.
[55:34-55:34] UNKNOWN: Because
[55:34-55:37] SPEAKER_05: we don't have that. We got rid of those other two. Right. Yeah. So this
[55:37-55:38] SPEAKER_03: being
[55:38-55:39] SPEAKER_05: the one that we
[55:39-55:40] SPEAKER_03: want to test that work.
[55:40-55:41] SPEAKER_05: It does
[55:41-55:42] SPEAKER_03: work. Yeah. It should.
[55:43-55:43] SPEAKER_00: Yeah.
[55:47-56:01] SPEAKER_03: And you didn't have to point it at that deploy script. So it knows it's there. So it should have looked at it and named things the right way. But it didn't.
[56:01-56:01] UNKNOWN: I'll
[56:01-56:38] SPEAKER_03: tell you that I didn't look at it shit before. Probably not. Yeah, I'm interested to see the Grop4 stuff in like two weeks. Right. Everybody's kind of absorbed it. The guy I watched said people were already flooding the API. So people are using it. Right. And we'll just see like what people think. Because I my prediction is like, yep, it's a little bit better. It costs three thousand dollars. No, not
[56:38-56:44] SPEAKER_05: not not good enough. Or if anything, if it's really good at coding or whatever, like I'm
[56:44-56:44] UNKNOWN: going
[56:44-56:53] SPEAKER_05: to put it right there. Exactly. Wait for Kerscher to do it and I'm going to put it right there and it'll be our coding tool. But for my day to day type stuff and
[56:53-56:53] UNKNOWN: you
[56:53-57:00] SPEAKER_05: know, well, I'm getting ready to look at it right now. I really didn't
[57:00-57:02] SPEAKER_03: expect that to be there yet.
[57:02-57:02] SPEAKER_05: I'm going
[57:02-57:02] UNKNOWN: to
[57:02-57:07] SPEAKER_05: wait for this session to end. But maybe I'm not going to wait for the session.
[57:07-57:15] SPEAKER_03: Yeah, who knows how much it costs. And I imagine the rate limits message you get a lot.
[57:17-57:17] UNKNOWN: But
[57:17-57:19] SPEAKER_03: yeah, I really didn't expect it to be there yet.
[57:24-57:27] SPEAKER_05: Do you see it? Not not mine.
[57:27-57:29] SPEAKER_02: What the heck?
[57:32-57:35] SPEAKER_05: I need to do an update or something. I've
[57:35-57:43] SPEAKER_03: actually got the little bubble for an update. That's weird.
[57:43-57:45] SPEAKER_05: Not available for me.
[57:46-57:51] SPEAKER_03: It might be worth I guess once it's done. Do an update. Yeah.
[58:10-58:11] SPEAKER_00: Okay.
[58:32-58:33] UNKNOWN: Okay.
[59:01-59:04] SPEAKER_01: I don't know. It's weird.
[59:06-59:18] SPEAKER_05: I'll try to do an update. I don't know that it matters that much. Yeah. I mean it does if it's great. It's much better. Right. But I don't know specifically to do it today right now.
[59:20-59:29] SPEAKER_03: If I can be forgiven for not speaking carefully, it's not. Right. There you go. It's not great or so much better or any of
[59:29-59:34] SPEAKER_05: that. I
[59:34-59:34] UNKNOWN: mean
[59:34-59:36] SPEAKER_05: fundamentally it's the same technology.
[59:36-59:53] SPEAKER_03: It's an LLM and yeah you ran it on a hundred thousand H100s or whatever. Good job bro. It's a little better. Maybe. It's a little better maybe. Right. It's so much a little better it's unnoticeable in practice. Right.
[59:57-60:06] SPEAKER_05: I mean if you can I bet if you compared it to chat you'd be like the first chat GBT. Yeah three. Right. Yeah. It's like so
[60:06-60:37] SPEAKER_03: much better. Right. But those are I don't even know if you can use that one anymore like without going in the API. Like the free level it's probably noticeably better. In fact I'm certain it is than the current low end free tier. Right. Which would be like GBT 4 .1 or something. And I just say that because in auto mode I detect an annoying thing early enough and move away from it. I don't actually know. Whatever it
[60:37-60:37] UNKNOWN: is. I don't actually
[60:37-60:46] SPEAKER_03: know that it's doing worse. It just seems like I get to a breaking point and go oh well it's because of that I'm going to go to the big model.
[60:46-60:50] SPEAKER_05: Yeah. And generally it doesn't break his office.
[60:50-60:50] SPEAKER_03: Right.
[60:50-60:53] SPEAKER_05: But it's much more expensive for somebody. Yeah. Like
[60:53-60:53] UNKNOWN: not
[60:53-60:54] SPEAKER_05: it.
[60:54-61:03] SPEAKER_03: Yeah. And ultimately Elon's out there talking that shit but like 3 .5 can do most of what most people are using it for.
[61:03-61:15] SPEAKER_05: Right. I agree. Only this stuff. Right. Like logic, coding, math, physics, whatever. Those types of things. Unless you're using it for that then just use the standard old free version of whatever one makes you
[61:15-61:15] UNKNOWN: happy. If you
[61:15-61:16] SPEAKER_05: gave 3
[61:16-61:26] SPEAKER_03: .5 tools. Yeah. It could do a lot. I agree. I don't think you should try to use 3 .5 because 4 exists. Right. I'm also like all these other ones. Grok 3 is free.
[61:27-61:27] UNKNOWN: Like
[61:27-61:28] SPEAKER_03: it is.
[61:28-61:53] SPEAKER_05: Right. And I will use Grok 4 when it's free. Yeah. Unless it's like man you have like stop using everything else. Right. But we would have already heard about it. Probably. If it was like cursive. Like I feel like I don't know I don't feel you were doing it and it was my fault. But if I feel like I still cursor doesn't get its props or maybe they do. No.
[61:53-61:53] UNKNOWN: I
[61:53-62:02] SPEAKER_03: mean they do for the people that have used it. But it's I mean it's exactly the problem you've identified is until you sit down and use it because I was like a week ahead of you on it. I
[62:02-62:02] UNKNOWN: was
[62:02-62:04] SPEAKER_03: talking about it for a while but I never did it.
[62:05-62:06] UNKNOWN: And
[62:06-62:07] SPEAKER_03: you just have
[62:07-62:10] SPEAKER_05: to see it do this thing. Like an AI powered IDE is the answer.
[62:11-62:11] UNKNOWN: Like
[62:11-62:14] SPEAKER_05: you I'm never going back. Right. Like you can't like it. Yeah.
[62:14-62:14] UNKNOWN: And
[62:14-62:14] SPEAKER_05: they
[62:14-62:17] SPEAKER_03: have to get rid of it for me to not use it. Right. That's the way.
[62:17-62:26] SPEAKER_05: Right. So if it's like that like no it is a big new standard. Right. You have to use it. Unless I hear somebody like you saying that. Yeah.
[62:26-62:38] SPEAKER_03: It has to be so much better than Claude 4. Right. Because it's fundamentally it's not a new tool. It's not cursor. Because cursor is just using those other AI's. So he didn't build a tool.
[62:38-62:44] SPEAKER_05: It's really that. Yeah exactly. At some point I'm going to I am going to test it. I'm
[62:44-62:44] UNKNOWN: going to put
[62:44-62:45] SPEAKER_05: it right there and see how it goes.
[62:45-62:46] SPEAKER_03: Yeah I'm going to use it today.
[62:47-62:47] UNKNOWN: But
[62:47-62:54] SPEAKER_03: if it if I use it once and they go hey this actually isn't available I'm not going to be like oh fuck now I can't work today. I'm going
[62:54-62:54] UNKNOWN: to go
[62:54-63:08] SPEAKER_03: all right I'll pick one of the other two. And it'll be fine. And that's what his hundred thousand H100's got. I don't know how
[63:08-63:15] SPEAKER_05: they're freaking making money. They're not. I don't. Because that cluster. And I don't know what's going on.
[63:15-63:15] UNKNOWN: It's
[63:15-63:15] SPEAKER_05: super
[63:15-63:40] SPEAKER_03: expensive. They're not. That's why it's more expensive than all the rest of them. And they have to. And they're probably they're still going to lose money at that price is my guess. Yeah so it's going to deploy the job controller. Is the job controller like good? It looked at it. OK.
[63:40-63:42] SPEAKER_05: That it for sure looked at
[63:42-63:42] UNKNOWN: it.
[63:42-63:42] SPEAKER_05: OK.
[63:45-63:47] SPEAKER_03: Yeah. Well. Yeah
[63:47-63:47] UNKNOWN: I
[63:47-64:01] SPEAKER_03: don't know. I think it was all inside the transcription service. You can go look at the commit. And see what files have been changed. I guess that doesn't mean it didn't look at it.
[64:01-64:02] SPEAKER_04: Right.
[64:05-64:10] SPEAKER_05: Well it's not freaking running. Maybe it is running. And it's just
[64:10-64:10] UNKNOWN: not what it is. Yeah
[64:10-64:10] SPEAKER_05: that one takes a little
[64:10-64:56] SPEAKER_03: while too. If you move it to the background you can typically see what's going on. Yeah. Yes. 745.
[64:57-64:59] SPEAKER_05: Yeah I have a meeting.
[65:00-65:01] UNKNOWN: OK.
[65:05-65:39] SPEAKER_05: And I don't know what it is but at least from the top of my mind it's done. It's not done. It's like. I get it. It's stuff that's like. What I would wrap me personally. In most of these projects that we're working on. It's like I don't need to talk about it anymore. I need that 30 minutes to work on it. Right. In fact 30 minutes is not long enough really. Two hours for a good context wouldn't have like. Yeah. Head down let me sit down. But I think that's what I think what you would find frustrating about the. Yeah I was going to say you don't
[65:39-65:39] SPEAKER_03: have
[65:39-65:39] UNKNOWN: to
[65:39-65:42] SPEAKER_03: tell me. You don't have to pull back from calling it done for me. It's
[65:42-65:51] SPEAKER_05: like there's a bunch of status update meetings. It's I think. Hey what's the status of this thing. It's the same as it was last time we talked about it because nobody's work everybody's busy.
[65:51-66:03] SPEAKER_03: I think the. If I had to like kind of try to encapsulate it all the people that don't do anything still have to be busy during the day. So they keep you busy and then after the day is over.
[66:03-66:03] UNKNOWN: And stuff
[66:03-66:04] SPEAKER_03: like that. I got to do all
[66:04-66:05] SPEAKER_05: the
[66:05-66:05] SPEAKER_03: work. Right.
[66:05-66:12] SPEAKER_05: Exactly. That I'm pretty sure is it. Right. And so it's this 30 minute meeting where we're going to talk about hey what's
[66:12-66:12] UNKNOWN: the
[66:12-66:18] SPEAKER_05: status of the thing where we're at with this. Like well I haven't nobody's had time to work it's not just me. Like
[66:18-66:37] SPEAKER_03: it's the same thing as like a construction site and the lazy people definitely are the smokers. Right. Like not necessarily the smokers are lazy. But the lazy ones definitely take the smoke breaks. Right. They got to look busy and they're like oh I was just on smoke break. I wasn't standing in a corner for 20 minutes. Yeah.
[66:37-66:37] UNKNOWN: And
[66:37-66:38] SPEAKER_03: so. And same top to
[66:38-66:42] SPEAKER_05: bottom. If I had more control of my time.
[66:42-66:42] SPEAKER_03: Yeah.
[66:43-67:15] SPEAKER_05: Of just being able to like leave me alone. I will let you know when I'm ready. Don't schedule me. Don't schedule me a meeting. But you can't. You can't do that. Culturally you can't be like literally leave me. Like I just I'm a developer. Whatever. But if you want me to put get this project done don't reach out. I will reach out to you. I promise I'm going to be efficient. I'm not going to be screwing up. Like just leave me alone. I will come back tomorrow or the next day and tell you. How would I get you to do my work. Right. He's like whoa. He's asking me questions about it. And I don't know the answer.
[67:16-67:16] UNKNOWN: Like
[67:16-67:36] SPEAKER_05: and so it's just like so you have to have these. There's these layers of hierarchy that are managing stuff. And the way they manage it and go hey what's the status of the thing. Here's we have these plans. Well what is it going to be done. I. You're going to be the fuck alone for like a day. Right. But you can't say that. It's that.
[67:50-67:55] SPEAKER_03: You're watching a show. What is that music. You're watching Netflix on the treadmill.
[68:01-68:02] SPEAKER_02: It's not exactly pump up music.
[68:02-68:14] SPEAKER_05: No. Listening for messages. So apparently the job controller is still ready. Yes. Doing stuff.
[68:14-68:14] UNKNOWN: The
[68:14-68:17] SPEAKER_05: question is is it going to figure properly. It
[68:17-68:17] UNKNOWN: would
[68:17-68:24] SPEAKER_05: actually work. And pull this message from the system and start a job. I think it should. We shall see.
[68:47-68:49] SPEAKER_02: It's. It's.
[68:49-68:49] SPEAKER_05: He's thinking
[68:49-68:50] SPEAKER_02: about it. OK.
[68:52-68:53] SPEAKER_05: We're still running this command.
[68:53-68:55] SPEAKER_03: Yeah you might have to.
[68:56-68:56] UNKNOWN: Break
[68:56-69:04] SPEAKER_03: it out. It's been doing that for the last few days too. Like it'll go I'm going
[69:04-69:04] UNKNOWN: to
[69:04-69:05] SPEAKER_03: watch the logs. And
[69:05-69:05] UNKNOWN: then
[69:05-69:20] SPEAKER_03: it's watching them. And it's like I'm never going to stop though. So you have to do it. In theory that should work.
[69:20-69:23] SPEAKER_05: The. So it's copying it back into there.
[69:23-69:28] SPEAKER_03: It's just going to upload a new. Like it's going to take that. Oh yeah. Yeah it's going to copy it.
[69:28-69:34] SPEAKER_05: Yeah it's just but it's just it adds new ones. Whatever this test the whole pipeline is fine.
[69:34-69:37] SPEAKER_03: And that function is there. I'm pretty sure
[69:37-69:55] SPEAKER_05: it's working right. I guess the only thing that I would say is remove it and then. You can then put one in in there. Or copy upload remove something like that remove the old one so we don't just keep getting. You know in there but it's not that I
[69:55-69:55] SPEAKER_00: agree.
[70:00-70:18] SPEAKER_05: There is a job that is trying to do. So apparently. It probably needs to be updated for the other two types of jobs. For sure. So there's a lot more work for those two that we expose. Now we're
[70:18-70:18] UNKNOWN: going
[70:18-70:18] SPEAKER_05: to put all that.
[70:19-70:31] SPEAKER_03: It knows how to do it and. It might take it a little bit longer than it took it to refactor transcription but not a whole lot. Especially goes full
[70:31-70:33] SPEAKER_05: retarget. Yeah.
[70:33-70:33] UNKNOWN: You
[70:33-70:46] SPEAKER_05: put rock for it's going to knock it all out. Exactly. It's going to be done. Two miscellaneous errors. I literally have never seen that. Oh that's maybe this network. No she's still streaming in there. I've never seen that.
[70:53-70:58] SPEAKER_03: Do you remember when we were supposed to go to Mars.
[70:59-70:59] UNKNOWN: I
[70:59-70:59] SPEAKER_05: don't.
[71:00-71:00] UNKNOWN: I
[71:00-71:04] SPEAKER_05: think it was like 2026 like the next transfer window was in 2026. I'm talking about the
[71:04-71:29] SPEAKER_03: first claim that he made. No I don't. It was like 20 or something. I'm pretty sure in like 19 he said next year or some shit. And he's been saying it's like Netanyahu with Iran getting a fucking new bro. But I think that I want to know the first time he said there five years away. 1992 and he said it every year since. That
[71:29-71:39] SPEAKER_05: doesn't surprise me. Still using the old container. Yeah we didn't look at the job control. There you go.
[71:40-71:57] SPEAKER_03: It should not be doing that. The container image should just be tagged latest. We named it whisper service. We're
[71:57-71:57] UNKNOWN: going to
[71:57-72:00] SPEAKER_03: purge that Pub Sub message while we're
[72:00-72:05] SPEAKER_05: here. Yeah I don't even want to hit run on this deleting the job because my guess is there's like four of them now.
[72:06-72:07] UNKNOWN: Exactly.
[72:10-72:23] SPEAKER_05: Yeah this one's pending now. And it's going to fail. Yeah. And it's been up a new one. You got it. Yeah that one's purged. Okay. Deleting the job.
[72:24-72:24] UNKNOWN: Hopefully
[72:24-72:36] SPEAKER_05: we get six more. It's deleting the job controller as well. So the cluster's just up with no jobs. Yeah. This emergency
[72:36-72:41] SPEAKER_03: shutdown has 53 unhacked messages.
[72:42-72:46] SPEAKER_05: Really. In the
[72:46-72:46] SPEAKER_03: last
[72:46-72:52] SPEAKER_05: hour. What's the cause for it can't be unless somebody.
[72:52-73:01] SPEAKER_03: It's got to be running wrong. Yes. All day. I've never seen it have any and I've looked. That's not good.
[73:01-73:05] SPEAKER_05: Does it really think that there's a hundred dollars worth of services. It does
[73:05-73:08] SPEAKER_03: and it has since I think the day we made
[73:08-73:12] SPEAKER_05: it. Oh yeah. So we need to go back and look at that then.
[73:13-73:56] SPEAKER_03: Yeah. I'm going to purge these. Yeah I think so. Like probably the day that it should have been going off like it's probably that compute engine day. Yeah maybe. So it may have worked properly. It just never did anything. There's nothing. Maybe there's no listener configured. Maybe. Yeah that function and everything is from like our very first iteration of everything. Yeah. Which was on cloud run. So who knows what it's even trying to do. It'd be great if Google would provide like a red button that you could just. I'm not going to
[73:56-73:57] SPEAKER_05: do that.
[73:57-73:57] UNKNOWN: Stop
[73:57-74:03] SPEAKER_05: everything. I'm going to stop you from spending money. No we're not doing that.
[74:08-74:31] SPEAKER_03: Because then what would the person that has to spend three months telling you OK you don't have to pay due for a job like because it's not so stupid. Well. His whisper service later. Is that a new thing. I get a new.
[74:34-74:37] SPEAKER_05: That's what went to cloud build this morning.
[74:40-74:41] SPEAKER_03: Yeah.
[74:44-75:04] SPEAKER_05: So we've got a whisper service now which says our local files great for the deployed container has wrong image likely a doctor caching she let me force a rebuild the job. OK. You know I could build. It's going to just go through it quickly. I imagine we build locally.
[75:16-75:30] SPEAKER_03: I mean it's fine. It is going quick. The job controller is not crazy. But. That's the transcription service. Now it's just.
[75:31-75:31] SPEAKER_02: Yeah.
[75:33-75:50] SPEAKER_03: So it is looking at the transcription service image. You always delete that repository. Transcription service like the old one. Sure. Because it's like whisper service is the one that is pushing to.
[75:50-75:55] SPEAKER_05: This one just went to transcription service repo slash job controller.
[75:56-76:08] SPEAKER_03: Yeah. So we've got job controller transcription service and whisper service. Yes. They're all inside the trace. Delete the. That one. There's some big dogs in there.
[76:08-76:08] UNKNOWN: So
[76:08-76:15] SPEAKER_03: that would be good. We are going to need it to update the reference sheet.
[76:59-77:00] UNKNOWN: Okay.
[77:23-77:25] SPEAKER_02: That's true.
[77:46-77:50] SPEAKER_03: It needs to do that stuff. Locally it's
[77:50-78:00] SPEAKER_05: just. Yeah. And not just like it only has config maps like in the cluster. I don't know how it gets those config maps. In there. Which
[78:00-78:00] UNKNOWN: programs do
[78:00-78:01] SPEAKER_00: you
[78:01-78:01] UNKNOWN: think it would do?
[78:15-78:20] SPEAKER_03: There's a processing config old.
[79:12-79:22] SPEAKER_05: That makes sense to me. Yeah, I agree. And that you should be able to, it should be in that deployment. Right. Um, Yamo. Yep. That when you apply it,
[79:23-79:23] UNKNOWN: it
[79:23-79:23] SPEAKER_05: should apply all this,
[79:24-79:24] UNKNOWN: the
[79:24-79:29] SPEAKER_05: right stuff. Exactly. Like, yeah, you had to go update it, but it's gonna be the same way next time. Exactly. You
[79:29-79:29] UNKNOWN: might
[79:29-79:29] SPEAKER_05: have
[79:29-79:29] UNKNOWN: to
[79:29-79:30] SPEAKER_05: run
[79:30-79:30] SPEAKER_03: that manual update
[79:30-79:47] SPEAKER_05: or fucking fix the actual problem. I guess this is still green. Because it's behind. Yep. I'm gonna wait for you to wait for this to update.
[79:47-79:48] SPEAKER_01: That makes sense.
[79:50-79:54] SPEAKER_05: Maybe not. Maybe not. It goes pretty fast. It has gone pretty fast sometimes.
[79:55-79:55] SPEAKER_03: Yeah,
[79:55-79:55] UNKNOWN: that
[79:55-79:58] SPEAKER_03: is a small service.
[80:26-80:27] SPEAKER_05: What do
[80:27-80:29] UNKNOWN: you,
[80:29-80:37] SPEAKER_05: architectural improvements above? Oh, it wants to move the Kubernetes, remove this transcription job, Yamo.
[80:40-80:40] SPEAKER_02: Yeah.
[80:40-80:41] SPEAKER_05: So.
[80:45-81:18] SPEAKER_03: Hold on. Yeah, as long as there's a whisper job Yamo somewhere. Now, like that it's replaced it with, or just ask it what the hell that means. I may have described it in the prompt above that, but,
[81:19-81:19] UNKNOWN: or
[81:19-81:20] SPEAKER_03: in the response above. Maybe.
[81:42-81:58] SPEAKER_02: Why are you doing this? Like it's fine. So there's a job controller deployment Yamo and a transcription job Yamo.
[82:12-82:13] UNKNOWN: Yeah,
[82:13-82:22] SPEAKER_05: so there are two Yamo files. Change the template number one, but the deployment uses template number two.
[82:26-82:35] SPEAKER_02: Or it was using that. And so you updated it.
[82:39-82:51] SPEAKER_05: So basically it's saying like part of the script now is going to say create the config maps on the fly from the current. Go look at Kubernetes file transcription job and create the config map and then apply it.
[82:51-82:52] SPEAKER_02: And
[82:52-82:57] SPEAKER_05: it will always do that. That's my understanding.
[83:11-83:15] UNKNOWN: Yeah. Oh.
[83:17-83:18] SPEAKER_02: I think
[83:18-83:25] SPEAKER_03: safe. Option one. Well, safest meaning what? Like it's not going to break the thing that's already broken.
[83:25-83:26] SPEAKER_05: Maybe.
[83:28-83:30] SPEAKER_03: Like minimal changes to existing structure.
[83:31-83:32] SPEAKER_05: Which one do you recommend?
[83:32-83:40] SPEAKER_03: Right. I think option two probably makes the most sense. That's, oh I was getting. Which was the first one that was listed.
[83:40-83:55] SPEAKER_05: Yeah. That's what I thought it was. It was option one. That when I said,
[83:55-83:55] UNKNOWN: hey,
[83:55-84:02] SPEAKER_05: that makes sense. The auto sync. Yeah, like it goes and looks and builds the job. But the what do
[84:02-84:02] UNKNOWN: you
[84:02-84:06] SPEAKER_05: call it? Not the template. Maybe this. Yeah, the job template. You can fake map.
[84:07-84:07] UNKNOWN: Yeah.
[84:09-84:14] SPEAKER_05: Oh, well, I guess you're doing it. Just fine.
[84:17-84:18] UNKNOWN: Yeah.
[84:28-84:30] SPEAKER_05: So we're going to run that script again.
[84:35-84:37] SPEAKER_03: Find out if it'll work.
[84:39-84:40] SPEAKER_05: Guess you can do a dry run.
[84:49-84:50] UNKNOWN: That's cool.
[85:05-85:06] SPEAKER_05: Maybe we'll get a transcript.
[85:15-85:21] SPEAKER_03: We just edited the job controller. So it's good.
[85:36-85:38] SPEAKER_05: Not there yet.
[85:38-85:39] SPEAKER_00: Yeah.
[85:42-85:55] SPEAKER_05: Now. What's
[85:55-86:00] SPEAKER_03: going on? Getting the loading screen and the music stuff.
[86:02-86:07] SPEAKER_05: Theoretically shouldn't impact this at all. Yeah. Because it's up there.
[86:07-86:09] SPEAKER_03: It's just our ability to see it.
[86:09-86:10] SPEAKER_05: Right.
[86:14-86:15] UNKNOWN: That's true.
[86:16-86:16] SPEAKER_01: Clock still works.
[86:47-86:48] SPEAKER_03: That's standard. We know
[86:48-86:48] UNKNOWN: it
[86:48-86:49] SPEAKER_03: takes a lot of fun.
[87:02-87:05] SPEAKER_05: In the big scheme of things, I almost don't care how fast the service
[87:05-87:06] SPEAKER_02: is. Yeah.
[87:07-87:09] SPEAKER_05: Even if every job takes this long.
[87:12-87:13] UNKNOWN: Exactly.
[87:17-87:25] SPEAKER_05: I would prefer not. But we can worry about tuning later.
[87:26-87:52] SPEAKER_03: Yeah. And even, I mean, we're going to get an audio file at the end of a session of work or meeting or whatever. Right. So we're not going to immediately want to go and start working with that transcript. Even if it's like, if it takes this long and we met at research and we uploaded it there, it'd be ready for us if we wanted to work on a go. I agree.
[87:53-87:57] SPEAKER_05: Yeah, we're talking computer time and annoying like 21st century. It's annoying sitting here
[87:57-88:01] SPEAKER_03: because we ultimately work for two hours and end up sitting for like half of that time. But
[88:01-88:04] SPEAKER_05: if you upload it like right at the end of session,
[88:05-88:05] UNKNOWN: then.
[88:05-88:17] SPEAKER_03: And we want it. I mean, maybe I would want it to work on the next session. Like I want this one to work on the next session today. Right. But that means, okay, go make a coffee. And it wasn't
[88:17-88:17] SPEAKER_05: that
[88:17-88:17] SPEAKER_03: long.
[88:19-88:19] UNKNOWN: Yeah.
[88:19-88:35] SPEAKER_03: Go make a coffee and see if it's done when you get back because it probably will. Especially once it's like we don't actually have to monitor it. It's like deploy script, deploy job controller upload and I'm running.
[88:35-88:38] SPEAKER_05: Right. And it hasn't exited
[88:38-88:38] SPEAKER_03: yet.
[88:41-88:41] SPEAKER_05: Wow.
[88:44-88:57] SPEAKER_03: It's trying to load the model. It just doesn't want to show me the logs.
[89:03-89:07] SPEAKER_05: Yeah, this is further along than we've gotten in several days.
[89:08-89:13] SPEAKER_03: Yeah, I've seen loading whisper model before. Oh, there it is. I'm going to go
[89:13-89:15] SPEAKER_05: clear the freaking.
[89:16-89:17] SPEAKER_03: Hope so. Cue.
[89:21-89:22] UNKNOWN: Yep.
[89:23-89:30] SPEAKER_03: Fuser mount. That's the GCS few thing.
[89:33-89:34] UNKNOWN: That's not.
[89:34-89:51] SPEAKER_03: Completely destroying us. I can believe that. We weren't using faster whisper before. So we may have some stuff.
[89:51-89:51] SPEAKER_05: I agree.
[89:55-89:56] SPEAKER_02: Why
[89:56-89:57] SPEAKER_03: is the guitar?
[89:57-89:57] UNKNOWN: Oh,
[89:57-90:00] SPEAKER_02: that's
[90:00-90:00] UNKNOWN: fine.
[90:06-90:10] SPEAKER_05: I'm going to delete. I guess is there's several of them. There may be. Already.
[90:12-90:12] SPEAKER_00: Oh,
[90:12-90:13] SPEAKER_05: maybe not.
[90:14-90:18] SPEAKER_03: I think it's like every some number of minutes it sends it again.
[90:19-90:29] SPEAKER_05: Well, definitely we purged that but I think even the cluster. Oh. Tries to restart this the same container for a same job. Once it realizes it fails.
[90:29-90:29] SPEAKER_03: Yeah,
[90:29-90:35] SPEAKER_05: it's not doing it. I'll leave it there until I see a new one. But because it may want to look into
[90:35-90:37] SPEAKER_03: it. Right. Yes. Good point.
[90:38-90:48] SPEAKER_05: It just needs to be gone before we try to do another one because it's holding our one freaking GPU. Right. It's still a little mini computer. Exactly. It's just not doing anything.
[90:50-90:51] SPEAKER_03: This is our bill.
[90:59-91:06] SPEAKER_05: And I'm going to go to the stuff from here. Oh,
[91:06-91:06] UNKNOWN: yeah.
[91:06-91:22] SPEAKER_05: Oh, you're fine. Oh, it likes copying them. It's fine. It's fine. It doesn't
[91:22-91:22] UNKNOWN: matter.
[91:24-91:26] SPEAKER_05: So we have a cloud build bucket now.
[91:31-91:38] SPEAKER_03: Buckets are super cheap. I'm not concerned about it, but it's not pushing them to the registry.
[91:39-91:41] SPEAKER_05: It may just use cloud build.
[91:41-91:41] UNKNOWN: I
[91:41-91:50] SPEAKER_05: use buckets as a or that's where it's got a bunch of tar balls in it. I don't
[91:50-91:50] UNKNOWN: know. I
[91:50-91:55] SPEAKER_05: don't know how it works. I've literally never used it. Yesterday was my first day.
[91:59-92:05] SPEAKER_03: So we'll see when that one finishes because I mean obviously did push it to artifact registry because there's a list for service director. For sure.
[92:05-92:08] SPEAKER_05: So it uses the bucket for some reason.
[92:08-92:11] SPEAKER_03: Yeah. And there's a bunch in it. I don't know if you looked at it.
[92:11-92:11] UNKNOWN: I
[92:11-92:12] SPEAKER_03: did.
[92:12-92:12] UNKNOWN: Yeah.
[92:27-92:28] SPEAKER_05: You know what?
[92:29-92:29] UNKNOWN: I
[92:29-92:38] SPEAKER_05: just had the thought and it's a good one. It is I'm going to go into the double work mode right now.
[92:41-92:41] UNKNOWN: Just
[92:41-92:44] SPEAKER_05: just go in. Yeah, it's like basically put
[92:44-92:48] SPEAKER_03: maybe not all the way to the extreme level. Yeah, but if you got free time, then
[92:48-92:55] SPEAKER_05: minimize my like, hey, if you need me to do something, tell me. Yeah. Otherwise, I'm going to be working on this stuff over here.
[92:55-92:57] SPEAKER_03: Yeah, it's a balancing act,
[92:57-92:57] UNKNOWN: right?
[92:57-93:11] SPEAKER_03: Because it's good to be valuable, especially in layoff times. You know, also you get too valuable and you're not willing to move to California. You're just going to get more work and not more pay. Right. Exactly. It's a balancing act of like,
[93:11-93:11] UNKNOWN: well,
[93:11-93:16] SPEAKER_03: don't get lay offable, but don't work yourself to
[93:16-93:17] SPEAKER_05: death on their back. And
[93:17-93:17] UNKNOWN: I
[93:17-93:41] SPEAKER_05: think the secret to that and I have just not discussed it with you. It is job selections. Like it's like the things that I'm working on, like because people try to give me BS tasks all the time. Like you have been the guy that was like taking a look. Yeah, like like I'm only going to work on things that are high priority to my director. And if he doesn't want me to work on it, if he hasn't asked me if it's just some look, right? I
[93:41-93:41] UNKNOWN: got
[93:41-93:48] SPEAKER_05: other shit. I'm not doing this stuff. Yeah, no. What have you been doing? I'm doing this. That's what I'm working on. And these are
[93:48-93:48] UNKNOWN: high
[93:48-93:55] SPEAKER_05: priority. Right. And it's not more. It's not a higher priority than this and just protect my time and just say, hey, I'm working on these things.
[93:55-94:04] SPEAKER_03: Yeah. So AI your work, get your work done in half the time and be able to apply yourself in other places.
[94:04-94:06] SPEAKER_05: Yeah, I'm just going to start doing that now.
[94:10-94:14] SPEAKER_03: That'd be good. We need to
[94:14-94:14] UNKNOWN: start
[94:14-94:19] SPEAKER_03: probably branching. Yeah. Especially if we start doing that.
[94:19-94:19] UNKNOWN: I
[94:19-94:19] SPEAKER_03: literally had
[94:19-94:43] SPEAKER_05: the same thought. I was thinking about it earlier today or this morning that is it possible for us to or is it possible? Yes. But should we split up tasks like meaning you work on the one of us work on the whisper service and one of us work on the diarization and work on those on separate branches and merge sligger. I'm
[94:43-94:43] SPEAKER_03: not against
[94:43-94:49] SPEAKER_05: it. I'm concerned about the tons of conflicts because there's also these scripts and things like that.
[94:49-94:49] UNKNOWN: Yeah,
[94:49-94:51] SPEAKER_05: the little tiny changes. I don't know that we can do it.
[94:51-95:00] SPEAKER_03: But that's a truer development environment like that's what pull requests are for. And theoretically we could be
[95:00-95:09] SPEAKER_05: working at the same time right now. But I think that our style too, I didn't have this thought earlier. Our style, we work well like as a pair program. Yeah,
[95:09-95:09] UNKNOWN: I
[95:09-95:34] SPEAKER_03: think there's something to the watcher. I think I need to do some driving in our joint work sessions as well more often because I think it's valuable for you to get the watcher role as well. And you provide different value. You see different things. Right. Exactly. Okay. I think we're good there. I
[95:34-95:34] UNKNOWN: wish
[95:34-95:42] SPEAKER_03: I could just actually put that on the TV when I'm driving and it work and still look like that.
[95:43-95:43] UNKNOWN: But
[95:43-95:43] SPEAKER_03: you
[95:43-95:51] SPEAKER_05: can't. You can if you get one of the big giant. $10 ,000 TV screens.
[95:54-95:56] SPEAKER_03: I can just put a board over the window so
[95:56-95:56] UNKNOWN: I
[95:56-95:58] SPEAKER_03: can fit my TV on the wall. Or the
[95:58-96:02] SPEAKER_05: answer is the headset. Yeah, exactly. And I
[96:02-96:02] UNKNOWN: think that when
[96:02-96:30] SPEAKER_05: that thing works in I think the year is going to be 2027. There's going to be new things come out in 2026. Not Apple things. They're going to be Meta and all of their like they're going the Microsoft route of they're just managing the software system or they're doing the same thing as Google. Like we made the operating system and everybody can make devices and run the same thing. So new devices will come out next year. I will probably get a new
[96:30-96:30] UNKNOWN: one
[96:30-96:30] SPEAKER_05: next
[96:30-96:33] SPEAKER_03: year. They're basically Android. Meta is Android. This go
[96:33-96:53] SPEAKER_05: around in this generation. Right. So I will probably get a new Meta device next year. Whether it's actually made by Meta or one of the Samsung version of the I will probably get a new device next year. Run it for a year. I hope it will be in that $500 range. Because that's effectively replaceable once a year once every couple years. That's toy level.
[96:54-96:55] SPEAKER_03: That's not
[96:55-96:55] SPEAKER_05: unreasonable.
[96:55-96:55] UNKNOWN: Not
[96:55-97:11] SPEAKER_05: three -brand. But 2027 the three -brand hopefully two -brand device is going to come out. Right. That integrates with all of this stuff. Yeah. That's what I anticipate happening. I'm going to do another round of Meta because Apple. You
[97:11-97:17] SPEAKER_03: want to be on like there's going to be some new legit functionality. Yeah. And it's going to look better and be
[97:17-97:29] SPEAKER_05: lighter. All of those things like that. I will probably upgrade. And my guess is that's not this year. It will be sometime next year. Maybe early next year. Yeah. And that's. And this Apple surprises us all.
[97:30-97:30] UNKNOWN: I'm
[97:30-97:30] SPEAKER_05: like. Hey,
[97:30-97:31] SPEAKER_03: we're back.
[97:31-97:32] SPEAKER_05: Yeah.
[97:32-97:33] SPEAKER_03: Check it out. We win.
[97:33-97:43] SPEAKER_05: They did. What was it? Spring of 2024. So when was that? Oh, that was like the last headset. Yeah.
[97:44-97:44] UNKNOWN: So
[97:44-97:49] SPEAKER_05: two years is reasonable. It's possible that they'll do April or May. Yeah. Next year.
[97:49-97:59] SPEAKER_03: Fast from the perspective of like the once it's up and running because it's like an Xbox. Right. And maybe it would have to refresh quicker than that. So it's like in between a phone or an Xbox.
[98:00-98:00] UNKNOWN: So
[98:00-98:10] SPEAKER_03: like consoles are five or six years and a phone is every year even though nothing changes. Right. And so yeah, every three ish, three to four.
[98:11-98:15] SPEAKER_05: Yeah. I'm definitely in the place now where I would kind of want the Xbox.
[98:15-98:15] SPEAKER_03: Yeah.
[98:16-98:20] SPEAKER_05: I don't want to go up there and play. Yeah. I want it to be in my room. I don't mind.
[98:20-98:26] SPEAKER_03: You can have that one. OK. It's the older generation before, but I'll wipe it and you can plug it.
[98:26-98:26] UNKNOWN: You
[98:26-98:27] SPEAKER_03: can log
[98:27-98:27] SPEAKER_05: in to the
[98:27-98:27] UNKNOWN: same
[98:27-98:27] SPEAKER_05: shit.
[98:28-98:28] UNKNOWN: Because I
[98:28-98:34] SPEAKER_05: in it in some ways because streaming is certainly with our issues. You can't it's not fast enough. Even when it's good,
[98:35-98:35] UNKNOWN: it's
[98:35-98:35] SPEAKER_05: not
[98:35-98:41] SPEAKER_03: it's not the same. Right. And especially if you're trying to do like racing or anything of like really anything. You can't really play.
[98:42-98:42] UNKNOWN: Any
[98:42-98:50] SPEAKER_03: lags a shit show. No. You can kind of play like a Tomb Raider, but you're going to get killed sometimes because it didn't quite move your reticle over there at the same pace that you wanted
[98:50-98:50] SPEAKER_05: it
[98:50-98:50] UNKNOWN: to.
[98:50-98:51] SPEAKER_05: What I may do if I'm
[98:51-98:51] UNKNOWN: going to
[98:51-98:52] SPEAKER_05: do that is I'm going
[98:52-98:52] UNKNOWN: to
[98:52-99:22] SPEAKER_05: put that one upstairs on a great mind and put it in my room. And even if I just use the glasses right that the Quest and like just the little glasses that I have can both do that. You can plug it in as HDMI. So the Quest that's a new feature. And you can put it into the port on the side and it will act as an HDMI input and it will just show you what you're so you don't have to connect it to the TV.
[99:22-99:22] UNKNOWN: I
[99:22-99:34] SPEAKER_05: can literally just have Xbox sitting anywhere. Turn it on, connect the controller and then just have the big giant screen. That's cool. Yeah. And so you don't need a TV. You can plug it
[99:34-99:35] SPEAKER_03: into it. We can move that up there.
[99:35-99:35] UNKNOWN: I
[99:35-99:47] SPEAKER_03: literally unplugged it to get it away because like it's just dead time. Right. It's too easy to turn on when it's at my desk that I'm working at. Yeah. And so it's in the closet. And yeah, we can definitely throw it upstairs and it can play.
[99:47-99:47] UNKNOWN: I
[99:47-99:57] SPEAKER_03: think all the games like I have literally played the new Call of Duty, which is the only thing I've heard people talk about recently. So you're not going to be happy with
[99:57-99:57] UNKNOWN: this.
[100:02-100:08] SPEAKER_05: Fully deployed. Sure. It's not. It's not. It's not even running. It
[100:08-100:09] SPEAKER_03: makes you
[100:09-100:09] UNKNOWN: want
[100:09-100:13] SPEAKER_03: to punch you in your non -existent head. Oh, I
[100:13-100:20] SPEAKER_05: guess it would wait and monitor the current. Yes. Of course, that's what I want you to do. I don't want to. It's not done. So that would be the current status there, Kersher,
[100:21-100:21] SPEAKER_03: because we're
[100:21-100:22] SPEAKER_05: waiting to
[100:22-100:23] SPEAKER_03: see if it's working.
[100:28-100:40] SPEAKER_05: It's done. We corrected it. It's good. We don't need to worry about that anymore. It's literally never successfully running. Not one time. Never. It's done. It's done. It's good. We're ready to move on to
[100:40-100:40] UNKNOWN: the final.
[100:40-100:41] SPEAKER_05: It would be frustrating
[100:41-100:50] SPEAKER_03: if I could just tell you that and then you know it. But I have references written all over the place for you to know it and still for whatever reason.
[100:53-100:53] UNKNOWN: I
[100:53-100:58] SPEAKER_03: guess that is better than the opposite. Like, amazing success.
[100:59-101:09] SPEAKER_05: We're good. I want to see it run and not exit with an exit code other than zero.
[101:09-101:27] SPEAKER_03: Yeah. Yeah, it's the hyper -focused, super -intelligent, will -do -what -you -ask -it -to -do, but also HR -level positivity. Right. Like the meme HR lady level positivity of like, oh great, everything's good. We've got plenty of those, too.
[101:29-101:30] SPEAKER_05: I hate it so much.
[101:33-101:38] SPEAKER_03: At least they tend to look nice. It's true. That is true.
[101:38-101:38] UNKNOWN: I
[101:38-101:41] SPEAKER_03: can't say that in front of them, but there is that.
[101:42-101:42] UNKNOWN: Are
[101:42-101:50] SPEAKER_05: you going to schedule? Yeah, especially these, I think we're over the hump,
[101:50-101:50] UNKNOWN: but
[101:50-101:57] SPEAKER_05: you know, the uglyification of everything, including people, movies, TV shows.
[101:58-102:05] SPEAKER_03: You've probably seen her, but some YouTube chick, this Australian girl that does like the social commentary straight up, she's
[102:05-102:05] UNKNOWN: the sexiest.
[102:05-102:07] SPEAKER_03: I know exactly what
[102:07-102:07] SPEAKER_05: you're talking about.
[102:08-102:08] UNKNOWN: I
[102:08-102:10] SPEAKER_05: have watched it. I watched the whole 20 minute video.
[102:10-102:10] UNKNOWN: I
[102:10-102:18] SPEAKER_05: watched the whole thing. And that was my first time ever seeing her, but I know exactly who you're talking about because I watched it like two days ago. That's actually what I was referring to when I said
[102:18-102:31] SPEAKER_03: that. Yeah, I literally discovered her like two days ago, and she's been jamming for a few years, like looking at some of her videos, but she's awesome. Based on that, she's just got, she's figured it out. She's got a
[102:31-102:31] SPEAKER_05: system. Yep.
[102:33-102:33] UNKNOWN: And
[102:33-102:37] SPEAKER_05: like she's getting ready to go on tour. And like, that's interesting.
[102:37-102:37] UNKNOWN: Like,
[102:37-102:40] SPEAKER_05: what are you going to do? Are you going to go on stage and be like,
[102:42-102:42] UNKNOWN: what
[102:42-102:45] SPEAKER_05: are you going to do? Well, but more pow -tree. I'm not going.
[102:45-102:49] SPEAKER_03: Yeah, if you can get people to buy a ticket and show up, I'd really do you.
[102:57-102:57] SPEAKER_05: Yeah,
[102:57-102:57] UNKNOWN: I
[102:57-103:02] SPEAKER_05: never know what to do with my emotions right now because I always think,
[103:02-103:02] SPEAKER_04: man,
[103:03-103:05] SPEAKER_05: this might be it. Yeah.
[103:06-103:12] SPEAKER_03: I'm more of a pessimist than you. I'm always like, I am shocked once it finally works.
[103:13-104:08] SPEAKER_05: Like this might be the one. No. Oh, it's different error code. That is positive. I'm going to purge the freaking Q right now because that causes problems. Don't send anymore. I'm going to send a couple of these.
[104:10-104:19] SPEAKER_03: And then the last thing that logged in the pod is file system not being successful.
[104:39-105:10] SPEAKER_05: Yeah, I think these right here. It's going the opposite direction. That's what is I didn't realize I had these backwards or the newest ones are at the bottom in the inside. The log is annoying. Yeah, this is what
[105:10-105:10] UNKNOWN: I
[105:10-105:10] SPEAKER_05: want.
[105:17-105:19] SPEAKER_02: Are you on this little bundle?
[105:19-105:20] SPEAKER_05: Yeah.
[105:20-105:21] SPEAKER_02: Okay.
[105:37-106:01] UNKNOWN: Okay. Okay.
[106:13-106:14] SPEAKER_00: Okay.
[106:23-106:25] UNKNOWN: I mean it's not bad.
[106:30-106:42] SPEAKER_03: There are Coors. A tense access a memory location that has not permitted to def berries immediate termination, which led me to think that it's going to be a permissions thing. He
[106:42-106:42] UNKNOWN: might
[106:42-106:44] SPEAKER_03: be never mention me. Give
[106:44-106:45] SPEAKER_05: me that.
[106:47-106:50] SPEAKER_03: I literally just asked it like Well, it's
[106:50-106:50] UNKNOWN: this
[106:50-107:08] SPEAKER_03: exit with their code. Yeah. And gave it the screenshot. Apparently copy doesn't work. Inside... ...Gemina?
[107:27-107:27] UNKNOWN: I
[107:27-107:33] SPEAKER_05: don't know how to... ...we can do that. What is it? Like, it's a long message.
[107:34-107:35] SPEAKER_03: Is there the arrow on the bottom? Yeah,
[107:35-107:39] SPEAKER_05: but it doesn't... ...it won't let me click it. Maybe it's
[107:39-107:39] UNKNOWN: a bug. Can
[107:39-107:39] SPEAKER_05: you just like
[107:39-107:42] SPEAKER_03: double tap inside of it? What the heck?
[107:42-107:47] SPEAKER_05: I'm sure I can do it from my phone. Oh yeah. Which also should just copy
[107:47-107:52] SPEAKER_03: it. That's true. Yeah, so whenever I click on the arrow, just
[107:52-107:52] UNKNOWN: one click.
[107:52-108:39] SPEAKER_03: One time it pops up like this. I don't know if you're... ...kicking on the arrow one time? Yeah. It's not doing it. Did it start to? Just click that. There it is. I don't love that it does it like that. Just open it for me please, but whatever. That's probably coming too. You have a little utility belt that like reaches out and makes training for you. Or you just have like truly Jarvis level Iron Man like an arm that it can also control
[108:39-108:39] UNKNOWN: in the room. Just
[108:39-109:14] SPEAKER_03: do it in the room. Man, the... The stuff made here guy, you can make a track that can go every direction with not even like a big crazy industrial level arm, but like a tiny little robot arm running on a raspberry pi. That's like, hey, hold, put this... ...anything. It just knows where stuff goes so you just go like... ...and then just keep working. And it goes and puts your phone right there. I'm down with that. I guess it's going to be a robot. Like that's coming too. It's going to be like your robot taking my shit.
[109:31-109:38] SPEAKER_05: Direct. GCS client instead of GCS fuse mount fused to... Can you do that?
[109:41-109:49] SPEAKER_03: The GCS fuse is supposed to be for the models. That's what it's saying. Right there. It's
[109:49-109:51] SPEAKER_05: saying, oh,
[109:51-109:57] SPEAKER_03: yeah, like... That I don't think is an issue unless that's what it's trying to do and we don't know that.
[109:58-110:00] SPEAKER_05: Right. So I will say that.
[110:16-110:18] SPEAKER_03: You're already getting the new chat recommendations.
[110:19-110:22] SPEAKER_05: Yeah, I think after this discussion, we're not going to do anything else with
[110:22-110:23] SPEAKER_03: it. Right.
[110:58-110:59] UNKNOWN: Okay.
[111:17-111:18] SPEAKER_03: Is that the one we saw?
[111:19-111:19] UNKNOWN: Yeah,
[111:19-111:20] SPEAKER_03: that's the same.
[112:08-112:23] UNKNOWN: Okay. I
[112:23-112:27] SPEAKER_03: think it might be the network this time.
[112:29-112:29] UNKNOWN: Maybe.
[112:41-112:44] SPEAKER_05: My test says broken.
[112:49-112:51] SPEAKER_02: Looks like I'm going to oversee the inception.
[112:52-113:00] SPEAKER_05: Yeah. That's interesting. That is. That means inside the house. It would link toward that for sure.
[113:01-113:12] SPEAKER_03: Or it would be the first piece of evidence that is more conclusively inside the house. Right. But that also could be the first time that it truly just went out out.
[113:12-113:12] SPEAKER_05: Maybe.
[113:13-113:13] SPEAKER_03: I don't know.
[113:15-113:19] SPEAKER_05: In my mind, even for these sessions,
[113:20-113:20] UNKNOWN: is
[113:20-113:27] SPEAKER_05: get this done, then work on the network in the morning, like in these sessions, then work on the heater. Yep. And then come
[113:27-113:30] SPEAKER_03: back. I'm good with that. Are we just going to do the heater?
[113:30-113:40] SPEAKER_05: Yeah. Like. Well, no, I have a guy now. Okay. I haven't talked to him. I got a recommendation from a guy yesterday. Gotcha. And so what I'm going to try to do is put together a dream team. It's him and Benji and us.
[113:40-113:40] UNKNOWN: And
[113:40-113:47] SPEAKER_05: like we all mind -meld and it's like, okay, we're going to do it one day. Yeah. He's a pool guy. Bring Benji.
[113:47-113:47] UNKNOWN: And
[113:47-113:57] SPEAKER_05: then we try to stitch everything together. Like, hey, here's all the files. Here's what Jim and I say. Here's you guys read it, talk about it. Are we good? Is this a good plan? Yeah. Ideally, yeah. We come up with a
[113:57-114:03] SPEAKER_03: plan. Send it to them. Look at it. Agree over text what the day and time is.
[114:03-114:03] UNKNOWN: Come
[114:03-114:04] SPEAKER_03: and it's like, yes.
[114:04-114:04] UNKNOWN: Walk
[114:04-114:04] SPEAKER_03: through, make
[114:04-114:15] SPEAKER_05: sure it looks good. Order all the parts. We got all the parts. Do all the parts look good? Okay. Execution day is this day. You guys have to do it. And I'll pay you for all. But yeah, that's what I'm imagining. But I got to do the planning.
[114:16-114:35] SPEAKER_03: Yeah. I think you just with my one experience with him are going to have to be explicit with Benji. Like, hey, bro, I know steel is expensive. I want this job done right. So the right stuff like I'm not trying to like stunt on you. Right. But buy whatever you think is required and to get it done. I don't
[114:35-114:35] UNKNOWN: pay
[114:35-114:36] SPEAKER_03: for it. I
[114:36-114:40] SPEAKER_05: want it done well. I don't want it just done cheaply. Right.
[114:40-114:40] UNKNOWN: I
[114:40-114:42] SPEAKER_05: don't want like. Okay.
[114:44-114:52] SPEAKER_03: You got some action? It's doing in session. No, not yet. I haven't sent that. Okay. It's
[114:52-114:52] UNKNOWN: still.
[114:52-115:01] SPEAKER_03: It's trying to do a begin session by creating a transcript. It did this a couple of times yesterday. It's fine.
[115:17-115:19] SPEAKER_05: Whoa. Well, I haven't accepted ever.
[115:23-115:31] UNKNOWN: Okay. So
[115:31-115:37] SPEAKER_05: new session. Yeah. You can't start a new session. You're not good enough. Okay. Okay.
[116:05-116:05] SPEAKER_03: So
[116:05-116:05] UNKNOWN: I'm going
[116:05-116:27] SPEAKER_03: to do the VM thing. Okay. Today is what my plan is. And at least have like, okay, this configuration works. Let's make it work. Okay.
[117:03-117:04] UNKNOWN: Yeah.
[117:04-117:09] SPEAKER_05: I didn't, I never looked at that, but it, yeah, it has been using GCS fuse to try to mount from the bucket.
[117:09-117:09] UNKNOWN: Like
[117:09-117:11] SPEAKER_05: the audio file.
[117:12-117:12] UNKNOWN: Yeah.
[117:13-117:27] SPEAKER_05: Like in general, what it's recommending now, and we don't have to do that is making a bucket. This was your idea while like make a bucket, download the file from hugging face and put the model in there and mount from GCS fuse. As
[117:27-117:32] SPEAKER_03: a separate thing. Don't worry about just go load it
[117:32-117:33] SPEAKER_05: from GCS.
[117:33-117:36] SPEAKER_03: Just instead of running the call to go get it,
[117:36-117:41] SPEAKER_05: go get it once you put it in the bucket and then load it from the bucket. I'm
[117:41-117:41] SPEAKER_03: good
[117:41-117:41] SPEAKER_05: with
[117:41-117:42] SPEAKER_03: that.
[117:44-117:58] SPEAKER_05: But it's still trying to use GCS fuse to load it from the bucket. And that might be necessary that the inside of the container is a, it needs a file system and doesn't need, like, I don't think you can just say go get a bucket and load. It's gotta
[117:58-117:58] UNKNOWN: be like, it's
[117:58-118:39] SPEAKER_05: like gotta be like, it has to interface. It's a computer. Ingress basically into the cluster. It would be like trying to say, Hey computer, go get a file from GCS. It can't do it. Like it can't get an object store, but you have to have a file store for a computer. That makes sense. And once it's in a container, it's a computer. It's running an operating system and it has to have a file store. But that's fine. It can do GCS fuse to the bucket locally. That already has it. Right. And that's what it's recommended.
[118:40-118:56] SPEAKER_03: Yeah, I think that ultimately even is the plan. Like we have a bucket that's for ML Model Cache. Right. And the only difference is it's going to try to like, if it's not there, it's going to go get it and then put it there. So what we're saying is we're just going to put it there.
[118:56-119:04] SPEAKER_05: Right. Are you going to make me a... What was that?
[119:05-119:10] SPEAKER_03: That is the sound it makes when it's done. You're not actively like clicked into the...
[119:11-119:15] SPEAKER_05: It didn't make me a prompt, but that's okay. You're going to do something different next time anyways, right?
[119:15-119:25] SPEAKER_03: Yeah. Did it actually do the full delete and archive everything? Okay. It did not do that several times yesterday, so I've got more card up.
[119:27-119:50] SPEAKER_05: I think so. Yeah, it did a session summary and deleted the current session file. So... Good. All righty. It's here. We made some progress. I'm actually going to take this because, I don't know, actually we have to branch in order to... Yeah, we need to like come up with the strategy
[119:50-119:50] SPEAKER_03: for
[119:50-119:50] SPEAKER_05: that.

==================================================
Generated on: 2025-07-30 17:47:20
Total words: 12556
Total speakers: 7
==================================================




Summary:


creation_date: 2025-07-30 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1724_ZOOM0046_transcript.txt participants: [SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, SPEAKER_04, SPEAKER_05]
Executive Summary
This transcript captures a technical working session focused on resolving issues with a transcription pipeline. The team decides to pivot their architecture away from [[WhisperX]] due to dependency conflicts, opting instead for a custom three-service pipeline for transcription, diarization, and alignment. They debate the merits of using standard [[GKE]] versus [[GKE Autopilot]], ultimately leaning towards standard [[GKE]] for greater control over the environment. A significant portion of the discussion revolves around their development methodology, which they term "[[Vibe Coding]]," emphasizing the importance of frequently resetting the context within their [[AI Tools|AI tool]], [[Cursor]], to maintain accuracy and momentum. The session includes hands-on debugging, building, and deploying the new [[Transcription Service]], culminating in a plan to manually verify the entire workflow on a VM if the automated deployment continues to fail.

Key Topics Discussed
	•	Architectural Pivot & Pipeline Redesign
	•	Decision to move away from [[WhisperX]] due to proven incompatibility and dependency issues [00:17-00:50].
	•	Adoption of a new three-service pipeline architecture, breaking down the process into:
	•	[[Transcription Service]]
	•	[[Diarization Service]]
	•	Alignment Service [00:17-00:50]
	•	Debate on using standard [[GKE]] versus [[GKE Autopilot]], with a preference for standard [[GKE]] to have more control over drivers and the environment, although [[GKE Autopilot]] is noted as easier and potentially cheaper [08:34-08:53], [16:26-16:44].
	•	Discussion on leveraging [[GCS Fuse]] for mounting model storage [01:18-01:40].
	•	Development Methodology: "[[Vibe Coding]]"
	•	The team discusses their iterative development style, which they call "[[Vibe Coding]]" [24:21-24:33].
	•	A core tenet of this approach is to frequently restart the context or session within their [[AI Tools|AI tool]], [[Cursor]], to ensure accuracy and prevent context exhaustion, especially when the AI is analyzing logs or performing complex tasks [20:18-20:54].
	•	They contrast this with performing deep, upfront research, noting that while impressive-looking plans can be generated, they are often inaccurate and require significant rework during implementation [03:11-03:48].
	•	AI Models and Tools Discussion
	•	Comparison of different AI models, including [[Gemini]] and Grok 4 [26:02-26:31].
	•	They highlight [[Gemini]]'s integration with the Google ecosystem as a key advantage [28:55-29:05].
	•	The conversation touches on the idea that many powerful entities have likely been using advanced [[AI Tools]] for years to augment their decision-making [31:16-32:07].
	•	They note the surprising effectiveness of starting a new session in [[Cursor]], which sometimes causes the tool to proactively begin solving the problem without a specific prompt [29:46-30:14].

Action Items & Decisions
	•	Decision: Pivot from [[WhisperX]] to a custom, three-service pipeline for transcription, diarization, and alignment [04:09-04:24].
	•	Decision: To proceed with development by feeding the new plan into [[Cursor]] rather than performing extensive upfront design outside the tool [01:43-02:06].
	•	Action: If the transcription service is not functional by the end of the session, the backup plan is to spin up a VM, manually install the components to verify they work together, and then back-engineer a working deployment [19:46-20:02].
	•	Action: Start a new session in [[Cursor]] to implement the architectural changes and begin development on the new three-service pipeline [20:02-20:09].

Suggested New Links/Tags
	•	[[Alignment Service]]
	•	[[Grok]]

Linked Concepts
	•	[[AI Tools]]
	•	[[Cursor]]
	•	[[Diarization Service]]
	•	[[GCP]]
	•	[[GCS Fuse]]
	•	[[Gemini]]
	•	[[GKE]]
	•	[[GKE Autopilot]]
	•	[[GPU]]
	•	[[Hugging Face]]
	•	[[Kubernetes]]
	•	[[Pub/Sub]]
	•	[[Transcription Service]]
	•	[[VM controller]]
	•	[[Vibe Coding]]
	•	[[WhisperX]]

#Tags
	•	#AI
	•	#Deployment
	•	#GCP
	•	#SoftwareDevelopment
	•	#Troubleshooting

zoom49
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1505_ZOOM0049_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[03:10-03:15] SPEAKER_02: Today's the day? I think so. You driving? If you don't
[03:15-03:51] SPEAKER_04: mind going in, I'm going to be waking up. Okay. I was just looking at the phase development plan document and it didn't update it based on the progress yesterday. But I think if you want to basically tell it to go look at the transcript and then update this document, as far as I can tell we're on phase 5B, which is production integration, i .e. making the sequential pipeline.
[03:52-03:52] UNKNOWN: Or
[03:52-03:53] SPEAKER_04: like we talked about combining them.
[03:54-03:54] UNKNOWN: I
[03:54-04:02] SPEAKER_04: think its language is not obviously either of those because it says deploy job controller with three service orchestration.
[04:03-04:03] UNKNOWN: That
[04:03-04:08] SPEAKER_04: probably means, but it still is three services, whether they're running as one job or not.
[04:08-04:18] SPEAKER_02: Right. Yeah, I'll make sure I'll be explicit about that. And we need to update the deploy cluster
[04:18-04:35] SPEAKER_04: script. Yeah, for sure. Like all of that stuff needs to be part of that final, it calls like production integration and testing. So we can delete this, right? Yeah, I think that explicitly is called out as finished in the last...
[04:35-04:37] SPEAKER_02: Oh, well I don't want to delete it. Okay.
[04:38-04:40] SPEAKER_04: Yeah, that's the end of what I did yesterday.
[04:40-04:41] SPEAKER_02: So you want to look at
[04:41-04:52] SPEAKER_04: that? Oh man, that surprised me. That's the actual, which is just a couple dollars more than it was the day before. Yeah, we spent two dollars yesterday.
[04:56-04:57] UNKNOWN: It was
[04:57-05:11] SPEAKER_04: compute and build. Dollar on compute, 71 cents on build. Yep, that's not bad. And we ran it more, like if we ran it that much when it was operational, we would have done probably 10 hours worth of processing. Right, I agree.
[05:11-05:16] SPEAKER_02: These truly are like, it's interesting, these are like research and development costs. For sure.
[05:17-05:18] SPEAKER_04: It's up front,
[05:18-05:18] UNKNOWN: it
[05:18-05:36] SPEAKER_04: took R &D, the full project had R &D costs, but this is also representative of what R &D costs now. Like a few dollars here and there. It's not bad at all. Like this level of research and development 10 years ago to output a transcription service was impossible because they had one. But, yeah,
[05:36-05:37] SPEAKER_02: I don't know.
[05:39-05:40] UNKNOWN: Um, what's
[05:40-05:47] SPEAKER_02: that guy trying to say? So, you want me to have it look at this? Or to...
[05:47-05:47] UNKNOWN: The
[05:47-05:56] SPEAKER_04: phase development plan. So underneath it. 5A, the other one was like basically breaking out 5A because it was a giant phase basically.
[05:56-06:02] SPEAKER_02: And then compare it to the transcripts from yesterday? Yeah. Like all...
[06:02-06:04] SPEAKER_04: Probably, you
[06:04-06:04] UNKNOWN: could
[06:04-06:08] SPEAKER_04: probably even give it the daily summary to start, to not clutter up the context off of it.
[06:10-06:10] UNKNOWN: Um,
[06:11-06:30] SPEAKER_04: because I think the daily summary does a pretty good job of summarizing what happened. Yeah. It's got alignment, completion, so yeah. Yeah, I
[06:30-06:30] UNKNOWN: saw
[06:30-06:32] SPEAKER_04: that 32 and I was like, oh, I
[06:32-06:32] UNKNOWN: know.
[06:32-06:34] SPEAKER_04: Even that is not
[06:34-06:34] UNKNOWN: bad.
[06:34-06:57] SPEAKER_04: But still, that would have been like a double up on the day. Yeah. But that's forecasted, which wouldn't be that crazy actually. That might be a... That might be pretty accurate. At least a development month. Yeah. I don't know. Like once it's spinning up and running for five minutes and spinning down, and five minutes is an hour of... Right. ...audio comfortably.
[07:27-07:28] UNKNOWN: Okay.
[07:54-08:49] SPEAKER_04: Yeah, we've got so many documents going and those phase development plans aren't part of any session rule. I agree. But it was doing a pretty good job in the places. It's just like this is kind of a cleanup step. Cluster startup or deploy cluster?
[08:49-08:54] SPEAKER_02: Yeah, deploy cluster. I wanted to make the right language. Yeah. Use the right language.
[09:10-09:13] SPEAKER_00: To deploy
[09:13-09:14] UNKNOWN: the...
[09:15-09:17] SPEAKER_00: Job control?
[09:21-09:23] SPEAKER_02: New resources.
[09:24-09:24] UNKNOWN: Oh,
[09:24-09:25] SPEAKER_02: yeah.
[09:28-09:29] SPEAKER_04: Another thing I've been...
[09:30-09:30] UNKNOWN: I
[09:30-09:30] SPEAKER_04: tried out
[09:30-09:30] UNKNOWN: Dot
[09:30-09:46] SPEAKER_04: a little yesterday was actually giving it context files explicitly. So using the little add context button and going through and being like I think one thing that we're going to do in this session is give it those test files. Yeah, I'm going to give it... So do it with the add context. Yeah.
[09:46-09:46] UNKNOWN: And
[09:46-10:04] SPEAKER_04: just... It's... I did explicitly notice it ended up throwing the start a new chat thing a lot faster. Okay. But that means it looked at it. And so... And in those sessions, I got shit done. I just had to restart a lot. Yeah. And that's funny. Yeah.
[10:06-10:11] SPEAKER_03: We made new service accounts.
[10:13-10:21] SPEAKER_04: I think everything is running on the Whisper KSA one on Kubernetes, which ultimately kind of is the design we want.
[10:22-10:32] SPEAKER_02: I agree. And so it may not be necessary that we need to do any more mapping. I thought there was something that we did.
[10:33-10:33] UNKNOWN: I don't
[10:33-10:34] SPEAKER_04: remember what it was.
[10:34-10:34] UNKNOWN: It
[10:34-10:34] SPEAKER_04: was
[10:34-10:34] UNKNOWN: like
[10:34-10:47] SPEAKER_04: config maps and all these different things. But yeah, I think we just got to go through everything. It should... Again, it might take several actual sessions in here, but we just got to go through and be like,
[10:48-10:48] UNKNOWN: hey,
[10:48-10:59] SPEAKER_04: apply what we learned in these tests to a pipeline that's all treated as one job. Right. And there's going to be... It's going to be a little mess.
[10:59-10:59] UNKNOWN: We
[10:59-11:36] SPEAKER_04: won't necessarily finish it in this morning, but I'm going to finish it today. Thanks. It's pretty good
[11:36-11:36] UNKNOWN: at
[11:36-11:39] SPEAKER_04: guessing some of the stuff you're going to want.
[11:40-11:41] SPEAKER_02: Can you not go into that?
[11:41-11:44] SPEAKER_04: Well it's right there, the one that you want is right above you.
[11:45-11:45] UNKNOWN: Oh.
[11:45-11:50] SPEAKER_02: Yeah. It is actually really good at guessing the one that I want.
[11:53-11:58] SPEAKER_04: And you can go in, like you can go down, like that's where it's predicting, but down below
[12:28-12:39] UNKNOWN: it's not going to be a good guess.
[12:41-12:42] SPEAKER_04: 2001 of Space Odyssey is kind
[12:42-12:42] UNKNOWN: of
[12:42-12:44] SPEAKER_04: interesting so far.
[12:45-12:45] UNKNOWN: It
[12:45-12:52] SPEAKER_04: starts just like the movie, but it gives a lot more context. I've never made it past the beginning when it's like the monkeys. I
[12:52-12:53] SPEAKER_02: watched the whole
[12:53-13:06] SPEAKER_04: thing. But it's given a lot of context. Well this is the aliens coming and making first context and they put the idea of a tool in the head of this one moon watcher who's the leader of one of the tribes.
[13:06-13:06] UNKNOWN: I
[13:06-13:06] SPEAKER_04: don't even know how
[13:06-13:06] UNKNOWN: it
[13:06-13:07] SPEAKER_04: goes in the movie.
[13:08-13:08] UNKNOWN: But
[13:08-13:16] SPEAKER_04: before that these tribes have been on opposite sides of this stream and every day they would walk up, stand on either side, yell at each other and then go back.
[13:16-13:19] SPEAKER_02: It never talks about anything. The movie never shows anything.
[13:19-13:23] SPEAKER_04: And then the thing's there for a while,
[13:23-13:23] UNKNOWN: like
[13:23-13:26] SPEAKER_04: this alien cube and they don't understand it,
[13:27-13:27] UNKNOWN: they're
[13:27-14:51] SPEAKER_04: as dumb as shit. They literally don't remember what happened yesterday. It's like they don't carry memory and don't have a future, they don't have language, nothing. They don't remember a past. They're just ape men. And then it puts the idea of, I forget what the first one is, but it's like a club into this one guy's head and he uses it and he's like, what the fuck, I have a super power. And then at one point his whole tribe's using him and this leopard attacks them in the cave, which usually doesn't happen because they're pretty high up on the mountain. But it comes in and they ultimately are able to kill it, which was never happened. The leopard didn't even know it was happening because you get some view from the perspective of the leopard. And it was just like, whoa, this whole new thing that had just happened. And then at the end of it, that guy, at the end of his story, he walks across the stream without stopping, clubs this dude in the head, and he said basically now he was the king of the world. And so that dude's tribe ran away, but ended up the next day they came back and had forgotten about their leader because they were not keeping things. And then it jumps forward and it basically speed runs through the rest of history and talks about when they started using different tools. And 100 ,000 years later they started to use language, which allowed them to pass knowledge to future generations, which allowed them to conquer the world and all this stuff. It's actually really interesting.
[14:51-14:51] UNKNOWN: Yeah,
[14:51-14:58] SPEAKER_04: that's cool. Versus the movie I saw like some shitty monkey costumes on a beach and I was like... It doesn't talk about, like that would
[14:58-15:12] SPEAKER_02: be much more interesting. Yeah. But I don't know how you would convey that in film. Right, it's difficult. Yeah. I have no idea what it's been doing. I wanted it to review and compare it.
[15:12-15:14] SPEAKER_04: Yeah, so I think going through the files...
[15:14-15:14] UNKNOWN: Update
[15:14-15:15] SPEAKER_04: our status.
[15:16-15:18] SPEAKER_02: Not necessarily start working on...
[15:18-15:23] SPEAKER_04: I think the stuff it did was just in what may have done the deploy cluster.
[15:24-15:28] SPEAKER_02: Add missing service accounts, so it did do that. So there's a Pynote service account?
[15:30-15:30] SPEAKER_04: Yeah.
[15:31-15:34] SPEAKER_02: So it's all tied to a single service account on there.
[15:34-15:34] UNKNOWN: To
[15:34-15:35] SPEAKER_02: the GCP account,
[15:35-15:35] UNKNOWN: yeah.
[15:35-16:13] SPEAKER_02: But not on the cluster. Yeah, exactly. So I knew that. Something like that. Yeah, at a minimum it's this. There's a Pynote service account that needs to get bound as well. So it added that to the starter script and that should just be in there. Still deploy cluster stuff. Expected service accounts too. There you go. Okay. So basically those steps are completed, which makes sense. 5A is complete. Yeah, so it's at 5B where you think it should be.
[16:19-16:24] SPEAKER_04: So I assume that the job controller needs some updates.
[16:25-16:25] SPEAKER_01: Yep.
[16:30-16:46] SPEAKER_04: Yeah, so it had like a phase 5B blocker. There we go. Yeah. It needs a major update. Exactly. So it might already be worth sending a generator prompt to start the next session.
[16:46-16:47] SPEAKER_02: I'm going to.
[16:47-17:43] SPEAKER_04: Yeah. Because this is a lot. It did really good work, but it did a lot. And maybe introduce the idea now. Use what's left of its context to introduce the idea of the one job being all three. You see what it says in your options? No. I mean, that's a pretty much perfect encapsulation in the alternative approach kind of is our target.
[18:07-18:08] UNKNOWN: I'm
[18:08-18:09] SPEAKER_04: just going
[18:09-18:13] UNKNOWN: to say R3. I
[18:13-18:17] SPEAKER_04: think number three is exactly what we want.
[18:18-18:20] SPEAKER_02: Okay. I
[18:20-18:24] SPEAKER_03: see what you're saying. I guess I didn't. I guess I'm still waking up.
[18:53-18:59] SPEAKER_04: Does a GPU pod has a CPU, right? I think so. So we don't like I was going
[18:59-18:59] UNKNOWN: to say.
[18:59-19:06] SPEAKER_04: You don't have to switch to the third one. And even if you did, we'll just run it on a GPU. It's way overkill, but it takes less than
[19:06-19:06] UNKNOWN: a second.
[19:06-19:07] SPEAKER_04: Okay, it'll take a second.
[19:24-19:29] SPEAKER_02: Deleting the GPU memory.
[19:30-19:38] SPEAKER_04: Which we did in the VN tests. So if it needs the to go to those transcripts,
[19:38-19:38] UNKNOWN: you
[19:38-19:39] SPEAKER_04: can.
[20:02-20:03] SPEAKER_01: Okay.
[21:01-21:02] UNKNOWN: Okay.
[21:07-21:09] SPEAKER_04: It might start jamming on you.
[21:10-21:11] SPEAKER_01: Maybe.
[21:12-21:15] SPEAKER_04: It's just fine as long as it does a good job. Yeah, exactly.
[21:30-21:31] SPEAKER_02: Yeah.
[21:31-21:31] UNKNOWN: I really
[21:31-21:33] SPEAKER_02: what I'm trying to get out of this session is
[21:33-21:48] SPEAKER_04: replaying. Yep. Yeah. Ultimately into ideally with a prompt to start that. Yep. Exactly. When you say the lines with our VN testing,
[21:48-21:48] UNKNOWN: is
[21:48-22:31] SPEAKER_04: that because I just told you that? Right. Exactly. Do you actually know? Either way, it's fine. Like if it doesn't, that's fine. We know in a later session, we need to point it towards this transcripts, have it grip, whatever it needs to get. And if it takes 10 sessions, that's fine because it otherwise would have taken 10 weeks. Right. Exactly. Maybe not that traumatic, but for real. Like some of the stuff you said in there was like significant overhaul, lots of work or something like that.
[22:31-22:31] UNKNOWN: And
[22:31-22:37] SPEAKER_04: it's like, yeah, true. From the human perspective that you're trained on. Right. That's true.
[22:46-22:48] UNKNOWN: Yeah.
[23:01-23:17] SPEAKER_04: Yeah, so you assume the role almost of a little bit developer, but whoever it is that manages pull requests. Right. Yeah. And the pull requests are sessions or individual
[23:17-23:26] SPEAKER_02: prompts. Between like, yeah, yeah, I agree. Yeah. So I can think this is a relatively new thought,
[23:26-23:26] UNKNOWN: but
[23:26-23:32] SPEAKER_02: it's expanding on something we were discussing yesterday. I can imagine having groups of people,
[23:33-23:33] UNKNOWN: like
[23:33-23:37] SPEAKER_02: pairs like us or individuals doing what we're doing
[23:37-23:37] SPEAKER_06: and
[23:37-23:49] SPEAKER_02: having five of them. And then you moved like, so it's another dimension of, hey, you guys work on this part, you guys work on this part. But each one of them is sprinting like really fast. And so you can have
[23:49-23:49] UNKNOWN: this. Each
[23:49-23:50] SPEAKER_02: one of them has
[23:50-23:53] SPEAKER_04: a full team assigned to them in the form of a cursor prompt.
[23:53-24:06] SPEAKER_02: Right. And doing all of these things and doing what we're doing in a single thing. But so you can accomplish a lot with just a few people. Really? If they were doing what we're doing. So that's
[24:06-24:29] SPEAKER_04: what that makes me think is we need to keep doing this and keep on the path that we're working on, but really try to push to toward sessions like Saturday with CJ with as many people as possible. We need to teach how to use AI and become fucking savages as a group all using AI. That is not
[24:29-24:30] SPEAKER_02: my... We don't need to
[24:30-24:33] SPEAKER_04: build for our group. We need to teach our group how to do it.
[24:34-24:41] SPEAKER_02: Yes. That is the vision that I just captured of like, imagine if everybody was doing it at this
[24:41-24:41] UNKNOWN: level,
[24:42-24:44] SPEAKER_02: whatever, in their area, right?
[24:45-24:45] UNKNOWN: They're not
[24:45-24:52] SPEAKER_02: necessarily working on our problems, working on their problems that are related or adjacent to us using the same tools and workflow.
[24:52-25:16] SPEAKER_04: CJ can spin up a real estate empire and that's not like we don't own any part of that for having participated, but maybe he throws us a contract when he needs some programming work done. Exactly. And we all just grow together and we learn a bunch of stuff from his shit and from all this stuff. 100%. Exactly. I like it. I
[25:16-25:16] UNKNOWN: got
[25:16-25:42] SPEAKER_04: nobody to worry about this little mother trucker dude. We could do the files when you start.
[26:00-26:02] SPEAKER_02: So, are you good with this one?
[26:03-26:08] SPEAKER_04: Yeah, like just go to the very last of it and just see what it says down here.
[26:12-26:23] SPEAKER_02: So, it actually has a new implementation plan. In what's phases. I actually wanted to turn it into, specifically into sessions.
[26:24-26:32] SPEAKER_04: Yeah. Maybe say, like have it go to the phased whatever plan and say,
[26:32-26:32] UNKNOWN: hey,
[26:32-26:33] SPEAKER_04: update this based on the
[26:34-26:35] UNKNOWN: new
[26:35-26:36] SPEAKER_04: updates.
[26:36-26:37] SPEAKER_06: Yeah.
[26:44-26:46] SPEAKER_01: What is it called?
[26:47-26:47] UNKNOWN: Phase
[26:47-26:50] SPEAKER_04: development plan.
[26:50-27:21] UNKNOWN: Yeah. I'm not sure
[27:21-27:30] SPEAKER_04: that it doesn't go away because you can select several of them, but it's not obvious that it actually selected it like what you just did because the window was still in front of
[27:30-27:30] UNKNOWN: it
[27:30-27:31] SPEAKER_04: after you clicked.
[27:33-27:33] SPEAKER_02: Yeah.
[27:33-27:37] SPEAKER_04: I got me a couple times yesterday. Will you go through those files? You good with this
[27:37-27:38] UNKNOWN: one? Yeah.
[27:40-27:42] SPEAKER_04: So, this is service accounts and it just
[27:42-27:44] SPEAKER_02: made the new
[27:44-27:44] UNKNOWN: one.
[27:44-27:58] SPEAKER_02: The new Pino service account. They had Whisper and it has Pino and... Alignment and job controller. There's four. One, two, three, four. Yep. So, Whisper, Pino, Alignment. And the change
[27:58-28:06] SPEAKER_04: it made was it expects less than five, I think is what I saw in there. Yep. In some other file. But yeah,
[28:06-28:06] UNKNOWN: I
[28:06-28:13] SPEAKER_04: think that's good. So, bind them to the transcripts.
[28:13-28:21] SPEAKER_02: Whisper to transcription, Pino to transcription, Alignment to transcription, job controller to cluster manager.
[28:21-28:21] UNKNOWN: I
[28:21-28:30] SPEAKER_04: think that's fair. Yeah, it just didn't change the job controller and everything's already in there. Oh, there's some other change. Oh, I don't know what it was.
[28:30-28:30] SPEAKER_02: Sorry.
[28:32-28:32] UNKNOWN: It
[28:32-28:35] SPEAKER_02: was probably the one where it said... Less than... Yeah.
[28:36-28:57] SPEAKER_04: Yep. I think 276. Right there. Yeah. I assume that little flag is uncommitted or something like that. Yep. I think that's perfect. That's what I asked you to do.
[28:57-28:57] UNKNOWN: Yeah,
[28:57-29:03] SPEAKER_04: I actually appreciate that it logs at that level too. And it's doing
[29:03-29:03] SPEAKER_03: the phase
[29:03-29:14] SPEAKER_04: development plan right now. And it's predicting... Or no, phase A took 11 sessions. And that is another thing that I think we'll get out of these logs, especially as it takes
[29:41-29:44] SPEAKER_02: a sample with
[29:44-29:44] UNKNOWN: 8 .7s along each line.
[29:44-29:47] SPEAKER_02: outputs or logs or whatever and potentially get figure
[29:47-29:55] SPEAKER_04: out how long tiniest little baby LLM available on hugging face Yeah, and we're going to be freaking Whatever over there.
[29:56-29:59] SPEAKER_02: Oh I won't work on that. Well, I will just take six months.
[29:59-30:02] SPEAKER_04: Well, that's what it takes and then you have your person You have
[30:02-30:02] SPEAKER_02: it. Yeah,
[30:03-30:03] UNKNOWN: or
[30:03-30:36] SPEAKER_02: they said set up a job to train using the h100 It'll take five minutes and cost five dollars, right? Yeah, I think that's the strategy the other strategy effectively from when we were doing the What's I forget what we called it? Yeah, like basically rather than training with no GPU figure that out, right? Get rid of VMS, but what if you would just use GPUs and it's expensive but it goes so much faster, right? And then it's done. You just not like using GPUs for the same amount of time is using it for a tenth of the time
[30:36-31:04] SPEAKER_04: So there's a calculation We were talking yesterday about how long it would take to get an h100 But if that training process would take call it two hours on an h100 Yes, we really like training something but it would take five months on three CPUs even really like ranking well, then how long does it take to get a h100 somewhere between one and two months maybe even Yeah, I literally be sitting there but I don't think I take that long but Whatever
[31:04-31:12] SPEAKER_02: at some point at night or what like if you just leave it watching the whole time 24 7 at some point You're like an hour. Yeah
[31:15-31:18] SPEAKER_04: But then like how much does that cost because it might not be
[31:18-31:26] SPEAKER_02: No, it might not but also what's the cost of a VM for? five months
[31:29-31:29] SPEAKER_04: But
[31:29-31:39] SPEAKER_02: that's the same concept well then how much does it cost in this case? Well, how much does it cost to buy that and operate it and sit in the closet? But it's
[31:39-31:39] UNKNOWN: sunk
[31:41-31:43] SPEAKER_02: It's not as easy and
[31:43-31:54] SPEAKER_04: if it its whole purpose in life was ultimately to output this model that we could then run on A cluster because it doesn't have to run all that often just when we hit it. I agree I agree with you This
[31:54-32:05] SPEAKER_02: is getting into the heart of is cloud worth it right and we correct we argue with people like this all the time It's like I agree if it's new and it's doing everything you need don't ever talk to us again until
[32:05-32:22] SPEAKER_04: right but it's also introducing the move fast and break stuff of our Situation right of like well, those are there and I'm not saying we should go try to like anything on it But like I mean, that's a resource that's available and is only gonna get less valuable the longer is We
[32:22-32:26] SPEAKER_02: should use it for the things it's capable of doing right? Yeah, and not use it for the thing
[32:27-32:30] SPEAKER_04: You should take cloud out of when you can because it's not free
[32:30-32:43] SPEAKER_02: you should use it right for the things you like in Especially is in the house It should be doing monitoring or restarting the club restarting the network and those types of things because it's in there Yeah, it can access those things. Just do that stuff.
[32:43-32:53] SPEAKER_04: Yeah, we can just wipe those suckers There's a cluster on there, but that's in a project somewhere Spin it back up or yeah We got this now. You can do
[32:53-33:10] SPEAKER_02: everything We can effectively do it like it's like a super there was precursor right that was before I was now it'd be easy Yeah, like it really does change the perspective on like the capabilities of us as a team We can basically accomplish things that large teams are doing
[33:10-33:26] SPEAKER_04: it that you would have had to a team the size that you have To have some amount of funding to bring them together because you just can't have that many people like it's you have funding You let me live in your house. That is a level of funding that is like unique to our situation, right? But I think that's what
[33:26-33:38] SPEAKER_02: I'm one of the things we're saying yesterday too Is that that we are we had this unique situation that very very few people You know think cam or who like that had this even CJ. Well CJ has us
[33:38-33:39] SPEAKER_04: right?
[33:39-33:39] UNKNOWN: Yeah,
[33:39-33:40] SPEAKER_04: he's close enough to us But yeah
[33:40-33:59] SPEAKER_02: well we were in the very unique situation where we have a lot of experience like thinking even like a Military experience like we have a lot of different experience in a group of people that gets along The lot of collaboration and we have AI and we have development experience and we have infrastructure experience and We have
[34:21-34:28] SPEAKER_04: Work on identity which I appreciate because that was one of the fucking bouncing my head off the wall things yesterday every step
[34:30-34:37] SPEAKER_02: Yes, so it says estimated two to three sessions which we might do that today. Oh this morning, but certainly today I think we might be done
[34:37-34:48] SPEAKER_04: That's the goal I'm kind of with you because this girls night. Yeah, and just get the shit
[34:48-34:53] SPEAKER_02: done like my day is light I'm ready to double work if I don't stay so
[34:53-34:57] SPEAKER_04: like almost to the level of if you want to Put my
[34:57-35:04] SPEAKER_02: work computer right there. Yeah. Yeah, I actually have a meeting now go over there, but I'll put it right here Like
[35:04-35:04] UNKNOWN: pay
[35:04-35:05] SPEAKER_02: attention to
[35:05-35:13] SPEAKER_04: it I would go so far as to say we finished this motherfucker in the network Or at least like do some pre net like yes you were we end up
[35:13-35:22] SPEAKER_02: I'm good with that like so like to a certain extent I've said I already kind of want to pivot to that whether days or one or less. Maybe we try it today Yeah, and see how it goes at
[35:22-35:26] SPEAKER_04: least do early research. Maybe do no Network -breaking activities.
[35:26-35:37] SPEAKER_02: No what I'm saying is double working. Oh, yeah, just that like I just stay in here and At some point eight I bring my other computer and we keep doing
[35:37-35:41] SPEAKER_04: yeah whenever you're at work Yeah, so you can be more attentive there.
[35:45-35:45] UNKNOWN: Yeah
[35:48-35:49] SPEAKER_02: You're actually on
[35:49-36:00] SPEAKER_04: your keyboard and looking at what I'm doing Yeah, I don't even know that your personal computer should be open Like that's going maybe over the top boy. No, I think you should probably have your standard workstation
[36:01-36:06] SPEAKER_02: Maybe yeah and put this to the side maybe we'll figure it out But I am
[36:06-36:06] UNKNOWN: gonna
[36:06-36:12] SPEAKER_04: be paying attention to what's happening up there even more than your laptop While we're developed like I'm not even sitting in my
[36:12-36:24] SPEAKER_02: it may even I know this is a new idea And I don't want to cloud like like we can go back if like if like you helping me with my stuff Actually will make it go faster to you right and you will learn
[36:24-36:26] SPEAKER_04: yeah where I can help you You
[36:26-36:32] SPEAKER_02: can you can do everything I do there's no question you can do everything that I do
[36:32-36:32] SPEAKER_04: yeah
[36:33-36:34] UNKNOWN: I
[36:34-36:42] SPEAKER_02: don't do anything that we're not doing like we're we exceed the stuff. I'm like a task rabbit You can do everything I
[36:42-36:43] SPEAKER_04: do yeah,
[36:43-36:43] UNKNOWN: I
[36:45-36:52] SPEAKER_02: Think this is good I'm literally I didn't read line for line But yeah what I wanted
[36:52-36:54] SPEAKER_04: things you fast read it
[36:54-37:04] SPEAKER_02: what I want to do exactly is make sure That is broken into sessions. Yeah, and those sessions make sense And I think it has
[37:04-37:04] SPEAKER_04: yeah
[37:07-37:07] SPEAKER_02: So
[37:09-37:13] SPEAKER_04: Yes, I'll create integrated service container Where
[37:13-37:22] SPEAKER_02: do you say? Yeah, okay? Yeah, I Want to specifically see five I saw five be at some point. Yes, so Yeah, it has
[37:23-37:24] SPEAKER_04: Two
[37:24-37:29] SPEAKER_02: to three sessions and starting with five B dot one right yeah, and that's the details of it
[37:30-37:38] SPEAKER_04: This is fine doesn't bother me, but it says two to three sessions and then this for Yeah,
[37:39-37:42] SPEAKER_02: it defined in fact I want to say that there's four right
[37:42-37:47] SPEAKER_04: four or five Further down Yeah,
[37:47-37:50] SPEAKER_02: yeah exactly says two to three sessions, which is neither one of them,
[37:51-37:57] SPEAKER_04: but Yeah, I think but that's good that's training for the future
[38:02-38:04] SPEAKER_03: In the session
[38:06-38:39] SPEAKER_04: That's like standard now, I don't know like I Think our current rules are good But you should always also tell it to generate a program Yeah, it's fine. You can do it after because it doesn't need to be that prompt doesn't need to be long, but So as a little tiniest little bit of more human work, but I also don't necessarily want that cluttering up the rules Because sometimes there's some value to being specific. Yeah in that little bit of human context
[39:01-39:02] SPEAKER_02: I
[39:02-39:03] SPEAKER_04: Think
[39:03-39:03] UNKNOWN: you
[39:03-39:03] SPEAKER_04: said yeah
[39:11-39:11] UNKNOWN: I
[39:11-39:42] SPEAKER_04: think there's also something to like Almost a little bit of subconscious control over the user of forcing them to Participate at points right will drive better participate like Little thing I agree that doesn't feel like it so hey Don't provide you the Thing to say that you want to prompt at the end as part of the in session room, right? You just include that and say maybe you know what you're talking about a little bit about what like that prompt should be
[39:42-39:45] SPEAKER_02: like You actually are part of this team
[39:45-39:50] SPEAKER_04: like you need to know that you're you think we're going to 5b1 Make sure I'm not crazy, but that's where we're going
[39:50-40:13] SPEAKER_02: right exactly. I think we've done good with that. I agree. We've grown. Yes Like I get like looking back at our initial work Oh, yeah, it would have we would have finished this in half the time I think had we been using these techniques up front But the again the object the primary objective of this was to learn what we did and we did I think we did both
[40:13-40:18] SPEAKER_04: We even learned that that was our primary objective, right? I
[40:18-40:19] SPEAKER_02: agree
[40:20-40:31] SPEAKER_04: Well, yeah, I think like you're right. We would have finished it in half the time But now we have that skill set to finish in half the time Well the next thing forever right and we can keep cutting that shit in half
[40:31-40:53] SPEAKER_02: and I think yeah We will learn new stuff and there are new techniques and break them make new tools Which I think is a primary we're making our first tool But I think that's kind of the principle of just when we need to solve a problem. Okay Well, what tools do we need to make to solve the problem? I've talked and then that process of making the tools you learn how to make tools better and do everything Go
[40:53-40:55] SPEAKER_04: back and optimize your tools and cycle
[40:55-40:57] SPEAKER_02: and then you're solving your own problems The
[40:57-41:19] SPEAKER_04: last generation of savages had a library of scripts that did all these magically magical seeming things Yeah, and that's the new generation is have your AI integrated tools and a library of scripts on her Oh, I see these but like and truly optimize and have documentation that the AI is good at looking at and stuff like that
[41:19-41:27] SPEAKER_02: and just get good at using the tool And making tools and solve your problems and you just Yeah, you're out of the old tool.
[41:27-41:30] SPEAKER_04: It allows you to make all of the tools though.
[41:30-41:41] SPEAKER_02: Yeah You start out performing like this much like I think we're already performing that you go five to ten X Right, so, you know ten to twenty people.
[41:41-41:51] SPEAKER_04: Yeah Yeah, pretty comfortably like actually no way I assistance or even like the previous like whatever autocomplete But not co -pilot
[41:51-41:52] SPEAKER_02: right?
[41:52-41:53] SPEAKER_04: Yeah, ten to twenty people in a month,
[41:54-42:04] SPEAKER_02: but if you ten to twenty Normal people like let's call it the CJ's just just out there hustling trying to figure stuff out on your own I mean, we might be 40 of those people.
[42:05-42:14] SPEAKER_04: Yeah It's true. And that's like that's the advantage the CJ We in fact need whatever he has right that we don't have
[42:14-42:14] SPEAKER_02: right exactly
[42:16-42:18] SPEAKER_04: That's a good spot to be
[42:19-42:22] SPEAKER_02: Yeah, and he's good. I'm certainly not you
[42:22-42:22] UNKNOWN: know
[42:22-42:24] SPEAKER_02: putting CJ down But or you know,
[42:24-42:24] UNKNOWN: I
[42:24-42:37] SPEAKER_02: would say Alex the same way just kind of hustling got some ideas trying to make it happen Like it's good you need that but then add in this is this sauce, right? Exactly now like compared to those like we might be 40 of those people.
[42:38-42:39] UNKNOWN: Yes
[42:42-42:44] SPEAKER_02: Maybe more than that
[42:46-42:54] SPEAKER_04: Yeah Yeah, I mean they just It's all man How do you know people?
[42:57-43:04] SPEAKER_02: Sit down and find a course Yeah, like I think is what CJ was just like well, I know I need these I'm not
[43:04-43:04] UNKNOWN: doing
[43:04-43:14] SPEAKER_04: into the future not necessarily like as AI becomes a thing and it's like well CJ's never gonna truly learn that then because he's got
[43:14-43:15] SPEAKER_02: No,
[43:15-43:15] UNKNOWN: I
[43:15-43:18] SPEAKER_02: agree but how do they get to this place yeah
[43:19-43:31] SPEAKER_04: No, no, like moving forward with society as You learn because like the reason CJ and Alex couldn't do this stuff necessarily is because we put in a hundred hours Before we
[43:31-43:31] UNKNOWN: put
[43:31-43:49] SPEAKER_04: a thousand hours before yeah a lot Yeah, and so now we are quick to use AI and a thing that AI is good at and it does 10x but like How do you get past? That thousand hours or however, how is anybody ever gonna acquire that thousand hours again,
[43:49-43:50] SPEAKER_02: they're
[43:50-43:51] SPEAKER_04: not
[43:55-44:06] SPEAKER_02: Right exactly because we just Have it and right place right time. Yeah, exactly Like we jumped in and now we just have it right
[44:06-44:13] SPEAKER_04: before AI But like before AI but late enough that when AI came we were very good to it, right? We
[44:13-44:43] SPEAKER_02: pivoted to it fast And so now the people who jump in don't have the real good foundation and I would say we have a pretty good foundation Like I've been I started Python when I was on the submarine literally in my spare time looking at those books right, right, and so I think we just We just have we have the best of both worlds We have a not deep but intermediate understanding of actual language and coding and we were coding and doing projects like Kind of big boy projects before AI.
[44:44-44:44] SPEAKER_05: Yeah,
[44:44-44:50] SPEAKER_02: and now we have AI and understand the difference and we're like Like
[44:50-45:01] SPEAKER_04: spot things and we're better at AI than the people that were savages because they were resistant to it But we're better at programming than the people that just jumped into the game because of AI
[45:01-45:06] SPEAKER_02: right? Exactly. We're just the right place right time. We just hit it just right.
[45:07-45:07] SPEAKER_04: Yeah
[45:13-45:23] SPEAKER_02: I took me second. Yeah over next this seems like that Once it
[45:23-45:24] UNKNOWN: happens
[45:40-45:44] SPEAKER_02: Yeah, I don't like that dot dot dot right how did that happen
[45:44-46:06] SPEAKER_04: yeah it was being weird yesterday like I Went to paste it in there and it did it like whatever you paste from a terminal I can put it up there with the files, right? and I so I deleted it went copied it into a note brought it back and copy and paste it in and same Copying from a note like it was every once in a while. It's
[46:06-46:06] UNKNOWN: weird
[46:06-46:09] SPEAKER_04: Might have like it in the cache still or some shit,
[46:09-46:10] SPEAKER_02: maybe
[46:13-46:24] SPEAKER_04: It's got the full path in there to like ten lines up or so Now like in the prompt that you've got in there like phase development plan is there
[46:24-47:03] SPEAKER_02: Yeah, I think this is good enough I Is reading the face together so yeah, this is
[47:03-47:03] UNKNOWN: good
[47:03-47:05] SPEAKER_02: that has the all the details
[47:06-47:28] SPEAKER_04: Finding that taking context and guessing what it means That's that's the thing it does right and so if you're even close, it's gonna be like I got you Yeah, that's like actually making me worse at typing Maybe not worse, but actually it's probably the same I just don't worry like it doesn't auto correct the way all everything else does but I just don't trip out of it, right?
[47:30-47:43] SPEAKER_02: So it's making this integrated Transcription service under services is making a new service. No, it's making a new under services. Yeah, it's making a folder under
[47:43-47:54] SPEAKER_04: I think that's fair because ultimately like if we were gonna do it as three independent services inside of there Each one would have its own directory right do requirements dash alignment dot txt
[47:54-47:58] SPEAKER_02: Yeah, so basically instead of transcription service, right? Oh, no
[47:58-48:16] SPEAKER_04: transcription service the old one So that's probably gonna go away by the end of this And it kind of does make sense for it to be in a services directory I agree if that transcription service was the very first thing right and so it was it hadn't become it before we even knew Diorization was a word that existed right?
[48:17-48:20] SPEAKER_02: Because we did it right we didn't know
[48:23-48:24] UNKNOWN: Exactly
[48:29-48:29] SPEAKER_04: And at
[48:29-48:29] UNKNOWN: the
[48:29-48:38] SPEAKER_04: end of this we can tell it the final success Conquering flag in the sand is make the read me an actual read. Yep,
[48:38-48:41] SPEAKER_02: exactly go back and clean up All the
[48:41-48:41] UNKNOWN: other
[48:41-48:42] SPEAKER_02: things as
[48:42-48:44] SPEAKER_04: a project Yes But exactly
[48:44-48:59] SPEAKER_02: like clean up all the files so that it's like doesn't have any extraneous extra junk in it Make an actual read me that describes how they act with application works not how we got there It's not a status project plan. Yes to do right
[48:59-49:03] SPEAKER_05: I
[49:03-49:23] SPEAKER_02: Mean we're we're gonna be doing that this week. Yeah, and man, I love that we can do documentation without actually Because it wasn't that long ago I remember sitting in that freaking realty office like oh, yeah We'll go back to that at some point And not wanting to do
[49:23-49:26] SPEAKER_04: it. We even had early AI Yeah,
[49:26-49:30] SPEAKER_02: but it wasn't like this And I imagine it
[49:30-49:30] UNKNOWN: was
[49:30-49:37] SPEAKER_02: two years from now. We're gonna be like you remember when we sat in your room and We we had to like manually
[49:38-49:38] SPEAKER_04: Yeah
[49:46-49:50] SPEAKER_02: Yeah, right is the tools Have
[49:50-50:04] SPEAKER_04: not to It's like crop for dropped and there were a bunch of like clearly PR push headlines, right now Like I haven't heard that it sucks that like oh man it came back to earth But like also
[50:04-50:09] SPEAKER_02: it's good good like holy crap. It's worth every dollar. You got to get it right now,
[50:09-50:22] SPEAKER_04: right? No, it's like oh wow. This is what it's more impressive when you hear the specs like oh 100 ,000 each 100 Yeah, but like oh I'm glad you had a billion dollars to do that right exactly
[50:22-50:26] SPEAKER_02: and let me use it for $20. Yeah, thanks I appreciate that
[50:26-50:28] SPEAKER_04: exactly but $30
[50:33-50:37] SPEAKER_02: And is integrated into all of my
[50:37-50:53] SPEAKER_04: right yeah my one experience with it I didn't like it It might that might be worth like hey should we? Spend a couple of mornings trying to interact in the drop for me is maybe Like again trying to see the positive and it's better at not adding fluff right with context
[50:53-50:56] SPEAKER_02: It might be a beast when we just need to play with it You
[50:56-51:16] SPEAKER_04: just have to give very deliberate instructions and it'd be like done boom. What's next? Well, I caught pretty much does that and The answer like I kind of liked it being descriptive at times That's back to the like it feels better. It feels smarter, right? That just means I have to restart context more often
[51:17-51:30] SPEAKER_02: Yeah, okay, but it also helps it being verbose helps be us a line like water Tell me what you're doing exactly don't just do stuff and go here It's like no I need to know so that we're I know we're aligned because you run off and do crap
[51:30-51:43] SPEAKER_04: It may be as our tools get more efficient crock will be better So not necessarily the we won't necessarily use it in cursor, but as we apply it to other tools It's more explicit. We've got this long list of rules and it's great at that. Yeah
[51:46-51:48] SPEAKER_02: I Tried and keep working. Yeah.
[51:49-51:59] SPEAKER_04: Yeah, I really think like You know, let's have working sessions come through because that was like I think the Saturday morning thing was great It was a huge success. I would
[51:59-51:59] SPEAKER_02: say
[52:00-52:05] SPEAKER_04: For like a myriad of reasons that I only remember but that thing does because it's all there, right exactly
[52:07-52:07] UNKNOWN: Yeah,
[52:09-52:19] SPEAKER_02: we're doing the thing that we said we were gonna do and we had at some point Actually get all that stuff off of there and be able to utilize it and learn from it and remember all the things we talked About because it's in
[52:19-52:32] SPEAKER_04: there Yeah Route to get there but that was part of the learning AI process
[52:32-52:40] SPEAKER_02: and I learned a ton for my day job but you know the big scheme of things like I I think about this,
[52:41-52:41] UNKNOWN: you
[52:41-52:41] SPEAKER_02: know,
[52:41-52:41] UNKNOWN: like
[52:41-52:49] SPEAKER_02: if When it comes down to like people marvin my wife, it's like you're gonna leave your Google jobs like
[52:49-52:49] SPEAKER_05: yes
[52:52-53:01] SPEAKER_02: Potential like to be Google not really be right but whatever tip like that is worth all the chips Yeah, that's it
[53:05-53:12] SPEAKER_04: No, it's basically not really gonna jump gonna be like hey We can quit now
[53:12-53:51] SPEAKER_02: this this company or whatever this opportunity over here is a whatever four million dollar contract Well, yeah Or I'm gonna sit here and do it with that secondary right now like like I will keep into the day you tell me I Think that is very much my plan. It's like to do the over until the day you say hey, we're gonna let you go Yeah, or I get Get laid off before but whatever Generally the packages for getting laid off for somebody who's been at Google for as long as me It's like it's like
[53:51-53:55] SPEAKER_04: stay in grind mode and you're working for yourself off of whatever that package was,
[53:55-54:00] SPEAKER_02: right? It'll my into I expect it to be some dealers hundreds of thousands exactly Yeah,
[54:00-54:06] SPEAKER_04: like have yourself in place but go like, okay, this is six months and we're getting after it 12 hours a day Let's fucking go.
[54:06-54:07] UNKNOWN: Yeah
[54:10-54:17] SPEAKER_04: Call it like 11 hours and 15 minutes Exactly Time they
[54:17-54:41] SPEAKER_02: have a regular life and everything from grinding in between Did a whole lot of stuff and you have a bunch of green checks so Yeah ready for next phase, okay if you say so I Mean, I'm gonna go look
[54:41-54:49] SPEAKER_04: at all of us at least click through them and just see if anything jumps out I imagine nothing will but It's a good
[54:50-55:11] SPEAKER_02: Practice so it basically recreated all of the Stuff the processing files In the new directory. Yeah, so I assume it you've made built them from the old ones based on them. Yeah. Yes It looks good I agree Yeah, I think you can pretty
[55:11-55:14] SPEAKER_04: fairly quickly click through them and scroll
[55:14-55:21] SPEAKER_02: But just in pine. No, yeah, I assume again. I don't I haven't read the code It's not me looking at it is not gonna say
[55:21-55:30] SPEAKER_04: it better be drawn from that working code that exists, right? And I agree. It's just almost like there shouldn't be something so obvious that it jumps out at either one of us
[55:31-55:33] SPEAKER_02: and I don't know if you saw but it was clearing the
[55:40-55:41] UNKNOWN: I
[55:41-55:44] SPEAKER_02: Don't know what the sequential processor is
[55:44-55:52] SPEAKER_04: yeah, that might be the same make clear stuff You know tempos
[55:53-55:55] SPEAKER_02: Well, we're gonna find out
[55:55-55:55] SPEAKER_04: yeah
[56:02-56:13] SPEAKER_02: I Guess it has what was in there before but it looks like as long as it took into account the the Dependency hell that
[56:13-56:21] SPEAKER_04: we had before but I think it should like the VM test did right And even if it like it's gonna take some iterations probably the best
[56:26-56:34] SPEAKER_02: Okay starting from the deep learning And then it copies all those
[56:37-56:38] SPEAKER_04: Looks good.
[56:39-56:39] UNKNOWN: Yeah
[56:42-57:22] SPEAKER_04: Just one of them I Almost wish I didn't make it change the language after it called that secret into the terminal, right? It's a good exercise and calm in the fuck down afterwards a pray about yeah Okay All Success Sure that might actually be true for this space,
[57:22-57:23] SPEAKER_00: right?
[57:24-57:29] SPEAKER_04: Yeah, literally phase two container build and deploy so it probably is true
[57:35-57:37] SPEAKER_00: We'll start coffee
[57:56-57:59] SPEAKER_02: Hey Hey
[57:59-57:59] UNKNOWN: mark,
[57:59-58:02] SPEAKER_06: thank
[58:02-58:03] SPEAKER_02: you
[58:08-58:08] SPEAKER_04: Look
[58:08-58:10] SPEAKER_02: at this
[58:22-58:24] SPEAKER_04: a Swish model. Yeah, I
[58:24-58:25] SPEAKER_02: mean,
[58:25-58:42] SPEAKER_04: can you change it back to? Like Jim and I yeah Yeah, well, we'll see I think this one's doing auto
[58:44-58:57] SPEAKER_02: And autos probably fine for if we're using it, right Doing The cleanup for sure that you want to just leave it in I don't see how it does
[58:59-59:06] SPEAKER_04: We can it should be able to handle this phase of the project too because it's basically all done
[59:09-59:11] UNKNOWN: Yeah, we'll see
[59:11-59:15] SPEAKER_02: Yeah, this adds a new wrinkle Can't move forward.
[59:16-59:33] SPEAKER_04: It's a they did for she was gonna be today cost optimization, right because Ultimately at some point if we're building a tool, it's gonna be hitting an AI and we're gonna be paying for it Yeah, so you do want to pay for the cheaper ones, right would be optimizing toward auto
[59:38-59:38] SPEAKER_02: You
[59:38-59:38] UNKNOWN: Put
[59:38-59:42] SPEAKER_02: the whole thing in on I'm just gonna try to do the next session on it just to see
[59:42-59:42] SPEAKER_05: yeah
[60:03-61:03] UNKNOWN: You You
[61:07-61:24] SPEAKER_04: I Mean That's indicative of Like that's the early indicators of The roadblock of AI right no matter how much more do you get? It's too expensive, right? It's expensive to progress beyond this
[61:24-61:27] SPEAKER_02: you have to I think Circle
[61:27-61:52] SPEAKER_04: shall start shortening our companies like if you want to put our Knowledge of multiple worlds together like that's they got to come back to earth exactly found the edge You want to build the BS group that's okay, that's what it did in the testing so It's just gonna send it to Bob Bill,
[61:52-61:58] SPEAKER_02: yeah But it's doing fine so far
[61:58-61:58] SPEAKER_05: yeah
[62:01-62:21] SPEAKER_02: What I was gonna say is I think part of our Tooling and plan that we've discussed over the last couple days needs to integrate Only using AI Using a I selected in only the places where right take it out of the most it's best used because it's expensive Yeah, it's the most expensive tool.
[62:21-62:27] SPEAKER_04: I think this in fact is we should default to auto and Escalate when it's necessary,
[62:27-62:28] SPEAKER_02: right? Exactly
[62:28-62:37] SPEAKER_04: Never like auto does use the Charges you for them too like it's part of your like if it uses it that's one of your use,
[62:37-62:47] SPEAKER_02: right? exactly, it's so and maybe we go back to Jim and I or whatever to do planning. Yeah almost like sessions down and then bring them in here and then do
[62:48-63:10] SPEAKER_04: Identify. Yeah, so maybe even incorporate off cursor stuff like you said right with double for and then yeah identify a Set of conditions that suggests that auto can't handle the job, right? and then either trigger a planning session where you break that apart and make it so auto can but or trigger a will upload update to Con
[63:10-63:12] SPEAKER_01: I agree
[63:52-63:52] SPEAKER_00: Oh,
[63:55-63:55] UNKNOWN: what
[63:55-64:21] SPEAKER_04: did you do I knew it's syntax stuff. It was trying to declare Things in the wrong way And it's still doing it Yeah, motherfucker the other one did this too it's always like it's unsure exactly what the syntax is and it just starts trying
[64:21-64:22] SPEAKER_02: yeah Yeah
[64:28-64:30] SPEAKER_04: Worked at least work getting started.
[64:31-67:51] UNKNOWN: Yeah I I I I I I
[68:17-68:31] SPEAKER_04: I I I
[68:33-68:39] SPEAKER_02: I I
[68:47-68:49] SPEAKER_03: I I
[68:49-68:49] UNKNOWN: I I Is
[68:49-69:12] SPEAKER_02: all one big page it is not that's one of the issues exactly Or Maybe I will Continuously wonder if auto is the issue but try to get through this
[69:12-69:17] SPEAKER_04: Yeah, I think you push them because we know that it's not seamless Without
[69:17-69:20] SPEAKER_02: we don't want to add a Docker ignore file.
[69:20-69:31] SPEAKER_04: I don't think so. So what's this your narrator? We'll have a large
[70:19-70:20] SPEAKER_03: Excuse
[70:20-70:22] UNKNOWN: me
[70:51-70:52] SPEAKER_03: You
[70:52-70:52] UNKNOWN: Just
[70:52-70:54] SPEAKER_03: is waiting to get it's cute.
[70:54-70:55] UNKNOWN: Yeah
[70:58-71:11] SPEAKER_02: There's so many freaking build jobs in the world or where like I think this is a global one that right that is just You're cute up behind. Yeah, wait the 15 ,000 that are trying to start exactly
[71:17-71:33] SPEAKER_04: I Had to leave her empty out that cloud build repository Mm -hmm the bucket because it was like basically that's temporary files where it holds them until it gets them to the artifact registry Got never delete some because it's like a temporary record or whatever. It's like yeah
[71:33-71:33] UNKNOWN: You
[71:33-71:38] SPEAKER_04: can get rid of those nice. Okay, even the one for the latest image. It's like yeah, that's
[71:38-71:38] UNKNOWN: enough
[71:38-71:39] SPEAKER_04: artifact registry,
[71:39-71:40] SPEAKER_03: but makes sense
[71:43-71:47] SPEAKER_04: And then I guess It seems like at least based on the
[71:47-71:47] UNKNOWN: current
[71:47-72:08] SPEAKER_04: status of the artifact registry that Build only puts one so like whenever it puts a new one in there It takes it the other one out or something replaces it or whatever because there's not Nearly as many images in the artifact registry as builds as we've done over the past few goods So I like it and ultimately we'll go in and clean them out clean everything They
[72:08-72:10] SPEAKER_02: are hopefully not break anything while we're
[72:10-72:10] UNKNOWN: cleaning
[72:10-72:44] SPEAKER_04: exactly our register our historical registers go Yeah, and our sessions inside of GitHub So do you want me to work on a front -end or do you want to also do that collaboratively On value and it's both. Yeah
[72:45-72:51] SPEAKER_02: Yeah, I would like to be involved if you're okay with that just as one of my week area
[72:52-73:04] SPEAKER_04: Yeah, I think If we generally pivot to like me starting to assist you in Google work in right then Yeah, like I'm not gonna necessarily work on a side project. No,
[73:04-73:09] SPEAKER_02: I I agree, but I think that only Only in the times when it makes sense
[73:12-73:12] SPEAKER_04: Yeah,
[73:12-73:59] SPEAKER_02: but there's a couple projects that I'm working on that if I can deliver high level on those projects Okay, that's great you did that yes, and it's like it's cool stuff it's this stuff like so like implementing the multi -agent And It's just these types of things that people don't have time to do in their spare time if I can knock those out Like in fact like on my performance reviews. Those are the things that Yeah, they're gonna call that and then just my customer work. Yes, as long as you're doing enough customer work Which I am. Yeah, then not these things out You're right and we're doing it in our spirit like we're like
[73:59-74:05] SPEAKER_04: Also have that mechanism built into where when you're not working on those we're working on this Yeah,
[74:06-74:20] SPEAKER_02: and then minimize by me like what are we doing in this meeting is this really if you Especially if it's a project that we're working on to get like hey, I'll do the meeting from right here Yeah, and you hear whatever you
[74:20-74:20] UNKNOWN: know
[74:20-74:27] SPEAKER_02: what I'm saying like you can like yeah, you're like so nice in this like yeah Yeah, I
[74:27-74:40] SPEAKER_04: think that literally it's almost like the same as my perspective when you're driving is like I just see different things Yeah, so if it's one of those I can just sit here and be like just text you like Yeah
[74:42-74:51] SPEAKER_02: But I don't want to get you too involved but that's an idea that I just had this morning of like fully integrate our work Yeah,
[74:51-74:55] SPEAKER_04: that in both directions. Yeah, and just really optimize the whole thing
[74:55-75:30] SPEAKER_02: in the same way that we're gonna work on the network or the pool like just Just optimize everything and double tag team Everything and knock them all out and make it all be efficient Right because the thing that's holding me back from working on this during the day is why I've got a few things that I need To do right well that helped me knock them out. Yeah, and then we're free to do the other stuff And And you literally can do everything that I do there's no question No, no,
[75:30-75:30] UNKNOWN: I'm
[75:30-75:43] SPEAKER_02: not I'm saying like the stuff that I'm working on at work Yeah, I would I will explain to you in five minutes what we're doing It's like and the reason I'm not done is because I don't have time Yeah, I haven't sat down and actually do it. It's not hard.
[75:43-75:44] SPEAKER_06: Yeah
[75:44-75:55] SPEAKER_02: It's some of it is like hey, well, I don't know exactly the best way to create this to solve this problem I mean that's perfect. We're doing Like it's like oh, it's so hard.
[75:55-75:55] UNKNOWN: I
[75:55-76:22] SPEAKER_02: got to figure it out. It's more I just need to sit down think about it jam with AI and then okay It's those types of problems Which everybody else not in the whole world, but the vast majority of people to like that's what they're not good at They're more like they're good at mid -task rabbits and there's people who are good at Managing or looking like they're good at But there's very few people that can just say
[76:23-76:25] SPEAKER_04: Here's what we need to do and then do it and then do
[76:25-76:27] SPEAKER_02: it right and then like it's done It's working
[76:27-76:28] SPEAKER_04: right
[76:28-76:47] SPEAKER_02: here. You guys play with it and tested or even if you were better developer or whatever or it should be this way Okay, well, yeah, I'm not sure I'm onto the thing You just keep doing you can handle the detail. Yeah, but actually think it through. Here's a strategy Here's a plane. We did the first five steps now you can't push it.
[76:47-76:53] SPEAKER_04: Yeah, the steps from here clear Here's a plan. Obviously it'll have to be Implemented and there's some details in but yeah,
[76:53-76:54] SPEAKER_02: you guys do that,
[76:55-76:55] UNKNOWN: right?
[76:55-76:58] SPEAKER_02: Very few people can do that
[76:58-76:59] SPEAKER_04: That's good
[77:00-77:00] SPEAKER_02: exactly
[77:04-77:13] SPEAKER_04: I Don't know exactly what's going on with builds, but it always does uninstall everything. Yeah,
[77:13-77:14] SPEAKER_02: I've noticed that too
[77:15-77:19] SPEAKER_04: And it's not because it's broken or like that trying to look up a different one,
[77:19-77:20] SPEAKER_00: right?
[77:23-77:53] SPEAKER_04: Yeah, I'm kind of like Taking a back by how not that bad slash pretty good Walking dead Because it's like a show that didn't make any noise in my life Yeah, like I heard of it when it came out, but then didn't subsequently hear people like it's so good It's just like man. Everything's been so shit. Yeah for like a decade For real. Yeah, I probably like I've got my guard up heavy The fact that it came out lately in 2023 is like probably I went to shit probably around
[77:55-78:00] SPEAKER_02: For sure and became super woe Yeah, but that's fine you stop watching it at that point
[78:00-78:12] SPEAKER_04: it's gonna be actually pretty fucking frustrating I think because they're kind of setting up a perfect strong woman character. She's awesome Yeah, like and she's gonna be a savage. Obviously, she's removing all the soft parts of herself right now, right? I
[78:12-78:12] UNKNOWN: think
[78:12-78:20] SPEAKER_04: she should have killed that Asian lady. Yes, and she should have and it's not that will never happen again I'm guessing it will almost maybe go to
[78:20-78:20] UNKNOWN: a
[78:20-78:31] SPEAKER_04: far at some point. Yeah It's a little early but Lesson, but when she goes retarded it's gonna suck right that's gonna really suck So hopefully they didn't let that happen.
[78:31-78:34] SPEAKER_02: I don't know how they're gonna do we'll see.
[78:34-78:44] SPEAKER_04: Yeah, I still love the first four seasons Yeah, and I really like five Pretty much like six for just think seven and eight
[78:44-78:53] SPEAKER_02: just they could have They could have like just put in a little bit more effort I'll use the word effort I don't know the details. Maybe there was a lot going on behind the scenes
[78:58-79:02] SPEAKER_04: It took about ten years Yeah
[79:05-79:07] SPEAKER_02: I agree with you
[79:07-79:07] SPEAKER_04: and fix every
[79:07-79:08] SPEAKER_02: I agree
[79:10-79:20] SPEAKER_04: Doesn't need fixing so we'll be able to blaze through that but just Yeah, and then we'll focus the last eight and a half months on fixing all the problems It's
[79:20-79:20] UNKNOWN: like
[79:20-79:27] SPEAKER_04: the last three seasons and we can basically use reddit for that Just it's done and go here you go world. You can have
[79:27-79:31] SPEAKER_02: it. Yeah, it's Copyrighted prison like I'm not making any money off. Yeah, you can
[79:31-79:32] SPEAKER_04: have all the profit
[79:33-79:42] SPEAKER_02: I'm sure that they will spin it as reputation even like even if you're not directly making money off of it Yeah, your reputation is improving and therefore you're
[79:42-79:42] UNKNOWN: using
[79:42-79:47] SPEAKER_02: our licensing You're using our material Right, that
[79:47-79:50] SPEAKER_04: was a side project. I did for funsies. Well,
[79:50-79:50] UNKNOWN: like
[79:50-79:52] SPEAKER_04: you can have a YouTube video I really dropped
[79:52-79:55] SPEAKER_02: it on YouTube. You have all proceed. Well, you make money. That's true.
[79:55-80:01] SPEAKER_04: Yeah, so we get demonetized Oh, right. You're taking that. Yeah, exactly check the status of my video
[80:02-80:06] SPEAKER_02: I'm not making anybody. I mean there's tons of YouTube's making money on
[80:07-80:11] SPEAKER_04: Right YouTube. That is a thing. Yeah, pretty sure. Oh, yeah, like if we did a
[80:11-80:11] UNKNOWN: Big
[80:11-80:34] SPEAKER_04: thing I was actually thinking about it from the Star Wars context this morning like redo the whole thing and the very first thing is like This letter to George Lucas like hey, bro. We love you still We're sorry for the way we acted when he did the prequels that was overboard. This is for you This isn't for money take fuck Disney take back over You
[80:34-80:34] UNKNOWN: know
[80:34-80:40] SPEAKER_04: what like we don't even have to but this isn't coming to steal a legend if you don't like some pieces We're sorry
[81:09-81:22] SPEAKER_02: We can have a five -minute meeting I will fly and stand outside the office I will stand there until you're ready to talk to me for five. Yeah, I want to record Of
[81:22-81:24] SPEAKER_04: course for my sir like right
[81:29-81:30] UNKNOWN: And
[81:30-81:34] SPEAKER_02: so this is this already push it we've made it through the bill
[81:37-81:45] SPEAKER_04: All the pieces are working it could be there's probably some details that need to be ironed out But should be that this is like the final sprint
[81:45-82:02] SPEAKER_02: I was just thinking we need to we still need to go back and update the startup script, but it's not it's done Yeah, you see that we have it right yeah, it should be good And I think the next step is to deploy yeah and
[82:05-82:06] SPEAKER_04: And test
[82:11-82:12] UNKNOWN: Runs it
[82:13-82:18] SPEAKER_02: We're on point two right now, we're updating the job control that is what we're doing
[82:27-82:27] SPEAKER_04: Three
[82:27-82:27] UNKNOWN: Okay,
[82:30-82:34] SPEAKER_02: that's that where we're at yeah, okay wow okay Oh, so we're on three of the four steps
[82:34-82:37] SPEAKER_04: already right and then it's running it the fourth step is running.
[82:38-83:01] SPEAKER_02: Okay? So there's no point for Okay, I see it now yeah, that's interesting like it's I see I've never noticed this Right now that it holds the the The structure I've never literally never noticed that and like when you scroll down like yeah, it flops those I've never literally noticed that until right
[83:01-83:17] SPEAKER_04: now It's explicit like it's marked down specifically, so that's why it's doing it. It's like in
[83:19-83:19] UNKNOWN: Google
[83:19-83:25] SPEAKER_04: Doc if you have a bulleted list and you're doing yeah Yeah, I see it
[83:25-83:27] SPEAKER_02: now. Yeah, and I knew what these were
[83:27-83:28] SPEAKER_04: right yeah, I
[83:28-83:36] SPEAKER_02: just Never noticed that was up there. Yeah Yeah, so we're getting right this the end is near.
[83:36-83:42] SPEAKER_04: Yeah, it's this it's we're gonna test whether it works or not And then it's done like some cleanup maybe but I can do that today.
[83:43-83:43] SPEAKER_01: Yeah
[83:44-83:44] UNKNOWN: I
[83:45-83:56] SPEAKER_04: Guess we're gonna test whether it works or not when it doesn't we're gonna fix it and then it's done With the potential for like three or four repeats of this
[83:56-83:59] SPEAKER_02: right exactly two to three sessions. Oh, I mean at least four
[84:03-84:10] SPEAKER_04: What it wasn't a bad guess it's been two right right like if we've knocked out it's defined sessions in one session
[84:10-84:15] SPEAKER_02: No, this is we've done three sessions for each one of these I've started a new session,
[84:15-84:18] SPEAKER_04: right So I'm saying and it defined them as the sessions so right
[84:18-84:27] SPEAKER_02: so it's been three sessions to build it And maybe it didn't count it so okay. We're gonna. Yeah test it as a session Validation
[84:27-84:31] SPEAKER_04: yeah, it's certainly just for whatever reason put two to three at the top
[84:35-84:40] SPEAKER_02: Yeah, this is one of the things that I get specifically designed for two speakers
[84:40-84:45] SPEAKER_04: No, that's oh On the test run yeah,
[84:46-84:46] UNKNOWN: it
[84:46-84:47] SPEAKER_04: finds three one of them's unknown.
[84:48-84:48] SPEAKER_02: Yep,
[84:52-84:52] UNKNOWN: okay
[84:52-85:08] SPEAKER_04: Yeah, it is using that to test against the scene metrics to make sure we're still close To the
[85:08-85:08] UNKNOWN: full process It's for
[85:08-85:10] SPEAKER_04: less than half of the duration for the full process
[85:12-85:13] UNKNOWN: Yep
[85:15-85:23] SPEAKER_04: There's probably some optimizations to be had in there I think a decent chunk of that processing time especially on whisper is literally loading the model.
[85:23-85:29] SPEAKER_02: Yep, I agree And we can go back and do that after it's working, right?
[85:29-85:30] SPEAKER_04: Yeah
[85:32-85:33] SPEAKER_02: Right,
[85:33-85:58] SPEAKER_04: there's a thing in yesterday So cloud bills was like half of our costs at least on that billing page yesterday was like a dollar and some change Compute was like a dollar forty maybe even call it two But as long we had that cluster of all day Yeah, and it wasn't necessarily doing a job all day, but it was doing a lot of jobs and so theoretically like let's call it That's about eight hours to be comfortable. Well that would be 16 hours of
[85:59-86:00] SPEAKER_02: compute
[86:00-86:00] SPEAKER_04: like
[86:01-86:17] SPEAKER_02: Transferring and even the whole again research and development process. Let's call it end up being like $150 And you know that how many months how many hours of transcription? Will that have gotten us? Let's call
[86:17-86:20] SPEAKER_04: it $12 an hour Pay per rate, right?
[86:21-86:21] UNKNOWN: Right.
[86:21-86:22] SPEAKER_04: That's what you yeah. So yeah,
[86:22-86:43] SPEAKER_02: that's the worst case. But yeah, let's call it. So that's like Like what 15 hours or so Yeah, so yeah, like it's not that much like so Yeah, so for the cost of doing one of those well, we now have the ability to do it forever Yeah, there's also costs associated with doing it forever to
[86:50-86:50] UNKNOWN: Yeah,
[86:50-86:58] SPEAKER_04: and there's opportunities to drive those costs down even more if we want to start scraping away Probably
[86:58-87:06] SPEAKER_02: yeah, it becomes a value judgment of is it worth spending the time to Optimize or solve new problems
[87:06-87:18] SPEAKER_04: exactly that is the whole thing. It's almost like that when it comes to a front end, right? It's like well If it's our team and they can send us the shit we can upload it put the transcripts Yeah, I think
[87:18-87:18] UNKNOWN: we
[87:18-87:19] SPEAKER_04: should build it from
[87:19-87:28] SPEAKER_02: I think we should But in the big scheme at least for now like when we like get it up and like the first full run of like Okay, we're gonna load all the files and let it go
[87:28-87:34] SPEAKER_04: I'm probably gonna load them into that cursor project and say hey load up all those files all the book I mean, it's pretty simple Like
[87:34-87:48] SPEAKER_02: literally go to this bucket and go and press upload But they're all just gonna go in there and every one of them is gonna kick off a job. Yeah Like literally you I assume there's that and it's
[87:48-87:48] UNKNOWN: gonna
[87:48-87:55] SPEAKER_02: do that. Yeah Upload every one of those and it's that simple So I don't know.
[87:55-87:55] UNKNOWN: I
[87:55-88:06] SPEAKER_02: mean a UI will make it look good and it will complete the project But it's certainly not needed it is needed for anybody other than us because and then there's a bit of
[88:06-88:11] SPEAKER_04: I Think you incorporate the front end becomes also where the output gets presented
[88:12-88:14] SPEAKER_00: Right, like that is
[88:14-88:31] SPEAKER_04: truly like it's even though right now it would only be for uploading even how do you get the upload? I got dongle into your phone or something But moving forward it will be like that's where I'll remove obsidian and have my fucking whatever.
[88:32-88:49] SPEAKER_02: Yeah, and there's also this constant like it's running in My personal work, but I don't know that that matters a lot because the alternative is to start something and have a and have a And all of that junk,
[88:49-88:53] SPEAKER_04: yeah, just work small. Yeah, like if you decide to take it for yourself at the very end It
[88:53-88:53] UNKNOWN: is
[88:53-88:55] SPEAKER_04: what it is
[89:04-89:07] SPEAKER_02: I would rather you have it
[89:09-89:12] SPEAKER_04: Is what it is I don't care
[89:12-89:21] SPEAKER_02: I'd rather get cut out like I'm the same way I would just keep working our own personal projects and if somebody just Like okay, well, I
[89:21-89:21] UNKNOWN: guess
[89:21-89:23] SPEAKER_02: that sucks. Yeah
[89:25-89:26] SPEAKER_04: Yeah,
[89:30-89:44] SPEAKER_02: but still thinking of a front end I guess I was You have to make it so that Anybody can upload to my space like so you just have to do the permissions, right? Have users
[89:44-90:05] SPEAKER_04: Users and we can make it to the public only you or I could make a user like there's not even a sign of something Like that. Yeah, and even I think it's obvious, but it's ultimately not actually doing stuff They're allowed to tell a function that they wanted to do something right? Right, like that's what's it. It's not doing server side process or server actions
[90:09-90:14] SPEAKER_02: Is that calling upload Build and push push.
[90:18-90:19] UNKNOWN: Yeah
[90:46-90:47] SPEAKER_04: So we're gonna need
[90:47-90:47] UNKNOWN: to
[90:47-91:27] SPEAKER_04: like get rid of some Manifests that are all clean up the documentation even if we're keeping it in our archive Like the design I
[91:27-91:27] UNKNOWN: Close
[91:27-92:27] SPEAKER_04: recently so Thomas Jefferson One was in Paris When everything kicked off like the Bastille got stormed they started chopping motherfuckers heads off. Okay, he was there and But while he was there he wrote this letter and all the committees were doing like their rights of man and all these different posts and he basically proposed this idea that The dead have neither powers nor rights over it talking about the world The earth belongs always to the living generation. They may manage it then and what proceeds from it as they please during their Use of fruct, which is a time where you're in you're allowed to use something but you don't know me, right? So basically he was saying laws should expire at the end of 19 years, which he defined as a generation and that's a little bit like Extremist and you got to play some stuff around it, but that's I
[92:27-92:27] UNKNOWN: like
[92:27-92:29] SPEAKER_04: the concept Yeah
[92:29-92:30] SPEAKER_02: of like hey,
[92:30-92:30] SPEAKER_04: they
[92:30-92:30] UNKNOWN: can
[92:30-92:36] SPEAKER_04: become more ingrained like hey, this one's easier to pass through the review. It's almost guaranteed We're gonna
[92:36-92:43] SPEAKER_02: repass it where it comes up for review and if it expires it's over like if it's too busy or not important Enough to look at it again. Okay, well then
[92:43-92:44] SPEAKER_05: that's
[92:44-92:44] UNKNOWN: that
[92:44-92:45] SPEAKER_05: We
[92:45-92:56] SPEAKER_02: don't need anymore to expire Yeah, right and not just you keep adding laws and regulations and rules and forever never and like well, I don't like this Really? I don't like this rule and they never they never go
[92:56-93:30] SPEAKER_04: away the dead right controlling the world Yeah, and it's like very I'd love that so then 2001 of space Odyssey is talking about Eight men starting to Use tools and it says they had not merely become extinct They had been transformed the tool makers had been remade by their own tools and that just screamed AI Like in the biggest way possible and then this one So he got accused of being an anti -federalist Thomas Jefferson did which was federalists were federal government states rights for the other ones So anti -federalists,
[93:30-93:30] UNKNOWN: yeah,
[93:30-93:49] SPEAKER_04: so I am right They were a little more intense back But he he was like basically he said I am NOT a federalist because I never submitted the whole system of my opinions To the creed of any part of men whatever in religion and philosophy and politics or in anything else where I was capable of thinking for myself
[93:51-93:58] SPEAKER_02: through exactly Want to give away my rights and thinking enough to the well, they'll take care of it
[93:58-93:58] UNKNOWN: for
[93:58-93:59] SPEAKER_02: like no
[93:59-94:04] SPEAKER_04: In religion I don't the church I can think for myself right
[94:04-94:14] SPEAKER_02: I can read the but I read the same things I can have a relationship with God right and there's value to them But I don't want to well I'm beholden to the church because they said I have to look no No, they do God
[94:14-94:30] SPEAKER_04: like oh all these philosophers got it figured out fuck out of my face myself in politics Don't even get me started on Republican versus Democrat. Yeah, like or anything else where I was capable of Dude, I love that Now
[94:30-94:46] SPEAKER_02: it's trying to jump to Objective for it's trying to jump to the end. I don't think I think we're ready for a session session Yeah, the end session and go to I don't know where it's getting that objective from that word
[94:49-94:49] UNKNOWN: Like
[94:49-94:52] SPEAKER_02: we're in 5b3 right now
[94:54-95:08] SPEAKER_04: Testing strategy about its functional process Yeah, so it's kind of a flawed the testing strategy for Three Really should be done here for or is that defining for
[95:08-95:12] SPEAKER_02: like so all we were supposed to do in three was Pushed it artifact registry.
[95:12-95:17] SPEAKER_04: So it's saying phase four or like step like it's gonna go down here.
[95:17-95:23] SPEAKER_02: Oh, so that's fine Yeah, I guess that is part of this but I want to do it in a new. Yeah session
[95:23-95:27] SPEAKER_04: Yeah, it's trying to jump to session for without starting a new session
[95:28-95:43] SPEAKER_02: No, no, I think it's this as now see I think this is objective for Maybe yeah, like so the test door to the validation of this step is This stuff
[95:43-95:46] SPEAKER_04: and it's gonna go try to yes And
[95:46-95:49] SPEAKER_02: this is like testing for performance,
[95:49-95:50] SPEAKER_04: right the full on. Yeah, you're
[95:50-95:53] SPEAKER_02: right. So I still want to start a new session
[96:07-96:15] UNKNOWN: That'd be five, yeah That's
[96:59-97:03] SPEAKER_02: I don't think autospan I've given it a bad rap. Yeah,
[97:03-97:14] SPEAKER_04: I mean I Think it's an easy culprit. Yeah to some extent, but also it certainly performs less than the other one I agree what it got through. I
[97:14-97:18] SPEAKER_02: agree it did it And it's included says free.
[97:18-97:23] SPEAKER_04: It's part of our very good Statistical
[97:23-97:23] UNKNOWN: strategy
[97:23-97:28] SPEAKER_04: from the other ones, but also we have that process now Yeah,
[97:28-97:28] UNKNOWN: we
[97:28-97:29] SPEAKER_04: can use we
[97:29-97:39] SPEAKER_02: can rely on auto because we offloaded some of the thinking and session management Right. And so if we're doing planning sessions that might be the answer
[97:44-97:45] SPEAKER_04: Right to do
[97:45-97:47] SPEAKER_02: yeah to do plenty
[97:49-98:00] SPEAKER_04: Especially initial planning where Like it's not gonna default to thinking that it's working inside of an environment that's already up and running It's just like hey Google let's talk about right So
[98:00-98:14] SPEAKER_02: I think the process is exactly what we did starting Jim and I outside of this move into here work and actually see the files Take this make it more detailed plan in sessions. Yeah, and then You know
[98:15-98:16] SPEAKER_05: Yeah
[98:16-98:26] SPEAKER_02: So those first two steps are With Jim and I pro and then specific model which everyone Jim and I or whatever Right and then once we're executing sessions, we go down the auto.
[98:27-98:28] UNKNOWN: Yeah
[98:30-98:52] SPEAKER_04: Yeah, so I guess this is an example of where the big guys Could have an advantage in the sense of like you're big enough to be running your own models that have basically no Limitations beyond the compute that they cost or whatever That's a value but also Like the fact that we do have those limitations will force us to be sharper.
[98:53-99:03] SPEAKER_02: I agree this That shouldn't be that it shouldn't be 5b point 2. It should be 5b point 3 point 2 point 1 or point 2 whatever
[99:06-99:06] SPEAKER_05: Yeah
[99:08-99:10] SPEAKER_02: Because there is already a 5b point
[99:10-99:12] SPEAKER_04: 2 right? Yeah, that's going backwards
[99:19-99:20] UNKNOWN: I
[99:20-99:24] SPEAKER_04: Could be dot one the other one was zero basically
[100:13-100:19] SPEAKER_02: I Sure point it literally left it at point X, but that's
[100:19-100:32] UNKNOWN: fine And
[100:32-100:38] SPEAKER_02: it didn't in the session but it's fine out I'll fix it I'm gonna call it 5b point 3
[100:47-100:50] SPEAKER_04: I Was looking at the file tree and oh
[100:50-100:51] SPEAKER_03: it did
[100:51-100:51] SPEAKER_04: I
[100:51-100:51] SPEAKER_03: guess
[100:51-100:59] SPEAKER_04: I was distracted that was a new problem. I Did that just
[100:59-101:00] SPEAKER_02: call it five
[101:04-101:04] SPEAKER_05: Yeah
[101:29-101:30] SPEAKER_02: I
[101:30-101:30] UNKNOWN: Were
[101:30-101:32] SPEAKER_02: we in five was this too,
[101:32-101:32] SPEAKER_04: I don't
[101:32-101:33] SPEAKER_03: think
[101:33-101:33] SPEAKER_04: so
[101:37-101:41] SPEAKER_02: We're definitely in in this
[101:41-101:45] SPEAKER_04: yeah, and now you're like getting into a semantic argument with it right, so
[102:39-102:40] UNKNOWN: You
[102:49-102:50] SPEAKER_04: You You
[102:50-102:50] UNKNOWN: got
[102:50-102:58] SPEAKER_04: almost Downsized the space in the office Slash gym and just defaulted this
[102:58-104:03] SPEAKER_02: yeah It would disrupt you it's fine. I I do think that you know whenever we Have enough money to build the new Garage and offload the gym into the garage or whatever the game room so that part over where where the pool table is It's gonna become the gym right and in fact I think we probably can still move move the cold plunge and the sauna whatever like into into there Machines lined up over there and We don't need like a sitting area because at some point I was gonna use that a sitting area Another sitting area That'll be the gym and then Yeah, exactly and so I'm actually gonna add a sitting area into here or ish I so pull the pool table where the cars are that's just gonna become the pool table put the TV on one of the walls whichever one of them probably the North wall yeah the one on this side
[104:04-104:05] SPEAKER_04: Yes For going
[104:05-104:08] SPEAKER_02: out and similar to sit,
[104:08-104:08] UNKNOWN: but
[104:08-104:12] SPEAKER_02: just that's a hangout area But then it frees this up to be full on office You
[104:12-104:12] UNKNOWN: know
[104:12-104:26] SPEAKER_02: I'm gonna move my I haven't decided either because there's the desk and the workbench Like it I do still want to keep those yeah like so the bike is right or the desk whichever one in the desk Look whichever one
[104:26-104:32] SPEAKER_04: more likely to want the door open while you're sitting at your desk at some point, right? Right so
[104:32-104:35] SPEAKER_02: put the workbench over in that cubby and it will fit in there
[104:36-104:37] SPEAKER_04: Yeah,
[104:37-104:43] SPEAKER_02: and then where the treadmill is I was put a little Chair sitting
[104:43-104:51] SPEAKER_04: there Like corner couch yeah that actually turns that corner, but doesn't go to the door But like you're
[104:51-104:51] UNKNOWN: gonna
[104:51-104:53] SPEAKER_04: block the door like so I was just gonna
[104:53-104:57] SPEAKER_02: put like a shit something that's comfortable Maybe something like this or whatever like I
[104:57-104:57] UNKNOWN: just
[104:57-105:09] SPEAKER_02: either be able to sit and read and chill or whatever Don't know that I was sitting there very often, but basically yes something like this likes over by that window Right and then the desk that way
[105:16-105:16] SPEAKER_04: Yep,
[105:16-105:20] SPEAKER_02: um I think that's better for isolation
[105:24-105:26] SPEAKER_04: Right that is the my
[105:26-105:48] SPEAKER_02: concern of that that it just is gonna look trashy But it's fine like but I think that even better like move the desk out and it would be great if I had floor Plug -ins, but whatever figure out a way to manage that but that's ideal for being able to take meetings, right? So that there's never any activity behind me There's always a blank wall that you can then use a false background or just look at the wall.
[105:48-105:55] SPEAKER_04: Whatever Right exactly
[105:58-105:59] UNKNOWN: Oh
[105:59-106:03] SPEAKER_04: They'll just be fancy like wireless monitors that don't cost
[106:04-106:25] SPEAKER_02: But yeah, I agree like being able to see the activity that's going on right there and move the desk out this way Yes, it back there. That's ideal That is what I want you to do You got there Cluster is not up and now is the time to bring it
[106:25-106:25] UNKNOWN: up
[106:25-106:34] SPEAKER_04: Oh show so we got a few minutes there So we need to test once this is up and running we need to
[106:34-106:34] UNKNOWN: test
[106:34-106:41] SPEAKER_04: uploading multiple at once and then we're basically It once we test it and it works, right?
[106:42-106:42] UNKNOWN: The
[106:42-106:51] SPEAKER_04: next one beyond that is Multiple uploads at once then we like mega test it and upload the rest like because we need to catch up on everything We have on there. Oh,
[106:51-107:46] SPEAKER_02: I agree. Yeah, like do two or three Expunge everything like don't delete them. Right? I need to get them onto my computer so that It's not just stuff on there. Um But just two or three just get them working and then expunge it put them all back up there. It's like now we're I'm not sure how it is gonna do file naming, right? But you should name them based on The time that it was made right now the time that it was But I'm not sure that Yeah, but I'm sure it has metadata and that may be something that we need to do is say name the output file Based on the input file metadata So that when we go back and look at it it references the date we had the conversation not the date it was Whatever transcript
[107:47-107:52] SPEAKER_04: Yeah, which I usually be pretty close to the same but it's there plenty of scenarios where it wouldn't
[107:52-108:08] SPEAKER_02: right exactly And then the next thing I can art like going back and look at all of our radical notes and Indexing those and like doing the Database and all
[108:08-108:14] SPEAKER_04: yeah, but they jump to whatever the next thing is that still make it Tagging open and to the database.
[108:15-108:53] SPEAKER_02: Yep for sure What do you think about Going back and adding the time What? Like of the cluster management like so right now we have it daily manual,
[108:53-109:12] SPEAKER_04: right? So I had the shutdown based on the inactivity. Yeah I'm not against it like that. Those are this is literally what we talked about in reference to that is like we can do that Yeah, yeah, I'm not against it. Even if it's like if we come up with little Stuff that I can do versus stuff that we want to collaborate on
[109:16-109:17] SPEAKER_02: It's
[109:17-109:17] UNKNOWN: not
[109:17-109:40] SPEAKER_02: a matter that I don't trust you It's more than two things one I think we work well together and you catch things and I catch things when we're and Secondly learning like learning at the same time or staying on the same page or vice you work on something for a long time I think front end is kind of like that. You did so much front end stuff like I'm like No, what any
[109:40-109:40] SPEAKER_03: of this stuff is
[109:40-109:55] SPEAKER_04: I think it wasn't necessarily my strategy this morning I was just sleepy but you driving after I did a lot is probably a value way and vice versa Yeah, anybody else drove for most of the last whatever then you Force
[109:55-109:57] SPEAKER_02: you to be in there and figure out what's going on
[109:57-110:13] SPEAKER_04: And there's probably some value in Being this role after you've done that too and like looking at the work that you look like partially Vibe -coded. Yeah, so mixed in for
[110:13-111:10] SPEAKER_02: sure I very much I think it very much makes that makes sense to do that like when I was in the Navy like part of like as you get a lot of leadership training and things like that and one of the concepts is Getting too close to your team like that being like too involved in it in the day to day Like you lose your ability to have oversight Yeah, because you like you don't want to get sucked into things and if you do that's an indicator that well I need to bring in somebody else But if I'm in the day to day and I've lost my big picture concept come or whatever perspective Yeah, then I need to say something and say hey We we are not functioning well because I got sucked into day -to -day work And I'm intentionally trying to keep myself in a place where I can manage and look at all of the big picture and make Sure there and like tuning them and they're in the right places and solving the right problems Or if they need help bring in help when I'm monitoring that
[111:16-111:26] SPEAKER_04: Right 5a is inside of the development plan But the person that made the development plan didn't need to know about all the detail that's in the containerization aspect of 5a
[111:26-111:41] SPEAKER_02: In a cloud your context and you get to bog down into and you can't see the forest for the trees, right? And so I think there's value to having somebody in that role
[111:41-111:42] SPEAKER_05: Yeah,
[111:43-111:56] SPEAKER_02: and I I collaborate well not everybody does but I think we collaborate well Especially and I think there's value to having two people is wasteful in some mixed perspectives That two people could be off doing things
[111:58-112:01] SPEAKER_04: Where you bring your work back together and it's
[112:01-112:01] UNKNOWN: like
[112:01-112:08] SPEAKER_04: it's less Right. Yeah, ultimately those three phases might come together to be a little bit faster But maybe not but
[112:08-112:20] SPEAKER_02: maybe not right and my argument is that Doing individual work and trying to collaborate combining is less efficient less efficient than just collaborating on each of the phases all the way through
[112:23-112:24] SPEAKER_04: Yeah, I
[112:24-112:24] UNKNOWN: think
[112:24-112:41] SPEAKER_04: talking about like individual tasks to work on it's almost like hey Looking backwards. It would be like hey go do documentation like we did all the work do documentation Obviously, that's not a thing now, but like or even little cleanup tasks and all that stuff We don't need to collaborate on that
[112:41-112:41] UNKNOWN: Right,
[112:41-112:49] SPEAKER_04: I agree We're under agreement that like this thing we're deploying now is the operating one So all the stuff that doesn't use it or that it doesn't use needs to go
[112:49-113:40] SPEAKER_02: I mean, I certainly think that in this way a concept I got for the military as well specifically Navy I think all the service is kind of playing the same way in this concept of centralized planning But decentralized execution that we all come together make this Relatively elaborate and detailed plan together and then when you go off to your ships or wherever deploy Like you know, I know I'm doing this piece and I know that it sinks How I fit into the puzzle because I was there when we made it and I know what my role is and when I'm Communicating to the rest of the team. Hey, this is what we're doing and the reason why and it has to be this way You can't just change this because this person is gonna do When when we throw up this flag It's gonna tell them to go do this other piece right that is part of this plan with a hundred pieces in it And we're doing pieces two through eight,
[113:40-113:59] SPEAKER_04: right? Process Almost all of that like the stuff the people you are interacting that's a yeah I like we're still at the level above that is like planning and then But it's also not that because we're also the manager of the actual execution steps throughout and there's these different things like different new wave
[113:59-114:18] SPEAKER_02: But I think maybe the first thing we do once we have all the notes even before we build the system is use the notes and Everything from this and our transcripts to describe the loop to describe the system What
[114:18-114:29] SPEAKER_04: it how and describe even what we want it to be like that? like we talked about obsidian and tagging and vector databases and all these different things like Tell us what we're trying to do right like what's the
[114:29-114:57] SPEAKER_02: general problem -solving? methodology right and then like maybe Separate from a or maybe well the AI based problem -solving methodology What does this look like from big planning down the sessions down the way and like what are the different? What is that? How do you do it? And then once you have that? Okay, well, let's build it exactly. Yeah What are the different tools that are needed to do this? How can we use existing tools? Whatever? Yep, and I
[114:57-115:05] SPEAKER_04: think the full -on collaboration with the AI and how to work as a team to build big shit
[115:11-115:12] SPEAKER_02: I
[115:12-115:12] UNKNOWN: Think
[115:12-115:26] SPEAKER_02: maybe you just give it give it a second. Yeah, give it a second Well the cluster still shows Not complete for
[115:26-115:53] SPEAKER_04: me. Oh, really? Oh You're right me too. So it's definitely not gonna be I don't know why that script finished We scroll up like where it was deploying the cluster We can't see the output but it said completed
[115:53-115:54] SPEAKER_01: yeah
[116:01-116:26] SPEAKER_02: The job controller deployment script Yeah, so it deployed it it did it right but it never gave like any feedback of it deploying Or I guess it doesn't it wasn't a script. It's just an apply. Yeah, you've CTL apply exactly and then it should just that's not right I know Shouldn't we have isn't there a script?
[116:27-116:29] SPEAKER_04: I don't think for this
[116:34-116:34] SPEAKER_02: Yeah,
[116:34-116:34] UNKNOWN: I think it's
[116:34-116:36] SPEAKER_02: Like we used to have one.
[116:36-116:37] SPEAKER_04: Oh, you're all right
[116:37-116:43] SPEAKER_02: that that sounds like it does it does a lot of things Yeah, yeah,
[116:43-117:50] SPEAKER_04: we need to delete that job Tell it explicitly to go look at that and make sure the line still with the design You
[117:50-117:50] UNKNOWN: You
[117:50-117:51] SPEAKER_04: get surgeon
[118:21-118:22] SPEAKER_02: You
[118:22-118:22] UNKNOWN: Because
[118:22-118:34] SPEAKER_02: it does the config map too because yeah the the job template and Config map stuff needs to go together. I don't know exactly How right?
[118:40-118:41] UNKNOWN: Yeah
[118:47-118:50] SPEAKER_04: That the police group built it as part of it,
[118:50-118:51] UNKNOWN: right?
[118:52-119:21] SPEAKER_02: Yeah Yeah Yeah,
[119:21-119:21] UNKNOWN: so
[119:21-119:31] SPEAKER_02: I think it goes through the process of Deploying and making sure the latest version is already up there and it should be fast if it is right But if it checks to make sure what I
[119:31-119:34] SPEAKER_04: have Yeah, it triggers the it actually
[119:34-119:43] SPEAKER_02: does the bit like this is a CI CD pipeline in the big scheme of things This is hey, I'm gonna actually build what's in here and if it's the right one good, it'll be very fast.
[119:44-120:12] SPEAKER_04: Yep Yeah, it's gonna roll out we should see a job probably pending already I
[120:12-120:12] UNKNOWN: That
[120:12-120:17] SPEAKER_02: is like so yeah, we have two scripts, yep and
[120:17-120:23] SPEAKER_04: deploy the cluster then deploy the job and then there's a function that actually like Starts jobs,
[120:23-120:35] SPEAKER_02: right? Well, there is well the job controller is what it should be doing is looking at this cube and it's on pool when it looks There's something that you it will pull one job at a time executed I
[120:35-120:45] SPEAKER_04: guess not even Looking it depends on what you call it between pub sub and the job controller Like pub sub is like send it subscribe to it. No,
[120:45-121:22] SPEAKER_02: like so you can do push or pull Okay, and so the the pub sub Topic is pull And the job controller knows that and it's watching it to see if there's anything in there and if it is it will pull one at a time and it will Expunge it after it can even make a job It will pull make a job based on it complete it and delete it and then pull the next one So it's not just pushing a bunch of them to it is designed to pull you can do either one Um, and so now it's gonna look to see whatever files are in there And so this should be a full and so we're gonna upload a new test a new file, right? And it should
[121:24-121:32] SPEAKER_04: Yeah The first pass got right right
[121:34-121:39] SPEAKER_02: Yeah, so this should kick off yeah the job the one job exactly
[121:54-121:58] SPEAKER_04: About it yeah, it's not even probably gonna get provisions Yeah,
[121:58-122:00] SPEAKER_03: but this is good stuff
[122:00-122:08] SPEAKER_04: I agree Well,
[122:12-122:24] SPEAKER_02: I mean I think we're definitely like it should like I don't know I don't truly expect it to work in in right here. There was a lot of code that it built. Yeah, but Theoretically, we just got a troubleshoot through that
[122:24-122:30] SPEAKER_04: That code is largely Putting working code into the right place
[122:30-122:37] SPEAKER_02: should have taken working code But I don't know that it actually did
[122:37-122:37] SPEAKER_04: that
[122:42-122:57] SPEAKER_02: But we have a hitch we have working code available And I think that's a good thing that they I that it did it this way and it completed a whole new Folder for this so we didn't touch the stuff that was already built
[122:57-122:58] SPEAKER_05: right
[122:58-123:01] SPEAKER_02: we've made a new folder with new code in it Yeah, right.
[123:01-123:01] UNKNOWN: So
[123:01-123:07] SPEAKER_02: literally you go look it didn't change this in there This stuff stuff that worked yesterday is there an unmodified
[123:07-123:08] SPEAKER_04: right?
[123:08-123:08] UNKNOWN: And
[123:08-123:13] SPEAKER_04: if everything we have in here is the same as that then it's a Kubernetes issue, right?
[123:17-123:17] UNKNOWN: And
[123:17-123:23] SPEAKER_04: that's what we didn't have before and we couldn't tell it whenever it started to go look at random shit Whether it was wrong or not,
[123:23-123:24] SPEAKER_00: right?
[123:36-123:38] SPEAKER_04: It does take several minutes
[124:03-124:14] SPEAKER_02: My Guess is it's not because even in the beginning like it starts to have CPU Maybe not maybe I'm being patient
[124:14-124:17] SPEAKER_04: Yeah, it's a balancing act.
[124:17-124:17] UNKNOWN: It
[124:17-124:20] SPEAKER_04: might be early enough to tell it tell cursor to go look.
[124:20-124:23] SPEAKER_02: Yeah, it's you know in a loop
[124:23-124:24] UNKNOWN: I
[124:27-124:29] SPEAKER_02: Believe I don't know what it's doing. I don't know that that
[124:29-124:54] SPEAKER_04: would stop that it's just looking at logs So it's not gonna stop any jobs Is it clearly needs to look at different logs because that is still running but like what's going on with it And if it's like those Like CSI drivers and stuff like that it just goes into that mode until the pod fails
[124:54-124:58] SPEAKER_02: Yeah, so it has CPU and memory now. It doesn't have GPU.
[124:58-124:59] SPEAKER_04: Yeah
[125:00-125:07] SPEAKER_02: But that's the pending part. Yeah So it's just a little longer than I expected but
[125:07-125:09] SPEAKER_04: not bad yeah, I saw this a few times yesterday
[125:20-125:27] SPEAKER_02: All right, I got it I'm gonna plan on coming back here and starting work here.
[125:27-125:28] SPEAKER_04: Yeah, I'll just leave the door open

==================================================
Generated on: 2025-07-30 15:26:49
Total words: 14481
Total speakers: 8
==================================================




Summary:


creation_date: 2025-07-30 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-30_1505_ZOOM0049_transcript.txt participants: [SPEAKER_02, SPEAKER_04, UNKNOWN, SPEAKER_00, SPEAKER_03, SPEAKER_01, SPEAKER_06, SPEAKER_05]
Executive Summary
The primary focus of this meeting was to review the project's status and plan the execution of Phase 5B, which involves integrating three separate services into a single, sequential pipeline. The participants reviewed the phase development plan, confirming the completion of Phase 5A and identifying the necessary updates to the [[Job Controller]] and deploy_cluster script. They discussed development strategies, such as providing explicit context files to the [[AI Tools|AI tool]] and adopting a workflow that mirrors managing pull requests. A key decision was to move forward with an architecture that treats all three services as a single job, streamlining the process. The conversation also explored the broader implications of their AI-augmented development process, highlighting the potential for small teams to achieve the output of much larger ones and the importance of teaching these skills to a wider group.

Key Topics Discussed
	•	Project Status & Phase 5B Planning
	•	The team is currently on Phase 5B: Production Integration, which involves creating a sequential pipeline by combining three services into one job [03:15-03:51].
	•	They confirmed that Phase 5A is complete, which involved setting up necessary [[Service Account]]s and configurations [15:35-16:13].
	•	The deploy_cluster script requires updates to support the new integrated pipeline [04:08-04:18].
	•	The [[Job Controller]] needs a "major update" to handle the unified job structure [16:19-16:46].
	•	Development Workflow & Strategy
	•	Discussed providing explicit context files to the [[AI Tools|AI tool]] ([[Cursor]]) to improve its performance, even if it leads to more frequent chat restarts [09:30-10:04].
	•	The development process is compared to managing pull requests, where each prompt or session acts as a contribution to be reviewed and integrated [23:01-23:17].
	•	There was a consensus on leveraging their AI-driven workflow to accelerate development, noting that a task that would have taken weeks can now be completed in sessions [21:48-22:31].
	•	The team plans to fully integrate their personal and professional work, using their AI-augmented process to accelerate both, creating a highly optimized and collaborative environment [35:26-36:42].
	•	Cost & Resource Management
	•	A brief cost analysis showed daily expenses of a few dollars for compute and build resources, which was considered very reasonable for the level of research and development [04:41-05:36].
	•	They discussed the trade-offs between using on-premise [[GPU]] resources versus cloud-based [[GCP]] resources, highlighting the value of speed and cost-effectiveness [30:03-31:26].
	•	Future Vision & Collaboration
	•	The participants reflected on how their hybrid skillset (traditional coding foundation plus advanced [[AI Tools]] usage) gives them a unique advantage [43:19-45:01].
	•	A key vision is to teach their AI-driven development methods to a larger group, enabling everyone to "become fucking savages" and grow together by tackling their own projects with these advanced tools [24:06-25:16].

Action Items & Decisions
	•	Decision: To proceed with the architecture of combining the three services into a single, unified job [16:47-17:43].
	•	Action: Update the phase development plan to reflect the successful completion of Phase 5A and the new, detailed session-based plan for Phase 5B [26:24-27:37].
	•	Action: Update the [[Job Controller]] to manage the new integrated three-service job pipeline [16:19-16:46].
	•	Action: Update the deploy_cluster script to correctly deploy the new service accounts and configurations for the unified pipeline [04:08-04:18], [15:35-16:13].

Suggested New Links/Tags
	•	Phased Development Plan

Linked Concepts
	•	[[AI Tools]]
	•	[[Artifact Registry]]
	•	[[Cloud Build]]
	•	[[Cloud Function]]
	•	[[Cloud Run]]
	•	[[Cluster Manager]]
	•	[[Cursor]]
	•	[[GCP]]
	•	[[GitHub Actions]]
	•	[[GPU]]
	•	[[Job Controller]]
	•	[[Knowledge Management]]
	•	[[OKC Thunder]]
	•	[[Phased Development Plan]]
	•	[[Pub/Sub]]
	•	[[Python]]
	•	[[README]]
	•	[[Service Account]]
	•	[[Transcription Service]]
	•	[[Vibe Coding]]
	•	[[Whisper]]
	•	[[Workload Identity Federation]]

#Tags
	•	#AI
	•	#Automation
	•	#Deployment
	•	#GCP
	•	#SoftwareDevelopment
	•	#Startups
	•	#Troubleshooting

zoom55
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-26_1344_ZOOM0055_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:00] UNKNOWN: It
[00:00-00:02] SPEAKER_02: is now recording.
[00:06-00:07] UNKNOWN: Okay go.
[00:08-00:17] SPEAKER_02: So when you think about the decision, what are you thinking? Like so you for sure you've mentioned two row versus three row.
[00:18-00:18] SPEAKER_01: Yes.
[00:20-00:22] SPEAKER_02: What are your thoughts on it? What do you think about?
[00:22-00:34] SPEAKER_01: I think about having enough space for three car seats and if I get a two row I will get a two row that has enough space for three car seats.
[00:34-00:35] SPEAKER_02: Meaning it's wide enough?
[00:36-00:49] SPEAKER_01: Wide enough. But then also I think if I get a two row am I going to be disappointed that I didn't get a three row because a three row is what I'm used to in that space.
[00:49-00:54] SPEAKER_02: What makes you think you would be disappointed? What about a three row is different than a two row?
[00:54-00:58] SPEAKER_01: Just having more room to accommodate more people.
[00:58-01:01] SPEAKER_02: Like being longer and having more physical seats?
[01:02-01:02] UNKNOWN: So
[01:02-01:19] SPEAKER_02: it's not just having three car seats. How many seats do you want? So five is not enough. I mean because from that perspective the third row adds two seats so you can then haul seven people instead of five.
[01:19-01:19] UNKNOWN: That's
[01:19-01:31] SPEAKER_01: right but I don't necessarily want to do that but I also don't want to get a five seater and then be like crap I should have gotten a seven seater.
[01:32-01:38] SPEAKER_02: Why? What would make you say that? When do you need seven seats?
[01:40-01:40] SPEAKER_01: Like
[01:40-01:41] UNKNOWN: if
[01:41-01:46] SPEAKER_01: we, my sisters and all the kids and we all want to ride together.
[01:47-01:51] SPEAKER_02: And your mom's not going because your mom can't drive. She has seven seats.
[01:51-01:53] SPEAKER_01: Yeah right.
[01:54-02:05] SPEAKER_02: It's like this is my perspective I'm adding too many things to this probably in that letting you talk but the it's like one person needs one person in the family needs a truck. Not everybody.
[02:05-02:05] SPEAKER_01: Right. Just
[02:05-02:06] SPEAKER_02: the one person.
[02:06-02:07] UNKNOWN: Right.
[02:07-02:19] SPEAKER_01: But also like when the one person has the truck then you have to organize with them and that's kind of you know sometimes annoying or.
[02:20-02:25] SPEAKER_02: So in some cases you foresee needing and wanting seven seats.
[02:25-02:28] SPEAKER_01: Right. But not all the time.
[02:29-02:39] SPEAKER_02: Right. Which one's more important? Why do you, what makes you want to have two rows? What are the advantages of having two rows in your
[02:39-02:39] UNKNOWN: life?
[02:39-02:48] SPEAKER_02: Or there are none other than there are cars you like better that have two rows. If you could find the, you for sure prefer three. No question.
[02:48-02:48] SPEAKER_00: You
[02:48-02:52] SPEAKER_02: just can't find a car that you like and can afford in three rows.
[02:52-02:52] SPEAKER_00: Right.
[02:53-02:54] SPEAKER_02: Other than the Palisade.
[02:55-02:55] SPEAKER_01: Right.
[02:55-02:56] SPEAKER_02: Which you already have.
[02:56-02:57] SPEAKER_01: Right.
[02:57-02:58] SPEAKER_02: And you don't want another Palisade. Why?
[02:59-03:06] SPEAKER_01: I don't know. I just don't want to get the same car that I already have. It seems silly to me.
[03:07-03:08] SPEAKER_02: What about Telluride?
[03:10-03:13] SPEAKER_01: Telluride's aren't as big as the Palisade.
[03:15-03:18] SPEAKER_02: But it's the next best thing.
[03:19-03:20] SPEAKER_00: It's
[03:20-03:21] SPEAKER_02: bigger than the Murano.
[03:22-03:22] SPEAKER_00: Yeah.
[03:23-03:25] SPEAKER_02: So would you prefer the Telluride or the Murano?
[03:28-03:30] UNKNOWN: I don't know.
[03:30-03:39] SPEAKER_02: That is the decision. So what in your mind makes you like the Murano more than the Telluride? Because it's three rows, it has seven seats.
[03:40-03:40] UNKNOWN: You
[03:40-03:48] SPEAKER_02: said it's smaller compared to the Palisade. Which again, I will point out that we're saying the Palisade is the best. It is the number one option.
[03:48-03:48] SPEAKER_00: Right.
[03:48-03:54] SPEAKER_02: The only reason you don't like it is because you currently have one and you don't want to buy the same car twice. Right. It's not that I don't like it.
[03:54-03:54] UNKNOWN: It is the
[03:54-03:54] SPEAKER_02: answer. I
[03:54-03:55] SPEAKER_01: love it.
[03:55-03:55] SPEAKER_02: Right. It is
[03:55-03:55] UNKNOWN: the answer. But
[03:55-03:56] SPEAKER_02: I just
[03:56-03:58] SPEAKER_01: don't want to buy the same car twice. Yeah.
[03:58-04:14] SPEAKER_02: So in my mind, well, the next best thing for you, I'm trying to apply logic to your words, by the way, this is what I'm doing, is, well, then what's the closest thing to the Palisade? And it is the Telluride. But for some reason, what I want you to do is articulate why you don't like the Telluride.
[04:18-04:24] SPEAKER_01: In my mind, it's smaller than the Palisade. And that's why I don't.
[04:24-04:29] SPEAKER_02: But it's bigger than all of these other cars that you... It's bigger than the model. It's bigger than all of the other things you've mentioned.
[04:29-04:29] UNKNOWN: I
[04:29-04:32] SPEAKER_01: also think I don't want the same car as somebody else.
[04:32-04:44] SPEAKER_02: I understand. That's... I haven't heard you say those words, but I assume they were in there. That's it?
[04:45-04:51] SPEAKER_01: I guess. Like the... I really, really, really like the Nissan Ramada.
[04:54-04:54] UNKNOWN: But...
[04:54-04:59] SPEAKER_01: They're very expensive, unless we could find one that was in our price range.
[05:01-05:06] SPEAKER_02: And that's literally the... Well, I mean, I bet we could find one. I need to do the research, but used...
[05:09-05:13] SPEAKER_01: Like... That's another concern. You don't like to buy used parts.
[05:13-05:36] SPEAKER_02: I don't. I'd have to do the research. I can get there, but... They're just truckish. They're not truckish. They are trucks. The Nissan Ramada is a truck chassis with a SUV, right? So the reason that's a concern to me is it has truck components, 4x4 type stuff that breaks.
[05:37-05:37] UNKNOWN: Like
[05:37-05:37] SPEAKER_02: it's complex.
[05:37-05:37] UNKNOWN: If
[05:37-05:38] SPEAKER_02: you're
[05:38-05:40] SPEAKER_01: using it like that. No, just
[05:40-05:51] SPEAKER_02: from normal... Like it's much more complicated than just a normal car that's designed to drive 300 ,000 miles. Like it is designed to do off -road stuff, and it's just much more complex and has more stuff
[05:51-05:52] SPEAKER_00: that
[05:52-05:57] SPEAKER_02: can break. Even though you want to just use it as a passenger car,
[05:58-05:58] SPEAKER_00: it
[05:58-06:08] SPEAKER_02: is not a passenger car. You are buying a 4x4 off -road vehicle and using it as a passenger car. And that's what I'm saying. Like it has... It's much more complex.
[06:09-06:09] SPEAKER_01: Yeah.
[06:11-06:21] SPEAKER_02: And it gets like 12 miles to the gallon. Yeah. It's a truck. It's a big truck that you're going to drive around as an SUV.
[06:21-06:21] UNKNOWN: It
[06:21-06:22] SPEAKER_02: is a people carrier.
[06:22-06:23] SPEAKER_01: Right.
[06:23-06:25] SPEAKER_02: It's just nice. But,
[06:26-06:26] UNKNOWN: okay.
[06:26-06:27] SPEAKER_02: What do you like about that car?
[06:28-06:38] SPEAKER_01: I like the way it looks. I like how much space there is inside. It's bigger on the inside than mine. I like how up high it is.
[06:38-06:50] SPEAKER_02: I feel like if you're going to get that, you should get the passenger car version of that. Tahoe...
[06:50-06:50] UNKNOWN: One
[06:50-06:56] SPEAKER_02: of those big three -row large SUVs. That is that. That's not a truck.
[06:57-06:59] SPEAKER_01: Those are not truckish.
[06:59-07:12] SPEAKER_02: They are not. They are like... Or what do you call the must -afford versions of those? The Expedition. Those are not... You can get truck versions of them, but you also can get just regular car versions of those.
[07:13-07:17] SPEAKER_01: Yeah. You're very against the Armada.
[07:17-07:32] SPEAKER_02: I am. I am very against it. And my reasons are very logical. I'm not saying that that's necessarily better. The reason you like it is because it's pretty. But that's like saying in my mind...
[07:32-07:32] SPEAKER_00: In your mind.
[07:33-07:40] SPEAKER_02: I know. I get it. That you like the way it looks. But you are effectively buying a tank and saying,
[07:41-07:41] UNKNOWN: well,
[07:41-07:58] SPEAKER_02: it's pretty. I just like the way it looks. It's really expensive to operate. It's really expensive. Expensive to operate because it gets very bad gas mileage and it's complicated. Therefore, it means it's going to break a lot. Which is all things you don't want to do when you buy a car.
[07:59-08:01] SPEAKER_01: Right. But how do
[08:01-08:01] UNKNOWN: you
[08:01-08:02] SPEAKER_01: know if they break a lot?
[08:03-08:25] SPEAKER_02: I don't know. I haven't done the research. And it may be okay to buy a used version of that. But they're so expensive that in general, we had to buy a used one to get it. And I don't know. But in general, we can do the research and we may be able to find... It may just be that Nissan Armados are very, very reliable. They run for 10 years. Finally use one that's going to be great.
[08:25-08:26] SPEAKER_00: Yeah.
[08:26-08:42] SPEAKER_02: But I doubt that. But maybe. It might be the case. But that is an unnecessarily complicated situation to do that. I may be wrong. But the alternative in my mind to saying,
[08:43-08:43] UNKNOWN: hey,
[08:43-09:00] SPEAKER_02: just to get this thing that I like the shape of it, that's actually not very well suited, well, there's other... Then that's why it's like, well, then look at the other equivalent things that you do like. If you want just a big giant three -row SUV, there's a whole line of them.
[09:00-09:01] SPEAKER_01: Yeah.
[09:01-09:03] SPEAKER_02: There's several. But you don't like any of those?
[09:04-09:06] SPEAKER_01: I'm not a fan of them.
[09:08-09:08] UNKNOWN: Okay.
[09:10-09:14] SPEAKER_02: Well, then how about this? How about if...
[09:14-09:14] UNKNOWN: What
[09:14-09:33] SPEAKER_02: have I said? And I don't know that this is true. And I'm just doing this as a test case for the Armada. You like the Armada. For the new version, say the new version that you want costs $80 ,000. Is it worth saving $20 ,000 just to get that?
[09:33-09:40] SPEAKER_00: Hmm. I don't know.
[09:40-09:45] SPEAKER_02: Why? What don't you know? What does it make
[09:45-09:45] UNKNOWN: you think? Well,
[09:45-09:45] SPEAKER_02: it
[09:45-09:47] SPEAKER_01: just makes me think...
[09:47-09:50] SPEAKER_02: Do you like it that much? Sorry, go ahead.
[09:50-09:56] SPEAKER_01: What our time frame is. I don't think that we're in a rush to get a car.
[09:56-10:13] SPEAKER_02: Or maybe think about it as a bonus. It doesn't matter whether it's saving or using the bonus. So when we get the bonus in March or April, is it okay to take $20 ,000 of it just to have that car? No. Well, that's the same as saving. It's $20 ,000. Is it worth just to have that car compared to any other one?
[10:13-10:14] SPEAKER_00: Yeah.
[10:14-10:24] SPEAKER_02: Is it worth the extra $20 ,000 and then paying on it for six years? That's what an 80 -thousand... So then the flip side of this is
[10:24-10:24] UNKNOWN: the
[10:24-10:55] SPEAKER_02: used version to get to that. To get the version you want in a price range that you want. The worst case of buying that car is the situation that breaks into it. Something dramatically is wrong with it that keeps breaking. That then makes your $60 ,000 car worth $20 ,000 because you've got to replace the transmission and it's not under warranty. And that is a risk of that. I don't know that, but that is when I think about buying a used truck,
[10:55-10:55] SPEAKER_00: it
[10:55-11:06] SPEAKER_02: is that. It's out of warranty. Something major is wrong with it. The last person tracked it. We just don't know. You bought this off this lot. Here you go. And it starts to have problems.
[11:06-11:11] SPEAKER_01: I agree with that, but I also would like to look into that.
[11:11-11:21] SPEAKER_02: No, I think we should. But that's what that decision looks like to me. I don't think that either one of those is an unreasonable perspective.
[11:21-11:29] SPEAKER_01: No, I agree. And I don't think that we should buy a brand new one because they're very expensive. We can't buy a brand new one because we
[11:29-11:32] SPEAKER_02: could. We would have to spend $20 ,000 from the bonus.
[11:32-11:41] SPEAKER_01: Right. And I don't think that we should do that. But if you do research and find that it's OK, then I would like to look at used ones.
[11:43-11:49] SPEAKER_02: Where does that stack rank in the decision? So that's one potential option. They used our model.
[11:49-11:50] SPEAKER_01: I think
[11:50-11:52] SPEAKER_02: compared to Palisade and
[11:52-11:52] UNKNOWN: the others.
[11:52-11:52] SPEAKER_02: No,
[11:53-11:53] UNKNOWN: I
[11:53-11:56] SPEAKER_01: think compared to the three rows.
[11:56-12:13] SPEAKER_02: Compared to any of like so what I would say in the decision options so far, Palisade is no, because you don't want to do that. Tell you right is potential. But then the other options are Marano model used Model X. Like where does it stack? Those are the options.
[12:13-12:13] UNKNOWN: I think Marano is
[12:13-12:15] SPEAKER_01: the top of my list.
[12:15-12:20] SPEAKER_02: OK, so Marano is number one and used Armada is number two.
[12:21-12:21] SPEAKER_01: Yeah.
[12:22-12:26] SPEAKER_02: Why is Armada or why is Marano higher than Armada?
[12:28-12:34] SPEAKER_01: Because it costs less and I loved my old Marano.
[12:35-12:36] SPEAKER_02: And but when you think about it,
[12:37-12:37] UNKNOWN: just
[12:37-12:41] SPEAKER_01: because I left my old Marano doesn't mean I'm going to live a new one.
[12:41-12:45] SPEAKER_02: The only thing I've ever heard you say about it is you love the seats.
[12:46-12:46] UNKNOWN: Yes.
[12:46-12:51] SPEAKER_02: Right. But all other things that we've talked about are size.
[12:52-12:52] SPEAKER_01: Yeah.
[12:53-12:58] SPEAKER_02: The only like size and the shape. Like do you like it is that if it's like the way the body
[12:58-13:00] SPEAKER_01: looks. I mean, yes. No,
[13:00-13:04] SPEAKER_02: I'm saying when you when you've talked about what you like in a car, you've only talked about two things
[13:04-13:06] SPEAKER_00: this
[13:06-13:14] SPEAKER_02: whole time. Then was in the last week. But we've been talking about this for six months. You've only talked about two things. One is the way it looks,
[13:14-13:14] SPEAKER_00: which
[13:14-13:28] SPEAKER_02: makes sense. And the only other thing I've ever heard you talk about or two other things, I guess, is the size. And then only when you talk about the Marano, you talk about the comfort of the seats. That's the only
[13:28-13:28] UNKNOWN: the
[13:28-13:47] SPEAKER_02: only reason you like that car. And so in my mind, you are not going to like it because everything else you've ever talked about is how many seats it has, how big it is, how much cargo space. All of those things like that. But you're willing to give up all of those things that you want in a car to say, well, the seats are comfortable.
[13:47-13:47] SPEAKER_00: Yeah.
[13:49-14:01] SPEAKER_02: I don't know. I mean, maybe. But maybe the answer is to look for a three or something that has the size and seat capacity that you like that also has good reviews of comfortable seats. So that will be similar.
[14:01-14:02] SPEAKER_00: Yeah.
[14:02-14:19] SPEAKER_02: But I don't think you should give up all of those things that you've really talked about just to say, I really like the seats in this car that I had 10 years ago. What else? What other options?
[14:21-14:26] SPEAKER_01: I mean, I haven't really thought about the discovery. I don't know anything about the discovery.
[14:26-14:27] SPEAKER_02: What do you like about it?
[14:27-14:33] SPEAKER_01: I like the way it looks. I have read that they're comfortable.
[14:34-14:44] SPEAKER_02: Do you like the fact that it's specifically fancy and luxury? Do you want that aspect of in a car? So you would not be happy with a suburban, but you would be with an Escalade.
[14:45-14:55] SPEAKER_01: If money was I don't think I would be happy with either a suburban or an Escalade. Why? Because I feel like those are too big. They're bigger.
[14:56-15:00] SPEAKER_02: They are bigger. But how did you get to too big?
[15:00-15:01] SPEAKER_01: They are a lot bigger.
[15:01-15:02] SPEAKER_02: Sorry. They
[15:02-15:03] SPEAKER_01: are a lot bigger. They
[15:03-15:04] SPEAKER_02: are a lot bigger, but
[15:04-15:05] SPEAKER_01: I couldn't do that.
[15:05-15:08] SPEAKER_02: You would be worried about parking in and stuff like
[15:08-15:08] UNKNOWN: that?
[15:08-15:13] SPEAKER_01: Yes. Yes. Like I have no issues.
[15:14-15:15] SPEAKER_02: And you don't feel like the Armada is that big?
[15:15-15:16] SPEAKER_01: No.
[15:16-15:17] SPEAKER_02: Okay.
[15:17-15:27] SPEAKER_01: I feel comparable to mine. The only thing that I feel different in it whenever we drove that one was how much higher up I am. And I love that. I
[15:27-15:27] UNKNOWN: love it.
[15:32-15:33] SPEAKER_01: Hi Google, stop.
[15:55-15:56] UNKNOWN: I
[15:56-15:57] SPEAKER_01: actually forgot this
[15:57-15:58] UNKNOWN: was cooking.
[15:59-16:09] SPEAKER_02: Good thing you set an alarm. Oh, that shop notification is for coffee arriving today.
[16:09-16:09] UNKNOWN: It
[16:09-16:11] SPEAKER_02: is actually working.
[16:11-16:11] UNKNOWN: Finally,
[16:11-16:14] SPEAKER_01: because I just used the last of it. That is perfect.
[16:16-16:19] SPEAKER_02: So we were talking about why you think
[16:19-16:19] SPEAKER_01: that
[16:19-16:25] SPEAKER_02: no suburban is too big. I think or maybe we were on discovery. The
[16:25-16:29] SPEAKER_01: suburban is super long escalates super long. I don't want that.
[16:30-16:35] SPEAKER_02: I only want seven seats. You want more seats and not necessarily more cargo space.
[16:35-16:47] SPEAKER_01: Yeah. I mean, I would love to have more cargo space, but the fact that you can put the seats down is good. I would love to have a suburban and feel comfortable in it and have all that space. But I
[16:47-16:47] UNKNOWN: know
[16:47-16:49] SPEAKER_01: that I won't fit in the garage and I know that I
[16:49-16:54] SPEAKER_02: won't feel.
[16:54-16:55] SPEAKER_01: I
[16:55-16:55] UNKNOWN: would love to have a more comfortable room.
[16:56-16:57] SPEAKER_01: Yes.
[16:58-16:58] UNKNOWN: So
[16:58-17:01] SPEAKER_02: discovery. Just like the way it looks.
[17:01-17:02] SPEAKER_01: I like the way it looks.
[17:02-17:02] UNKNOWN: And
[17:02-17:03] SPEAKER_01: I've.
[17:03-17:03] SPEAKER_02: Is it three rows.
[17:03-17:10] SPEAKER_01: Looked it up and I don't think it's three rows. And they said the comfort level is really good on that one.
[17:11-17:14] SPEAKER_02: So why is it on the list? If it's not three rows.
[17:17-17:19] SPEAKER_01: Because I like the way it looks.
[17:19-17:24] SPEAKER_02: So but you'll be willing to compromise three rows because you like the way it looks
[17:24-17:47] SPEAKER_01: like I had three rows before I got the last Murano. And when I got the Murano, I wasn't. Upset about not having the three rows. And that's my predicament is. If I don't have the three rows. If I don't get three rows. Am I going to be just as happy as I was last time I didn't have three rows?
[17:47-17:47] UNKNOWN: I
[17:47-17:58] SPEAKER_01: was so happy with that car and I had two cars before that that were both three rows. And I said I would never buy another car without three rows. And I did. And I loved that car.
[17:58-18:26] SPEAKER_02: So here's the what pops in my head when the three row conversation for you. It is like a guy trying to decide whether you should get a truck or not. Like so let's call it even a F1 F1 50. They're pretty expensive. 50 compared to all the different things you can get for 50 ,000 dollars. But the value of the truck is well, I can tow it an RV. I can tow something heavy. If I need to.
[18:27-18:27] UNKNOWN: I
[18:27-18:47] SPEAKER_02: got a bed I can put plywood. I can do all this stuff. It's like well how many weeks or days a year or days? Yes, it's called days a year. Do you need to tow an RV to tow something that weighs 10 ,000 pounds? How many days? That's what the decision factor is like. Well for me,
[18:47-18:47] UNKNOWN: I
[18:47-18:49] SPEAKER_02: mean trucks are cool on the day that I need it.
[18:49-18:50] SPEAKER_00: But
[18:50-18:56] SPEAKER_02: all other days it is not advantageous. Because it's big and it's expensive to operate.
[18:56-18:56] UNKNOWN: Meaning
[18:56-19:00] SPEAKER_02: it gets low gas mileage and it takes up a lot.
[19:00-19:00] UNKNOWN: It's
[19:00-19:00] SPEAKER_02: hard to drive.
[19:00-19:00] UNKNOWN: All
[19:00-19:24] SPEAKER_02: those things like that. Ideally it would be I want something much smaller and cheaper because I just do commuting and going. I don't need a truck. Unless I worked in construction or I towed something regularly. We ruled the chenille, went camping. Then you need a truck, right? Because you use it a lot. So I think applying this to your decision, how often do you actually use seven
[19:24-19:24] UNKNOWN: seats?
[19:24-19:24] SPEAKER_02: I've had
[19:24-19:24] SPEAKER_01: that thought.
[19:25-19:27] SPEAKER_02: It's like once a year maybe.
[19:28-19:33] SPEAKER_01: I feel like I just need to make sure I have room for Sydney and the boys and that's it.
[19:34-19:49] SPEAKER_02: In my mind that's the primary criteria. If you're going to take a girls trip, ask your mom to drive. Ask to borrow her car even if she's not going. Or rent a car on that day. That's the thing about towing and stuff like that.
[19:49-19:49] UNKNOWN: Well
[19:49-19:51] SPEAKER_02: I'm probably not going to tow a boat ever.
[19:52-19:52] UNKNOWN: But
[19:52-20:03] SPEAKER_02: whatever. But the equivalent for me is Lowe's. Home Depot, that kind of stuff. Or even furniture like the decision we were looking at. It is like on that day, okay well I'm going
[20:03-20:03] UNKNOWN: to
[20:03-20:03] SPEAKER_02: rent a U
[20:03-20:04] SPEAKER_00: -Haul.
[20:04-21:00] SPEAKER_02: Or I'm going to pay for, I'm going to pay, I'm going to buy the boat and pay $500 for shipping. Because, but that's better than paying an extra $20 ,000 for this capability that you don't use very often. You can pay a few hundred dollars and it sucks. But you have to think about it as compared to, well I could have this truck lying around forever and ever. And drive it every day and all the extra expense associated with it just for, aha I already have it. I'll just come pick it up. That doesn't, it's a $500 decision compared to a $30 ,000 decision probably between the extra expense of buying it and operating it. So buying something that just to have this capability of seven seats to use it once a year is not, you can literally reserve $1 ,000 a year to rent a car and take a trip every time. And it's still be cheaper than buying something that's much more expensive.
[21:01-21:02] SPEAKER_01: I agree.
[21:03-21:40] SPEAKER_02: And so that then puts you at two rows. And then, then you can get a, this is what I was trying to describe before, but you can get a much nicer car in two rows because it's just smaller and cheaper. You can then get up to higher end. Like if, for instance, if it is Murano, you can get, you don't ever need to look at anything below Platinum. Ever. To stay below 60 for a regular SUV, you can basically get anything. It opens your aperture way up to get anything if you reduce down to just two rows or regulars,
[21:40-21:40] UNKNOWN: you
[21:40-22:09] SPEAKER_02: know, Mom SUV or just literally luxury SUV. Then you can be in that luxury SUV class, high end. And I think there's a lot in that range. You could even do like the Lexus series. There's lots that fall into better around 60, especially if you put a little bit down, then it opens lots of things up. Then you can look at seats, seat comfort and all of those things like that. It just has to be wide enough for three that there are for the most part.
[22:09-22:09] UNKNOWN: I
[22:09-22:18] SPEAKER_01: mean, Sydney's is, but Kylan's not in a car seat in her car. No, she doesn't have to be in a car seat. He's old enough to not be in a car seat. I just don't love
[22:18-22:20] SPEAKER_02: it. Sydney's is a little small.
[22:20-22:23] SPEAKER_01: Hers is very small in my opinion.
[22:23-22:27] SPEAKER_02: Yeah, that's what I'm not talking that class. I'm talking bigger and more luxury.
[22:28-22:28] UNKNOWN: Yeah.
[22:29-22:30] SPEAKER_01: Okay.
[22:31-22:32] SPEAKER_02: But what?
[22:32-22:32] UNKNOWN: How
[22:32-22:33] SPEAKER_02: do you feel?
[22:33-22:33] UNKNOWN: I
[22:33-22:35] SPEAKER_01: feel like I wanted to.
[22:35-22:36] SPEAKER_02: Why?
[22:37-22:43] SPEAKER_01: Because as long as I can fit Sydney and the boys and that's that's all I mean.
[22:44-22:47] SPEAKER_02: What about on the day when you
[22:47-22:47] UNKNOWN: need
[22:47-22:58] SPEAKER_02: a girl's trip or you want to travel? We'll drive two cars. Take two cars or rent a car. Take your mom's car. Whatever. What about electric versus regular gas?
[22:58-22:59] SPEAKER_01: I don't care.
[23:00-23:24] SPEAKER_02: Yeah. Okay. Yeah. I prefer regular gas for you. So if you had to just brainstorm, give me your top three dream cars if price was no option.
[23:25-23:27] SPEAKER_01: Well, the defender, of
[23:27-23:27] UNKNOWN: course.
[23:29-23:30] SPEAKER_02: Why? Why do you like the defender?
[23:31-23:32] SPEAKER_01: I just like the way it looks.
[23:33-23:33] UNKNOWN: Okay.
[23:39-23:39] SPEAKER_02: Why?
[23:40-23:40] UNKNOWN: Because
[23:40-23:41] SPEAKER_02: it's
[23:41-23:42] SPEAKER_01: comfortable. No,
[23:42-23:44] SPEAKER_02: it's good. No, it's good.
[23:47-23:48] SPEAKER_01: You said not three row.
[23:49-23:58] SPEAKER_02: It doesn't matter. Like just if you had if money was no object, what would be your top three cars or five? Whatever.
[23:58-23:58] UNKNOWN: I
[23:58-23:58] SPEAKER_02: mean,
[23:59-23:59] UNKNOWN: like.
[23:59-24:02] SPEAKER_01: Possibly the Rivian. I really liked the Rivian.
[24:02-24:03] SPEAKER_02: Why?
[24:04-24:13] SPEAKER_01: I don't know. It was so smooth. And I liked because I was up higher. Like I could be I was taller.
[24:13-24:16] SPEAKER_02: Smooth meaning like the drive train and stuff like that.
[24:16-24:16] UNKNOWN: Electric
[24:16-24:18] SPEAKER_02: drive trains are like.
[24:18-24:18] SPEAKER_01: So smooth.
[24:19-24:19] SPEAKER_02: Easy.
[24:19-24:22] SPEAKER_01: And it was and I was up higher.
[24:22-24:22] UNKNOWN: I
[24:22-24:39] SPEAKER_01: think that is the biggest draw for me with the Armada is that I'm up higher. I don't like to be on the ground. I love your car and I love how it drives, but it's low. It's just I'm sure. And I like to be up higher. Maybe those three.
[24:39-24:51] SPEAKER_02: Okay. Maybe give me a bonus if you had to pick one. No, with a budget of five hundred grand.
[24:52-24:53] SPEAKER_01: I guess the Armada.
[24:54-25:27] SPEAKER_02: Okay. And you like that it's tall and kind of. Stacious. Yeah. Okay. I think this is good. Any other comments? No. What do you think about regretting one way or the other? Like when you think if I won't if I got this three row SUV, but I don't know or the opposite. If I got the two row SUV, am I going to regret like when you think about the regret part of it? What do you think right now after having had that conversation?
[25:28-25:28] UNKNOWN: I
[25:28-25:31] SPEAKER_01: don't know that I'll regret having a two seater.
[25:31-25:32] SPEAKER_02: Why?
[25:32-25:34] SPEAKER_01: Because I didn't last time.
[25:35-25:41] SPEAKER_02: You don't do you. I don't think you will. Because you don't need it very often.
[25:41-26:00] SPEAKER_01: No. And Sydney schedule isn't to where I have to have the boys by myself all the time. And I typically won't go out with all three of them by myself anyway. And if we do go somewhere, we always drive my car and we could still do that because that would fit all of us.
[26:04-26:06] SPEAKER_00: Okay. All right.

==================================================
Generated on: 2025-07-26 13:53:57
Total words: 4104
Total speakers: 4
==================================================




Summary:


creation_date: 2025-07-26 source_file: https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-07-26_1344_ZOOM0055_transcript.txt participants: [SPEAKER_01, SPEAKER_02]
Executive Summary
This conversation is a detailed analysis of the decision-making process for purchasing a new family vehicle. The participants, SPEAKER_01 and SPEAKER_02, weigh the pros and cons of two-row versus three-row SUVs, with the primary constraint being the ability to fit three car seats. They explore various models, including the [[Hyundai Palisade]], [[Kia Telluride]], and [[Nissan Murano]], balancing practical needs like space and seating capacity against personal preferences such as aesthetics, ride height, and a desire for a new experience. Through logical deduction, SPEAKER_02 helps SPEAKER_01 conclude that a two-row SUV is likely sufficient, as the need for seven seats is infrequent and can be managed through other means. The discussion ultimately narrows the top choices to the [[Nissan Murano]] and a used [[Nissan Armada]], with an action item to research the latter's reliability and cost.

Key Topics Discussed
	•	Core Decision: Two-Row vs. Three-Row SUV
	•	SPEAKER_01's primary concern is fitting three car seats, which is possible in some wider two-row vehicles [00:22-00:34].
	•	The desire for a three-row is based on being accustomed to the space and accommodating more people for rare occasions, like family outings with sisters [00:54-00:58, 01:41-01:46].
	•	SPEAKER_02 frames the three-row need as a low-frequency event, similar to owning a truck for occasional use, suggesting that renting or borrowing a larger vehicle for rare trips is more cost-effective [18:26-19:24, 20:04-21:00].
	•	Decision leans towards a two-row, as it opens up more options for a nicer, potentially luxury, vehicle within the same budget [21:03-21:40].
	•	Vehicle Model Analysis & Preferences
	•	[[Hyundai Palisade]]: Considered the "best" option in terms of size and features, but SPEAKER_01 is hesitant to buy the same car they already own [03:40-03:58].
	•	[[Kia Telluride]]: Seen as the next logical option to the Palisade, but perceived as slightly smaller and undesirable because a friend already owns one [04:18-04:32].
	•	[[Nissan Murano]]: Ranked as the #1 choice. The preference is driven by a positive past experience with the model and the exceptional comfort of its seats, even though it sacrifices the third row [12:13-12:15, 12:28-12:34, 13:28-13:47].
	•	[[Nissan Armada]]: Ranked as the #2 choice. Liked for its looks, spacious interior, and high ride height [06:28-06:38]. The main drawbacks are the high cost (requiring a used model), poor gas mileage, and potential for expensive repairs due to its truck-based chassis [04:54-04:59, 05:13-05:36, 07:41-07:58].
	•	Other Models Discussed:
	•	[[Land Rover Discovery]]: Liked for its appearance and reported comfort, but it is not a three-row vehicle [14:21-14:33, 17:03-17:10].
	•	[[Chevrolet Suburban]] & [[Cadillac Escalade]]: Considered "too big" to comfortably park and fit in the garage [14:45-15:13].
	•	[[Land Rover Defender]] & [[Rivian]]: Mentioned as "dream cars" if money were no object, valued for their looks and high ride height [23:25-24:39].

Action Items & Decisions
	•	Decision: After discussion, SPEAKER_01 concludes they will not likely regret getting a two-row SUV, prioritizing sufficient width for car seats over a rarely used third row [25:28-26:00].
	•	Decision: The [[Nissan Murano]] is the top-ranked choice for the next vehicle purchase [12:13-12:15].
	•	Action: SPEAKER_02 to research the reliability and typical repair costs of used [[Nissan Armada]] models to evaluate it as a viable second option [11:32-11:41].

Suggested New Links/Tags
	•	[[Car Buying]]
	•	[[Cadillac Escalade]]
	•	[[Chevrolet Suburban]]
	•	[[Decision Making]]
	•	[[Family Vehicle]]
	•	[[Hyundai Palisade]]
	•	[[Kia Telluride]]
	•	[[Land Rover Defender]]
	•	[[Land Rover Discovery]]
	•	[[Nissan Armada]]
	•	[[Nissan Murano]]
	•	[[Rivian]]

Linked Concepts
	•	[[Cadillac Escalade]]
	•	[[Car Buying]]
	•	[[Chevrolet Suburban]]
	•	[[Decision Making]]
	•	[[Family Vehicle]]
	•	[[Hyundai Palisade]]
	•	[[Kia Telluride]]
	•	[[Land Rover Defender]]
	•	[[Land Rover Discovery]]
	•	[[Nissan Armada]]
	•	[[Nissan Murano]]
	•	[[Rivian]]
	•	[[Tesla]]

#Tags
	•	#Family
	•	#DecisionMaking
	•	#CarBuying

zoom5
Transcript:
https://storage.cloud.google.com/transcription-service-461211-transcripts/2025-08-27_1835_ZOOM0005_transcript.txt
==================================================
TRANSCRIPTION WITH SPEAKER DIARIZATION
==================================================

[00:00-00:01] SPEAKER_00: I
[00:01-00:05] SPEAKER_02: am recording. Okay. Backup audio on, copy maker off.
[00:07-00:07] UNKNOWN: Yes.
[00:09-00:12] SPEAKER_02: Check audio input and levels. I'm on 012.
[00:14-00:22] SPEAKER_00: My video is frozen. It happened after I left. Is
[00:22-00:52] SPEAKER_02: it? I'm just gonna click. Just a glitchy change from Airplay again. Maybe we should not Airplay ever. Okay, it's working. I've got HyperX Solo, Mark's iPhone. Me too. 012 on the levels. 012, yep. I'm gonna do a
[00:52-00:55] SPEAKER_00: test recording. I am recording.
[00:55-00:55] UNKNOWN: Oh
[00:55-01:01] SPEAKER_00: no, 012. I went and actually selected the HyperX. Changed it.
[01:01-01:06] SPEAKER_02: Yeah. Maybe that's where it should be. Because I've actually,
[01:06-01:06] UNKNOWN: I
[01:06-01:21] SPEAKER_02: turned yours up still just like a tiny little bit. But also that's very easy to do. Like it's on the bus. Yeah. And I figured out how to do it from the, without having to go to the Fairlight. From the edit screen there's like one of the little buttons you push and it just shows up over there.
[01:21-01:21] UNKNOWN: Okay.
[01:21-01:29] SPEAKER_02: So audio levels wise, we almost don't have to check. Make sure it's actually hearing you. Right. Yeah, it's like you're registering in the input.
[01:30-01:30] UNKNOWN: Right.
[01:31-01:41] SPEAKER_02: So okay, we got, you know the test recording, I think I'm actually already going. So there's, if I get a little louder and say P's and pops and all
[01:41-01:50] SPEAKER_00: that. I'm also recording. Okay. So this is definitely my normal voice. It may be a little bit louder. But I generally don't get much louder than that.
[01:50-01:51] UNKNOWN: Righto.
[01:58-02:00] SPEAKER_00: So this is, maybe
[02:00-02:06] SPEAKER_02: that's where it should be. Maybe a little bit louder. I've actually, I turned yours up still just like a tiny little bit.
[02:07-02:07] UNKNOWN: But
[02:07-02:10] SPEAKER_02: also that's very, the buttons you push and this is.
[02:11-02:21] SPEAKER_00: Yeah, all the way up. Yeah, I'll play, yeah like this is my volume all the way up. I'm also recording. So this is your, this
[02:21-02:21] UNKNOWN: is your volume.
[02:21-02:49] SPEAKER_00: This is definitely my, I'm also recording. So this is definitely my normal voice. It may be a little bit louder, but I generally don't get much louder than that. Okay. Going to delete now. Right, so iPhone camera HyperX. Hit mute on your phone and I know my phone is good.
[02:49-02:49] UNKNOWN: I
[02:49-02:49] SPEAKER_00: checked it.
[02:52-02:53] UNKNOWN: Computer's muted.
[02:57-03:03] SPEAKER_00: Up next is record. I'm going to do double check my audio again.
[03:09-03:09] UNKNOWN: Okay.
[03:12-03:14] SPEAKER_00: Everything looks good. Except for the freaking,
[03:15-03:15] UNKNOWN: oh I'm
[03:15-03:16] SPEAKER_00: not recording sir. Ready, set,
[03:16-03:16] UNKNOWN: go.
[03:17-03:20] SPEAKER_00: I am recording now. As well.
[03:25-03:27] SPEAKER_02: That's a weak one. No, that's still working.
[03:32-03:39] SPEAKER_00: I do need to, we do this every time. Do we need to talk, we need to talk about the show
[03:39-03:47] SPEAKER_02: itself. I actually think it's good because it, it doesn't matter if it's recording. But yeah, we get some talking, we cough it out a little bit.
[03:48-03:49] SPEAKER_00: Yeah,
[03:49-03:49] UNKNOWN: because
[03:49-03:49] SPEAKER_00: I got a little bit
[03:49-03:49] UNKNOWN: of
[03:49-03:50] SPEAKER_00: that going on.
[03:50-04:05] SPEAKER_02: Yeah, and it takes like I said 10 seconds for me to find the actual start. Alright, so, and I haven't done my close out stuff, now that I think about it. I think I'm trying to do it as I'm going. Right. Like when I think of something,
[04:05-04:05] UNKNOWN: I
[04:05-04:11] SPEAKER_02: start, in my notes I start a questions and favorites section. But I'm still pretty bad at doing it.
[04:14-04:22] SPEAKER_00: Alright, I have not done my favorite character or moment, but let me think about it for a second. Hmm, I think I got it.
[04:26-04:27] UNKNOWN: Yeah.
[04:28-04:29] SPEAKER_00: But not moment.
[04:45-05:15] UNKNOWN: Right. Oh, boy.
[05:23-05:57] SPEAKER_00: I, what is Martha? Yeah, nevermind. Okay, I am ready. So, anything we need to talk about about running the show? I
[05:57-05:57] UNKNOWN: think
[05:57-05:58] SPEAKER_00: generally the same
[05:58-06:16] SPEAKER_02: as we've been doing. Just go down the scenes? Yeah, just as it was on the screen. I need to get the questions and stuff together. I don't know that it'll make any noise, but you just never know. Let's not have it do it regardless. Yeah, sorry, I
[06:16-06:21] SPEAKER_00: need to do this shit because I forgot. But like
[06:21-06:21] UNKNOWN: I
[06:21-06:28] SPEAKER_00: said, it helps us get in the mindset anyways, whether it's recorded or not, as long as you got space on your hard drive. Exactly.
[06:28-06:28] UNKNOWN: Which,
[06:29-06:44] SPEAKER_00: that. But I also think that these camera feeds are using WiFi. Yeah. I think that's what glitched yesterday and that's what happened on, like any bobble in the network. Is going to drop. Yep. That makes sense.
[06:46-06:46] UNKNOWN: So
[06:46-06:58] SPEAKER_00: I think that as soon as we can get to pure direct feeds into some recording device that's not using WiFi, that's the better, but it just costs money. Yeah, I agree.
[06:59-07:05] SPEAKER_02: I actually want to go through, now that I'm thinking about it, the old questions and get rid of ones that we don't care about. Okay. Yeah, like I
[07:05-07:08] SPEAKER_00: have not been keeping up with them because you do. Right, but
[07:08-07:11] SPEAKER_02: I think they're getting almost unwieldy and there's some that don't need
[07:11-07:11] UNKNOWN: to
[07:11-07:28] SPEAKER_02: be really addressed. Right. So I have rebellion question mark and some details that we found out. So 140 years. Did they do what the current rulers claim? And then all the shit about erasing the hard drive and all that.
[07:29-07:29] UNKNOWN: But
[07:29-07:39] SPEAKER_00: that's, did they do what the current rulers. Right, we can just condense that down into, yeah, just what's the story of the rebellion legit. Right, yeah. Like what is the actual story of the rebellion.
[07:39-07:45] SPEAKER_02: Yeah. How powerful is Saoirse Bernard and IT? Right,
[07:45-07:45] UNKNOWN: I
[07:45-07:54] SPEAKER_00: mean I don't know that we need to keep those as open questions because they're just being revealed in the story and it's not going to be a moment where you go, okay well now we know. I agree, that was good. Is
[07:54-08:00] SPEAKER_02: the video real? I think that has to, you don't have to address it, but that has to remain. That's pretty much everything.
[08:01-08:01] UNKNOWN: Yeah, that
[08:01-08:10] SPEAKER_00: is the stuff. I'm still not convinced. Right. And so. I don't remember, which is good. Like I don't remember a lot about the end of
[08:10-08:10] UNKNOWN: the
[08:10-08:13] SPEAKER_00: story, which is good for me because it's like. Yeah.
[08:14-08:33] SPEAKER_02: What are the minds, I think we can get rid of that because I don't think they're going to get to it. Trade and monetary system. We can get rid of that. What happens if you're injured? We saw that they have the NICU at least, so we assume they're good. Judicial, who's the judge, who's this, but we can't address it.
[08:33-08:33] UNKNOWN: We
[08:33-08:41] SPEAKER_02: know some of that stuff. What's the pact, where did it come from? I mean it's still relevant, but maybe it goes
[08:41-08:59] SPEAKER_00: in with the rebellion. Yeah, just the history of the silo. In general, like what the pact and the rebellion, like are we either going to get the 100 % truth or we know the story as well. The story as is, is they don't know. I mean, I guess maybe the pact is separate to a certain extent because. It's still a history,
[08:59-09:01] SPEAKER_02: right? Yeah, I agree.
[09:01-09:01] UNKNOWN: I
[09:01-09:09] SPEAKER_02: think I like that you said in a section called the history of the rebellion and maybe like the question of the history of the silo.
[09:10-09:10] UNKNOWN: Because
[09:10-09:12] SPEAKER_00: I'm also like,
[09:12-09:12] UNKNOWN: well,
[09:12-09:21] SPEAKER_00: who freaking made it? And that's the question of, they don't know. I assume they're going to reveal to us at some point.
[09:21-09:21] UNKNOWN: At
[09:21-09:22] SPEAKER_00: some point.
[09:22-09:23] SPEAKER_02: Either four, three,
[09:24-09:24] UNKNOWN: whatever.
[09:26-09:42] SPEAKER_02: On here is the place with the big machine, what George found on the hard drive. That's just like kind of a nonsense question at this point. It doesn't matter. Who killed the mayor? That one probably needs to stay for now. You may remember, I don't know. I don't know that it ever gets
[09:42-09:43] SPEAKER_00: actually specifically
[09:43-09:44] SPEAKER_02: stated.
[09:45-09:45] UNKNOWN: With
[09:45-09:59] SPEAKER_02: Lawrence, yeah. I don't remember. Did that happen in this episode? The very end. I don't remember him either. The last scene. Yeah, I think it, I feel like I remember that being resolved. Like we do find out, but I don't remember
[09:59-10:01] SPEAKER_00: who it
[10:01-10:12] SPEAKER_02: is. There's a lot of stuff, but I think I'll just say who killed the mayor and if anything jumps into our head to talk about, because it's like where the strawberries poison. I'm going to just get rid of
[10:12-10:15] SPEAKER_00: open questions by the way, because you're keeping track of
[10:15-10:29] SPEAKER_02: it. Where's the steam come from? I'm going to put that in history. Same thing. The screen flashing green and who saw it and all that stuff.
[10:30-10:32] SPEAKER_00: We're not going to address this. I'm
[10:32-10:32] UNKNOWN: just
[10:32-10:36] SPEAKER_00: going to freaking, I'm going to throw that over. I just don't want to forget that.
[10:36-10:36] UNKNOWN: I'm
[10:36-10:36] SPEAKER_00: going
[10:36-10:36] UNKNOWN: to
[10:36-10:37] SPEAKER_00: put that with my bag.
[10:38-10:45] SPEAKER_01: I know that was random. I'm going to get some hand sanitizer for when I have to cough in my hand a whole bunch of times throughout this episode.
[10:45-10:51] SPEAKER_02: I was thinking about trying to come up with some mute type shit, but I'm not going to
[10:52-10:55] SPEAKER_00: Yeah, I don't know that you can do that.
[10:55-11:02] SPEAKER_02: I mean, there's, you can think about like, like me, there's functionality where
[11:02-11:24] SPEAKER_00: there's new buttons. Oh, I agree. But there's not in this video, not in the way we're recording. Right. Yeah. That's what I know that functionality exists, but it's not built into quick time. We just need a more sophisticated video recording. So that might be an easy one. I'm fairly confident that what are we using to edit? Like it can record
[11:24-11:28] SPEAKER_02: directly. Yeah, it's a whole other thing because we did kind of look into it
[11:28-11:28] UNKNOWN: and
[11:28-11:37] SPEAKER_02: you have to have the cloud and then we can get there. I think ultimately we're not going to do that. We're going to get a table or a board and start
[11:37-11:45] SPEAKER_00: plugging into it. Like there are systems that have memory in them that record everything and they're dedicated and they work very well. Right. And then you export
[11:45-12:21] SPEAKER_02: that straight to your project. It's hard to describe, but it's like I've always had this thing where I kind of know when something's not going to happen, not like predictive, but I have this feeling and it's not always good, but it's like I knew I wasn't going to quit drinking when I wasn't going to quit. Right. And it's like this much lesser example, like we're going to end up with a soundboard and not even necessarily going to hold ourselves to that when we start making money. Right. At some point, yeah, when there's
[12:21-12:33] SPEAKER_00: some free cash, like hey, we'll just up it. Even when there's like a hundred viewers or listeners, it's like okay. Or like if we spin up a regular and we're doing with CJ regularly,
[12:33-12:35] SPEAKER_02: it's like we're going to do
[12:35-12:35] UNKNOWN: it. We
[12:35-12:35] SPEAKER_02: might
[12:35-12:40] SPEAKER_00: as well do it. Basically we need another desk or table in there to put stuff on. We can
[12:40-12:40] UNKNOWN: take
[12:40-12:46] SPEAKER_00: these mics or take the cameras down to much smaller or whatever or get dedicated cameras that even
[12:46-12:50] SPEAKER_02: if they're iPhones, we get iPhone fucking 10s. Right. And just record on
[12:50-13:04] SPEAKER_00: the device. Right. And we could do that now, like just record on the device and not sync it to here and just turn them on, turn on the audio and like we can record the audio on here because that's direct. So if you have a recorder on here,
[13:05-13:05] UNKNOWN: so
[13:05-14:00] SPEAKER_00: right. The issue is that the video is coming from there and the audio is coming from here and it's mixing here and it's using Wi -Fi to mix them. Wi -Fi and processing. And any glitch in that process is going to make it skip. Whereas if you record direct onto there, record direct onto here, record direct onto there and mix in post production. That is. Which isn't hard. No. That is the safest way. Like you turn that on, it's not going to glitch. It's very unlikely that you're just recording for an hour. It's just going to record for an hour. And it's just going to leave it on there and then you move it, whatever. And record there, record here. And there's nothing going through Wi -Fi. That at a minimum, maybe we try that next time. Or do some text. I don't want to do it right now. But yeah. And then you can even do like raw and all of that stuff like that. If so inclined. Right. And
[14:00-14:00] UNKNOWN: you
[14:00-14:03] SPEAKER_00: can do like post production, like for real
[14:03-14:13] SPEAKER_02: stuff. Real start doing stuff. Yeah, we've got a lot of limitations just by the format that we're doing stuff. But I think for now, we keep thinking on it. It's obviously we keep talking about it. So we'll see.
[14:17-14:17] UNKNOWN: I
[14:17-14:27] SPEAKER_00: think that, sorry, this is my last thing. That if you, certainly with the newer iPhones, that you can plug in a drive. Right? Because it's USB -C.
[14:28-14:49] SPEAKER_02: Well, I had the thought when you said that of recording audio on here. Well, if that will take USB -C, that won't. But you could plug this motherfucker straight into that, turn the video on and get going. That's probably the first thing to test is like use that as your device. Just plug straight in there. I don't think I can. I'll
[14:49-14:49] UNKNOWN: have
[14:49-15:03] SPEAKER_02: to get a fucking new phone. No, you just get a dongle. Well, I don't know that lightning ever will pass that, right? Maybe not because. Yeah. Yeah, because. Yeah. But maybe I should get a new phone. Yeah.
[15:04-15:12] SPEAKER_00: But yeah. I do think these cameras are really good. I agree. That is one of the benefits of buying an expensive iPhone because they talk about it so much.
[15:13-15:13] UNKNOWN: The
[15:13-15:22] SPEAKER_00: camera system really is good and I think it is a standard podcast thing that you just use your freaking iPhone. Yeah. And you don't have to buy a fancy camera because you have
[15:22-15:35] SPEAKER_02: one. Right. You can buy a dedicated camera that costs more than that phone. And maybe is a little bit better. Right. Or you can use the phone that you already have. Yeah. Let me see
[15:35-15:36] SPEAKER_00: where I'm
[15:36-15:37] SPEAKER_01: at.
[15:38-15:38] SPEAKER_00: Okay, I'm going
[15:38-15:38] UNKNOWN: to
[15:38-15:52] SPEAKER_00: stop talking. I am ready. We're doing four? Yes. Okay, yes. I'm ready. You're leading so I'm just going to sit back and let you. I'm going
[15:52-15:52] UNKNOWN: to
[15:52-15:53] SPEAKER_00: go quiet
[15:53-15:54] SPEAKER_02: for a second. I'm going
[15:54-15:54] UNKNOWN: to
[15:54-15:55] SPEAKER_02: look at almost all
[15:55-15:55] UNKNOWN: of
[15:55-16:33] SPEAKER_02: them. I'm still going. Alright. Alright. We're back for episode four of Silo. This is Definitive Essentials. I'm Mark. I'm Daniel. Alright, we're going to dive straight into it. Ready. So we start out with young Juliet and her family and they're in a tough spot. Her brother is on a table and they're trying to bring him back to life basically. We don't really get any context and we know from previous episodes that Juliet lost her brother. So I'm sitting there like, fuck man, are we about to watch a little boy die right here like
[16:33-16:42] SPEAKER_00: on the screen? Yeah, I was thinking the same thing and obviously he comes back in this episode and they don't actually show it. But I don't really know what was going on with
[16:42-16:51] SPEAKER_02: him. Yeah, as far as I know, there's no explanation beyond. We see that. We already knew both of her mom and her little brother died and the next
[16:51-16:59] SPEAKER_00: thing we see they're gone. Yeah, I was just hoping that I didn't just miss something because I watched it a couple times and I was like, I don't know, just whatever is happening with him.
[16:59-17:14] SPEAKER_02: It seemed like they had been through this with him before. This was a thing and that could be that they're a family with a doctor in it so they just know how to kick into gear when somebody needs to be treated but it felt more like, yeah, this is a condition. Like chronic.
[17:15-17:20] SPEAKER_00: Yeah, some sort of chronic condition that this happens and obviously he succumbed to it at some point.
[17:20-17:44] SPEAKER_02: Super fucking sad way to start a freaking episode of TV. But beyond that we jump to the present and Juliet has been called up to the mayor's office or apartment by Bernard which is interesting. It is interesting. So Marnes is there. He's drunk which will be a similar thing throughout the episode. Yeah, he's grieving and he's not
[17:44-17:50] SPEAKER_00: doing a very good job. He's in a tough spot. I mean, I don't know that you can say that. That he's not doing a very good job of grieving.
[17:50-17:50] UNKNOWN: You
[17:50-17:56] SPEAKER_00: can say Juliet's dad shit the bed as a dad too. Right, exactly. It was bad. He was in a bad spot
[17:56-17:57] SPEAKER_02: and I understand it but also.
[17:57-17:59] SPEAKER_00: There's reasons but it's not going well for either
[17:59-18:15] SPEAKER_02: one of them which are those 10 lines. Yep, so Simms and Bernard are there with him. They're looking at the mayor trying to figure out what happened because they don't know. Marnes wants a list of everyone that could have possibly been in contact
[18:15-18:15] UNKNOWN: with
[18:15-18:31] SPEAKER_02: them from 50 levels and Bernard not even being a bad guy is like, what are we talking about, bro? All of those people? Okay. Fine, that's what we'll do. We'll give you the list. Basically,
[18:31-18:31] UNKNOWN: he
[18:31-18:38] SPEAKER_02: thinks somebody along the path may have been trying to kill him and isn't necessarily judicial or
[18:38-18:47] SPEAKER_00: IT. Yeah, so I think from the viewer perspective, we are certainly suspecting IT or judicial.
[18:47-18:54] SPEAKER_02: One of those two. And he thinks specifically that he might have been a target as well. Right. Because they drink out of each other's backpacks.
[18:54-18:54] UNKNOWN: But
[18:54-19:15] SPEAKER_00: clearly, he does not suspect IT or judicial because those are the people he goes to for help. I mean, they respond. Who else do you call? No, I agree but if you thought that whoever the police killed me, that's not the people you're going to go to. Hey, I need help figuring out who killed Daniel.
[19:15-19:21] SPEAKER_02: If you thought the Secret Service were in on something, you'd be like, yeah, just keep them in
[19:21-19:28] SPEAKER_00: place. So clearly, he does not suspect those two people or those two organizations. We
[19:28-19:35] SPEAKER_02: do. Yeah, I guess you could give that to the drunken grieving, not thinking straight at
[19:35-19:35] SPEAKER_00: all. Maybe.
[19:35-19:35] UNKNOWN: If
[19:35-19:38] SPEAKER_00: that's the case. Or he's just like,
[19:38-19:38] UNKNOWN: they
[19:38-19:47] SPEAKER_00: are doing such a good job of deceiving people that they just have all of these listening devices and surely, either they are responsible or they know.
[19:48-19:48] UNKNOWN: Right.
[19:48-19:48] SPEAKER_00: I
[19:48-19:48] UNKNOWN: mean,
[19:48-19:49] SPEAKER_00: it has to be
[19:49-19:49] UNKNOWN: one of those.
[19:49-19:52] SPEAKER_00: I say surely but maybe, I don't know. That's what I'm thinking. Yeah,
[19:52-20:10] SPEAKER_02: that's the most likely. The Occam's razor is contained within those two possibilities. So we find out that Mayor Johns was very, very popular with the people, which we kind of saw an example of as she was going down and she's at least a good political player if not a good person. I know.
[20:12-20:43] SPEAKER_00: I felt good about her. I assume they did this on purpose but I felt like she was a legitimate leader. She had her priorities straight and I'm sure she's made mistakes and things like that but I don't think that she is manipulative and evil from the perspective that we're looking at these other people. She was truly trying to help the people and of course, she's a politician but I think she was legit. The best ones are the most dangerous. It's the Marines that convince you to do the bad shit.
[20:43-20:43] UNKNOWN: But
[20:43-20:48] SPEAKER_00: as far as we've been revealed to us in the story, she doesn't have any bangs.
[20:48-20:54] SPEAKER_02: I'm totally not letting my opinions on the real world affect my opinion of Mayor Johns.
[20:56-20:56] UNKNOWN: So
[20:56-21:02] SPEAKER_02: we find out Jules walks in and Marnes is like, what the fuck are you doing here? All drunk and turns out Bernard Summander,
[21:03-21:03] UNKNOWN: which
[21:03-21:10] SPEAKER_02: again, pretty wild. We find that Bernard is the temporary mayor and he's going to swear Jules in as soon as he's sworn
[21:10-21:28] SPEAKER_00: in. So the first thing that I thought when he said that or realized that he's going to become the mayor is, well, if you start to think about murder, who benefits from this the most? And that was the first person that popped in my head is like, oh, you get to be the mayor. But he then
[21:28-21:44] SPEAKER_02: proceeds to do what he should do in that case and swear in Juliet, which he did not have to do. That's such an interesting thing going on with Bernard. My goodness. So do you have any other thoughts on this before we jump back into the past?
[21:44-21:50] SPEAKER_00: No, just that one. It's like that made me suspect him because of the benefit of,
[21:50-21:50] UNKNOWN: you
[21:50-22:03] SPEAKER_00: know, until elections, I assume they're going to have elections, but you know, that's how things can go down just like, well, we're going to delay those because things are so crazy. I'm just going to stay here or that, hey, I'm already here, so I'm going to run that kind of thing. Yeah.
[22:05-22:12] SPEAKER_02: That's a very good question to ask in general is who benefits from this in silo and the world,
[22:12-22:12] UNKNOWN: the
[22:12-22:26] SPEAKER_02: world all the time. I've been done who benefits from what? Right. I don't have any more on this scene though. Okay. So we jump back to the past and now we find out that Juliet's young Juliet's mom and
[22:26-22:26] UNKNOWN: her
[22:26-22:27] SPEAKER_02: brother are gone.
[22:29-22:29] UNKNOWN: And
[22:29-22:52] SPEAKER_02: basically the scene kind of revolves around this broken chair a little bit like Juliet's hey, the chair is broken and they're generally displaying a vibe of like both of them are kind of almost comatose like coasting, but her dad, especially like he is not handling it well. And I'm not being critical of him. The dude, like that's the worst thing imaginable, but I am being critical of him because you still have a daughter.
[22:52-22:52] UNKNOWN: And
[22:52-22:56] SPEAKER_02: I mean, at some point you just got to, this is where you are. And she's
[22:56-23:04] SPEAKER_00: a 13 year old daughter without her mother. Right. And that is like, and that might be the most critical age for a young girl.
[23:04-23:04] SPEAKER_02: Yeah.
[23:05-23:05] SPEAKER_00: So
[23:05-23:17] SPEAKER_02: he's not handling it well. Yeah. In general. He in fact tells Juliet that she needs to take all of her mom and little brother's stuff to recycle.
[23:17-23:17] SPEAKER_00: Terrible,
[23:17-23:18] SPEAKER_02: terrible idea.
[23:18-23:25] SPEAKER_00: Yeah. Dude, that is, that might be the worst thing that you can do to a grieving 13 year old. To
[23:25-23:25] UNKNOWN: say, Hey,
[23:25-23:28] SPEAKER_00: go clean up all of their stuff and take it to recycling by yourself.
[23:28-23:31] SPEAKER_02: Yeah. Cause I got to go to work. Like come on. That might
[23:31-23:33] SPEAKER_00: be the worst thing you can possibly do.
[23:33-23:38] SPEAKER_02: That is definitely some foundational personality shit for the future of Juliet. Right. I
[23:38-23:54] SPEAKER_00: think that's what all of these scenes and maybe the vast majority of this episode, other than trying to progress the story of what happened to Mayor Chavez and things like that is describing and they're doing this, you know, these flashbacks are describing who it is and how she became who she is.
[23:54-23:57] SPEAKER_02: Right. Yeah. And if like,
[23:57-23:57] UNKNOWN: I
[23:57-24:22] SPEAKER_02: kind of have no sympathy. I do have sympathy for the dad, but kind of like you failed bro. But to argue for him, I think like he's broken. Yeah. There's just like nothing else. Like he wants to, I think looking back towards the conversation between him and Mayor Jones, talking about the story of Juliet, there was a point in there where she was just like, yeah, I get it, man. It's okay. Yeah. And that's what he was playing was like,
[24:23-24:23] UNKNOWN: man,
[24:23-24:34] SPEAKER_02: everything in my head is like, yeah, go talk to your daughter, try to fix this shit and come back. But you just can't do like that broke something and it's never coming back. Yeah, he did the best he could. Right. And
[24:34-24:35] SPEAKER_00: that's all he had. Yeah, and
[24:35-24:35] UNKNOWN: it wasn't
[24:35-24:49] SPEAKER_00: great. But you know, moving, like looking forward a little bit, which I do all the time, you know, I think it describes why he eventually is like, hey, it's fine for you to stay in mechanical. You're probably going to have a better life here than with me even. 100
[24:49-24:52] SPEAKER_02: % like talking about that.
[24:54-24:54] UNKNOWN: He
[24:54-25:23] SPEAKER_02: says like, or she, young Juliet, we're skipping forward, obviously, but it says, well, I have to work all day so I don't have to think about mom and whatever the little brother's name is. And he says, and me. And to some extent, like he's revealed, like also like it's valuable to me to not have to see you too every day and think about them. And like he's doing what she's doing in engineering. He's basically like 18 hours doctor and six hours sleep. Right. And that's it. I got to go deal with this mom and breach mayor.
[25:23-25:24] SPEAKER_00: Yeah. So
[25:24-25:26] SPEAKER_02: that was his way of
[25:26-25:26] UNKNOWN: dealing.
[25:26-25:26] SPEAKER_00: Yeah.
[25:26-25:33] SPEAKER_02: And it worked out for them, I guess. Yeah, I guess. So yeah, he's failing. But we also see,
[25:33-25:33] UNKNOWN: I
[25:33-25:43] SPEAKER_02: mentioned the chair, Juliet, he says that chair is broken. It can't be fixed. Get it out of here. She fixes it. So we see crafty Juliet and like responding to shitty situations by fixing things.
[25:43-25:50] SPEAKER_00: Yeah. And that's what she does. And that may even be like that's kind of her coping mechanism. Yeah. Like just start tinkering and that may have got, is what got her into
[25:50-25:50] UNKNOWN: the place. Yeah,
[25:50-25:50] SPEAKER_00: we've seen
[25:50-26:06] SPEAKER_02: her be super flustered and rolling to Martha's place and start working on stuff. So. That's pretty common. I mean people frustrated if start doing stuff with their hands. You got your blanket. Yeah. And if that blanket is coating or whatever, then that's what it is. Yeah. All right. So we're jumping back into the present.
[26:06-26:06] UNKNOWN: You
[26:06-26:15] SPEAKER_02: got anything else there? No. Good. All right. So Juliet's in the cafeteria and there's some guy by himself in the cafeteria in the middle of the night watching the screen.
[26:15-26:15] SPEAKER_00: Yeah. Lucas.
[26:16-26:16] SPEAKER_02: Yes. That
[26:16-26:25] SPEAKER_00: we, she doesn't meet him. They don't introduce, he doesn't introduce himself right there in that scene. Right. But that is Lucas because we see him again in that same place. Yep.
[26:26-26:47] SPEAKER_02: So nothing really comes out of him in this scene, but then the dickhead lady calls her in and proceeds to be an asshole for the rest of the scene. Yeah. And to be fair, she shook up too. She's also grieving. She just lost someone and then this random from the down deep who she's a fucking dickhead about, all right? Like that's racism in the silo,
[26:47-26:47] UNKNOWN: I
[26:47-26:53] SPEAKER_02: guess, or classism. Yep. But she calls her in, she worked for Holston. She's like,
[26:54-26:54] UNKNOWN: I
[26:54-27:06] SPEAKER_02: have no, she literally says, I have no idea what you people eat down deep. And Juliet being awesome says, mostly children or mostly people. She's, Juliet's the shit. But ultimately she says like,
[27:07-27:07] UNKNOWN: hey,
[27:07-27:08] SPEAKER_02: I need to get some files, what's up? And
[27:08-27:08] UNKNOWN: the
[27:08-27:19] SPEAKER_02: lady's an asshole, but she's like, all right, I'll get it because Juliet lays the hammer down. And she's subtle and graceful about it, but she's basically like, hey, cut the bullshit because oh, guess what? I'm your boss.
[27:20-27:32] SPEAKER_00: Exactly. And get me the things I asked for. And she's going right into her investigation, day one, minute one. Like, hey, I need this file. What's in this cabinet? Yep. What's in this safe?
[27:32-27:32] UNKNOWN: And
[27:32-27:34] SPEAKER_00: then
[27:34-27:46] SPEAKER_02: possibly winning my character of the episode award, shut the door on your way out. Not because she needed the door shut. That was like a, just to put you in your place one last time.
[27:46-27:46] UNKNOWN: Just
[27:46-27:49] SPEAKER_02: so you know. Like, Holston always left it open. Cool.
[27:49-27:49] SPEAKER_00: Holston's
[27:49-27:49] UNKNOWN: dead.
[27:49-28:13] SPEAKER_00: No words. Juliet's the shit. Shut the door. Yep. I do have one other thing just about just kind of the layout of the silo itself. I find it a little bit strange that they got to be way up there, like at the top level, right? Because the sheriff's office is where holding three is that leads outside, like the door to get outside.
[28:13-28:15] SPEAKER_02: I think it is. Like we heard Holston
[28:15-28:15] SPEAKER_00: at some
[28:15-28:17] SPEAKER_02: point say like, I'm from
[28:17-28:21] SPEAKER_00: the top. Right. So. And there's a cafeteria right there.
[28:21-28:21] UNKNOWN: Like
[28:21-28:28] SPEAKER_00: the entryway to the sheriff's office is also a cafeteria, like right there. They're going like one of the,
[28:28-28:28] UNKNOWN: like
[28:28-28:28] SPEAKER_00: there's.
[28:28-28:28] UNKNOWN: Yeah,
[28:28-28:29] SPEAKER_00: the lady
[28:29-28:32] SPEAKER_02: like popped her head out of the sheriff's office. Yeah, I
[28:32-28:32] UNKNOWN: didn't catch that.
[28:32-28:32] SPEAKER_02: Right.
[28:32-28:38] SPEAKER_00: It's weird. And then that's like the entry exit. Like that's like the foyer of the silo.
[28:38-28:45] SPEAKER_02: Is also this common area where people aggregate and theoretically that's where you would pop off and raid the freaking sheriff's office.
[28:45-28:46] SPEAKER_00: Right.
[28:46-28:46] UNKNOWN: And
[28:46-29:01] SPEAKER_00: they, I'm sure security, right? It's like there's times when that, the sheriff's office is unoccupied. Like that's the door. Right. That's the door. And all you got to do is go in there and press some buttons. Maybe there's some security built into it,
[29:01-29:01] UNKNOWN: like
[29:01-29:03] SPEAKER_00: the electronic security or digital security.
[29:04-29:06] SPEAKER_02: Yeah. You got to have multiple people to be able
[29:06-29:06] UNKNOWN: to
[29:06-29:28] SPEAKER_02: whatever. Yeah. Who knows? But so dickhead lady leaves and Juliet starts looking for George's file. Look, just generally like rummaging through the office to try to find what she's looking for. And then goes and takes a nice long look at holding three and has a moment. She's kind of thinking about Holston, I imagine. And just holding three, I imagine has a pretty heavy place in every resident of the
[29:28-29:29] SPEAKER_00: site.
[29:29-29:29] UNKNOWN: Over
[29:29-29:35] SPEAKER_00: everybody. Hey, this is the door and this is where they send people out and all like outsides like right over
[29:35-29:47] SPEAKER_02: there. Right. And I assume like 99 .9 repeating percent of people don't see that door ever. Yeah. Right. Because the only reason you see that is you're walking out it or you're one of the people that is administering the walk
[29:47-29:54] SPEAKER_00: out. Right. And so she, this may be her, I should assume it's her first time actually seeing any of that
[29:54-29:54] UNKNOWN: stuff.
[29:54-29:55] SPEAKER_00: Like they don't do tours.
[29:56-30:20] SPEAKER_02: Yeah. So pretty intense moment. But then we jumped to her in her new apartment, Holston's old apartment, and she gets a note about taking stuff she doesn't want to recycling, which is just to drive us to the next scene, which is young Juliet at recycling. Terrible. Yeah, too. So one thing, her little brother was 11, which just in case you wanted to start crying a little
[30:20-30:30] SPEAKER_00: bit. Yeah, she was 13, right? So they were very close in age, I'm sure. You know, obviously they have a sibling relationship and so they, you know, 11 and 13 year old, but still, right? That's tough.
[30:31-30:36] SPEAKER_02: I mean, yeah. So the recycling guy is definitely on the side of,
[30:36-30:36] UNKNOWN: well,
[30:36-30:38] SPEAKER_02: your dad's a piece of shit for this. He's like, what
[30:38-30:38] UNKNOWN: the fuck? You
[30:38-31:05] SPEAKER_02: don't have to do this by yourself. You shouldn't be doing this by yourself. Yep. And when we go back and we're really reinforcing dad dropping the ball because Juliet decides to make herself some dinner, then gets distracted fixing the chair that dad said was unfixable Dad comes home, the dinner's smoking. He, like a dumb ass, grabs the pan off of the hot plate and burns his hand and then gets pissed at Juliet. Again, he's broken, but like, bro, you're dropping the ball so
[31:05-31:08] SPEAKER_00: hard. Yeah, you are. Yeah, he is. But I mean, like
[31:08-31:08] UNKNOWN: I
[31:08-31:15] SPEAKER_00: said, it's just where he is. And for me at least, I don't feel like, hey, I don't feel any hatred towards him or anything like that. I really do.
[31:15-31:15] UNKNOWN: I
[31:15-31:17] SPEAKER_00: feel bad for him. I get it, but it's still like,
[31:18-31:39] SPEAKER_02: when you're watching the scenes, it's like, bro, come on, man. He's definitely making mistakes, but I don't know. People make mistakes. Yep. So that's it. We jump back to the present. So Bernard is at Juliet's apartment to swear in as the sheriff. So he's been sworn in as the mayor at this point. And it's just like, what are this dude's motivations? Right. I'm
[31:39-31:47] SPEAKER_00: questioning everything I previously thought about Bernard because he's like doing the right thing or at least doing it. Well, he is doing the right thing.
[31:47-31:47] UNKNOWN: He is doing what the pack
[31:47-32:16] SPEAKER_00: says he should do. Right. And he's being gracious and like, hey, because obviously we've seen what he thinks about Juliet and he thinks she's a thief and all these things like that. But he legitimately said, hey, let's let bygones be bygones. Like, did you actually steal the tape? Well, I appropriated it. Yeah, because we needed it. But, you know, so it's a misunderstanding more than anything. But it's like, you know, ultimately, let's let bygones be bygones. Yeah, I love the
[32:16-32:16] UNKNOWN: - Because
[32:16-32:16] SPEAKER_00: you're the
[32:16-32:16] SPEAKER_02: sheriff.
[32:16-32:16] UNKNOWN: I
[32:16-32:39] SPEAKER_02: love the contrast between basically letter of the law versus spirit of the law. Juliet's like, we needed the shit. It's tape. What are you doing tonight to fuck off? And he's like, well, according to these words written here, that tape was allocated to this place and that's that. And you're a thief. But that instinct is also what's making him swear her in as sheriff right now.
[32:40-32:40] UNKNOWN: So
[32:40-32:43] SPEAKER_00: because she gets stuff done and she's
[32:43-32:43] UNKNOWN: -
[32:43-33:13] SPEAKER_00: Well, no, because he's following his instinct. Oh, no, I agree. I understand what you're saying. Yeah. I was referring to Mayor Johns and Holston selecting her. I mean, there's more complex - he didn't necessarily select her because she was crafty or good at solving problems and things like that. But that's certainly why Mayor Johns went forward with it because she saw her, saw Juliet in action and get things done.
[33:13-33:13] UNKNOWN: And
[33:13-33:13] SPEAKER_00: it's like,
[33:13-33:13] UNKNOWN: hey,
[33:14-33:20] SPEAKER_00: there's something about her that gives me hope for the whole silo and ultimately was looking forward to her as being mayor.
[33:20-33:21] SPEAKER_02: Yep. Yeah.
[33:21-33:22] SPEAKER_00: Which may
[33:22-33:22] SPEAKER_02: happen,
[33:22-33:22] SPEAKER_00: I
[33:22-33:42] SPEAKER_02: guess. It's possible. So you see Juliet basically how much of a dog on the scent she is because as soon as the dickhead lady leaves the office, she starts looking for jewelry. She gets sworn in, gets some keys, starts looking for the file. It's like, I'm here to do this shit. All that other, like the sheriff -y stuff, that's
[33:42-33:52] SPEAKER_00: a distraction. No, I don't know about that. Like, hey, I will help you figure out who killed Mayor Johns if you help me figure out who killed George. Right. But I'm here to figure out who killed George.
[33:53-34:10] SPEAKER_02: Right. And that's that. So here we are. So then the rude lady comes in and is a dickhead, says that judicial said they don't have a Wilkins file, which seems definitely not true. I don't care that we end up seeing a file at the end. Judicial has a file on Wilkins. For sure.
[34:10-34:31] SPEAKER_00: And I assume that they have things other than paper files, but maybe not. Maybe. Because they previously portrayed that paper is super expensive and so I don't know that they're printing out a bunch of paper because they only have so much material. And if you have the ability to keep digital files, which they do,
[34:32-34:33] SPEAKER_02: why would you keep
[34:33-34:33] UNKNOWN: a
[34:33-34:54] SPEAKER_02: That's the natural place. Yeah, so no chance they don't have a file on him. He's like the guy. Right. That's just one thing that jumped out at me. So she also sees a note from Holston or she sees a note that says double the flowers in front of the mirror. I don't know whose handwriting it is. I said it's from Holston,
[34:54-35:12] SPEAKER_00: but I'm not sure. I'm pretty sure. I want to say that I remember him writing that when he was, you know, a couple episodes ago when he was writing the notes to, like he left a note at the desk and I'm pretty sure I saw him write that and put it
[35:12-35:33] SPEAKER_02: in the file. Okay. Yeah, I wasn't sure if it was Allison's was the only question like he wrote or she wrote that note to him was the only question in my head. But yeah, if you've seen it then I'm not 100 % sure but I think it was. So then we jump to Lawrence beating the shit out of somebody drunk. So I assume he got
[35:33-35:42] SPEAKER_00: this list from judicial and he's like, hey, I know this guy and he has something to do with poison. Yeah, he poisoned people alcohol.
[35:44-35:44] UNKNOWN: So
[35:44-35:51] SPEAKER_00: poison. So where'd you get, it must have eaten you. That is not a very good investigation.
[35:51-35:51] UNKNOWN: And
[35:51-36:49] SPEAKER_02: he is like the classic drunk. He plays the drunk guy really well because Juliet comes up and is like, bro, you need to chill. And he's like, fuck off. And he's like, bro, you're scaring kids and he like sees it and it hits him. It does affect him but then he's like, why the fuck are those kids here? It's lunchtime. That just made me mad. It's like a raging drunk. It was funny. So they go to get some coffee, sit down in the cafeteria, have a chit chat. She's really I think just trying to get him the hell out of there. But ultimately she starts to tell him about what happened between her and Holston and She tells him the line she dropped on him of like maybe your wife wouldn't be dead. And he's like, you told him what? And then, but I think in that moment, Lauren's are starting to be on Juliet's side. No, I agree. And I think he maybe almost certainly had a big impact from Mary John's picking her, but still was like,
[36:49-36:49] UNKNOWN: get
[36:49-36:52] SPEAKER_02: the fuck out of here. You don't know what you're doing. Right. She doesn't. Right. She
[36:52-37:30] SPEAKER_00: doesn't. Right. I mean, it is a fair perspective of you have nothing to do with law enforcement and I've been doing this for 30 years. Not that he wanted the job, but like you can't tell me anything about law enforcement. But I don't think she's trying to. She basically says, you're right. I don't know. But you can't go around like punch people in the face and doing this dumb investigation. Right. The only law enforcement I'm trying to do right now is stop you from being a public menace. Right. And I think she makes it clear from this point forward, hey, I'm here to investigate George. Yeah, I'm going to fuck about the sheriff's office. And so was Holston. That is why he picked me and here's the story of what happened. And that's why I'm here. And
[37:30-37:30] UNKNOWN: it's
[37:30-38:14] SPEAKER_00: like, and so you think that's the sign? Yeah. Yes. That's why I think so. I'm not sure, but that's why I'm here. It's like, oh, okay. Okay. That's fine. And I think that Mayor John's, it all reflects back to Holston and his character. So he clearly was a person, a man of integrity, or people trusted him, including Mayor John's and Deputy Marnes. If he said, if he did these things and he felt strongly enough to walk out and leave this, all of this stuff to Juliet, there is some reason. Right. He wouldn't have done that if there wasn't something. And it's like, oh, he told you that and that's why he gave you this thing.
[38:14-38:14] UNKNOWN: Like,
[38:14-38:18] SPEAKER_00: oh, well, maybe we're thinking about it. Maybe we need to think about it.
[38:18-38:37] SPEAKER_02: So they go to start investigating together and they're going to talk to somebody we don't know, but they're knocking on the door. A dude walks up, they're looking for his wife. She's dead. Marnes, apparently the coffee did not sober him up because he's still a drunk dickhead and the dude ends up punching him in the face.
[38:38-38:39] SPEAKER_00: Right. Yeah. Patrick Kennedy.
[38:40-38:40] UNKNOWN: So
[38:40-39:04] SPEAKER_00: I assume, I don't know, they don't talk about how they suspected him. Like, I assume he was, like, they're just popping down this list. Well, it's his wife that they're there to see, right? Right, yeah. Or how she ended up, like, that's who they're going there to talk to. I assume they got this big giant list from Judicial and they're kind of just rolling down the list or finding people who are more likely than not to have been involved in this.
[39:04-39:15] SPEAKER_02: And they clearly have a, like, Marnes and this lady have a past, clearly, because the husband says that she killed herself because Marnes lied about her and got convicted and some shit happened.
[39:15-39:15] UNKNOWN: We
[39:15-39:26] SPEAKER_02: don't know. Right. But, yeah, that's when Marnes is kind of a drunk dick and the dude punches him in the face because that's what you do at that point. Right. There's no other reactions.
[39:29-40:00] SPEAKER_00: So let's see. I got a question. So I'm not sure if she was on this list. I'm not sure how they got down there. But clearly this lady has been dead for a year. Right. So does she show up? How do they not know this? That's what I'm like, are the records that bad? Or did he just say, hey, I want to go check out this other lady? She might, like, just like he did with this other guy that was in the alcohol, that, hey, I bet she did it. And he just had this lady's name in his head and it's like, let's go talk to her.
[40:00-40:00] UNKNOWN: That's kind of my
[40:00-40:02] SPEAKER_02: instinct based on him being raging drunk the whole episode.
[40:04-40:04] UNKNOWN: And
[40:04-40:20] SPEAKER_02: she's, well, she's been dead for a year. Yeah. Oh, sorry. My bad. So Juliet gets him some ice and is like, basically, I trust you enough. You ever seen a hard drive around this place? And Moran's doesn't like freak out about it. He's like, go check her
[40:20-40:20] UNKNOWN: side.
[40:21-40:22] SPEAKER_02: Which is
[40:22-40:22] UNKNOWN: a
[40:22-40:39] SPEAKER_02: good thought. Yep. But then Moran's does lightly try to talk Juliet out of whatever she's about to do. He's like, hey, maybe just be a sheriff. Maybe look, push everything behind you and move forward, be the sheriff of the silo. Which makes me ask, like,
[40:39-40:39] UNKNOWN: how
[40:39-40:44] SPEAKER_02: many things has he done that for? But we can move past it.
[40:44-40:55] SPEAKER_00: Yeah. I mean, he doesn't strike me as somebody with the highest moral character. I mean, just already the things we've seen just in this episode of him framing this other lady, like, and just whatever. Yep. So then
[40:55-41:09] SPEAKER_02: he starts crying about my mare Johns. Jules gives him the ultimatum of like, you help me, I'll help you. And then I'll go back. I'll leave. You'll get everything. We'll solve all this shit and I'll go back to Mechanical. And
[41:09-41:39] SPEAKER_00: that's a good deal. Like, if you're going to partner with somebody or ally with somebody, it's a good deal. It's like, I'll help you, you help me, and then I'm going to leave. I'll give you the thing you wanted. You can put whoever you want in here. All I want to know is what happened to George and I'm going to leave. And I wouldn't go back to Mechanical. I don't want to do this either. Right. And so ultimately I think he's like, okay, that sounds great. Let's do that. Well, I mean, I don't think that he's fully bought in because they leave this scene of like, okay, well, you think about it.
[41:39-41:55] SPEAKER_02: Right. But I think like maybe he's still drunk. Like, if that's the deal, like you're going to fuck off after we solve everything? Great. Sure. And then Julia offers to post a deputy outside. He's like, I got a shotgun. It's going to be fine.
[41:55-41:58] SPEAKER_00: Yeah. Maybe a deputy being outside might have been a good idea.
[41:58-42:46] SPEAKER_02: It was a good idea. Turns out. But so we jump back again to the past. So we got young Juliet leaving with a note from her father to head to Mechanical. She leaves her brother stuffed animal, which is like a big character moment. She's going to take it, but nope, she's hardened Juliet now. Big bad 13 year old beast. Or 14, whatever she is. She walks past medical and they make a point of showing that she did not stop to see her dad. Don't know why just yet. We're going to find out because he didn't fucking write that note. So she goes down and gives the note to young Martha, which is a cool little thing. They get it back and forth. Martha's like, we don't need you people down here. It's too important to trust. It's in these people's blood. Juliet's like, I'm a fucking savage. Shut up. And all
[42:46-42:46] UNKNOWN: of a sudden.
[42:46-42:48] SPEAKER_02: The mother was too,
[42:48-42:53] SPEAKER_00: right? So Martha knows her mother. Yep. She says you are your mother's daughter. All right. Right. And so it's like it is in my
[42:53-43:03] SPEAKER_02: blood because my mom was like this. And so we get a quick glimpse of young Knox, which is just a little like crowd thing. And she sends her to go scavenging.
[43:03-43:30] SPEAKER_00: Right. Well, I have some questions about how this whole thing went down. So she obviously faked this note. She's smart enough to do this. She has a misspelling, whatever. But that's fine. How does she know Martha? How does she know enough to address who to address this note to and where to show up? Like hey, I'm going to run away to mechanical. She obviously has had some exposure to this before because in her mind, she's like, I'm going
[43:30-43:30] UNKNOWN: to
[43:30-43:32] SPEAKER_00: go there and I'm going to take this note to Martha.
[43:32-43:49] SPEAKER_02: Yeah. I mean, I assume her mom has talked about her. I assume. Like just in growing up, you tell stories of where you came from and stuff like that. Yeah, that's basically the extent of it. And the fact that she fixes the chair suggests to me that her mom has at least done some stuff with her.
[43:50-43:52] SPEAKER_00: Maybe mom is from down deep.
[43:52-43:52] UNKNOWN: At
[43:52-43:53] SPEAKER_00: least Martha knows
[43:53-44:20] SPEAKER_02: her. Right. She met a doctor and got married and moved up. But we don't really explain it, but that's like the story I told myself at least. So then basically she goes to learn the ropes and scavenging. Nothing really comes out of that. I assume that girl she's talking to is the short hair girl or yeah, I assume she's the short hair girl. Yeah. Like the president. I made the same assumption. Yeah. I don't remember her name. Yeah, I keep calling her short
[44:20-44:20] UNKNOWN: hair
[44:20-44:27] SPEAKER_02: girl. So we jump back to the president and Juliet's looking for the hard drive and paper at recycling. It's not there, but she tells a lady,
[44:27-44:27] UNKNOWN: hey,
[44:28-44:30] SPEAKER_02: if you find it, message me. I'll cover the charges.
[44:30-44:31] SPEAKER_00: Yeah. So I want
[44:31-44:31] UNKNOWN: to
[44:31-44:54] SPEAKER_00: go back to young Juliet running away to mechanical and she obviously ends up in the scavenging team. So I think it's interesting that the cycle of 12 recycling stations every five minutes, they're dropping stuff that's somewhat of an efficient system. But I imagine over hundreds of years that you have to either,
[44:54-44:54] UNKNOWN: I
[44:54-45:08] SPEAKER_00: guess you got to have a mind. Like you got to be making stuff too. Like at some point or like really recycling like every piece of metal, I'm going to re reuse and like melt it back down. If you have the capability, melt it back down and make it something else. Like you have to be super efficient.
[45:08-45:08] UNKNOWN: For
[45:08-45:22] SPEAKER_00: sure. If you're not getting new stuff into like even like, like every like think of the physical amount of stuff, like that stuff has to become chairs or paper or something. Yeah. If a chair breaks, you don't just order another one
[45:22-45:22] SPEAKER_02: from Amazon.
[45:22-45:27] SPEAKER_00: Right. You got to take the raw material of that and turn it into something useful. Every single thing.
[45:27-45:42] SPEAKER_02: Yeah. And so to the smallest little extent, it takes the sting out of him making take Juliet's or mom and brother's stuff to recycling because that's a known entity in the world. It's a principle that everybody has to
[45:42-45:45] SPEAKER_00: recycle. But still to the smallest extent,
[45:46-45:46] UNKNOWN: it
[45:46-45:48] SPEAKER_00: takes the sting out of it. Sorry.
[45:48-45:48] UNKNOWN: I
[45:48-45:49] SPEAKER_00: just wanted to know you're good there.
[45:50-45:50] UNKNOWN: Oh,
[45:50-46:00] SPEAKER_00: and the other thing was Primo things go to Walker, right? So for years and years and years, she gets the good shit. Yes. So she has this collection of things
[46:00-46:08] SPEAKER_02: and more generally, like she's the boss of mechanical because we didn't, it didn't fully establish that before. And like in the present with older Martha, but like,
[46:09-46:09] UNKNOWN: yeah,
[46:09-46:38] SPEAKER_02: she's just, she runs the show downstairs. She's like the mayor of Down Deep. Exactly. Yeah. So we jump, she's looking for it, basically says hit me up if you find anything. And that's that whole scene. And we go back to the past and Juliet going back to Martha's and her dad's there. We find out that the letter was fake. Martha knew it immediately. And so then they have another back and forth. Like you're not made here, get back up there. Your dad's here.
[46:38-46:38] UNKNOWN: I
[46:38-46:55] SPEAKER_02: just let you have one little day of whatever and now you need to go. But she fights to stay. She's like, nope, this is mine. That's where we get the moment of her dad asking if she's happy there. And her saying like, well, no, but I have to work so hard. It doesn't make me think about mom and brother. So I'm less sad. Yeah.
[46:56-46:56] UNKNOWN: So
[46:56-47:22] SPEAKER_02: yes. Yeah. And then Martha gives her one last ultimatum, basically like, okay, well, you have to take an oath to be all in on mechanical. Juliet's like, fuck yeah. So not only does she get to stay, but she gets a promotion to Shadow Knocks, which is where we find her in the present. Still doing that. Yep. So a cool little scene is the ultimate goodbye between them. I don't know if adult Juliet bumps into her dad.
[47:22-47:30] SPEAKER_00: Well, we can jump ahead. Well, obviously she doesn't say goodbye to her dad right there, which is, it was a little sad.
[47:30-47:30] SPEAKER_02: It's like,
[47:30-47:31] SPEAKER_00: at least give him a hug.
[47:31-47:39] SPEAKER_02: She also didn't say goodbye to Martha. She kind of did that thing. So she's emotionally distant to begin with,
[47:39-47:39] UNKNOWN: and
[47:39-47:42] SPEAKER_02: it's because of this motherfucker. For the obvious
[47:42-47:45] SPEAKER_00: reasons. But what was I going
[47:45-47:45] UNKNOWN: to
[47:45-47:57] SPEAKER_00: say? So oh yeah, in the future, she or in the present, I guess, the future from that perspective, when she is walking up to like the go be the mayor, whatever.
[47:58-47:58] UNKNOWN: The
[47:58-48:04] SPEAKER_00: sheriff did. The sheriff. She stops at medical. And she looks like she's about to go in,
[48:04-48:04] UNKNOWN: but
[48:04-48:09] SPEAKER_00: that's when the porter finds her and says, hey, there's been an accident and calls her up to
[48:09-48:09] UNKNOWN: the
[48:09-48:15] SPEAKER_00: mayor. Yeah. And says, hey, come quickly. Where that scene happens, they're outside of
[48:15-48:15] UNKNOWN: medical.
[48:15-48:32] SPEAKER_00: So that was probably her first chance in years and years to, I don't know how old she is now, but her last time was 13, I assume. And so her opportunity to go, she may have seen him since then, but it looks like she or he's contemplating stopping by medical to see her dad.
[48:33-48:33] UNKNOWN: And
[48:33-48:34] SPEAKER_00: then, you know.
[48:34-48:34] SPEAKER_02: Yeah.
[48:34-48:34] UNKNOWN: I
[48:34-48:58] SPEAKER_02: almost think back in the past, they're telling this story without words in that scene of like, hey, we're kind of almost bonding over the loss that we shared and just acknowledging the fact that it broke both of us and we can't be together. Right. And this is our new lives. And it is what it is and it sucks. But there was almost some of that, like when he's saying,
[48:58-48:58] UNKNOWN: are
[48:58-49:34] SPEAKER_02: you happy here? And then specifically says, you don't have to think about them or me. Like, that is telling a big story of like, hey, kind of no hard feelings because we both got fucked by life a little bit. Right. So I'm going to go do this and you go do that. Right. And it's fine. And it's almost just this like, we're two different people and maybe we can talk about how crazy that shit was someday. One day. Wild though. So now we're back to the present. Marnes is doing some very unimpressive punching bag work. I was like, why did
[49:34-49:36] SPEAKER_00: you guys put this on the screen? What are we doing? I
[49:36-49:36] UNKNOWN: mean,
[49:36-49:43] SPEAKER_00: I think it was just because they were toying with that. They toyed with the fact that he might be committing suicide. Right. That's what it looked like for
[49:43-49:43] UNKNOWN: a second. And
[49:43-49:45] SPEAKER_00: I didn't even buy that for a second. It was so fine.
[49:45-49:48] SPEAKER_02: Yeah. They hung the hook and you felt,
[49:48-49:48] UNKNOWN: saw
[49:48-49:51] SPEAKER_02: the weight go down on the hook and it was like, get out of here.
[49:51-49:51] UNKNOWN: He
[49:51-50:12] SPEAKER_02: didn't kill himself. But I'm saying once he's got it, like from the actor perspective, like why do we got to see him throwing terrible punches? Has this guy ever thrown a punch? Probably not. But anyway, so yeah, my next bullet is they clearly want us to think he hung himself for a second, but didn't really buy it. So Sims stops by.
[50:13-50:22] SPEAKER_00: Rob. Yeah. Like this is a very different portrayal of Mr. Sims than we've seen. He's there to
[50:22-50:22] UNKNOWN: do his thing. He's obviously
[50:22-50:50] SPEAKER_00: on the job. Right. He's in there trying to manipulate. Like he has an agenda, but he rolls in there. But he shows up and is like, who is it? It's Rob. Right. And you know, and then walks in and goes into the refrigerator. Just hanging out. Right. So I mean that shows that they have a decent level of familiarity. Like I wouldn't walk into somebody's house or room or whatever and go in their refrigerator and I can think of a few people that I would do that with and it's people that I'm very close with. Your family. Right.
[50:52-50:53] SPEAKER_02: Yeah. Yeah.
[50:53-50:53] UNKNOWN: So
[50:53-51:50] SPEAKER_02: he stops in and basically he's playing the nice guy like, hey buddy, how you doing? We lost the mayor. That's so sad. Ultimately he's there to say, hey, the judge said we could get rid of Juliet. You just got to agree and it's done. Yeah. We're ready to do this thing. Yep. And Lawrence, being a little bit savvy, says, and fully on Juliet's side at this point, that's where this scene is kind of weighing my opinion of Lawrence looking backwards a lot and thinking he's a little bit more savvy and not stupid than just the dumb little deputy. Right. Because he at least sees Sims for what he's here for. Right. And is savvy enough to not play it off to the extent that Sims doesn't know. But he's like, well, maybe we just let her come because that's what the mayor wanted and she's not going to succeed. We'll let her fail on her own. It won't rile up the people down deep. Yeah. And so it's savvy.
[51:50-51:50] UNKNOWN: I
[51:50-52:00] SPEAKER_02: mean, I think Sims very clearly is like, okay. Okay. And he implies a little bit of pressure. Lawrence claps back at him like, I don't work for the judge. Because Sims is like, well, the judge wants
[52:00-52:05] SPEAKER_00: this. You know, when she gets something in her cross, she's going to
[52:05-52:05] UNKNOWN: be
[52:05-52:07] SPEAKER_00: difficult. Yeah. I don't work for her. I don't give
[52:07-52:07] UNKNOWN: a
[52:07-52:08] SPEAKER_00: fuck what she's
[52:08-52:08] UNKNOWN: saying.
[52:08-52:20] SPEAKER_00: You work for her. Go tell her I said fuck off. But this is the first, I think he made a decision. So I think I agree with you, but I think this is the first time. I don't know that he had agreed to it. Maybe he was on the path.
[52:20-52:20] UNKNOWN: Until
[52:20-52:21] SPEAKER_00: this
[52:21-52:39] SPEAKER_02: made him choose. I hadn't thought about it either. But going back to what you said about him trusting Bernard and Sims in the first scene, that didn't hit me when I watched it. I thought like he was just whatever. But in this one, whenever Sims knocks on the door, he goes, these motherfuckers did it. Yeah. He's being
[52:39-52:49] SPEAKER_00: intentionally deceptive. That he actually is now that he has additional information and had this conversation with Juliet, it's like, oh, well, let's just hold off on that. Yeah, let's just
[52:49-52:50] SPEAKER_02: see what happens. At
[52:50-52:58] SPEAKER_00: the very least, he fully doesn't know who's the good guy anymore. Right. And he's like, okay, well, let's hold off on that.
[52:58-52:58] UNKNOWN: And
[52:58-53:12] SPEAKER_00: he's, you know, like he doesn't even look at him while he's like, he's not a very good liar or knows that he's an excellent BS detector. Right. A little bit of both. And he's kind of like, yeah, let's just hold off on that. I mean, you know, I want to rile up the people on Down D. Sims is
[53:12-53:42] SPEAKER_02: like the detective on First 48 that's like, all right, ready? Yep. What if I threaten you just a little? This is what we're doing? Okay. That's fine. Yeah. So a good scene, I thought. And then we get to, we jump to same dude whose name I forget. Lucas. Lucas. Still in the cafeteria, still watching the screen. So we're not like hit over the head with what he's doing in there, but that dude saw the flashing green. I assume so. That's what
[53:42-53:42] UNKNOWN: he's
[53:42-53:44] SPEAKER_02: like. He's like, I'm going
[53:44-53:56] SPEAKER_00: to wait to see if that happens again. Right. And I'm not going to tell anybody what I'm doing here. I'm just hanging out. Because they might freaking try to send me out for speaking about what I saw with my eyes. Right. And he specifically
[53:56-54:07] SPEAKER_02: at one point says like, I have a minute left. So there's a curfew, which. Yep. But I have a minute left. Jules clearly is like, whatever.
[54:08-54:08] UNKNOWN: I
[54:08-54:08] SPEAKER_02: don't know that
[54:08-54:10] SPEAKER_00: there's a curfew. The cafeteria closes.
[54:11-54:11] SPEAKER_02: Fair
[54:11-54:17] SPEAKER_00: enough. But that, hey, you don't, you can walk around the stairs if you want to. You just can't stay in here. Yeah. Because we got to do maintenance
[54:17-54:30] SPEAKER_02: on this fake screen. Right. So he's in there. I love Juliet even more in this scene because he's like, did I say something that could get me arrested? And she's like, I don't know.
[54:30-54:34] SPEAKER_00: I was confused about that whole thing. I got that part.
[54:34-54:34] UNKNOWN: But
[54:34-54:40] SPEAKER_00: like, because they were talking about Romeo and Juliet. Because he's like, they're talking about her name. It's like, well, I heard it was a play.
[54:40-54:40] UNKNOWN: It
[54:40-54:50] SPEAKER_00: was written by a rebel. It's like, what about saying that sentence was something that. It's just from before. Like you're just not even allowed to talk about it?
[54:50-54:50] UNKNOWN: That's what
[54:50-54:51] SPEAKER_00: the fascists do. They
[54:51-54:52] SPEAKER_02: erase history.
[54:53-54:55] SPEAKER_00: You can't talk about it.
[54:55-55:00] SPEAKER_02: Yeah. You can't talk about anything from before. That's a common thing. So
[55:00-55:00] UNKNOWN: the
[55:00-55:20] SPEAKER_02: last rule of the establishment is to not believe the things you see with your own eyes. Oh, I don't like it. So we jump to Lawrence remembering Mayor John's drunk on the stairs. Yeah, I call this him imploding on the stairs. He's not doing well.
[55:20-55:23] SPEAKER_00: And he's hanging the bottle over the stairs. He
[55:23-55:35] SPEAKER_02: specifically sees the sign that says not to and he's like, I knew if I wanted to. You're bringing deputy. Sometimes you just got to let loose seconds. He's having a tough time.
[55:35-55:35] UNKNOWN: It
[55:35-56:13] SPEAKER_02: will be challenging. He's creepy. Ultimately, the reason we see him is to see him hear Juliet and Martha talking on the radio and they're just kind of chit chatting. But ultimately this is the moment if he wasn't 100 % on board, he's on board because he like for her to think that Lawrence is listening and from his perspective, he should know that and they have this very candid conversation between two old acquaintances and she's like, yeah, I think I may have found somebody that's like on the side of you basically and he's like, we'll see tomorrow. Yeah, exactly. So
[56:13-56:42] SPEAKER_00: my perspective on this scene was different than that. I assume that everybody can listen to these radios, right? Because there seems like there's one channel, there might be more than one and it's all open. It's not encrypted or anything like that. There's multiple deputy stations and I assume there's somebody always staffed and listened to this radio and they just went out in the open and had this private conversation.
[56:42-57:02] SPEAKER_02: Yeah, I think they were guarded in their private conversation. They weren't saying, she didn't say, yeah, I think this deputy Lawrence dude might be the right guy. And I do assume, the reason I say she has no reason to believe that Lawrence is listening specifically is he's just some guy, she has a radio that she has turned off all the time.
[57:03-57:03] UNKNOWN: And
[57:03-57:07] SPEAKER_02: he's a drunk fucking raging drunk that's been pissed drunk all day,
[57:08-57:08] UNKNOWN: probably
[57:08-57:39] SPEAKER_02: passed out in his apartment. That's where I left him. And so that outsider view on this guarded conversation, but he knows that it's guarded too so you can kind of do your own little decrypting of what they're talking about. But that's just what I took it as. I do agree with you that everybody can hear this. And judicial. They definitely heard this. 100%. They got fucking microphones outside of the ones they're talking into. They definitely heard this and easily interpreted what's
[57:39-57:39] UNKNOWN: going on.
[57:40-57:52] SPEAKER_02: But they're also not finding out any new information. They know Martha's got radios. They know she's connected to Juliet. They know now that Marnes is not at least all the way on board because he had his interaction with Sims.
[57:53-57:53] UNKNOWN: So
[57:53-58:09] SPEAKER_02: I think generally a cool little scene, but whatever. Then we get to our final, I guess not the final one, but the next scene. Marnes, back in his apartment, gets attacked by some dude, perhaps the worst assassin in the history of the world. Right.
[58:10-58:30] SPEAKER_00: Like, he goes in there and he has the shotgun. So I assume he's not trying to kill him. That's, you kind of have to. Because he has the shotgun. Yeah, you wait until he passes out. Blast that motherfucker in the head. Exactly. If you were truly trying to kill him, that is not the way. Or you're the worst assassin in the history of the world. Because, I mean
[58:30-58:30] UNKNOWN: I
[58:30-58:32] SPEAKER_00: can see you not using the shotgun because it's loud. It attracts
[58:32-58:32] UNKNOWN: a
[58:32-58:37] SPEAKER_00: lot of attention. But there's knives. And you have surprise. And
[58:37-58:42] SPEAKER_02: he's drunk. Yeah, you're going to sit in the closet until he passes out and then grab a knife and chop, chop,
[58:42-58:42] UNKNOWN: chop.
[58:42-58:47] SPEAKER_00: Or even if it's not while he's sleeping, just walk up behind him, stab him a few, lots of things.
[58:47-58:47] UNKNOWN: If
[58:47-58:48] SPEAKER_00: you've done this
[58:48-58:51] SPEAKER_02: before, it's not complicated. I'm not saying there's a
[58:51-58:51] SPEAKER_00: person who's done it before.
[58:52-58:52] UNKNOWN: To
[58:52-58:52] SPEAKER_00: be clear.
[58:53-58:53] UNKNOWN: But,
[58:53-59:00] SPEAKER_00: you know, if you were being intentional about trying to kill somebody and you're in their apartment and you have surprise and they're drunk. They're not
[59:00-59:01] SPEAKER_02: going to
[59:01-59:20] SPEAKER_00: survive. Right. So I assume, I don't know who this guy is. So I guess maybe that's the first thing you said. Unless I missed something. It was a surprise to me. And who is this guy? Who sent him? What was he trying to do? Because it ends with him pointing the shotgun at Deputy Barnes. But obviously he doesn't shoot him.
[59:20-59:23] SPEAKER_02: Right. And it doesn't resolve. Basically,
[59:23-59:23] UNKNOWN: he
[59:23-59:38] SPEAKER_02: gets him back at gunpoint. So back to before they fought and then the scene ends. He's definitely kitted out in all black. Like a specific organization we know in this show. But to be fair, if you're sneaking around in the dark, you're going to be kitted out in
[59:38-59:44] SPEAKER_00: all black. So he was at least intentional about being in there and surprising him.
[59:44-59:44] UNKNOWN: And
[59:44-59:48] SPEAKER_00: he tried, like he hasn't been chokehold and all this. And Barnes does a good job of fighting back.
[59:48-59:48] UNKNOWN: I
[59:48-59:52] SPEAKER_00: mean, he's been in law enforcement for 30 years. So he's probably. And he's
[59:52-59:52] SPEAKER_02: a very
[59:52-59:53] SPEAKER_00: clean striker
[59:53-59:55] SPEAKER_02: as we've seen earlier in the show.
[59:55-59:55] UNKNOWN: Yeah,
[59:55-60:06] SPEAKER_02: right. But I agree. I did not think about it, but yeah, you're right. That guy's not there to kill him. He's there to scare the shit out of him and get him to send Juliet back down deep.
[60:06-60:06] UNKNOWN: I
[60:06-60:12] SPEAKER_00: guess. I don't know. I'm interested. What do you think? Maybe he was just a
[60:12-60:14] SPEAKER_02: random crazy person that wanted to kill a political
[60:14-60:19] SPEAKER_00: campaigner. You might remember. I don't. I don't. I don't
[60:19-60:20] SPEAKER_02: remember
[60:20-60:20] SPEAKER_00: this.
[60:21-60:22] SPEAKER_02: So
[60:22-60:23] SPEAKER_00: what are you supposed to speculate? Who
[60:23-60:26] SPEAKER_02: is this guy? I got nothing. I mean,
[60:26-60:26] UNKNOWN: I
[60:26-60:42] SPEAKER_02: think this is the staircase of intimidation, right? You show up with the strawberries. You show up to have a friendly chat, but with some intimidation. You prosecute in the courts. You shoot at. I don't know what's next.
[60:42-60:49] SPEAKER_00: Right. So judicial. CIA. Whoever. Right. Whoever. The people that are, you know, in charge with the cuts.
[60:50-60:50] SPEAKER_02: Yeah.
[60:51-60:57] SPEAKER_00: That's what I assume. It's not some new group or new whatever.
[60:57-60:57] UNKNOWN: I
[60:57-61:03] SPEAKER_00: say group. Yeah. That has a different agenda. Whatever. George's family. Whatever. I don't know. Possibly.
[61:03-61:12] SPEAKER_02: Yeah. Could be one crazy lunatic with no social media history. Right. Maybe. So like you said, the scene ends.
[61:12-61:12] UNKNOWN: The
[61:12-61:24] SPEAKER_02: guy gets the shotgun back and he's got him held hostage. Jump to the actual final scene. We got Juliet back in her apartment and she finds George's citizen record in the vent. Right. And then roll credits.
[61:25-61:25] UNKNOWN: But,
[61:25-61:38] SPEAKER_02: I mean, anybody that's paying attention knew that sucker was in the vent. They referenced it several times throughout the episode. It's been making noise, all that stuff. But we don't really get anything beyond that. We already know about this file because we've seen it.
[61:38-61:38] UNKNOWN: So
[61:38-61:43] SPEAKER_02: not a lot that comes out of that other than Juliet's made a big jump in her investigation.
[61:43-62:06] SPEAKER_00: Right. And that before she wasn't sure if there was anything more than just the sign that, Hey, I found something and the truth, you know, inscribed on the badge. But now it's like, Oh, I know for sure. You left me something. Because this was very similar to how George left me a package and he knew that I would find this.
[62:07-62:07] UNKNOWN: And
[62:07-62:16] SPEAKER_00: okay, now, now this is the sign. He definitely found something. He found the truth and he left me some breadcrumbs. Right.
[62:16-62:16] UNKNOWN: And
[62:16-62:21] SPEAKER_00: he didn't just for whatever reason think I'd be a good sheriff. This was what I thought it
[62:21-62:21] UNKNOWN: was.
[62:21-62:28] SPEAKER_00: Here's the pathway. I mean, I guess two things. One is where's the hard drive? That's just a general question.
[62:29-62:29] UNKNOWN: Yeah,
[62:29-62:40] SPEAKER_00: because she does not get the hard drive. It's just a file. Right. Where's the hard drive? And I want it. Why didn't you leave me the hard drive? I assume we're going to get that answered at some point. And I could see splitting resources
[62:40-62:45] SPEAKER_02: for one accidental discovery, not wrecking your entire ship. But yeah, that's a good question.
[62:46-63:12] SPEAKER_00: And the other one is, as Holston, again, he was grieving too, right? He was two years into it, but he was grieving. Like, why won't you just come tell me? Right? Before, hey, before you go out. Yeah, even if you're still going to go out, just pop down and say, hey. I found all these things. Here's what it is. And then you do your thing. But maybe he didn't want to arouse suspicion. But hey, you're going to, you appointed me or recommended me for the sheriff.
[63:12-63:27] SPEAKER_02: Yeah, people are going to be a little bit suspect on that shit. So. Yeah. It's another not super fleshed out plan. Like Alison should have told him, hey, don't just know that it's green out here if I clean.
[63:28-63:29] SPEAKER_01: Come on up.
[63:30-63:53] SPEAKER_00: Like, yeah. And or maybe he was just suspicious or concerned that these notes or this stuff might get into the wrong hands. Right. Because at some point, like, hey, you're going to leave this in the air duct. Hey, write me a letter. Hey, here's what I found. Right. Here's the people that you should go talk to. Whatever. Be plain and clear. But I guess maybe it's too direct and.
[63:53-64:07] SPEAKER_02: Yeah. And if you leave a note and specifically jumped out at me is here's the people you should go talk to. Well, if that's because those are valuable people and I'm judicial and I find it, well, those people killed themselves turns out. That's weird. Right. All in the same day. It's
[64:07-64:07] UNKNOWN: crazy
[64:07-64:21] SPEAKER_02: how it happened. And the ones that are left are not actual good resources. Right. And if they're people you should talk to because they're bad, well, now they know that you know and there are other actions to take.
[64:21-64:37] SPEAKER_00: Right. And so but yeah, I guess he's just trying to thread the needle a little bit of like, here's the pathway. And I'm not going to get. Right. Yeah. She has to put it together because if I'm too plain and clear, it might get into the wrong hands. Right. It's the standard little cat and
[64:37-64:46] SPEAKER_02: mouse. Yeah. And he knows that he's not going to be around to even try to affect it. So his plan has to be like pretty protective of Juliet. Right. To the point of like,
[64:46-64:46] UNKNOWN: yeah,
[64:46-64:58] SPEAKER_02: it's weird that you recommended her a sheriff, but you guys had this thing for however long and you thought she was good. And then the mayor went down and investigated independently and she thought she was good. Turns
[64:58-64:58] UNKNOWN: out
[64:58-65:10] SPEAKER_02: she is good. And so that's like the closest you could get to Juliet on the investigation with the resources and somewhat not revealed why.
[65:10-65:17] SPEAKER_00: Right. I wonder what Bernard's calculations would reveal about Juliet because he didn't do it. He's like, I don't need to do it. She's a thief. There you
[65:17-65:19] SPEAKER_02: go. I
[65:19-65:19] UNKNOWN: mean,
[65:19-65:45] SPEAKER_02: I assume that any of these, it's like, what would the numbers look like on a standard kid from the middle class being the president versus a billionaire's kid being the president? Fantastic. My guess is the numbers would say, yeah, that's a good guy, but probably the billionaire's kid is the best. Right. Exactly. Yeah. It would look fantastic. Yeah. So she's from the down deep. So that tells you everything. You
[65:45-65:45] UNKNOWN: need
[65:45-65:57] SPEAKER_02: to know what everything would be because that's not even middle class. They don't even know what they eat. Right. But that's the end of the episode. We roll credits. So do you want to jump into our closeout? Yeah.
[65:58-66:01] SPEAKER_00: You want to go through the open questions? Yep. I know we've been in the mound a little bit.
[66:02-66:46] SPEAKER_02: Yeah. We were asking the same thing over and over and with the instinct that they're not going to get answered. So we'll go through those. So generally, history of the silo. Under that, we have rebellion. Are they telling the real story of the rebellion? I also have, what's the pact and where did it come from? And I threw in where's the steam come from. In there, we've got, is the video real? So there's a few videos, but generally, is the green outside real or is the bad outside real? Right. How deep is the water? I assume we're going to find out pretty soon, but we haven't yet. My guess is it's shallow. That's what it looked like to me. George was down there walking around. Maybe. I don't know. Does anyone really know what happened? So
[66:46-66:46] UNKNOWN: I
[66:46-66:47] SPEAKER_02: guess this should be in the history.
[66:47-66:47] UNKNOWN: I
[66:47-66:48] SPEAKER_02: didn't realize it earlier.
[66:49-66:49] UNKNOWN: But
[66:49-67:14] SPEAKER_02: does I say, are they telling the truth about the rebellion? But if they're not, do they know they're not? Or do they truly believe? Because Bernard is a believer. But we'll get into that. And then screen flashing green. Lady in the cafeteria that saw green, turns out she's the dickhead lady from the sheriff's office and now, again, I lost his name, but Lucas. So we have two people that have seen and reacted to seeing that green. We know a lot
[67:14-67:16] SPEAKER_00: of people saw it, but they're conditioned to go,
[67:16-67:16] UNKNOWN: I
[67:16-68:18] SPEAKER_00: guess I didn't see that. No, my eyes fucking up. I'm certainly not going to mention it out loud with my mouth. So there's that. So you got any new questions? No. Well, just the obvious one. Who is this guy that was in Deputy Barnes' apartment? I have some general questions about Bernard. We kind of raised them of like, I don't know that they should make the list, but these are the types of things that I'm hoping that get revealed very quickly. Is that because he's acting legit, like basically from every scene in this episode, he was doing the things that he's supposed to be doing and he doesn't seem like he's fully aligned with judicial because they are very manipulative and have this agenda and they're just trying to get what they want. They spying on everybody. So they're clearly the bad guys. And I had the assumption up to this episode that I .T. and Bernard were aligned with him. But I don't have that perspective anymore.
[68:18-68:18] UNKNOWN: So
[68:18-68:25] SPEAKER_00: I guess the question is, what is the nature of the relationship between judicial and I
[68:25-68:37] SPEAKER_02: .T.? I agree. So Bernard is my biggest question of the episode. And specifically, what are his motivations is the question. But diving into that,
[68:37-68:37] UNKNOWN: I
[68:37-68:47] SPEAKER_02: think at least what they're putting on screen, he's a true believer. He believes in the pact. And even if he's a smart guy,
[68:47-68:47] UNKNOWN: I
[68:47-69:03] SPEAKER_02: could see him seeing the pact as flawed, but also the thing that keeps the silo from devolving into chaos. So ultimately, if we start fucking with the letters, then we can fuck with other letters. So we go
[69:03-69:14] SPEAKER_00: letter of the law, I think. And you're a thief. Right. That's it. And so he's not actually trying to be manipulative. He's like, there was this time and she did this thing and that's it. You're disqualified. You're a thief.
[69:14-69:14] UNKNOWN: And
[69:14-69:14] SPEAKER_00: that's
[69:14-69:14] UNKNOWN: that.
[69:15-69:19] SPEAKER_00: You broke the pact. Right. So ultimately, Bernard,
[69:20-69:20] UNKNOWN: good
[69:20-69:20] SPEAKER_02: guy,
[69:20-69:20] SPEAKER_03: bad
[69:20-69:21] SPEAKER_02: guy? I'm not sure. Right. So
[69:21-69:28] SPEAKER_00: that's the question. So that's the new thing. And then obviously, what's going on in the story? Like, who's this guy that showed up
[69:28-69:28] SPEAKER_02: in
[69:28-69:28] UNKNOWN: the apartment?
[69:28-69:54] SPEAKER_02: Exactly. And the assassin. And then I have, what's Cafeteria Man doing in there? It seems pretty obviously he saw the green and he's looking to see it again and then figure out what the hell he's doing from there. And then the other one that I had, and you answered it earlier, but the note from Holston says double the flowers in front of the mirror. Whose handwriting is that? I thought it might be Allison's, but also why?
[69:54-69:55] SPEAKER_00: Right. I think I'm
[69:55-69:55] UNKNOWN: going
[69:55-70:00] SPEAKER_00: to go back and look, but I'm pretty sure it was Holston, but I don't really get it. I don't understand.
[70:01-70:01] SPEAKER_02: What's going on with that mirror?
[70:02-70:08] SPEAKER_00: Right. Yeah, I don't understand what he's trying to say. And I assume that Juliet doesn't either. But maybe not. I don't know.
[70:08-70:08] UNKNOWN: Oh
[70:08-70:11] SPEAKER_00: yeah, we'll get into it I assume. Yeah, I think we do.
[70:13-70:18] SPEAKER_02: Recall finding that out. I don't remember what it is. Alright, so on to favorites. Yup.
[70:19-70:48] SPEAKER_00: You want me to go? Yeah. Okay. Young Juliet is my favorite character. And so she's obviously dealing with a lot. Terrible situation and she just decides, I'm going away. I'm good at fixing stuff and this is what I'm going to do. I'm taking control of my life. Yup. And I'm going to go do that. She handles the recycling, writes the note and we fast forward and she's Juliet.
[70:49-70:56] SPEAKER_02: She survives if nothing else and thrives in ultra pressure basically in the fucked up situations she comes through and saves the fucking day.
[70:56-71:04] SPEAKER_00: Yeah, she took control of her life in a terrible situation and turned it into goodness. Yup. And so I appreciated that.
[71:04-71:48] SPEAKER_02: Yeah, I have three potentials. Ultimately I cheated a little bit. I said Juliet. Okay. Which is technically young Juliet and big Juliet. But really what I zeroed in on, I was talking about adult Juliet because I like people that are kind of sarcastically assholes. Really? And her response to Bernard, no I appropriated it because we needed it. I don't think that was a matter of fact statement at all. It was like, no, fuck you. Like that's what it was. It definitely was. Yeah. And then also when Lucas was kind of scrambling and tripping and was like, oh shit, did I say something? And Juliet was like, fuck it, I don't care.
[71:48-71:48] UNKNOWN: I
[71:48-71:50] SPEAKER_02: don't know. I'm not really this
[71:50-71:50] UNKNOWN: year.
[71:50-72:25] SPEAKER_02: I'm this year. But that's not what I'm doing. I'm not doing law enforcement. You talk to Deputy Marks. So my other one was Marnes was potentially on there because of the way he handled Sims ultimately. The rest of the episode precludes him from being the favorite. But him being savvy enough to handle Sims, coming to his apartment and being like piss off dude and basically finally joining up on the side of the good. He at least gets an honorable mention. And then my ultra honorable mention is, is Bernard my favorite character in this episode?
[72:25-72:32] SPEAKER_00: Maybe because he's the one that's the most rational. Judicial is doing their thing. They're trying to manipulate and get what they want for whatever reason.
[72:32-72:47] SPEAKER_02: If nothing else, the biggest critique I can give Bernard after this episode and even looking back to his behavior before this episode is that he's ultra principled. Yep, he's straight down the middle. He's Kato. I don't know if that hits at all, but he's Kato. Yeah, he's straight down the middle like
[72:47-73:03] SPEAKER_00: hey, this is the situation. Hey, I'm going to be the new, the temporary mayor. I'm going to swear her in and these are the things we're going to do. We need to be careful with how we announce this story. He's right down the middle just doing the thing. Like he's very principled and calm.
[73:03-73:03] UNKNOWN: I
[73:03-73:29] SPEAKER_02: could almost, it's very different, but almost compare him to Varys in Game of Thrones. Like ultimately he serves the realm. He says that a bunch of times. And so Bernard serves the silo. And maybe he'll link up with judicial and let them play their power games when he sees like, sees when the numbers suggest that that's the best route forward. There's no perfect path forward, but my numbers suggest this. And so that's what I follow and ultimately trust
[73:29-73:58] SPEAKER_00: the pact. Yep. And he's, he's savvy, but his motives, or at least the way it appears now are for the good of the silo. He actually is in it for the good of the silo is what it seems like. We'll see. But whereas I think Sims, Judicial and the Judge, they're in it for judicial. Right. Exactly. I don't know that they're in it for the good of the silo, even though that's what Sims says. Of course. Like, yeah, we're all, you know, trying to, we're all in this for the good of silo. Yeah. Like I don't know that I believe that. I don't believe for a
[73:58-74:27] SPEAKER_02: second. We're for the good of the silo so long as we're running the show. Right. And what we say is good and anybody who says different ties. Right. And that's what's good. The good of the silo. That's what's good. So between those three, man, I almost have to go with Bernard because I have this feeling like I'm not going to be feeling that very much more moving forward. I don't remember exactly how his story concludes, but. I don't either. I don't think,
[74:27-74:31] SPEAKER_00: but. Leasing you feeling positive. But I do feel that I share your feelings about him right now.
[74:31-74:31] SPEAKER_02: Yeah.
[74:31-74:41] SPEAKER_00: So you got a favorite moment? Um, it is Juliet's first reaction with Martha. So that is ultimately what I, like,
[74:41-74:41] UNKNOWN: so
[74:41-74:55] SPEAKER_00: her going down with the note and those interactions, which obviously we can see how that has progressed forward to, you know, that thing. And that's the whole point. We saw young Juliet and how it has influenced her, made her who she is in the relationships that she has now. Right.
[74:55-74:55] UNKNOWN: So I thought
[74:55-75:07] SPEAKER_00: it was interesting for me to be able to see that. But I would in general say just young Juliet and all of her interactions at the recycling station, all of those things. Yeah. Yeah.
[75:07-75:07] UNKNOWN: I
[75:07-75:08] SPEAKER_00: got one moment
[75:08-75:12] SPEAKER_02: and it's close the door on your way out. That was it, dude.
[75:12-75:12] UNKNOWN: I
[75:12-75:24] SPEAKER_02: was like, Juliet is the shit forever and fuck that. But in a subtle way, just like I didn't say it rude and then didn't respond whenever the lady said Holston like,
[75:25-75:25] UNKNOWN: ah,
[75:25-75:26] SPEAKER_02: chef's kiss.
[75:28-75:43] SPEAKER_00: Because I got stuff to do. Right. I appreciate that. Right. So I think if there was an honorable mention for me is it is the maybe not necessarily that scene or maybe even thinking about the character is like adult Juliet because she's she's about business. Like,
[75:43-75:43] UNKNOWN: hey,
[75:43-75:52] SPEAKER_00: I'm not up here to actually be the sheriff. Yeah. I'm not your friend. I'm not like get out of my way. I want to know what happened with George and ultimately with Holston and Allison, right?
[75:52-75:52] UNKNOWN: This
[75:52-76:02] SPEAKER_00: is all this. Like, there's three three people who have died so far. Right. And we're not sure about Deputy Mars, but I don't think he's dead.
[76:04-76:05] UNKNOWN: But
[76:05-76:09] SPEAKER_00: that's it. People are dropping and there's something important for sure.
[76:11-76:22] SPEAKER_02: Yeah. So that's episode four. Yeah. It's a roller coaster. So ranking. Yeah. I think the lowest I think previously we were one three two was our order. Yeah. And then,
[76:22-76:22] UNKNOWN: yeah, I
[76:22-76:23] SPEAKER_02: would put four at the end of
[76:23-76:32] SPEAKER_00: that. I put four as a lowest. It's kind of slow. It was slow and the least revealing, I think. But I think you just have to have, you know, just pacing and telling the story. You got to do that.
[76:33-76:33] UNKNOWN: Like
[76:33-76:41] SPEAKER_00: it spent a bunch of time in the past character building. Juliet. I mean, that's clearly what I gravitated towards in this episode. So which I
[76:41-76:51] SPEAKER_02: think was good. But when you think big picture, it leaves you feeling like, well, nothing really happened. It is important because it makes us understand Juliet even in the first three episodes.
[76:52-77:04] SPEAKER_00: Right. And I think that's the place to put it. So you keep the pace high and a bunch of stuff going on in the beginning. You slow down, tell the story slower and then at the end it's going to start ramping up in the last episode. Yeah. I assume we'll get
[77:04-77:09] SPEAKER_02: like a little pop and then some more slow and a little pop and then it won't slow down quite as much.
[77:10-77:17] SPEAKER_00: And I like character driven stories. So it's good. But it's just the slowest and the least informative.
[77:17-77:17] UNKNOWN: So
[77:17-77:18] SPEAKER_00: I would say the lowest.
[77:19-77:23] SPEAKER_02: The best of Game of Thrones was not the battle episodes. I mean, we talked about it last week,
[77:24-77:24] UNKNOWN: but
[77:24-77:34] SPEAKER_02: again, saying that this is the worst episode of the four is not saying this is season eight of Game of Thrones. Oh no, it's not a bad episode.
[77:35-77:35] UNKNOWN: But
[77:35-77:36] SPEAKER_02: if
[77:36-77:37] SPEAKER_00: we are going to rank them,
[77:38-77:38] UNKNOWN: which
[77:38-77:38] SPEAKER_00: we... It's
[77:38-77:38] UNKNOWN: a
[77:38-77:39] SPEAKER_00: force out of force.
[77:39-77:45] SPEAKER_02: Exactly. I agree. All right. I guess that's it for us today. That's it. See you next time.
[77:45-77:45] UNKNOWN: See you next
[77:45-77:48] SPEAKER_02: time. That was a short one. I
[77:48-77:48] UNKNOWN: think
[77:48-77:51] SPEAKER_02: once we delete the fluff we'll be under an hour. Yeah, for sure.
[77:52-78:13] SPEAKER_00: And I'm going to command this. No whammies, no whammies.
[78:19-78:21] SPEAKER_02: That's also the... That is the shortest one.
[78:22-78:29] SPEAKER_00: It was our least favorite. It just didn't have a lot of depth to it. I actually anticipated that happening because...

==================================================
Generated on: 2025-08-27 18:56:50
Total words: 14084
Total speakers: 5
==================================================


Summary:
creation_date: 2025-08-27 source_file: 2025-08-27_1835_ZOOM0005_transcript.txt participants: SPEAKER_00, SPEAKER_01, SPEAKER_02, SPEAKER_03, UNKNOWN
Executive Summary
This transcript captures a detailed review and discussion of episode four of the television series "[[Silo]]." The participants analyze the episode's plot, focusing on the character development of Juliet through flashbacks to her childhood and her actions in the present. They also delve into the motivations and allegiances of other key characters like Bernard, Marnes, and Sims, questioning who the true antagonists are. A significant portion of the conversation is dedicated to dissecting the technical challenges and potential improvements for their podcast recording setup, including issues with [[WiFi]]-based video feeds and the benefits of direct recording. The discussion concludes with a ranking of the episode in comparison to previous ones and a look at the open questions the series has yet to answer.
Key Topics Discussed
	•	"[[Silo]]" Episode 4 Review
	•	Character analysis of [[Juliet]], exploring how her past trauma shaped her into a resilient and resourceful individual.
	•	The role of [[Juliet]]'s father and his perceived failures in parenting after the loss of his wife and son.
	•	Discussion of [[Bernard]]'s character, questioning his motives and whether he is a "true believer" in the pact or aligned with the more manipulative [[Judicial]] branch.
	•	Analysis of Deputy [[Marnes]]’ grieving process and his shifting allegiances.
	•	Speculation on the identity and motive of the assassin who attacks Marnes.
	•	The significance of Lucas, the man watching the cafeteria screen, and his potential knowledge of the world outside the [[Silo]].
	•	Podcast Production and Technical Setup
	•	Troubleshooting issues with the current recording setup, particularly the unreliability of [[WiFi]] for video feeds.
	•	Proposed solution of recording audio and video directly onto devices and syncing in post-production to avoid glitches.
	•	Discussion of future hardware upgrades, such as a dedicated [[Soundboard]] and cameras, once the podcast generates revenue or viewership.
	•	The idea of using iPhones for recording, leveraging their high-quality cameras.
	•	Open Questions and Theories
	•	The history of the [[Silo]], including the truth about the rebellion and the origin of the pact.
	•	The reality of the outside world, questioning whether the video feed is real.
	•	The relationship and power dynamics between the [[IT]] department, led by Bernard, and the [[Judicial]] branch.
Action Items & Decisions
	•	Decision: To continue with the current podcast recording setup for now, but to keep in mind the limitations and the need for future upgrades.
	•	Action: Consider testing a new recording method in the future by recording video and audio directly onto separate devices to improve stability and avoid [[WiFi]]-related issues.
Suggested New Links/Tags
	•	[[Silo]]
	•	[[Juliet]]
	•	[[Bernard]]
	•	[[Marnes]]
	•	[[Holston]]
	•	[[IT]]
	•	[[Judicial]]
	•	[[WiFi]]
	•	[[Soundboard]]
	•	#Silo
	•	#TVReview
	•	#Podcast
Linked Concepts
#Tags
	•	#Family
	•	#Troubleshooting

